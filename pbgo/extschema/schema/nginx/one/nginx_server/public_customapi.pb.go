// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/nginx/one/nginx_server/public_customapi.proto

// NGINX One Instance Server APIs
//
// x-displayName: "NGINX One Instance Server APIs"
// Public Custom API definition for getting the NGINX One
// servers associated to an instance

package nginx_server

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Get NGINX One Instance servers request
//
// x-displayName: "Get NGINX One Instance servers request"
// Get NGINX One Instance servers request
type GetInstanceServersRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "system"
	// Namespace of the NGINX One Instance
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The NGINX One Instance for which the servers are requested
	//
	// x-displayName: "The instance for which the servers are requested"
	// x-required
	// The instance for which the servers are requested
	InstanceRef *views.ObjectRefType `protobuf:"bytes,2,opt,name=instance_ref,json=instanceRef,proto3" json:"instance_ref,omitempty"`
}

func (m *GetInstanceServersRequest) Reset()      { *m = GetInstanceServersRequest{} }
func (*GetInstanceServersRequest) ProtoMessage() {}
func (*GetInstanceServersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_667ad383a631fe1b, []int{0}
}
func (m *GetInstanceServersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInstanceServersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInstanceServersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInstanceServersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceServersRequest.Merge(m, src)
}
func (m *GetInstanceServersRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInstanceServersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceServersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceServersRequest proto.InternalMessageInfo

func (m *GetInstanceServersRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetInstanceServersRequest) GetInstanceRef() *views.ObjectRefType {
	if m != nil {
		return m.InstanceRef
	}
	return nil
}

// Get NGINX One Instance servers response
//
// x-displayName: "Get NGINX One Instance servers response"
// Get NGINX One Instance servers response
type GetInstanceServersResponse struct {
	// The NGINX One Servers associated to the instance
	//
	// x-displayName: "The NGINX One Servers associated to the instance"
	// x-required
	// The NGINX One Servers associated to the instance
	Items []*GetInstanceServerResponse `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *GetInstanceServersResponse) Reset()      { *m = GetInstanceServersResponse{} }
func (*GetInstanceServersResponse) ProtoMessage() {}
func (*GetInstanceServersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_667ad383a631fe1b, []int{1}
}
func (m *GetInstanceServersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInstanceServersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInstanceServersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInstanceServersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceServersResponse.Merge(m, src)
}
func (m *GetInstanceServersResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInstanceServersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceServersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceServersResponse proto.InternalMessageInfo

func (m *GetInstanceServersResponse) GetItems() []*GetInstanceServerResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetInstanceServerResponse struct {
	// metadata
	//
	// x-displayName: "Metadata"
	// Common attributes of the object like name, labels etc.
	Metadata *schema.ObjectGetMetaType `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// system metadata
	//
	// x-displayName: "System Metadata"
	// System generated attributes of this object.
	SystemMetadata *schema.SystemObjectGetMetaType `protobuf:"bytes,2,opt,name=system_metadata,json=systemMetadata,proto3" json:"system_metadata,omitempty"`
	// spec
	//
	// x-displayName: "Spec"
	// Specification of the server object
	Spec *GetSpecType `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (m *GetInstanceServerResponse) Reset()      { *m = GetInstanceServerResponse{} }
func (*GetInstanceServerResponse) ProtoMessage() {}
func (*GetInstanceServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_667ad383a631fe1b, []int{2}
}
func (m *GetInstanceServerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInstanceServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInstanceServerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInstanceServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceServerResponse.Merge(m, src)
}
func (m *GetInstanceServerResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInstanceServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceServerResponse proto.InternalMessageInfo

func (m *GetInstanceServerResponse) GetMetadata() *schema.ObjectGetMetaType {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GetInstanceServerResponse) GetSystemMetadata() *schema.SystemObjectGetMetaType {
	if m != nil {
		return m.SystemMetadata
	}
	return nil
}

func (m *GetInstanceServerResponse) GetSpec() *GetSpecType {
	if m != nil {
		return m.Spec
	}
	return nil
}

func init() {
	proto.RegisterType((*GetInstanceServersRequest)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServersRequest")
	golang_proto.RegisterType((*GetInstanceServersRequest)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServersRequest")
	proto.RegisterType((*GetInstanceServersResponse)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServersResponse")
	golang_proto.RegisterType((*GetInstanceServersResponse)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServersResponse")
	proto.RegisterType((*GetInstanceServerResponse)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServerResponse")
	golang_proto.RegisterType((*GetInstanceServerResponse)(nil), "ves.io.schema.nginx.one.nginx_server.GetInstanceServerResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/nginx/one/nginx_server/public_customapi.proto", fileDescriptor_667ad383a631fe1b)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/nginx/one/nginx_server/public_customapi.proto", fileDescriptor_667ad383a631fe1b)
}

var fileDescriptor_667ad383a631fe1b = []byte{
	// 680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x4d, 0x4f, 0x53, 0x4d,
	0x14, 0xc7, 0x3b, 0x17, 0x9e, 0x27, 0x70, 0x4b, 0x00, 0xef, 0xc2, 0x94, 0x4a, 0xc6, 0xa6, 0x31,
	0x86, 0x68, 0x3a, 0x23, 0x35, 0x2c, 0x44, 0xe3, 0x0b, 0x2e, 0x08, 0x26, 0x04, 0x53, 0xd4, 0x18,
	0x16, 0x36, 0xd3, 0xcb, 0xe9, 0xe5, 0x6a, 0xef, 0xcc, 0x78, 0x67, 0x5a, 0x69, 0x0c, 0x89, 0xe1,
	0x13, 0x98, 0xe0, 0xca, 0x4f, 0x60, 0x5c, 0xba, 0x32, 0x61, 0xc3, 0x4e, 0x56, 0x86, 0xe8, 0x86,
	0xb8, 0x92, 0x5b, 0x17, 0x2e, 0xd9, 0xb9, 0x35, 0xcc, 0x6d, 0x6b, 0x5b, 0x88, 0xa9, 0xac, 0x7a,
	0xa6, 0x67, 0xfe, 0xbf, 0x73, 0xe6, 0x9c, 0x73, 0x8f, 0x7d, 0xbd, 0x06, 0x8a, 0xf8, 0x82, 0x2a,
	0x77, 0x0d, 0x02, 0x46, 0xb9, 0xe7, 0xf3, 0x75, 0x2a, 0x38, 0xc4, 0x56, 0x51, 0x41, 0x58, 0x83,
	0x90, 0xca, 0x6a, 0xa9, 0xe2, 0xbb, 0x45, 0xb7, 0xaa, 0xb4, 0x08, 0x98, 0xf4, 0x89, 0x0c, 0x85,
	0x16, 0xce, 0x85, 0x58, 0x4c, 0x62, 0x31, 0x31, 0x12, 0x22, 0x38, 0x90, 0x4e, 0x71, 0x3a, 0xe7,
	0xf9, 0x7a, 0xad, 0x5a, 0x22, 0xae, 0x08, 0xa8, 0x27, 0x3c, 0x41, 0x8d, 0xb8, 0x54, 0x2d, 0x9b,
	0x93, 0x39, 0x18, 0x2b, 0x86, 0xa6, 0x27, 0x3d, 0x21, 0xbc, 0x0a, 0x50, 0x26, 0x7d, 0xca, 0x38,
	0x17, 0x9a, 0x69, 0x5f, 0x70, 0xd5, 0xf4, 0x4e, 0xf7, 0x95, 0xaf, 0x28, 0x3d, 0x05, 0x57, 0x37,
	0x25, 0x57, 0xfa, 0x92, 0xe8, 0xba, 0x84, 0x56, 0x90, 0x73, 0xdd, 0x0a, 0x21, 0x3b, 0x33, 0x98,
	0xe8, 0x76, 0x76, 0xea, 0x26, 0xbb, 0x5d, 0x35, 0x56, 0xf1, 0x57, 0x99, 0x86, 0xa6, 0x37, 0xdb,
	0xe3, 0x05, 0x05, 0xbc, 0xd6, 0x03, 0x3f, 0xdf, 0x73, 0xc7, 0x87, 0x17, 0xaa, 0x33, 0x44, 0x76,
	0x0b, 0xd9, 0x13, 0xf3, 0xa0, 0x17, 0xb8, 0xd2, 0x8c, 0xbb, 0xb0, 0x6c, 0x92, 0x57, 0x05, 0x78,
	0x5e, 0x05, 0xa5, 0x9d, 0x49, 0x7b, 0x98, 0xb3, 0x00, 0x94, 0x64, 0x2e, 0xa4, 0x50, 0x06, 0x4d,
	0x0d, 0x17, 0xfe, 0xfc, 0xe1, 0x3c, 0xb6, 0x47, 0xfc, 0xa6, 0xae, 0x18, 0x42, 0x39, 0x65, 0x65,
	0xd0, 0x54, 0x32, 0x9f, 0x25, 0xdd, 0x5d, 0x34, 0x31, 0xc9, 0x92, 0xa9, 0x60, 0x01, 0xca, 0x0f,
	0xea, 0x12, 0xe6, 0xce, 0xbc, 0xdf, 0x18, 0x8d, 0xab, 0xd5, 0x02, 0x14, 0x92, 0x6d, 0x0b, 0xca,
	0xd9, 0xba, 0x9d, 0x3e, 0x29, 0x29, 0x25, 0x05, 0x57, 0xe0, 0x3c, 0xb4, 0xff, 0xf3, 0x35, 0x04,
	0x2a, 0x65, 0x65, 0x06, 0xa6, 0x92, 0xf9, 0x5b, 0xa4, 0x9f, 0xb1, 0x21, 0xc7, 0x80, 0x2d, 0x5e,
	0x21, 0xa6, 0xdd, 0x1b, 0x1c, 0x42, 0xe3, 0x56, 0xf6, 0x83, 0x75, 0x42, 0x41, 0xda, 0xa1, 0x6f,
	0xd8, 0x43, 0x01, 0x68, 0xb6, 0xca, 0x34, 0x33, 0xf5, 0x48, 0xe6, 0x33, 0x3d, 0xd1, 0xe3, 0x87,
	0xce, 0x83, 0x5e, 0x04, 0xcd, 0x8e, 0x1e, 0x5b, 0x68, 0x2b, 0x9c, 0x25, 0x7b, 0x4c, 0xd5, 0x95,
	0x86, 0xa0, 0xd8, 0x86, 0xc4, 0x35, 0xbb, 0xd8, 0x03, 0x59, 0x36, 0xb7, 0x8e, 0xa3, 0x46, 0x63,
	0xf9, 0x62, 0x0b, 0xf8, 0xc8, 0x1e, 0x54, 0x12, 0xdc, 0xd4, 0x80, 0xa1, 0x4c, 0xf7, 0x5d, 0x88,
	0x65, 0x09, 0xae, 0x69, 0xc4, 0xd8, 0xdb, 0x8d, 0x91, 0x23, 0x02, 0xf1, 0xdc, 0xe2, 0xd1, 0x6f,
	0xc1, 0xf0, 0x66, 0xc9, 0xb7, 0x9b, 0x97, 0xfb, 0x62, 0xc5, 0x29, 0xe6, 0x77, 0x2c, 0x7b, 0xf8,
	0xae, 0xf9, 0x98, 0xef, 0xdc, 0x5f, 0x70, 0x7e, 0x21, 0xdb, 0x39, 0xde, 0x3e, 0xe7, 0xb4, 0x7d,
	0x6a, 0x4d, 0x63, 0xfa, 0xf6, 0xe9, 0x01, 0x71, 0xfb, 0xb2, 0x4f, 0x76, 0x3f, 0x5a, 0x28, 0xfa,
	0x94, 0x3a, 0x5b, 0x9e, 0x59, 0x77, 0x73, 0x46, 0x95, 0x13, 0x1c, 0x72, 0x81, 0xe0, 0xbe, 0x16,
	0xe1, 0xe6, 0xd7, 0x1f, 0x5b, 0xd6, 0x6c, 0x76, 0xa6, 0xb9, 0x9f, 0x68, 0x7b, 0xd4, 0x15, 0x7d,
	0xd9, 0xb6, 0x37, 0x68, 0xf7, 0xe4, 0x36, 0xc3, 0xaa, 0x59, 0x74, 0x29, 0x7d, 0x6d, 0x67, 0x1b,
	0x0d, 0x7c, 0xd9, 0x46, 0xff, 0x52, 0xbc, 0xcd, 0xcf, 0x29, 0x6b, 0x1c, 0xcd, 0xbd, 0x41, 0x7b,
	0x07, 0x38, 0xb1, 0x7f, 0x80, 0x13, 0x87, 0x07, 0x18, 0xbd, 0x8a, 0x30, 0x7a, 0x17, 0x61, 0xb4,
	0x1b, 0x61, 0xb4, 0x17, 0x61, 0xf4, 0x3d, 0xc2, 0xe8, 0x67, 0x84, 0x13, 0x87, 0x11, 0x46, 0xaf,
	0x1b, 0x38, 0xb1, 0xd3, 0xc0, 0x68, 0xaf, 0x81, 0x13, 0xfb, 0x0d, 0x9c, 0x58, 0x59, 0xf1, 0x84,
	0x7c, 0xe6, 0x91, 0x9a, 0xa8, 0x68, 0x08, 0x43, 0x46, 0xaa, 0x8a, 0x1a, 0xa3, 0x2c, 0xc2, 0x20,
	0x27, 0x43, 0x51, 0xf3, 0x57, 0x21, 0xcc, 0xb5, 0xdc, 0x54, 0x96, 0x3c, 0x41, 0x61, 0x5d, 0x37,
	0x77, 0xc2, 0x5f, 0xd7, 0x58, 0xe9, 0x7f, 0xb3, 0x26, 0xae, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0xf4, 0x44, 0x55, 0xd8, 0x05, 0x00, 0x00,
}

func (this *GetInstanceServersRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetInstanceServersRequest)
	if !ok {
		that2, ok := that.(GetInstanceServersRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if !this.InstanceRef.Equal(that1.InstanceRef) {
		return false
	}
	return true
}
func (this *GetInstanceServersResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetInstanceServersResponse)
	if !ok {
		that2, ok := that.(GetInstanceServersResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *GetInstanceServerResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetInstanceServerResponse)
	if !ok {
		that2, ok := that.(GetInstanceServerResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if !this.SystemMetadata.Equal(that1.SystemMetadata) {
		return false
	}
	if !this.Spec.Equal(that1.Spec) {
		return false
	}
	return true
}
func (this *GetInstanceServersRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&nginx_server.GetInstanceServersRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	if this.InstanceRef != nil {
		s = append(s, "InstanceRef: "+fmt.Sprintf("%#v", this.InstanceRef)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetInstanceServersResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&nginx_server.GetInstanceServersResponse{")
	if this.Items != nil {
		s = append(s, "Items: "+fmt.Sprintf("%#v", this.Items)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetInstanceServerResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&nginx_server.GetInstanceServerResponse{")
	if this.Metadata != nil {
		s = append(s, "Metadata: "+fmt.Sprintf("%#v", this.Metadata)+",\n")
	}
	if this.SystemMetadata != nil {
		s = append(s, "SystemMetadata: "+fmt.Sprintf("%#v", this.SystemMetadata)+",\n")
	}
	if this.Spec != nil {
		s = append(s, "Spec: "+fmt.Sprintf("%#v", this.Spec)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIClient is the client API for CustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIClient interface {
	// Get NGINX One Servers associated to an instance
	//
	// x-displayName: "Get NGINX One Instance Servers"
	// Get NGINX One Servers associated to an instance
	GetInstanceServers(ctx context.Context, in *GetInstanceServersRequest, opts ...grpc.CallOption) (*GetInstanceServersResponse, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) GetInstanceServers(ctx context.Context, in *GetInstanceServersRequest, opts ...grpc.CallOption) (*GetInstanceServersResponse, error) {
	out := new(GetInstanceServersResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.nginx.one.nginx_server.CustomAPI/GetInstanceServers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIServer is the server API for CustomAPI service.
type CustomAPIServer interface {
	// Get NGINX One Servers associated to an instance
	//
	// x-displayName: "Get NGINX One Instance Servers"
	// Get NGINX One Servers associated to an instance
	GetInstanceServers(context.Context, *GetInstanceServersRequest) (*GetInstanceServersResponse, error)
}

// UnimplementedCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIServer struct {
}

func (*UnimplementedCustomAPIServer) GetInstanceServers(ctx context.Context, req *GetInstanceServersRequest) (*GetInstanceServersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstanceServers not implemented")
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_GetInstanceServers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstanceServersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetInstanceServers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.nginx.one.nginx_server.CustomAPI/GetInstanceServers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetInstanceServers(ctx, req.(*GetInstanceServersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.nginx.one.nginx_server.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstanceServers",
			Handler:    _CustomAPI_GetInstanceServers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/nginx/one/nginx_server/public_customapi.proto",
}

func (m *GetInstanceServersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInstanceServersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInstanceServersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InstanceRef != nil {
		{
			size, err := m.InstanceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetInstanceServersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInstanceServersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInstanceServersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetInstanceServerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInstanceServerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInstanceServerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Spec != nil {
		{
			size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.SystemMetadata != nil {
		{
			size, err := m.SystemMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPublicCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetInstanceServersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	if m.InstanceRef != nil {
		l = m.InstanceRef.Size()
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *GetInstanceServersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovPublicCustomapi(uint64(l))
		}
	}
	return n
}

func (m *GetInstanceServerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	if m.SystemMetadata != nil {
		l = m.SystemMetadata.Size()
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	if m.Spec != nil {
		l = m.Spec.Size()
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func sovPublicCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCustomapi(x uint64) (n int) {
	return sovPublicCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetInstanceServersRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetInstanceServersRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`InstanceRef:` + strings.Replace(fmt.Sprintf("%v", this.InstanceRef), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetInstanceServersResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]*GetInstanceServerResponse{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(f.String(), "GetInstanceServerResponse", "GetInstanceServerResponse", 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&GetInstanceServersResponse{`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetInstanceServerResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetInstanceServerResponse{`,
		`Metadata:` + strings.Replace(fmt.Sprintf("%v", this.Metadata), "ObjectGetMetaType", "schema.ObjectGetMetaType", 1) + `,`,
		`SystemMetadata:` + strings.Replace(fmt.Sprintf("%v", this.SystemMetadata), "SystemObjectGetMetaType", "schema.SystemObjectGetMetaType", 1) + `,`,
		`Spec:` + strings.Replace(fmt.Sprintf("%v", this.Spec), "GetSpecType", "GetSpecType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetInstanceServersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInstanceServersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInstanceServersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InstanceRef == nil {
				m.InstanceRef = &views.ObjectRefType{}
			}
			if err := m.InstanceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInstanceServersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInstanceServersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInstanceServersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &GetInstanceServerResponse{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInstanceServerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInstanceServerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInstanceServerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &schema.ObjectGetMetaType{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SystemMetadata == nil {
				m.SystemMetadata = &schema.SystemObjectGetMetaType{}
			}
			if err := m.SystemMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Spec == nil {
				m.Spec = &GetSpecType{}
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCustomapi = fmt.Errorf("proto: unexpected end of group")
)

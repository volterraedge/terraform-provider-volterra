// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package fleet

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/client/configapi"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
)

const (
	// CreateRequestFQN is the fully-qualified-name of the CreateRequest message
	CreateRequestFQN = "ves.io.schema.fleet.CreateRequest"
	// CreateResponseFQN is the fully-qualified-name of the CreateResponse message
	CreateResponseFQN = "ves.io.schema.fleet.CreateResponse"
	// ReplaceRequestFQN is the fully-qualified-name of the ReplaceRequest message
	ReplaceRequestFQN = "ves.io.schema.fleet.ReplaceRequest"
	// ReplaceResponseFQN is the fully-qualified-name of the ReplaceResponse message
	ReplaceResponseFQN = "ves.io.schema.fleet.ReplaceResponse"
	// GetRequestFQN is the fully-qualified-name of the GetRequest message
	GetRequestFQN = "ves.io.schema.fleet.GetRequest"
	// GetResponseFQN is the fully-qualified-name of the GetResponse message
	GetResponseFQN = "ves.io.schema.fleet.GetResponse"
	// ListRequestFQN is the fully-qualified-name of the ListRequest message
	ListRequestFQN = "ves.io.schema.fleet.ListRequest"
	// ListResponseFQN is the fully-qualified-name of the ListResponse message
	ListResponseFQN = "ves.io.schema.fleet.ListResponse"
	// DeleteRequestFQN is the fully-qualified-name of the DeleteRequest message
	DeleteRequestFQN = "ves.io.schema.fleet.DeleteRequest"
	// DeleteResponseFQN is the fully-qualified-name of the DeleteResponse message
	DeleteResponseFQN = "ves.io.schema.fleet.DeleteResponse"
)

// CLIENT side
func NewCreateRequest(e db.Entry) (*CreateRequest, error) {
	r := &CreateRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewReplaceRequest(e db.Entry) (*ReplaceRequest, error) {
	r := &ReplaceRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewGetRequest(key string, opts ...server.CRUDCallOpt) (*GetRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	var rspFmt GetResponseFormatCode
	switch ccOpts.ResponseFormat {
	case server.DefaultForm:
		rspFmt = GET_RSP_FORMAT_DEFAULT
	case server.CreateRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_CREATE
	case server.ReplaceRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_REPLACE
	case server.StatusForm:
		rspFmt = GET_RSP_FORMAT_STATUS
	case server.GetSpecForm:
		rspFmt = GET_RSP_FORMAT_READ
	case server.BrokenRefsForm:
		rspFmt = GET_RSP_FORMAT_BROKEN_REFERENCES
	default:
		return nil, fmt.Errorf("Unsupported Response Format %s", ccOpts.ResponseFormat)
	}
	return &GetRequest{Namespace: strs[0], Name: strs[1], ResponseFormat: rspFmt}, nil
}
func (m *GetRequest) ResponseFormatString() string {
	return m.GetResponseFormat().String()
}

func NewListRequest(opts ...server.CRUDCallOpt) *ListRequest {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	return &ListRequest{Namespace: ccOpts.Namespace}
}

func NewDeleteRequest(key string) (*DeleteRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	return &DeleteRequest{Namespace: strs[0], Name: strs[1]}, nil
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *CreateRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*CreateRequest)
		if !ok {
			return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Create")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return nil, err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *ReplaceRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*ReplaceRequest)
		if !ok {
			return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewReplaceRequest(e)
		if err != nil {
			return errors.Wrap(err, "Replace")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return nil

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields
	req.ReportStatusFields = cco.ReportStatusFields
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return nil, fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var req *CreateRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*CreateRequest)
			if !ok {
				return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
			}
			req = r
		} else {
			r, err := NewCreateRequest(e)
			if err != nil {
				return nil, errors.Wrap(err, "Creating new create request")
			}
			req = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, req); err != nil {
					return nil, err
				}
			}
		}

		j, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "RestClient Create")
		}
		jsn = j
	}

	var namespace string
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return nil, errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return nil, fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}
	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return nil, fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/fleets", c.baseURL, namespace)

	hReq, err := http.NewRequest("POST", url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &CreateResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	configapi.TranscribeCall(ctx, jsn, string(body))
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}

	obj := NewDBObject(nil)
	rspo.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rspo, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var rReq *ReplaceRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*ReplaceRequest)
			if !ok {
				return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
			}
			rReq = r
		} else {
			r, err := NewReplaceRequest(e)
			if err != nil {
				return errors.Wrap(err, "Creating new replace request")
			}
			rReq = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, rReq); err != nil {
					return err
				}
			}
		}

		rReq.ResourceVersion = cco.ResourceVersion
		j, err := codec.ToJSON(rReq, codec.ToWithUseProtoFieldName())
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		jsn = j
	}

	var namespace, name string
	_ = namespace
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}

	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	if val, ok := md["name"].(string); ok {
		name = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.name'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/fleets/%s", c.baseURL, namespace, name)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	hReq = hReq.WithContext(ctx)
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	if _, err := io.ReadAll(rsp.Body); err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	configapi.TranscribeCall(ctx, jsn, nil)
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/fleets/%s", c.baseURL, req.Namespace, req.Name)
	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	q.Add("response_format", fmt.Sprintf("%d", req.ResponseFormat))
	hReq.URL.RawQuery += q.Encode()

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &GetResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)
	_ = req
	url := fmt.Sprintf("%s/public/namespaces/%s/fleets", c.baseURL, req.Namespace)

	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}
	for _, fName := range cco.ReportStatusFields {
		q.Add("report_status_fields", fName)
	}

	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ListResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/fleets/%s", c.baseURL, dReq.Namespace, dReq.Name)
	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	_, err = io.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	configapi.TranscribeCall(ctx, dReq, nil)

	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	var bURL string
	if strings.HasSuffix(baseURL, "/") {
		bURL = baseURL[:len(baseURL)-1]
	} else {
		bURL = baseURL
	}
	crcl := &crudAPIRestClient{bURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	svc svcfw.Service
}

func (c *APIInprocClient) Create(ctx context.Context, req *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.fleet.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.fleet")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.fleet.API.Create")
	rsp, err := oah.Create(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.fleet.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.fleet")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.fleet.API.Replace")
	if rsp, err := oah.Replace(ctx, req); err != nil {
		return rsp, err
	}
	return NewObjectReplaceRsp(nil)
}

func (c *APIInprocClient) Get(ctx context.Context, req *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.fleet.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.fleet")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.fleet.API.Get")
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) List(ctx context.Context, req *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.fleet.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.fleet")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.fleet.API.List")
	rsp, err := oah.List(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Delete(ctx context.Context, req *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.fleet.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.fleet")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.fleet.API.Delete")
	rsp, err := oah.Delete(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	return &APIInprocClient{svc: svc}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	cl APIClient
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewCreateRequest(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return nil, err
		}
	}

	rsp, err := c.cl.Create(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if err != nil {
		return nil, err
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewReplaceRequest(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return err
		}
	}

	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.cl.Replace(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	rsp, err := c.cl.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewListRequest(opts...)
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	rsp, err := c.cl.List(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	rsp, err := c.cl.Delete(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	return &crudAPIInprocClient{cl: NewAPIInprocClient(svc)}
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper

	// resource handler function pointers
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.fleet.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.fleet.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.fleet.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.fleet.API.Create"), zap.Error(err))
			}
		}
	}
	reqMsgFQN := "ves.io.schema.fleet.CreateRequest"
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, reqMsgFQN, req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	obj := NewDBObject(nil)
	req.ToObject(obj)
	if conv, exists := s.sf.Config().MsgToObjConverters[reqMsgFQN]; exists {
		if err := conv(req, obj); err != nil {
			return nil, err
		}
	}
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}
	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.fleet.CreateResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.fleet.API.CreateResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ReplaceRequest) (*ReplaceResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		err := fmt.Errorf("Nil spec in Replace Request")
		return nil, svcfw.NewInvalidInputError(err.Error(), err)
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.fleet.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.fleet.API.Replace"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.fleet.API.ReplaceRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.fleet.API.ReplaceResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.fleet.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	tenant := server.TenantFromContext(ctx)
	rsrcReq := &server.ResourceGetRequest{IsPublic: true, Tenant: tenant, Namespace: req.GetNamespace(), Name: req.GetName()}
	switch req.ResponseFormat {
	case GET_RSP_FORMAT_FOR_CREATE:
		rsrcReq.RspInCreateForm = true

	case GET_RSP_FORMAT_FOR_REPLACE:
		rsrcReq.RspInReplaceForm = true

	case GET_RSP_FORMAT_READ:
		rsrcReq.RspInReadForm = true

	case GET_RSP_FORMAT_STATUS:
		rsrcReq.RspInStatusForm = true

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		rsrcReq.RspInReferringObjectsForm = true

	case GET_RSP_FORMAT_BROKEN_REFERENCES:
		rsrcReq.RspInBrokenReferencesForm = true

	}

	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectGetRsp(ctx, s.sf, req, rsrcRsp)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.fleet.GetResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.fleet.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		Namespace:   req.Namespace,
		LabelFilter: req.LabelFilter,
		RspStreamed: false,
	}
	if len(req.ReportStatusFields) > 0 {
		rsrcReq.ReportStatusFields = &req.ReportStatusFields
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResource"))
	}
	rsp, err := NewListResponse(ctx, req, s.sf, rsrcRsp)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResponse allocation failed"))
	}
	if merr != nil {
		if rsp == nil {
			return nil, merr
		}
		rsp.Errors = append(rsp.Errors, &ves_io_schema.ErrorType{
			Code:    ves_io_schema.EINTERNAL,
			Message: merr.Error(),
		})

	}
	return rsp, nil
}

func (s *APISrv) Delete(ctx context.Context, req *DeleteRequest) (*google_protobuf.Empty, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.fleet.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.fleet.API.Delete"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.fleet.API.DeleteRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	tenant := server.TenantFromContext(ctx)
	key := fmt.Sprintf("%s/%s/%s", tenant, req.GetNamespace(), req.GetName())
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	rsrcReq.FailIfReferred = req.FailIfReferred
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "DeleteResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	return &google_protobuf.Empty{}, nil
}

// Assert that APISrv implements the generated gRPC APIServer interface
var _ APIServer = &APISrv{}

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.API", strings.Join(sl[:len(sl)-1], "."))
}

func (r *Object) Key() string {
	m := r.GetMetadata()
	if m == nil {
		return ""
	}
	return strings.Join([]string{m.Namespace, m.Name}, "/")
}

func (r *Object) Uid() string {
	return r.SystemMetadata.Uid
}

func (r *ListResponse) GetKeys() []string {
	var ret []string
	for _, i := range r.Items {
		ret = append(ret, i.Namespace+"/"+i.Name)
	}
	return ret
}

// Implement server.SROListItem interface on ListResponseItem
func (l *ListResponseItem) GetObjUid() string {
	return l.Uid
}

func (l *ListResponseItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ListResponseItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ListResponseItem) GetObjName() string {
	return l.Name
}

func (l *ListResponseItem) GetObjLabels() map[string]string {
	return l.Labels
}

func NewObjectCreateRsp(e db.Entry) (*CreateResponse, error) {
	switch e.(type) {
	case nil:
		return nil, nil
	case *DBObject:
		rsp := &CreateResponse{}
		rsp.FromObject(e)
		return rsp, nil
	}
	return nil, fmt.Errorf("Entry not of type *DBObject in NewObjectCreateRsp")
}

func NewObjectReplaceRsp(e db.Entry) (*ReplaceResponse, error) {
	return &ReplaceResponse{}, nil
}

func NewObjectGetRsp(ctx context.Context, sf svcfw.Service, req *GetRequest, rsrcRsp *server.ResourceGetResponse) (*GetResponse, error) {
	rsp := &GetResponse{}
	e := rsrcRsp.Entry
	if e == nil {
		return rsp, nil
	}
	o, ok := e.(*DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *DBObject in NewObjectGetRsp")
	}

	rsp.ResourceVersion = rsrcRsp.ResourceVersion
	var merr *multierror.Error
	buildReadForm := func() {
		rsp.Metadata = &ves_io_schema.ObjectGetMetaType{}
		rsp.Metadata.FromObjectMetaType(o.Metadata)
		rsp.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
		rsp.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)
		rsp.Spec = &GetSpecType{}
		if redactor, ok := e.(db.Redactor); ok {
			if err := redactor.Redact(ctx); err != nil {
				merr = multierror.Append(merr, errors.WithMessage(err, "Error while redacting entry"))
				return
			}
		}
		rsp.Spec.FromGlobalSpecType(o.Spec.GcSpec)

	}
	_ = buildReadForm
	buildStatusForm := func() {
		for _, statusEnt := range rsrcRsp.BackRefs {
			statusObj, ok := statusEnt.ToStore().(*StatusObject)
			if !ok {
				merr = multierror.Append(merr, fmt.Errorf("%T is not *StatusObject", statusEnt))
				continue
			}
			rsp.Status = append(rsp.Status, statusObj)
		}

	}
	_ = buildStatusForm
	buildReferringObjectsForm := func() {
		for _, br := range rsrcRsp.ReferringObjects {
			rsp.ReferringObjects = append(rsp.ReferringObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}

	}
	_ = buildReferringObjectsForm
	buildBrokenReferencesForm := func() {
		for _, br := range rsrcRsp.DeletedReferredObjects {
			rsp.DeletedReferredObjects = append(rsp.DeletedReferredObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}
		for _, br := range rsrcRsp.DisabledReferredObjects {
			rsp.DisabledReferredObjects = append(rsp.DisabledReferredObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}

	}
	_ = buildBrokenReferencesForm

	switch req.ResponseFormat {

	case GET_RSP_FORMAT_FOR_CREATE:
		createReq, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building CreateRequest from entry")
		}
		// Name has to be specified for a new create
		createReq.Metadata.Name = ""
		rsp.CreateForm = createReq

	case GET_RSP_FORMAT_FOR_REPLACE:
		replaceReq, err := NewReplaceRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building ReplaceRequest from entry")
		}
		rsp.ReplaceForm = replaceReq

	case GET_RSP_FORMAT_STATUS:
		buildStatusForm()

	case GET_RSP_FORMAT_READ:
		buildReadForm()

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		buildReferringObjectsForm()

	case GET_RSP_FORMAT_BROKEN_REFERENCES:
		buildBrokenReferencesForm()

	default:
		buildReadForm()

		buildStatusForm()
	}

	return rsp, errors.ErrOrNil(merr)
}

func NewListResponse(ctx context.Context, req *ListRequest, sf svcfw.Service, rsrcRsp *server.ResourceListResponse) (*ListResponse, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ListRequest")
	}
	if rsrcRsp == nil {
		return nil, fmt.Errorf("Nil ResourceResponse")
	}

	errStrs := []string{}
	resp := &ListResponse{}
	resp.Items = []*ListResponseItem{}

	for _, rsrcItem := range rsrcRsp.Items {
		if rsrcItem == nil {
			errStrs = append(errStrs, fmt.Sprintf("Nil ResourceListResponseItem"))
			continue
		}

		e := rsrcItem.Entry
		o, ok := e.(*DBObject)
		if !ok {
			resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
				Code:    ves_io_schema.EINTERNAL,
				Message: fmt.Sprintf("Entry %T not of type *DBObject in NewListResponse", e),
			})

			continue
		}
		if redactor, ok := e.(db.Redactor); ok {
			if err := redactor.Redact(ctx); err != nil {
				resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
					Code:    ves_io_schema.EINTERNAL,
					Message: fmt.Sprintf("Error while redacting in NewListResponse: %s", err),
				})
				continue
			}
		}
		item := &ListResponseItem{
			Tenant:    o.GetSystemMetadata().GetTenant(),
			Namespace: o.GetMetadata().GetNamespace(),
			Name:      o.GetMetadata().GetName(),
			Uid:       o.GetMetadata().GetUid(),
			OwnerView: o.GetSystemMetadata().GetOwnerView(),
			Labels:    o.GetMetadata().GetLabels(),
		}

		item.Description = o.GetMetadata().GetDescription()
		item.Annotations = o.GetMetadata().GetAnnotations()
		item.Disabled = o.GetMetadata().GetDisable()

		if len(req.ReportFields) > 0 {
			item.Metadata = &ves_io_schema.ObjectGetMetaType{}
			item.Metadata.FromObjectMetaType(o.Metadata)
			item.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
			item.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)

			if o.Object.GetSpec().GetGcSpec() != nil {
				msgFQN := "ves.io.schema.fleet.GetResponse"
				if conv, exists := sf.Config().ObjToMsgConverters[msgFQN]; exists {
					getSpec := &GetSpecType{}
					getSpec.FromGlobalSpecType(o.Spec.GcSpec)
					getRsp := &GetResponse{Spec: getSpec}
					if err := conv(o, getRsp); err != nil {
						resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
							Code:    ves_io_schema.EINTERNAL,
							Message: fmt.Sprintf("Converting entry to getResponse: %s", err),
						})

						continue
					}
					item.GetSpec = getRsp.Spec
				} else {
					item.GetSpec = &GetSpecType{}
					item.GetSpec.FromGlobalSpecType(o.Spec.GcSpec)
				}
			}

		}

		if len(req.ReportStatusFields) > 0 {
			for _, sroStatus := range rsrcItem.StatusSet {
				statusDBO, ok := sroStatus.(*DBStatusObject)
				if !ok {
					resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
						Code:    ves_io_schema.EINTERNAL,
						Message: fmt.Sprintf("sro.Status %T is not of type *DBStatusObject in NewListResponse", sroStatus),
					})

					continue
				}
				item.StatusSet = append(item.StatusSet, statusDBO.StatusObject)
			}
		}

		resp.Items = append(resp.Items, item)
	}
	return resp, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Fleet",
        "description": "\nFleet is used to configure infrastructure components (like nodes) in one or\nmore F5XC customer edge sites homogeneously. Fleet configuration has\nfollowing information,\n  * Software image release to be deployed on the fleet\n  * List of devices to be configured on every node\n  * Connections between the virtual networks in the site\n  * Security policies applied in the site\n\nFleet object must be created in the \"system\" namespace for the tenant\n\nAssociating Fleet with Site\n\nFleet has a field called \"fleet_label\". When a fleet object is created, system automatically creates a known_label\n\"ves.io/fleet=\u003cfleet_label\u003e\". The known_label is created in the \"shared\" namespace for the tenant.\nA site is made \"member of fleet\" when this known_label is added to the site. A site can have at most one known_label\nof type \"ves.io/fleet\" and hence belongs to exactly one fleet at any given time.\n\nWhen a site becomes member of fleet, all nodes in site also become \"member of fleet\". The fleet configuration\nis applied on all nodes that are member of the fleet.\n\nFleet and Virtual Site\n\nBoth Fleet and Virtual Sites select a list of sites based on the labels. But, there is a major difference between\nvirtual_site and Fleet. Virtual_sites are intersecting sub sets of available sites. Fleet is non intersecting subset\nof available sites compared to other Fleets. As a result, at most one Fleet configuration if applied on a Site.\n\nHowever to enable other features like monitoring, deploying application or jobs on sites represented by fleet,\nsystem will automatically create a virtual_site in shared namespace representing all sites in a fleet.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{metadata.namespace}/fleets": {
            "post": {
                "summary": "Create Fleet",
                "description": "Create fleet will create a fleet object in 'system' namespace of the user",
                "operationId": "ves.io.schema.fleet.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/fleetCreateResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fleetCreateRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-fleet-api-create"
                },
                "x-ves-proto-rpc": "ves.io.schema.fleet.API.Create"
            },
            "x-displayname": "Fleet",
            "x-ves-proto-service": "ves.io.schema.fleet.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{metadata.namespace}/fleets/{metadata.name}": {
            "put": {
                "summary": "Replace Fleet",
                "description": "Replace fleet will replace the contents of given fleet object",
                "operationId": "ves.io.schema.fleet.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/fleetReplaceResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "metadata.name",
                        "description": "name\n\nx-example: \"acmecorp-web\"\nThe configuration object to be replaced will be looked up by name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fleetReplaceRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-fleet-api-replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.fleet.API.Replace"
            },
            "x-displayname": "Fleet",
            "x-ves-proto-service": "ves.io.schema.fleet.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/fleets": {
            "get": {
                "summary": "List Fleet",
                "description": "List the set of fleet in a namespace",
                "operationId": "ves.io.schema.fleet.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/fleetListResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace to scope the listing of fleet",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "label_filter",
                        "description": "x-example: \"env in (staging, testing), tier in (web, db)\"\nA LabelSelectorType expression that every item in list response will satisfy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Label Filter"
                    },
                    {
                        "name": "report_fields",
                        "description": "x-example: \"\"\nExtra fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Fields"
                    },
                    {
                        "name": "report_status_fields",
                        "description": "x-example: \"\"\nExtra status fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Status Fields"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-fleet-api-list"
                },
                "x-ves-proto-rpc": "ves.io.schema.fleet.API.List"
            },
            "x-displayname": "Fleet",
            "x-ves-proto-service": "ves.io.schema.fleet.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/fleets/{name}": {
            "get": {
                "summary": "Get Fleet",
                "description": "Get fleet will get fleet object from system namespace",
                "operationId": "ves.io.schema.fleet.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/fleetGetResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nThe namespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nThe name of the configuration object to be fetched",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "response_format",
                        "description": "The format in which the configuration object is to be fetched. This could be for example\n    - in GetSpec form for the contents of object\n    - in CreateRequest form to create a new similar object\n    - to ReplaceRequest form to replace changeable values\n\nDefault format of returned resource\nResponse should be in CreateRequest format\nResponse should be in ReplaceRequest format\nResponse should be in StatusObject(s) format\nResponse should be in format of GetSpecType\nResponse should have other objects referring to this object\nResponse should have deleted and disabled objects referrred by this object",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "GET_RSP_FORMAT_DEFAULT",
                            "GET_RSP_FORMAT_FOR_CREATE",
                            "GET_RSP_FORMAT_FOR_REPLACE",
                            "GET_RSP_FORMAT_STATUS",
                            "GET_RSP_FORMAT_READ",
                            "GET_RSP_FORMAT_REFERRING_OBJECTS",
                            "GET_RSP_FORMAT_BROKEN_REFERENCES"
                        ],
                        "default": "GET_RSP_FORMAT_DEFAULT",
                        "x-displayname": "Broken Referred Objects"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-fleet-api-get"
                },
                "x-ves-proto-rpc": "ves.io.schema.fleet.API.Get"
            },
            "delete": {
                "summary": "Delete Fleet",
                "description": "Delete the specified fleet",
                "operationId": "ves.io.schema.fleet.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {}
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nName of the configuration object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fleetDeleteRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-fleet-api-delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.fleet.API.Delete"
            },
            "x-displayname": "Fleet",
            "x-ves-proto-service": "ves.io.schema.fleet.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        }
    },
    "definitions": {
        "fleetBlockedServices": {
            "type": "object",
            "description": "Disable a node local service on this site.",
            "title": "Disable Node Local Service",
            "x-displayname": "Disable Node Local Service",
            "x-ves-oneof-field-blocked_services_value_type_choice": "[\"dns\",\"ssh\",\"web_user_interface\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.BlockedServices",
            "properties": {
                "dns": {
                    "description": "Exclusive with [ssh web_user_interface]\n Matches DNS port 53",
                    "title": "DNS",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "DNS"
                },
                "network_type": {
                    "description": " Site Local VRF on which this service will be disabled\n\nValidation Rules:\n  ves.io.schema.rules.enum.in: [0,1]\n",
                    "title": "network_type",
                    "$ref": "#/definitions/schemaVirtualNetworkType",
                    "x-displayname": "Site Local VRF",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.in": "[0,1]"
                    }
                },
                "ssh": {
                    "description": "Exclusive with [dns web_user_interface]\n",
                    "title": "SSH",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "SSH"
                },
                "web_user_interface": {
                    "description": "Exclusive with [dns ssh]\n",
                    "title": "Web UI",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Web UI"
                }
            }
        },
        "fleetBondLacpType": {
            "type": "object",
            "description": "LACP parameters for the bond device",
            "title": "LACP parameters",
            "x-displayname": "LACP parameters",
            "x-ves-proto-message": "ves.io.schema.fleet.BondLacpType",
            "properties": {
                "rate": {
                    "type": "integer",
                    "description": " Interval in seconds to transmit LACP packets\n\nExample: - \"30\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 30\n",
                    "title": "Interval",
                    "format": "int64",
                    "x-displayname": "LACP Packet Interval",
                    "x-ves-example": "30",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "30"
                    }
                }
            }
        },
        "fleetCreateRequest": {
            "type": "object",
            "description": "This is the input message of the 'Create' RPC",
            "title": "CreateRequest is used to create an instance of fleet",
            "x-displayname": "Create Request",
            "x-ves-proto-message": "ves.io.schema.fleet.CreateRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectCreateMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the fleet",
                    "title": "spec",
                    "$ref": "#/definitions/schemafleetCreateSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "fleetCreateResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.fleet.CreateResponse",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the fleet",
                    "title": "spec",
                    "$ref": "#/definitions/schemafleetGetSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "fleetDeleteRequest": {
            "type": "object",
            "description": "This is the input message of the 'Delete' RPC.",
            "title": "DeleteRequest is used to delete a fleet",
            "x-displayname": "Delete Request",
            "x-ves-proto-message": "ves.io.schema.fleet.DeleteRequest",
            "properties": {
                "fail_if_referred": {
                    "type": "boolean",
                    "description": " Fail the delete operation if this object is being referred by other objects",
                    "title": "fail_if_referred",
                    "format": "boolean",
                    "x-displayname": "Fail-If-Referred"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the configuration object\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace in which the configuration object is present\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                }
            }
        },
        "fleetDeviceInstanceType": {
            "type": "object",
            "description": "Device Instance describes a single device in fleet\nA device can be of type network interface, camera, scanner etc. A device instance is created for each instance of device.\nIf there are 2 network interfaces(eth0, eth1...), then 2 DeviceInstanceType are created one for eth0 and another for eth1",
            "title": "Device Instance",
            "x-displayname": "Device Instance",
            "x-ves-oneof-field-device_instance": "[\"network_device\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.DeviceInstanceType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " Name of the device including the unit number (e.g. eth0 or disk1). The name must match name of device in host-os of node\n\nExample: - \"eth0\"-",
                    "title": "Name",
                    "x-displayname": "Device Name",
                    "x-ves-example": "eth0"
                },
                "network_device": {
                    "description": "Exclusive with []\n Device instance is a networking device like ethernet",
                    "title": "Networking Device",
                    "$ref": "#/definitions/fleetNetworkingDeviceInstanceType",
                    "x-displayname": "Networking Device"
                },
                "owner": {
                    "description": " Defines ownership of the device. A device can be owned by,\n   * VER : Devices like ethernet are owned by VER\n   * VK8S Workload : The devices is available for VK8S workload use.\n                     This option is not yet supported\n   * HOST : Device is owned by host-os. The devices can be exposed via some other services like TPM.\n            This option is not yet supported\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.enum.in: [1]\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Owner",
                    "$ref": "#/definitions/fleetDeviceOwnerType",
                    "x-displayname": "Device Owner",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.in": "[1]",
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "fleetDeviceNetappBackendOntapSanChapType": {
            "type": "object",
            "description": "Device NetApp Backend ONTAP SAN CHAP configuration options for enabled CHAP",
            "title": "Device NetApp Backend ONTAP SAN CHAP configuration",
            "x-displayname": "Device NetApp Backend ONTAP SAN CHAP Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.DeviceNetappBackendOntapSanChapType",
            "properties": {
                "chap_initiator_secret": {
                    "description": " CHAP initiator secret. Required if useCHAP=true",
                    "title": "CHAP Intiator Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "CHAP Intiator Secret"
                },
                "chap_target_initiator_secret": {
                    "description": " CHAP target initiator secret. Required if useCHAP=true",
                    "title": "CHAP Target Initiator Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "CHAP Target Initiator Secret"
                },
                "chap_target_username": {
                    "type": "string",
                    "description": " Target username. Required if useCHAP=true\n\nExample: - \"bob\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "CHAP Target Username",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "CHAP Target Username",
                    "x-ves-example": "bob",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "chap_username": {
                    "type": "string",
                    "description": " Inbound username. Required if useCHAP=true\n\nExample: - \"alice\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "CHAP Username",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "CHAP Username",
                    "x-ves-example": "alice",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                }
            }
        },
        "fleetDeviceOwnerType": {
            "type": "string",
            "description": "Defines ownership for a device.\n\nDevice owner is invalid\nDevice is owned by VER pod. usually it will be network interface device or accelerator like crypto engine.\nDevice is available to be owned by vK8s workload on the site, like camera GPU etc.\nDevice is not available to be owned by vK8s or VER. Can be exposed via some other service. Like TPM.",
            "title": "Device Owner Type",
            "enum": [
                "DEVICE_OWNER_INVALID",
                "DEVICE_OWNER_VER",
                "DEVICE_OWNER_VK8S_WORK_LOAD",
                "DEVICE_OWNER_HOST"
            ],
            "default": "DEVICE_OWNER_INVALID",
            "x-displayname": "Device Owner Type",
            "x-ves-proto-enum": "ves.io.schema.fleet.DeviceOwnerType"
        },
        "fleetFlashArrayEndpoint": {
            "type": "object",
            "description": "For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"",
            "title": "Flash Array Endpoint",
            "x-displayname": "Flash Array Endpoint",
            "x-ves-oneof-field-mgmt_endpoint": "[\"mgmt_dns_name\",\"mgmt_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashArrayEndpoint",
            "properties": {
                "api_token": {
                    "description": " Please Enter API TOken. Token to connect to management interface",
                    "title": "API Token",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "API Token"
                },
                "labels": {
                    "type": "object",
                    "description": " The labels are optional, and can be any key-value pair for use with the PSO \"fleet\" provisioner.\n\nExample: - \"{\"rack\"\"22\"}\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 20\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "{\"rack\": \"22\"}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "20",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "mgmt_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_ip]\n Management Endpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "dns_name",
                    "maxLength": 256,
                    "x-displayname": "Management Endpoint Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "mgmt_ip": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_dns_name]\n Management Endpoint is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Management Endpoint IP Address",
                    "x-displayname": "Management Endpoint IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                }
            }
        },
        "fleetFlashArrayType": {
            "type": "object",
            "description": "Specify what storage flash arrays should be managed the plugin",
            "title": "Flash Arrays",
            "x-displayname": "Flash Arrays",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashArrayType",
            "properties": {
                "default_fs_opt": {
                    "type": "string",
                    "description": " Block volume default mkfs options. Not recommended to change!\n\nExample: - \"-q\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Default Filesystem Options",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "Default Filesystem Options",
                    "x-ves-example": "-q",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "default_fs_type": {
                    "type": "string",
                    "description": " Block volume default filesystem type. Not recommended to change!\n\nExample: - \"xfs\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.in: [\\\"xfs\\\",\\\"ext4\\\"]\n",
                    "title": "Default Filesystem Type",
                    "x-displayname": "Default Filesystem Type",
                    "x-ves-example": "xfs",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.in": "[\\\"xfs\\\",\\\"ext4\\\"]"
                    }
                },
                "default_mount_opts": {
                    "type": "array",
                    "description": " Block volume default filesystem mount options. Not recommended to change!\n\nExample: - \"[- discart]\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Default Mount Options",
                    "maxItems": 4,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Default Mount Options",
                    "x-ves-example": "[- discart]",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "disable_preempt_attachments": {
                    "type": "boolean",
                    "description": " Enable/Disable attachment preemption!",
                    "title": "Disable Preempt Attachments",
                    "format": "boolean",
                    "x-displayname": "Disable Preempt Attachments"
                },
                "flash_arrays": {
                    "type": "array",
                    "description": " For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Flash Arrays",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/fleetFlashArrayEndpoint"
                    },
                    "x-displayname": "Flash Arrays",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "iscsi_login_timeout": {
                    "type": "integer",
                    "description": " iSCSI login timeout in seconds. Not recommended to change!\n\nExample: - \"20\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 100\n",
                    "title": "iSCSI Login Timeout",
                    "format": "int32",
                    "x-displayname": "iSCSI Login Timeout",
                    "x-ves-example": "20",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "100"
                    }
                },
                "san_type": {
                    "type": "string",
                    "description": " Block volume access protocol, either ISCSI or FC\n\nExample: - \"ISCSI\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.in: [\\\"ISCSI\\\",\\\"FC\\\"]\n",
                    "title": "SAN Type",
                    "x-displayname": "SAN Type",
                    "x-ves-example": "ISCSI",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.in": "[\\\"ISCSI\\\",\\\"FC\\\"]"
                    }
                }
            }
        },
        "fleetFlashBladeEndpoint": {
            "type": "object",
            "description": "For FlashBlades you must set the \"mgmt_endpoint\", \"api_token\" and nfs_endpoint",
            "title": "Flash Blade Endpoint",
            "x-displayname": "Flash Blade Endpoint",
            "x-ves-oneof-field-mgmt_endpoint": "[\"mgmt_dns_name\",\"mgmt_ip\"]",
            "x-ves-oneof-field-nfs_endpoint": "[\"nfs_endpoint_dns_name\",\"nfs_endpoint_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashBladeEndpoint",
            "properties": {
                "api_token": {
                    "description": " Please Enter API TOken. Token to connect to management interface",
                    "title": "API Token",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "API Token"
                },
                "lables": {
                    "type": "object",
                    "description": " The labels are optional, and can be any key-value pair for use with the PSO \"fleet\" provisioner.\n\nExample: - \"{\"rack\"\"22\"}\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 20\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "{\"rack\": \"22\"}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "20",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "mgmt_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_ip]\n Management Endpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "dns_name",
                    "maxLength": 256,
                    "x-displayname": "Management Endpoint Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "mgmt_ip": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_dns_name]\n Management Endpoint is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Management Endpoint IP Address",
                    "x-displayname": "Management Endpoint IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "nfs_endpoint_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [nfs_endpoint_ip]\n Endpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"nfs.storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "NFS DNS Name",
                    "maxLength": 256,
                    "x-displayname": "NFS DNS Name",
                    "x-ves-example": "nfs.storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "nfs_endpoint_ip": {
                    "type": "string",
                    "description": "Exclusive with [nfs_endpoint_dns_name]\n Endpoint is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "NFS IP Address",
                    "x-displayname": "NFS IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                }
            }
        },
        "fleetFlashBladeType": {
            "type": "object",
            "description": "Specify what storage flash blades should be managed the plugin",
            "title": "Flash Blades",
            "x-displayname": "Flash Blades",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashBladeType",
            "properties": {
                "enable_snapshot_directory": {
                    "type": "boolean",
                    "description": " Enable/Disable FlashBlade snapshots",
                    "title": "Enable Snapshot Directory",
                    "format": "boolean",
                    "x-displayname": "Enable Snapshot Directory"
                },
                "export_rules": {
                    "type": "string",
                    "description": " NFS Export rules\n\nExample: - \"*(rw,no_root_squash)\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 250\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "NFS Export Rules",
                    "minLength": 1,
                    "maxLength": 250,
                    "x-displayname": "NFS Export Rules",
                    "x-ves-example": "*(rw,no_root_squash)",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "250",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "flash_blades": {
                    "type": "array",
                    "description": " For FlashBlades you must set the \"mgmt_endpoint\", \"api_token\" and nfs_endpoint\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Flash Blades",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/fleetFlashBladeEndpoint"
                    },
                    "x-displayname": "Flash Blades",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetBondDeviceType": {
            "type": "object",
            "description": "Bond devices configuration for fleet",
            "title": "Bond Device",
            "x-displayname": "Bond Device",
            "x-ves-oneof-field-lacp_choice": "[\"active_backup\",\"lacp\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetBondDeviceType",
            "properties": {
                "active_backup": {
                    "description": "Exclusive with [lacp]\n Configure active/backup based bond device",
                    "title": "Active/Backup",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Active/Backup"
                },
                "devices": {
                    "type": "array",
                    "description": " Ethernet devices that will make up this bond\n\nExample: - \"eth0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.max_len: 64\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Member Ethernet Devices",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "x-displayname": "Member Ethernet Devices",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.max_len": "64",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "lacp": {
                    "description": "Exclusive with [active_backup]\n Configure LACP (802.3ad) based bond device",
                    "title": "LACP (802.3ad)",
                    "$ref": "#/definitions/fleetBondLacpType",
                    "x-displayname": "LACP (802.3ad)"
                },
                "link_polling_interval": {
                    "type": "integer",
                    "description": " Link polling interval in milliseconds\n\nExample: - \"1000\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 500\n  ves.io.schema.rules.uint32.lte: 5000\n",
                    "title": "Link Polling Interval",
                    "format": "int64",
                    "x-displayname": "Link Polling Interval",
                    "x-ves-example": "1000",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "500",
                        "ves.io.schema.rules.uint32.lte": "5000"
                    }
                },
                "link_up_delay": {
                    "type": "integer",
                    "description": " Milliseconds wait before link is declared up\n\nExample: - \"200\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 1000\n",
                    "title": "Link Up Delay",
                    "format": "int64",
                    "x-displayname": "Link Up Delay",
                    "x-ves-example": "200",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "1000"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Name for the Bond. Ex 'bond0'\n\nExample: - \"bond0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "Bond Device",
                    "maxLength": 64,
                    "x-displayname": "Bond Device Name",
                    "x-ves-example": "bond0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                }
            }
        },
        "fleetFleetBondDevicesListType": {
            "type": "object",
            "description": "List of bond devices for this fleet",
            "title": "Bond Devices List",
            "x-displayname": "Bond Devices List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetBondDevicesListType",
            "properties": {
                "bond_devices": {
                    "type": "array",
                    "description": " List of bond devices\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Bond Devices List",
                    "minItems": 1,
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/fleetFleetBondDeviceType"
                    },
                    "x-displayname": "Bond Devices",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetDeviceListType": {
            "type": "object",
            "description": "Add device for all interfaces belonging to this fleet",
            "title": "List of Devices",
            "x-displayname": "List of Devices",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetDeviceListType",
            "properties": {
                "devices": {
                    "type": "array",
                    "description": " Configuration for all devices in the fleet.\n Examples of devices are - network interfaces, cameras, scanners etc.\n Configuration a device is applied on VER node if the VER node is member of this fleet and\n has an corresponding interface/device. The mapping from device configured in fleet with\n interface/device in VER node depends on the type of device and is documented in\n device instance specific sections\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Add device for all interfaces belonging to this fleet",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/fleetDeviceInstanceType"
                    },
                    "x-displayname": "Devices",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetInterfaceListType": {
            "type": "object",
            "description": "Add all interfaces belonging to this fleet",
            "title": "List of Interfaces",
            "x-displayname": "List of Interfaces",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetInterfaceListType",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "description": " Add all interfaces belonging to this fleet\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 256\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Interfaces",
                    "minItems": 1,
                    "maxItems": 256,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "List of Interfaces",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "256",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetStatus": {
            "type": "object",
            "description": "Current status of fleet",
            "title": "Fleet Status",
            "x-displayname": "Fleet Status",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStatus",
            "properties": {
                "available_software_version": {
                    "type": "string",
                    "description": " Current software version used by the site",
                    "title": "Software Version",
                    "x-displayname": "Software Version"
                }
            }
        },
        "fleetFleetStorageClassListType": {
            "type": "object",
            "description": "Add additional custom storage classes in kubernetes for this fleet",
            "title": "Custom Storage Class List",
            "x-displayname": "Custom Storage Class List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageClassListType",
            "properties": {
                "storage_classes": {
                    "type": "array",
                    "description": " List of custom storage classes\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Storage Classes",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/fleetFleetStorageClassType"
                    },
                    "x-displayname": "List of Storage Classes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetStorageClassType": {
            "type": "object",
            "description": "Configuration of custom storage class",
            "title": "Custom Storage Class",
            "x-displayname": "Custom Storage Class",
            "x-ves-oneof-field-device_choice": "[\"custom_storage\",\"hpe_storage\",\"netapp_trident\",\"pure_service_orchestrator\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageClassType",
            "properties": {
                "advanced_storage_parameters": {
                    "type": "object",
                    "description": " Map of parameter name and string value\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 64\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Advanced Parameters",
                    "x-displayname": "Advanced Parameters",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "64",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "allow_volume_expansion": {
                    "type": "boolean",
                    "description": " Allow volume expansion.",
                    "title": "Allow Volume Expansion",
                    "format": "boolean",
                    "x-displayname": "Allow Volume Expansion"
                },
                "custom_storage": {
                    "description": "Exclusive with [hpe_storage netapp_trident pure_service_orchestrator]\n Storage configuration for Custom Storage",
                    "title": "Custom Storage",
                    "$ref": "#/definitions/fleetStorageClassCustomType",
                    "x-displayname": "Custom Storage"
                },
                "default_storage_class": {
                    "type": "boolean",
                    "description": " Make this storage class default storage class for the K8s cluster",
                    "title": "Default Storage Class",
                    "format": "boolean",
                    "x-displayname": "Default Storage Class"
                },
                "description": {
                    "type": "string",
                    "description": " Description for this storage class\n\nExample: - \"Volume from my fast storage\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Storage Class Description",
                    "maxLength": 256,
                    "x-displayname": "Storage Class Description",
                    "x-ves-example": "Volume from my fast storage",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "hpe_storage": {
                    "description": "Exclusive with [custom_storage netapp_trident pure_service_orchestrator]\n Storage configuration for HPE Storage",
                    "title": "HPE Storage",
                    "$ref": "#/definitions/fleetStorageClassHpeStorageType",
                    "x-displayname": "HPE Storage"
                },
                "netapp_trident": {
                    "description": "Exclusive with [custom_storage hpe_storage pure_service_orchestrator]\n Storage class Device configuration for NetApp Trident",
                    "title": "NetApp Trident",
                    "$ref": "#/definitions/fleetStorageClassNetappTridentType",
                    "x-displayname": "NetApp Trident"
                },
                "pure_service_orchestrator": {
                    "description": "Exclusive with [custom_storage hpe_storage netapp_trident]\n Storage class Device configuration for Pure Service Orchestrator",
                    "title": "Pure Storage Service Orchestrator",
                    "$ref": "#/definitions/fleetStorageClassPureServiceOrchestratorType",
                    "x-displayname": "Pure Storage Service Orchestrator"
                },
                "reclaim_policy": {
                    "type": "string",
                    "description": " Reclaim Policy\n\nExample: - \"Delete\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 16\n",
                    "title": "Reclaim Policy",
                    "maxLength": 16,
                    "x-displayname": "Reclaim Policy",
                    "x-ves-example": "Delete",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "16"
                    }
                },
                "storage_class_name": {
                    "type": "string",
                    "description": " Name of the storage class as it will appear in K8s.\n\nExample: - \"premium\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.ves_object_name: true\n",
                    "title": "Storage Class Name",
                    "x-displayname": "Storage Class Name",
                    "x-ves-example": "premium",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.ves_object_name": "true"
                    }
                },
                "storage_device": {
                    "type": "string",
                    "description": " Storage device that this class will use. The Device name defined at previous step.\n\nExample: - \"DellEMC-isilon_F800-0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 64\n  ves.io.schema.rules.string.min_bytes: 1\n",
                    "title": "Storage Device",
                    "minLength": 1,
                    "maxLength": 64,
                    "x-displayname": "Storage Device",
                    "x-ves-example": "DellEMC-isilon_F800-0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "64",
                        "ves.io.schema.rules.string.min_bytes": "1"
                    }
                }
            }
        },
        "fleetFleetStorageDeviceListType": {
            "type": "object",
            "description": "Add additional custom storage classes in kubernetes for this fleet",
            "title": "Custom Storage Device List",
            "x-displayname": "Custom Storage Device List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageDeviceListType",
            "properties": {
                "storage_devices": {
                    "type": "array",
                    "description": " List of custom storage devices\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Storage Devices",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/fleetFleetStorageDeviceType"
                    },
                    "x-displayname": "List of Storage Devices",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetFleetStorageDeviceType": {
            "type": "object",
            "description": "Configuration of storage device",
            "title": "Storage Device",
            "x-displayname": "Storage Device",
            "x-ves-oneof-field-device_choice": "[\"custom_storage\",\"hpe_storage\",\"netapp_trident\",\"pure_service_orchestrator\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageDeviceType",
            "properties": {
                "advanced_advanced_parameters": {
                    "type": "object",
                    "description": " Map of parameter name and string value\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 64\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Advanced Parameters",
                    "x-displayname": "Advanced Parameters",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "64",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "custom_storage": {
                    "description": "Exclusive with [hpe_storage netapp_trident pure_service_orchestrator]\n Device configuration for Custom Storage",
                    "title": "Custom Storage",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Custom Storage"
                },
                "hpe_storage": {
                    "description": "Exclusive with [custom_storage netapp_trident pure_service_orchestrator]\n Device configuration for HPE Storage",
                    "title": "HPE Storage",
                    "$ref": "#/definitions/fleetStorageDeviceHpeStorageType",
                    "x-displayname": "HPE Storage"
                },
                "netapp_trident": {
                    "description": "Exclusive with [custom_storage hpe_storage pure_service_orchestrator]\n Device configuration for NetApp Trident",
                    "title": "NetApp Trident",
                    "$ref": "#/definitions/fleetStorageDeviceNetappTridentType",
                    "x-displayname": "NetApp Trident"
                },
                "pure_service_orchestrator": {
                    "description": "Exclusive with [custom_storage hpe_storage netapp_trident]\n Device configuration for Pure Storage Service Orchestrator",
                    "title": "Pure Storage Service Orchestrator",
                    "$ref": "#/definitions/fleetStorageDevicePureStorageServiceOrchestratorType",
                    "x-displayname": "Pure Storage Service Orchestrator"
                },
                "storage_device": {
                    "type": "string",
                    "description": " Storage device and device unit\n\nExample: - \"DellEMC-isilon-F800-0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "Storage Device",
                    "maxLength": 64,
                    "x-displayname": "Storage Device",
                    "x-ves-example": "DellEMC-isilon-F800-0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                }
            }
        },
        "fleetFleetStorageStaticRoutesListType": {
            "type": "object",
            "description": "List of storage static routes",
            "title": "Storage Static Routes List",
            "x-displayname": "Storage Static Routes List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageStaticRoutesListType",
            "properties": {
                "storage_routes": {
                    "type": "array",
                    "description": " List of storage static routes\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Static Routes",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/schemaStaticRouteType"
                    },
                    "x-displayname": "List of Static Routes",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetGetResponse": {
            "type": "object",
            "description": "This is the output message of the 'Get' RPC",
            "title": "GetResponse is the shape of a read fleet",
            "x-displayname": "Get Response",
            "x-ves-proto-message": "ves.io.schema.fleet.GetResponse",
            "properties": {
                "create_form": {
                    "description": "Format used to create a new similar object",
                    "title": "create_form",
                    "$ref": "#/definitions/fleetCreateRequest",
                    "x-displayname": "CreateRequest Format"
                },
                "deleted_referred_objects": {
                    "type": "array",
                    "description": "The set of deleted objects that are referred by this object",
                    "title": "deleted_referred_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Deleted Referred Objects"
                },
                "disabled_referred_objects": {
                    "type": "array",
                    "description": "The set of deleted objects that are referred by this object",
                    "title": "disabled_referred_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Disabled Referred Objects"
                },
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "referring_objects": {
                    "type": "array",
                    "description": "The set of objects that are referring to this object in their spec",
                    "title": "referring_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Referring Objects"
                },
                "replace_form": {
                    "description": "Format to replace changeable values in object",
                    "title": "replace_form",
                    "$ref": "#/definitions/fleetReplaceRequest",
                    "x-displayname": "ReplaceRequest Format"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the fleet",
                    "title": "spec",
                    "$ref": "#/definitions/schemafleetGetSpecType",
                    "x-displayname": "Spec"
                },
                "status": {
                    "type": "array",
                    "description": "The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/fleetStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "fleetGetResponseFormatCode": {
            "type": "string",
            "description": "x-displayName: \"Get Response Format\"\nThis is the various forms that can be requested to be sent in the GetResponse\n\n - GET_RSP_FORMAT_DEFAULT: x-displayName: \"Default Format\"\nDefault format of returned resource\n - GET_RSP_FORMAT_FOR_CREATE: x-displayName: \"Create request Format\"\nResponse should be in CreateRequest format\n - GET_RSP_FORMAT_FOR_REPLACE: x-displayName: \"Replace request format\"\nResponse should be in ReplaceRequest format\n - GET_RSP_FORMAT_STATUS: x-displayName: \"Status format\"\nResponse should be in StatusObject(s) format\n - GET_RSP_FORMAT_READ: x-displayName: \"GetSpecType format\"\nResponse should be in format of GetSpecType\n - GET_RSP_FORMAT_REFERRING_OBJECTS: x-displayName: \"Referring Objects\"\nResponse should have other objects referring to this object\n - GET_RSP_FORMAT_BROKEN_REFERENCES: x-displayName: \"Broken Referred Objects\"\nResponse should have deleted and disabled objects referrred by this object",
            "title": "GetResponseFormatCode",
            "enum": [
                "GET_RSP_FORMAT_DEFAULT",
                "GET_RSP_FORMAT_FOR_CREATE",
                "GET_RSP_FORMAT_FOR_REPLACE",
                "GET_RSP_FORMAT_STATUS",
                "GET_RSP_FORMAT_READ",
                "GET_RSP_FORMAT_REFERRING_OBJECTS",
                "GET_RSP_FORMAT_BROKEN_REFERENCES"
            ],
            "default": "GET_RSP_FORMAT_DEFAULT"
        },
        "fleetListResponse": {
            "type": "object",
            "description": "This is the output message of 'List' RPC.",
            "title": "ListResponse is the collection of fleet",
            "x-displayname": "List Response",
            "x-ves-proto-message": "ves.io.schema.fleet.ListResponse",
            "properties": {
                "errors": {
                    "type": "array",
                    "description": " Errors(if any) while listing items from collection",
                    "title": "errors",
                    "items": {
                        "$ref": "#/definitions/schemaErrorType"
                    },
                    "x-displayname": "Errors"
                },
                "items": {
                    "type": "array",
                    "description": " items represents the collection in response",
                    "title": "items",
                    "items": {
                        "$ref": "#/definitions/fleetListResponseItem"
                    },
                    "x-displayname": "Items"
                }
            }
        },
        "fleetListResponseItem": {
            "type": "object",
            "description": "By default a summary of fleet is returned in 'List'. By setting\n'report_fields' in the ListRequest more details of each item can be got.",
            "title": "ListResponseItem is an individual item in a collection of fleet",
            "x-displayname": "List Item",
            "x-ves-proto-message": "ves.io.schema.fleet.ListResponseItem",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " The set of annotations present on this fleet",
                    "title": "annotations",
                    "x-displayname": "Annotations"
                },
                "description": {
                    "type": "string",
                    "description": " The description set for this fleet",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "disabled": {
                    "type": "boolean",
                    "description": " A value of true indicates fleet is administratively disabled",
                    "title": "disabled",
                    "format": "boolean",
                    "x-displayname": "Disabled"
                },
                "get_spec": {
                    "description": " If ListRequest has any specified report_fields, it will appear in object",
                    "title": "get_spec",
                    "$ref": "#/definitions/schemafleetGetSpecType",
                    "x-displayname": "Get Specification"
                },
                "labels": {
                    "type": "object",
                    "description": " The set of labels present on this fleet",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "metadata": {
                    "description": " If list request has report_fields set then metadata will\n contain all the metadata associated with the object.",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "name": {
                    "type": "string",
                    "description": " The name of this fleet\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " The namespace this item belongs to\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "status_set": {
                    "type": "array",
                    "description": " The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/fleetStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " If list request has report_fields set then system_metadata will\n contain all the system generated details of this object.",
                    "title": "system_metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                },
                "tenant": {
                    "type": "string",
                    "description": " The tenant this item belongs to\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " The unique uid of this fleet\n\nExample: - \"d27938ba-967e-40a7-9709-57b8627f9f75\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d27938ba-967e-40a7-9709-57b8627f9f75"
                }
            }
        },
        "fleetNetworkingDeviceInstanceType": {
            "type": "object",
            "description": "Represents physical network interface.\nThe 'interface' reference points to a Network Interface object. Attributes such as Labels, MTU from\nNetwork Interface must be applied to the device.\n\nDevice mapping to nodes\n\nA fleet can have many devices and nodes in VER customer edge site can have many interfaces.\nAn interface in node inherits configuration from a device by matching,\n  - device_name in Network Interface for the device\n  - device name for physical-interface in the node",
            "title": "Network Device Type",
            "x-displayname": "Network Device Type",
            "x-ves-proto-message": "ves.io.schema.fleet.NetworkingDeviceInstanceType",
            "properties": {
                "interface": {
                    "type": "array",
                    "description": " Network Interface attributes for the device.\n User network interface configuration for this network device.\n Attributes like labels, MTU from the 'interface' are applied to corresponding interface in VER node\n If network interface refers to a virtual-network, the virtual-netowrk type must be consistent with use attribute given below\n If use is NETWORK_INTERFACE_USE_REGULAR, the virtual-network must be of type VIRTUAL_NETWORK_SITE_LOCAL or VIRTUAL_NETWORK_SITE_LOCAL_INSIDE\n if use is NETWORK_INTERFACE_USE_OUTSIDE, the virtual-network must of type VIRTUAL_NETWORK_SITE_LOCAL\n if use is NETWORK_INTERFACE_USE_INSIDE, the virtual-network must of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "title": "Network Interface",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Interface",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "use": {
                    "description": " Defines how the device is used.\n 'use' specifies how the device is used in node\n Specifies if the network interface is connected to inside network or outside network.\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Use",
                    "$ref": "#/definitions/fleetNetworkingDeviceInstanceUseType",
                    "x-displayname": "Use",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "fleetNetworkingDeviceInstanceUseType": {
            "type": "string",
            "description": "Defines how the device is used\n\nIf networking device is owned by VER, it is available for users to configure as required\nIf networking device is owned by VER, it is included in bootstrap config and member of outside network.\nIf networking device is owned by VER, it is included in bootstrap config and member of inside network.",
            "title": "Network Device Use",
            "enum": [
                "NETWORK_INTERFACE_USE_REGULAR",
                "NETWORK_INTERFACE_USE_OUTSIDE",
                "NETWORK_INTERFACE_USE_INSIDE"
            ],
            "default": "NETWORK_INTERFACE_USE_REGULAR",
            "x-displayname": "Network Device Use",
            "x-ves-proto-enum": "ves.io.schema.fleet.NetworkingDeviceInstanceUseType"
        },
        "fleetOntapVirtualStoragePoolType": {
            "type": "object",
            "description": "ONTAP Virtual Storage Pool definition",
            "title": "Backend ONTAP Virtual Storage Pool",
            "x-displayname": "Backend ONTAP Virtual Storage Pool",
            "x-ves-proto-message": "ves.io.schema.fleet.OntapVirtualStoragePoolType",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class label match selection.\n\nExample: - \"{\"department\":\"finance\", \"creditpoints\":\"6000\"}\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 20\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Storage Pool Labels",
                    "x-displayname": "Storage Pool Labels",
                    "x-ves-example": "{\"department\":\"finance\", \"creditpoints\":\"6000\"}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "20",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "volume_defaults": {
                    "description": " List of QoS volume default types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                },
                "zone": {
                    "type": "string",
                    "description": " Virtual Storage Pool zone definition.\n\nExample: - \"us_east_1b\"-",
                    "title": "Pool Zone",
                    "x-displayname": "Virtual Pool Zone",
                    "x-ves-example": "us_east_1b"
                }
            }
        },
        "fleetOntapVolumeDefaults": {
            "type": "object",
            "description": "It controls how each volume is provisioned by default using these options in a special section of the configuration.",
            "title": "Backend OnTap Volume Defaults",
            "x-displayname": "Backend OnTap Volume Defaults",
            "x-ves-oneof-field-qos_policy_choice": "[\"adaptive_qos_policy\",\"no_qos\",\"qos_policy\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.OntapVolumeDefaults",
            "properties": {
                "adaptive_qos_policy": {
                    "type": "string",
                    "description": "Exclusive with [no_qos qos_policy]\n Enter Adaptive QoS Policy Name\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Storage Server IP address",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "Adaptive QoS Policy name",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "encryption": {
                    "type": "boolean",
                    "description": " Enable NetApp volume encryption.\n\nExample: - \"false\"-",
                    "title": "Enable Encryption",
                    "format": "boolean",
                    "x-displayname": "Enable Encryption",
                    "x-ves-example": "false"
                },
                "export_policy": {
                    "type": "string",
                    "description": " Export policy to use.\n\nExample: - \"default\"-",
                    "title": "Export Policy",
                    "x-displayname": "Export Policy",
                    "x-ves-example": "default"
                },
                "no_qos": {
                    "description": "Exclusive with [adaptive_qos_policy qos_policy]\n No QoS configured",
                    "title": "No QoS",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No QoS"
                },
                "qos_policy": {
                    "type": "string",
                    "description": "Exclusive with [adaptive_qos_policy no_qos]\n Enter QoS Policy Name\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "QoS Policy Name",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "QoS Policy Name",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "security_style": {
                    "type": "string",
                    "description": " Security style for new volumes.\n\nExample: - \"unix\"-",
                    "title": "Security Style",
                    "x-displayname": "Security Style",
                    "x-ves-example": "unix"
                },
                "snapshot_dir": {
                    "type": "boolean",
                    "description": " Access to the .snapshot directory.",
                    "title": "Access to Snapshot Directory",
                    "format": "boolean",
                    "x-displayname": "Access to Snapshot Directory"
                },
                "snapshot_policy": {
                    "type": "string",
                    "description": " Snapshot policy to use\n\nExample: - \"none\"-",
                    "title": "Snapshot Policy",
                    "x-displayname": "Snapshot Policy",
                    "x-ves-example": "none"
                },
                "snapshot_reserve": {
                    "type": "string",
                    "description": " Percentage of volume reserved for snapshots. \"0\" if snapshot policy is \"none\", else \"\"\n\nExample: - \"10\"-",
                    "title": "Snapshot Rerserved",
                    "x-displayname": "Snapshot Reserved",
                    "x-ves-example": "10"
                },
                "space_reserve": {
                    "type": "string",
                    "description": " Space reservation mode; “none” (thin) or “volume” (thick)\n\nExample: - \"thick\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"none\\\",\\\"thick\\\"]\n",
                    "title": "Space Reservation Mode",
                    "x-displayname": "Space Reservation Mode",
                    "x-ves-example": "thick",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"none\\\",\\\"thick\\\"]"
                    }
                },
                "split_on_clone": {
                    "type": "boolean",
                    "description": " Split a clone from its parent upon creation.\n\nExample: - \"false\"-",
                    "title": "Split on Clone",
                    "format": "boolean",
                    "x-displayname": "Split on Clone",
                    "x-ves-example": "false"
                },
                "tiering_policy": {
                    "type": "string",
                    "description": " Tiering policy to use. \"none\" is default.\n\nExample: - \"snapshot-only\"-",
                    "title": "Tiering Policy",
                    "x-displayname": "Tiering Policy",
                    "x-ves-example": "snapshot-only"
                },
                "unix_permissions": {
                    "type": "integer",
                    "description": " Unix permission mode for new volumes. All allowed 777\n\nExample: - \"777\"-",
                    "title": "Unix Mode Permissions",
                    "format": "int32",
                    "x-displayname": "Unix Mode Permissions",
                    "x-ves-example": "777"
                }
            }
        },
        "fleetPsoArrayConfiguration": {
            "type": "object",
            "description": "Device configuration for PSO Arrays",
            "title": "Arrays Configuration",
            "x-displayname": "Arrays Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.PsoArrayConfiguration",
            "properties": {
                "flash_array": {
                    "description": " Specify what storage flash arrays should be managed the plugin\n For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"",
                    "title": "Flash Arrays",
                    "$ref": "#/definitions/fleetFlashArrayType",
                    "x-displayname": "Flash Arrays"
                },
                "flash_blade": {
                    "description": " Specify what storage flash blades should be managed the plugin",
                    "title": "Flash Blade",
                    "$ref": "#/definitions/fleetFlashBladeType",
                    "x-displayname": "Flash Blade"
                }
            }
        },
        "fleetReplaceRequest": {
            "type": "object",
            "description": "This is the input message of the 'Replace' RPC",
            "title": "ReplaceRequest is used to replace contents of a fleet",
            "x-displayname": "Replace Request",
            "x-ves-proto-message": "ves.io.schema.fleet.ReplaceRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectReplaceMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the fleet",
                    "title": "spec",
                    "$ref": "#/definitions/schemafleetReplaceSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "fleetReplaceResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.fleet.ReplaceResponse"
        },
        "fleetSriovInterface": {
            "type": "object",
            "description": "Single Root I/O Virtualization interfaces configured explicitly\nBy default no SR-IOV interface is assigned to the fleet",
            "title": "SriovInterface specifies the configuration fo SR-IOV interfaces and how many virtual functions it has",
            "x-displayname": "SR-IOV Interfaces",
            "x-ves-proto-message": "ves.io.schema.fleet.SriovInterface",
            "properties": {
                "interface_name": {
                    "type": "string",
                    "description": " Name of SR-IOV physical interface\n\nExample: - \"eth0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "interface_name",
                    "x-displayname": "Name of physical interface",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "number_of_vfio_vfs": {
                    "type": "integer",
                    "description": "\n Number of virtual functions reserved for VNFs and DPDK-based CNFs\n\nExample: - \"2\"-",
                    "title": "number_of_vfio_vfs",
                    "format": "int64",
                    "x-displayname": "Number of virtual functions reserved for vfio",
                    "x-ves-example": "2"
                },
                "number_of_vfs": {
                    "type": "integer",
                    "description": " Total number of virtual functions\n\nExample: - \"3\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "number_of_vfs",
                    "format": "int64",
                    "x-displayname": "Total number of virtual functions",
                    "x-ves-example": "3",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "fleetSriovInterfacesListType": {
            "type": "object",
            "description": "List of all custom SR-IOV interfaces configuration",
            "title": "Custom SR-IOV interfaces Configuration List",
            "x-displayname": "Custom SR-IOV interfaces Configuration List",
            "x-ves-proto-message": "ves.io.schema.fleet.SriovInterfacesListType",
            "properties": {
                "sriov_interface": {
                    "type": "array",
                    "description": " Use custom SR-IOV interfaces Configuration\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Custom SR-IOV interfaces Configuration",
                    "items": {
                        "$ref": "#/definitions/fleetSriovInterface"
                    },
                    "x-displayname": "Custom SR-IOV interfaces Configuration",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetStatusObject": {
            "type": "object",
            "description": "Most recently observed status of fleet object",
            "title": "Fleet Status",
            "x-displayname": "Status Object",
            "x-ves-proto-message": "ves.io.schema.fleet.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions reported by various components of the system",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " Object reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                },
                "status": {
                    "description": " Current status of the fleet object",
                    "title": "status",
                    "$ref": "#/definitions/fleetFleetStatus",
                    "x-displayname": "Status"
                }
            }
        },
        "fleetStorageClassCustomType": {
            "type": "object",
            "description": "Custom Storage Class allows to insert Kubernetes storageclass definition which will be applied into given site.",
            "title": "Custom StorageClass",
            "x-displayname": "Custom StorageClass",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassCustomType",
            "properties": {
                "yaml": {
                    "type": "string",
                    "description": " K8s YAML for StorageClass\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 4096\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "Storage Class YAML",
                    "maxLength": 4096,
                    "x-displayname": "Storage Class YAML",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "4096",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                }
            }
        },
        "fleetStorageClassHpeStorageType": {
            "type": "object",
            "description": "Storage class Device configuration for HPE Storage",
            "title": "HPE Storage",
            "x-displayname": "HPE Storage",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassHpeStorageType",
            "properties": {
                "allow_mutations": {
                    "type": "string",
                    "description": " mutation can override specified parameters\n\nExample: - \"description,limitIops\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "allowMutations",
                    "maxLength": 256,
                    "x-displayname": "allowMutations",
                    "x-ves-example": "description,limitIops",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "allow_overrides": {
                    "type": "string",
                    "description": " PVC can override specified parameters\n\nExample: - \"description,limitIops\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "allowOverrides",
                    "maxLength": 256,
                    "x-displayname": "allowOverrides",
                    "x-ves-example": "description,limitIops",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "dedupe_enabled": {
                    "type": "boolean",
                    "description": " Indicates that the volume should enable deduplication.\n\nExample: - \"true\"-",
                    "title": "dedupeEnabled",
                    "format": "boolean",
                    "x-displayname": "dedupeEnabled",
                    "x-ves-example": "true"
                },
                "description": {
                    "type": "string",
                    "description": " The SecretName parameter is used to identify name of secret to identify backend storage's auth information\n\nExample: - \"Volume created by using a default Secret with the HPE CSI Driver for Kubernetes\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 512\n",
                    "title": "Description",
                    "maxLength": 512,
                    "x-displayname": "Description",
                    "x-ves-example": "Volume created by using a default Secret with the HPE CSI Driver for Kubernetes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "512"
                    }
                },
                "destroy_on_delete": {
                    "type": "boolean",
                    "description": " Indicates the backing Nimble volume (including snapshots) should be destroyed when the PVC is deleted\n\nExample: - \"false\"-",
                    "title": "destroyOnDelete",
                    "format": "boolean",
                    "x-displayname": "destroyOnDelete",
                    "x-ves-example": "false"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": " Indicates that the volume should be encrypted.\n\nExample: - \"false\"-",
                    "title": "encrypted",
                    "format": "boolean",
                    "x-displayname": "encrypted",
                    "x-ves-example": "false"
                },
                "folder": {
                    "type": "string",
                    "description": " The name of the folder in which to place the volume.\n\nExample: - \"default\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n",
                    "title": "folder",
                    "maxLength": 128,
                    "x-displayname": "folder",
                    "x-ves-example": "default",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128"
                    }
                },
                "limit_iops": {
                    "type": "string",
                    "description": " The IOPS limit of the volume.\n\nExample: - \"-1\"-",
                    "title": "limitIops",
                    "format": "int64",
                    "x-displayname": "limitIops",
                    "x-ves-example": "-1"
                },
                "limit_mbps": {
                    "type": "string",
                    "description": " The IOPS limit of the volume.\n\nExample: - \"-1\"-",
                    "title": "limitMbps",
                    "format": "int64",
                    "x-displayname": "limitMbps",
                    "x-ves-example": "-1"
                },
                "performance_policy": {
                    "type": "string",
                    "description": " The name of the performance policy to assign to the volume.\n\nExample: - \"default\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n",
                    "title": "performancePolicy",
                    "maxLength": 128,
                    "x-displayname": "performancePolicy",
                    "x-ves-example": "default",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128"
                    }
                },
                "pool": {
                    "type": "string",
                    "description": " The name of the pool in which to place the volume.\n\nExample: - \"default\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n",
                    "title": "pool",
                    "maxLength": 128,
                    "x-displayname": "pool",
                    "x-ves-example": "default",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128"
                    }
                },
                "protection_template": {
                    "type": "string",
                    "description": " The name of the performance policy to assign to the volume.\n\nExample: - \"Retain-30Daily\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 128\n",
                    "title": "protectionTemplate",
                    "maxLength": 128,
                    "x-displayname": "protectionTemplate",
                    "x-ves-example": "Retain-30Daily",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "128"
                    }
                },
                "secret_name": {
                    "type": "string",
                    "description": " The SecretName parameter is used to identify name of secret to identify backend storage's auth information\n\nExample: - \"hpe-backend\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Secret Name",
                    "maxLength": 256,
                    "x-displayname": "Secret Name",
                    "x-ves-example": "hpe-backend",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "secret_namespace": {
                    "type": "string",
                    "description": " The SecretNamespace parameter is used to identify name of namespace where secret resides\n\nExample: - \"hpe-storage\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Secret Namespace",
                    "maxLength": 256,
                    "x-displayname": "Secret Namespace",
                    "x-ves-example": "hpe-storage",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "sync_on_detach": {
                    "type": "boolean",
                    "description": " Indicates that a snapshot of the volume should be synced to the replication partner each time it is detached from a node.\n\nExample: - \"false\"-",
                    "title": "syncOnDetach",
                    "format": "boolean",
                    "x-displayname": "syncOnDetach",
                    "x-ves-example": "false"
                },
                "thick": {
                    "type": "boolean",
                    "description": " Indicates that the volume should be thick provisioned.\n\nExample: - \"false\"-",
                    "title": "thick",
                    "format": "boolean",
                    "x-displayname": "thick",
                    "x-ves-example": "false"
                }
            }
        },
        "fleetStorageClassNetappTridentType": {
            "type": "object",
            "description": "Storage class Device configuration for NetApp Trident",
            "title": "NetApp Trident Storage",
            "x-displayname": "NetApp Trident Storage",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassNetappTridentType",
            "properties": {
                "selector": {
                    "type": "object",
                    "description": " Using the Selector field, each StorageClass calls out which virtual pool(s) may be used to host a volume.\n The volume will have the aspects defined in the chosen virtual pool.\n\nExample: - \"protection=silver; creditpoints=20000\"-",
                    "title": "Selector",
                    "x-displayname": "Selector",
                    "x-ves-example": "protection=silver; creditpoints=20000"
                },
                "storage_pools": {
                    "type": "string",
                    "description": " The storagePools parameter is used to further restrict the set of pools that match any specified attributes\n\nExample: - \"backend-name1:.*;backend-name2:storagePoolListName\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 512\n",
                    "title": "Storage Pools",
                    "maxLength": 512,
                    "x-displayname": "Storage Pools",
                    "x-ves-example": "backend-name1:.*;backend-name2:storagePoolListName",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "512"
                    }
                }
            }
        },
        "fleetStorageClassPureServiceOrchestratorType": {
            "type": "object",
            "description": "Storage class Device configuration for Pure Service Orchestrator",
            "title": "Pure Storage Service Orchestrator",
            "x-displayname": "Pure Storage Service Orchestrator",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassPureServiceOrchestratorType",
            "properties": {
                "backend": {
                    "type": "string",
                    "description": " Defines type of Pure storage backend block or file.\n The volume will have the aspects defined in the chosen virtual pool.\n\nExample: - \"block\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"block\\\",\\\"file\\\"]\n",
                    "title": "Backend",
                    "x-displayname": "Backend",
                    "x-ves-example": "block",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"block\\\",\\\"file\\\"]"
                    }
                },
                "bandwidth_limit": {
                    "type": "string",
                    "description": " It must be between 1 MB/s and 512 GB/s. Enter the size as a number (bytes must be multiple of 512) or number with a single character unit symbol.\n Valid unit symbols are K, M, G, representing KiB, MiB, and GiB.\n\nExample: - \"1G\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 12\n",
                    "title": "Bandwidth Limit",
                    "maxLength": 12,
                    "x-displayname": "Bandwidth Limit",
                    "x-ves-example": "1G",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "12"
                    }
                },
                "iops_limit": {
                    "type": "integer",
                    "description": " Enable IOPS limitation. It must be between 100 and 100 million. If value is 0, IOPS limit is not defined.\n\nExample: - \"3000\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.ranges: 0,100-100000000\n",
                    "title": "IOPS Limit",
                    "format": "int64",
                    "x-displayname": "IOPS Limit",
                    "x-ves-example": "3000",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.ranges": "0,100-100000000"
                    }
                }
            }
        },
        "fleetStorageDeviceHpeStorageType": {
            "type": "object",
            "description": "Device configuration for HPE Storage",
            "title": "HPE Storage",
            "x-displayname": "HPE Storage",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceHpeStorageType",
            "properties": {
                "api_server_port": {
                    "type": "integer",
                    "description": " Enter Storage Server Port\n\nExample: - \"8080\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 65535\n",
                    "title": "Storage server Port",
                    "format": "int64",
                    "x-displayname": "Storage server Port",
                    "x-ves-example": "8080",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "65535"
                    }
                },
                "iscsi_chap_password": {
                    "description": " chap Password to connect to the HPE storage",
                    "title": "iscsi chapPassword",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "iscsi chapPassword"
                },
                "iscsi_chap_user": {
                    "type": "string",
                    "description": " chap Username to connect to the HPE storage\n\nExample: - \"admin\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "iscsi chapUser",
                    "maxLength": 256,
                    "x-displayname": "iscsi chapUser",
                    "x-ves-example": "admin",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "password": {
                    "description": " Please Enter you password.",
                    "title": "Password",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Password"
                },
                "storage_server_ip_address": {
                    "type": "string",
                    "description": " Enter storage server IP address\n\nExample: - \"10.10.10.10\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Storage Server IP address",
                    "x-displayname": "Storage Server IP address",
                    "x-ves-example": "10.10.10.10",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "storage_server_name": {
                    "type": "string",
                    "description": " Enter storage server Name\n\nExample: - \"hpe-backend\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n",
                    "title": "Storage Server Name",
                    "x-displayname": "Storage Server Name",
                    "x-ves-example": "hpe-backend",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true"
                    }
                },
                "username": {
                    "type": "string",
                    "description": " Username to connect to the HPE storage management IP\n\nExample: - \"admin\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Username",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Username",
                    "x-ves-example": "admin",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                }
            }
        },
        "fleetStorageDeviceNetappBackendOntapNasType": {
            "type": "object",
            "description": "Configuration of storage backend for NetApp ONTAP NAS",
            "title": "Storage Backend NetApp ONTAP NAS",
            "x-displayname": "Storage Backend NetApp ONTAP NAS",
            "x-ves-oneof-field-data_lif": "[\"data_lif_dns_name\",\"data_lif_ip\"]",
            "x-ves-oneof-field-management_lif": "[\"management_lif_dns_name\",\"management_lif_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappBackendOntapNasType",
            "properties": {
                "auto_export_cidrs": {
                    "description": " List of CIDRs to filter Kubernetes’ node IPs against when autoExportPolicy is enabled\n\nExample: - \"0.0.0.0/0\"-",
                    "title": "Auto Export CIDRs",
                    "$ref": "#/definitions/viewsPrefixStringListType",
                    "x-displayname": "Auto Export CIDRs",
                    "x-ves-example": "0.0.0.0/0"
                },
                "auto_export_policy": {
                    "type": "boolean",
                    "description": " Enable automatic export policy creation and updating",
                    "title": "Auto Export Policy",
                    "format": "boolean",
                    "x-displayname": "Auto Export Policy"
                },
                "backend_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name. Driver is name + \"_\" + dataLIF\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 50\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Storage Backend Name",
                    "minLength": 1,
                    "maxLength": 50,
                    "x-displayname": "Storage Backend Name",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "50",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "client_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of client certificate. Used for certificate-based auth.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 8192\n",
                    "title": "Client Certificate",
                    "maxLength": 8192,
                    "x-displayname": "Client Certificate",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "8192"
                    }
                },
                "client_private_key": {
                    "description": " Please Enter value of client private key. Used for certificate-based auth.",
                    "title": "Client Private Key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Client Private Key"
                },
                "data_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_ip]\n Backend Data LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Backend Data LIF Name",
                    "maxLength": 256,
                    "x-displayname": "Backend Data LIF Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "data_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_dns_name]\n Backend Data LIF IP Address is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Backend Data LIF IP Address",
                    "x-displayname": "Backend Data LIF IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class selection.\n\nExample: - \"{\"store\":\"nas_store\"}\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 20\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Backend Labels",
                    "x-displayname": "Backend Labels",
                    "x-ves-example": "{\"store\":\"nas_store\"}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "20",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "limit_aggregate_usage": {
                    "type": "string",
                    "description": " Fail provisioning if usage is above this percentage. Not enforced by default.\n\nExample: - \"80%\"-",
                    "title": "Limit Aggregate Usage",
                    "x-displayname": "Limit Aggregate Usage",
                    "x-ves-example": "80%"
                },
                "limit_volume_size": {
                    "type": "string",
                    "description": " Fail provisioning if requested volume size is above this value. Not enforced by default.\n\nExample: - \"50Gi\"-",
                    "title": "Limit Volume Size",
                    "x-displayname": "Limit Volume Size",
                    "x-ves-example": "50Gi"
                },
                "management_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_ip]\n Backend Management LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Backend Management LIF Name",
                    "maxLength": 256,
                    "x-displayname": "Backend Management LIF Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "management_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_dns_name]\n Backend Management LIF IP Address is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Backend Management LIF IP Address",
                    "x-displayname": "Backend Management LIF IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "nfs_mount_options": {
                    "type": "string",
                    "description": " Comma-separated list of NFS mount options. Not enforced by default.\n\nExample: - \"nfsvers=4\"-",
                    "title": "NFS Mount Options",
                    "x-displayname": "NFS Mount Options",
                    "x-ves-example": "nfsvers=4"
                },
                "password": {
                    "description": " Please Enter you password. Password to connect to the cluster/SVM",
                    "title": "Password",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Password"
                },
                "region": {
                    "type": "string",
                    "description": " Virtual Pool Region\n\nExample: - \"us_east_1b\"-",
                    "title": "Backend Region",
                    "x-displayname": "Backend Region",
                    "x-ves-example": "us_east_1b"
                },
                "storage": {
                    "type": "array",
                    "description": " List of Virtual Storage Pool definitions which are referred back by Storage Class label match selection.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Virtual Storage Pools",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/fleetOntapVirtualStoragePoolType"
                    },
                    "x-displayname": "Virtual Storage Pools",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "storage_driver_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name\n\nExample: - \"ontap-nas\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.in: [\\\"ontap-nas\\\",\\\"ontap-nas-economy\\\",\\\"ontap-nas-flexgroup\\\"]\n",
                    "title": "Storage Backend Driver",
                    "x-displayname": "Storage Backend Driver",
                    "x-ves-example": "ontap-nas",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.in": "[\\\"ontap-nas\\\",\\\"ontap-nas-economy\\\",\\\"ontap-nas-flexgroup\\\"]"
                    }
                },
                "storage_prefix": {
                    "type": "string",
                    "description": " Prefix used when provisioning new volumes in the SVM. Once set this cannot be updated\n\nExample: - \"trident\"-",
                    "title": "Storage Prefix",
                    "x-displayname": "Storage Prefix",
                    "x-ves-example": "trident"
                },
                "svm": {
                    "type": "string",
                    "description": " Storage virtual machine to use. Derived if an SVM managementLIF is specified\n\nExample: - \"trident_svm\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Backend SVM",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Backend SVM",
                    "x-ves-example": "trident_svm",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "trusted_ca_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of trusted CA certificate. Optional. Used for certificate-based auth..\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 8192\n",
                    "title": "Trusted CA Certificate",
                    "maxLength": 8192,
                    "x-displayname": "Trusted CA Certificate",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "8192"
                    }
                },
                "username": {
                    "type": "string",
                    "description": " Username to connect to the cluster/SVM\n\nExample: - \"cluster-admin\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Username",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Username",
                    "x-ves-example": "cluster-admin",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "volume_defaults": {
                    "description": " List of QoS volume defaults types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                }
            }
        },
        "fleetStorageDeviceNetappBackendOntapSanType": {
            "type": "object",
            "description": "Configuration of storage backend for NetApp ONTAP SAN",
            "title": "Storage Backend NetApp ONTAP SAN",
            "x-displayname": "Storage Backend NetApp ONTAP SAN",
            "x-ves-oneof-field-chap_choice": "[\"no_chap\",\"use_chap\"]",
            "x-ves-oneof-field-data_lif": "[\"data_lif_dns_name\",\"data_lif_ip\"]",
            "x-ves-oneof-field-management_lif": "[\"management_lif_dns_name\",\"management_lif_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappBackendOntapSanType",
            "properties": {
                "client_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of client certificate. Used for certificate-based auth.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 8192\n",
                    "title": "Client Certificate",
                    "maxLength": 8192,
                    "x-displayname": "Client Certificate",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "8192"
                    }
                },
                "client_private_key": {
                    "description": " Please Enter value of client private key. Used for certificate-based auth.",
                    "title": "Client Private Key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Client Private Key"
                },
                "data_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_ip]\n Backend Data LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Backend Data LIF Name",
                    "maxLength": 256,
                    "x-displayname": "Backend Data LIF Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "data_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_dns_name]\n Backend Data LIF IP Address is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Backend Data LIF IP Address",
                    "x-displayname": "Backend Data LIF IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "igroup_name": {
                    "type": "string",
                    "description": " Name of the igroup for SAN volumes to use\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "iGroup Name",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "iGroup Name",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class selection.\n\nExample: - \"{\"store\":\"nas_store\"}\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 20\n  ves.io.schema.rules.map.values.string.max_len: 128\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Backend Labels",
                    "x-displayname": "Backend Labels",
                    "x-ves-example": "{\"store\":\"nas_store\"}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "20",
                        "ves.io.schema.rules.map.values.string.max_len": "128",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "limit_aggregate_usage": {
                    "type": "integer",
                    "description": " Fail provisioning if usage is above this percentage. Not enforced by default.\n\nExample: - \"80\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 100\n",
                    "title": "Limit Aggregate Usage",
                    "format": "int64",
                    "x-displayname": "Limit Aggregate Usage",
                    "x-ves-example": "80",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "100"
                    }
                },
                "limit_volume_size": {
                    "type": "integer",
                    "description": " Fail provisioning if requested volume size in GBi is above this value. Not enforced by default.\n\nExample: - \"50\"-",
                    "title": "Limit Volume Size",
                    "format": "int32",
                    "x-displayname": "Limit Volume Size",
                    "x-ves-example": "50"
                },
                "management_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_ip]\n Backend Management LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.\n\nExample: - \"storage.local\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname: true\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Backend Management LIF Name",
                    "maxLength": 256,
                    "x-displayname": "Backend Management LIF Name",
                    "x-ves-example": "storage.local",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname": "true",
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "management_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_dns_name]\n Backend Management LIF IP Address is reachable at the given ip address\n\nExample: - \"10.5.2.4\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Backend Management LIF IP Address",
                    "x-displayname": "Backend Management LIF IP Address",
                    "x-ves-example": "10.5.2.4",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "no_chap": {
                    "description": "Exclusive with [use_chap]\n CHAP disabled",
                    "title": "CHAP Disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "CHAP Disabled"
                },
                "password": {
                    "description": " Please Enter you password. Password to connect to the cluster/SVM",
                    "title": "Password",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Password"
                },
                "region": {
                    "type": "string",
                    "description": " Virtual Pool Region\n\nExample: - \"us_east_1b\"-",
                    "title": "Backend Region",
                    "x-displayname": "Backend Region",
                    "x-ves-example": "us_east_1b"
                },
                "storage": {
                    "type": "array",
                    "description": " List of Virtual Storage Pool definitions which are referred back by Storage Class label match selection.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Virtual Storage Pools",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/fleetOntapVirtualStoragePoolType"
                    },
                    "x-displayname": "Virtual Storage Pools",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "storage_driver_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name\n\nExample: - \"ontap-nas\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.in: [\\\"ontap-san\\\",\\\"ontap-san-economy\\\",\\\"ontap-nas-flexgroup\\\"]\n",
                    "title": "Storage Backend Driver",
                    "x-displayname": "Storage Backend Driver",
                    "x-ves-example": "ontap-nas",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.in": "[\\\"ontap-san\\\",\\\"ontap-san-economy\\\",\\\"ontap-nas-flexgroup\\\"]"
                    }
                },
                "storage_prefix": {
                    "type": "string",
                    "description": " Prefix used when provisioning new volumes in the SVM. Once set this cannot be updated\n\nExample: - \"trident\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 80\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Storage Prefix",
                    "minLength": 1,
                    "maxLength": 80,
                    "x-displayname": "Storage Prefix",
                    "x-ves-example": "trident",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "80",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "svm": {
                    "type": "string",
                    "description": " Storage virtual machine to use. Derived if an SVM managementLIF is specified\n\nExample: - \"trident_svm\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Backend SVM",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Backend SVM",
                    "x-ves-example": "trident_svm",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "trusted_ca_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of trusted CA certificate. Optional. Used for certificate-based auth..\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 8192\n",
                    "title": "Trusted CA Certificate",
                    "maxLength": 8192,
                    "x-displayname": "Trusted CA Certificate",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "8192"
                    }
                },
                "use_chap": {
                    "description": "Exclusive with [no_chap]\n Device NetApp Backend ONTAP SAN CHAP configuration options for enabled CHAP",
                    "title": "Use Device NetApp Backend ONTAP SAN CHAP configuration",
                    "$ref": "#/definitions/fleetDeviceNetappBackendOntapSanChapType",
                    "x-displayname": "Use Device NetApp Backend ONTAP SAN CHAP"
                },
                "username": {
                    "type": "string",
                    "description": " Username to connect to the cluster/SVM\n\nExample: - \"cluster-admin\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Username",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Username",
                    "x-ves-example": "cluster-admin",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "volume_defaults": {
                    "description": " List of QoS volume defaults types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                }
            }
        },
        "fleetStorageDeviceNetappTridentType": {
            "type": "object",
            "description": "Device configuration for NetApp Trident Storage",
            "title": "NetApp Trident",
            "x-displayname": "NetApp Trident",
            "x-ves-oneof-field-backend_choice": "[\"netapp_backend_ontap_nas\",\"netapp_backend_ontap_san\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappTridentType",
            "properties": {
                "netapp_backend_ontap_nas": {
                    "description": "Exclusive with [netapp_backend_ontap_san]\n Backend configuration for ONTAP NAS",
                    "title": "ONTAP NAS",
                    "$ref": "#/definitions/fleetStorageDeviceNetappBackendOntapNasType",
                    "x-displayname": "ONTAP NAS"
                },
                "netapp_backend_ontap_san": {
                    "description": "Exclusive with [netapp_backend_ontap_nas]\n Backend configuration for ONTAP SAN",
                    "title": "ONTAP SAN",
                    "$ref": "#/definitions/fleetStorageDeviceNetappBackendOntapSanType",
                    "x-displayname": "ONTAP SAN"
                }
            }
        },
        "fleetStorageDevicePureStorageServiceOrchestratorType": {
            "type": "object",
            "description": "Device configuration for Pure Storage Service Orchestrator",
            "title": "Pure Storage Service Orchestrator",
            "x-displayname": "Pure Storage Service Orchestrator",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDevicePureStorageServiceOrchestratorType",
            "properties": {
                "arrays": {
                    "description": " This section configure PSO storage arrays\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Arrays Configuration",
                    "$ref": "#/definitions/fleetPsoArrayConfiguration",
                    "x-displayname": "Arrays Configuration",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "cluster_id": {
                    "type": "string",
                    "description": " clusterID is added as a prefix for all volumes created by this PSO installation.\n clusterID is also used to identify the volumes used by the datastore, pso-db.\n clusterID MUST BE UNIQUE for multiple K8s clusters running on top of the same storage arrays.\n characters allowed: alphanumeric and underscores\n\nExample: - \"cluster1\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 22\n  ves.io.schema.rules.string.min_len: 1\n  ves.io.schema.rules.string.pattern: ^[a-z0-9_]*$\n",
                    "title": "Cluster ID",
                    "minLength": 1,
                    "maxLength": 22,
                    "x-displayname": "Cluster ID",
                    "x-ves-example": "cluster1",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "22",
                        "ves.io.schema.rules.string.min_len": "1",
                        "ves.io.schema.rules.string.pattern": "^[a-z0-9_]*$"
                    }
                },
                "enable_storage_topology": {
                    "type": "boolean",
                    "description": " This option is to enable/disable the csi topology feature for pso-csi",
                    "title": "Enable Storage Topology",
                    "format": "boolean",
                    "x-displayname": "Enable Storage Topology"
                },
                "enable_strict_topology": {
                    "type": "boolean",
                    "description": " This option is to enable/disable the strict csi topology feature for pso-csi",
                    "title": "Enable Strict Topology",
                    "format": "boolean",
                    "x-displayname": "Enable Strict Topology"
                }
            }
        },
        "fleetVGPUConfiguration": {
            "type": "object",
            "description": "Licensing configuration for NVIDIA vGPU",
            "title": "vGPU Configuration",
            "x-displayname": "vGPU Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.VGPUConfiguration",
            "properties": {
                "feature_type": {
                    "description": " Set Feature to be enabled\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Feature Type",
                    "$ref": "#/definitions/fleetVGPUFeatureType",
                    "x-displayname": "Feature Type",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "server_address": {
                    "type": "string",
                    "description": " Set License Server Address\n\nExample: - \"gridlicense1.example.com\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.hostname_or_ip: true\n",
                    "title": "License Server Address",
                    "x-displayname": "License Server Address",
                    "x-ves-example": "gridlicense1.example.com",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.hostname_or_ip": "true"
                    }
                },
                "server_port": {
                    "type": "integer",
                    "description": " Set License Server port number\n\nExample: - \"7070\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 65535\n",
                    "title": "License Server Port Number",
                    "format": "int64",
                    "x-displayname": "License Server Port Number",
                    "x-ves-example": "7070",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "65535"
                    }
                }
            }
        },
        "fleetVGPUFeatureType": {
            "type": "string",
            "description": "Set feature to be enabled\n\nOperate with a degraded vGPU performance\nEnable NVIDIA vGPU\nEnable NVIDIA RTX Virtual Workstation\nEnable NVIDIA Virtual Compute Server",
            "title": "vGPU Feature Type",
            "enum": [
                "UNLICENSED",
                "VGPU",
                "VWS",
                "VCS"
            ],
            "default": "UNLICENSED",
            "x-displayname": "Feature Type",
            "x-ves-proto-enum": "ves.io.schema.fleet.VGPUFeatureType"
        },
        "fleetVMConfiguration": {
            "type": "object",
            "description": "VMs support configuration",
            "title": "VM Configuration",
            "x-displayname": "VM Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.VMConfiguration"
        },
        "ioschemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by F5XC Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.\n\nExample: - \"value\"-",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider",
                    "x-ves-example": "value"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"value\"-",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 131072\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "URL",
                    "maxLength": 131072,
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "131072",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed.\n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]\n",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]"
                    }
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Validation\\\",\\\"Operational\\\"]\n",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Validation\\\",\\\"Operational\\\"]"
                    }
                }
            }
        },
        "schemaErrorCode": {
            "type": "string",
            "description": "Union of all possible error-codes from system\n\n - EOK: No error\n - EPERMS: Permissions error\n - EBADINPUT: Input is not correct\n - ENOTFOUND: Not found\n - EEXISTS: Already exists\n - EUNKNOWN: Unknown/catchall error\n - ESERIALIZE: Error in serializing/de-serializing\n - EINTERNAL: Server error\n - EPARTIAL: Partial error",
            "title": "ErrorCode",
            "enum": [
                "EOK",
                "EPERMS",
                "EBADINPUT",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN",
                "ESERIALIZE",
                "EINTERNAL",
                "EPARTIAL"
            ],
            "default": "EOK",
            "x-displayname": "Error Code",
            "x-ves-proto-enum": "ves.io.schema.ErrorCode"
        },
        "schemaErrorType": {
            "type": "object",
            "description": "Information about a error in API operation",
            "title": "ErrorType",
            "x-displayname": "Error Type",
            "x-ves-proto-message": "ves.io.schema.ErrorType",
            "properties": {
                "code": {
                    "description": " A simple general code by category",
                    "title": "code",
                    "$ref": "#/definitions/schemaErrorCode",
                    "x-displayname": "Code"
                },
                "error_obj": {
                    "description": " A structured error object for machine parsing",
                    "title": "error_obj",
                    "$ref": "#/definitions/protobufAny",
                    "x-displayname": "Error Object"
                },
                "message": {
                    "type": "string",
                    "description": " A human readable string of the error\n\nExample: - \"value\"-",
                    "title": "message",
                    "x-displayname": "Message",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaIpAddressType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 address",
            "title": "IP Address",
            "x-displayname": "IP Address",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpAddressType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\n IPv4 Address",
                    "title": "IPv4 Address",
                    "$ref": "#/definitions/schemaIpv4AddressType",
                    "x-displayname": "IPv4 Address"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\n IPv6 Address",
                    "title": "IPv6 ADDRESS",
                    "$ref": "#/definitions/schemaIpv6AddressType",
                    "x-displayname": "IPv6 Address"
                }
            }
        },
        "schemaIpSubnetType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 subnet addresses",
            "title": "IP Subnet",
            "x-displayname": "IP Subnet",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpSubnetType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\n IPv4 Subnet Address",
                    "title": "IPv4 Subnet",
                    "$ref": "#/definitions/schemaIpv4SubnetType",
                    "x-displayname": "IPv4 Subnet"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\n IPv6 Subnet Address",
                    "title": "IPv6 Subnet",
                    "$ref": "#/definitions/schemaIpv6SubnetType",
                    "x-displayname": "IPv6 Subnet"
                }
            }
        },
        "schemaIpv4AddressType": {
            "type": "object",
            "description": "IPv4 Address in dot-decimal notation",
            "title": "IPv4 Address",
            "x-displayname": "IPv4 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv4AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv4 Address in string form with dot-decimal notation\n\nExample: - \"192.168.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "IPv4 Address",
                    "x-displayname": "IPv4 Address",
                    "x-ves-example": "192.168.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                }
            }
        },
        "schemaIpv4SubnetType": {
            "type": "object",
            "description": "IPv4 subnets specified as prefix and prefix-length. Prefix length must be \u003c= 32",
            "title": "IPv4 Subnet",
            "x-displayname": "IPv4 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv4SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix-length of the IPv4 subnet. Must be \u003c= 32\n\nExample: - \"24\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 32\n",
                    "title": "Prefix Length",
                    "format": "int64",
                    "x-displayname": "Prefix Length",
                    "x-ves-example": "24",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "32"
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv4 subnet in string form with dot-decimal notation\n\nExample: - \"192.168.1.0\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "192.168.1.0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                }
            }
        },
        "schemaIpv6AddressType": {
            "type": "object",
            "description": "IPv6 Address specified as hexadecimal numbers separated by ':'",
            "title": "IPv6 Address",
            "x-displayname": "IPv6 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv6AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv6 Address in form of string. IPv6 address must be specified as hexadecimal numbers separated by ':'\n The address can be compacted by suppressing zeros\n e.g. '2001:db8:0:0:0:0:2:1' becomes '2001:db8::2:1' or '2001:db8:0:0:0:2:0:0' becomes '2001:db8::2::'\n\nExample: - \"2001:db8:0:0:0:0:2:1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "IPv6 Address",
                    "x-displayname": "IPv6 Address",
                    "x-ves-example": "2001:db8:0:0:0:0:2:1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "schemaIpv6SubnetType": {
            "type": "object",
            "description": "IPv6 subnets specified as prefix and prefix-length. prefix-legnth must be \u003c= 128",
            "title": "IPv6 Subnet",
            "x-displayname": "IPv6 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv6SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix length of the IPv6 subnet. Must be \u003c= 128\n\nExample: - \"38\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 128\n",
                    "title": "Prefix length",
                    "format": "int64",
                    "x-displayname": "Prefix Length",
                    "x-ves-example": "38",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "128"
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv6 subnet given in form of string.\n IPv6 address must be specified as hexadecimal numbers separated by ':'\n e.g. \"2001:db8:0:0:0:2:0:0\"\n The address can be compacted by suppressing zeros\n e.g. \"2001:db8::2::\"\n\nExample: - \"2001:db8:0:0:0:0:2:0\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "2001:db8:0:0:0:0:2:0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "schemaNextHopType": {
            "type": "object",
            "description": "Identifies the next-hop for a route",
            "title": "Nexthop",
            "x-displayname": "Nexthop",
            "x-ves-proto-message": "ves.io.schema.NextHopType",
            "properties": {
                "interface": {
                    "type": "array",
                    "description": " Nexthop is network interface when type is \"Network-Interface\"\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "title": "Network Interface",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Interface",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "nexthop_address": {
                    "description": " Nexthop address when type is \"Use-Configured\"",
                    "title": "Nexthop Address",
                    "$ref": "#/definitions/schemaIpAddressType",
                    "x-displayname": "Address"
                },
                "type": {
                    "description": " Identifies the type of next-hop",
                    "title": "Type",
                    "$ref": "#/definitions/schemaNextHopTypes",
                    "x-displayname": "Type"
                }
            }
        },
        "schemaNextHopTypes": {
            "type": "string",
            "description": "Defines types of next-hop\n\nUse default gateway on the local interface as gateway for route.\nAssumes there is only one local interface on the virtual network.\nUse the specified address as nexthop\nUse the network interface as nexthop\nDiscard nexthop, used when attr type is Advertise\nUsed in VoltADN private virtual network.",
            "title": "Nexthop Types",
            "enum": [
                "NEXT_HOP_DEFAULT_GATEWAY",
                "NEXT_HOP_USE_CONFIGURED",
                "NEXT_HOP_NETWORK_INTERFACE"
            ],
            "default": "NEXT_HOP_DEFAULT_GATEWAY",
            "x-displayname": "Nexthop Types",
            "x-ves-proto-enum": "ves.io.schema.NextHopTypes"
        },
        "schemaObjectCreateMetaType": {
            "type": "object",
            "description": "ObjectCreateMetaType is metadata that can be specified in Create request of an object.",
            "title": "ObjectCreateMetaType",
            "x-displayname": "Create Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectCreateMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectGetMetaType": {
            "type": "object",
            "description": "ObjectGetMetaType is metadata that can be specified in Get/Create response of an object.",
            "title": "ObjectGetMetaType",
            "x-displayname": "Get Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectGetMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectReplaceMetaType": {
            "type": "object",
            "description": "ObjectReplaceMetaType is metadata that can be specified in Replace request of an object.",
            "title": "ObjectReplaceMetaType",
            "x-displayname": "Replace Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectReplaceMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaRouteAttrType": {
            "type": "string",
            "description": "Defines attributes associated with route\n\nIgnore attribute\nAdvertise route in all supported routing protocols\nAdd route into host OS - route in host OS will point to interface corresponding to the virtual network.\nHost OS must have an interface in the virtual network.\nUse the route for forwarding decision - adds route into data plane\nmodules with configured next-hop\nMerge Route if they already exist",
            "title": "Route Attribute",
            "enum": [
                "ROUTE_ATTR_NO_OP",
                "ROUTE_ATTR_ADVERTISE",
                "ROUTE_ATTR_INSTALL_HOST",
                "ROUTE_ATTR_INSTALL_FORWARDING",
                "ROUTE_ATTR_MERGE_ONLY"
            ],
            "default": "ROUTE_ATTR_NO_OP",
            "x-displayname": "Route Attribute",
            "x-ves-proto-enum": "ves.io.schema.RouteAttrType"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "x-displayName: \"Secret Encoding\"\nSecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\n - EncodingNone: x-displayName: \"None\"\nNo Encoding\n - EncodingBase64: Base64\n\nx-displayName: \"Base64\"\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info]\n Blindfold Secret is used for the secrets managed by F5XC Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info]\n Clear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType",
                    "x-displayname": "Clear Secret"
                }
            }
        },
        "schemaStaticRouteType": {
            "type": "object",
            "description": "Defines a static route, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static Route",
            "x-displayname": "Static Route",
            "x-ves-displayorder": "2,10,11,1",
            "x-ves-proto-message": "ves.io.schema.StaticRouteType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of route attributes associated with the static route\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n",
                    "title": "Attributes",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4"
                    }
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Static Route, these labels can be used in network policy\n\nExample: - \"value\"-",
                    "title": "Static Route labels",
                    "x-displayname": "Static Route Labels",
                    "x-ves-example": "value"
                },
                "nexthop": {
                    "description": " Nexthop for the route",
                    "title": "Nexthop",
                    "$ref": "#/definitions/schemaNextHopType",
                    "x-displayname": "Nexthop"
                },
                "subnets": {
                    "type": "array",
                    "description": " List of route prefixes\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 256\n",
                    "title": "Subnets",
                    "maxItems": 256,
                    "items": {
                        "$ref": "#/definitions/schemaIpSubnetType"
                    },
                    "x-displayname": "Subnets",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "256"
                    }
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status\n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Origin of this status exchanged by VTRP.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do Not Publish\n\nDo not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Publish\n\nPropagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Status Publish Type",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectGetMetaType": {
            "type": "object",
            "description": "SystemObjectGetMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectGetMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectGetMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "prism"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "admin@acmecorp.com"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n\n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n\n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the operator or software. Values here can be interpreted\n by software(backend or frontend) to enable certain behavior e.g. things marked as soft-deleted(restorable).\n\nExample: - \"'ves.io/soft-deleted''true'\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "'ves.io/soft-deleted': 'true'"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Vault Secret\"\nVaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "x-displayName: \"Key\"\nx-example: \"key_pem\"\nKey of the individual secret. Vault Secrets are stored as key-value pair.\nIf user is only interested in one value from the map, this field should be set to the corresponding key.\nIf not provided entire secret will be returned.",
                    "title": "Key"
                },
                "location": {
                    "type": "string",
                    "description": "x-displayName: \"Location\"\nx-required\nx-example: \"v1/data/vhost_key\"\nPath to secret in Vault.",
                    "title": "Location"
                },
                "provider": {
                    "type": "string",
                    "description": "x-displayName: \"Provider\"\nx-required\nx-example: \"vault-vh-provider\"\nName of the Secret Management Access object that contains information about the backend Vault.",
                    "title": "Provider"
                },
                "secret_encoding": {
                    "description": "x-displayName: \"Secret Encoding\"\nThis field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType"
                },
                "version": {
                    "type": "integer",
                    "description": "x-displayName: \"Version\"\nx-example: \"1\"\nVersion of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\nIf not provided latest version will be returned.",
                    "title": "Version",
                    "format": "int64"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaVirtualNetworkType": {
            "type": "string",
            "description": "Different types of virtual networks understood by the system\n\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL provides connectivity to public (outside) network.\nThis is an insecure network and is connected to public internet via NAT Gateways/firwalls\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created automatically and present on all sites\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE is a private network inside site.\nIt is a secure network and is not connected to public network.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created during provisioning of site\nUser defined per-site virtual network. Scope of this virtual network is limited to the site.\nThis is not yet supported\nVirtual-network of type VIRTUAL_NETWORK_PUBLIC directly conects to the public internet.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on RE sites only\nIt is an internally created by the system. They must not be created by user\nVirtual Neworks with global scope across different sites in F5XC domain.\nAn example global virtual-network called \"AIN Network\" is created for every tenant.\nfor volterra fabric\n\nConstraints:\nIt is currently only supported as internally created by the system.\nvK8s service network for a given tenant. Used to advertise a virtual host only to vk8s pods for that tenant\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVER internal network for the site. It can only be used for virtual hosts with SMA_PROXY type proxy\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE represents both\nVIRTUAL_NETWORK_SITE_LOCAL and VIRTUAL_NETWORK_SITE_LOCAL_INSIDE\n\nConstraints:\nThis network type is only meaningful in an advertise policy\nWhen virtual-network of type VIRTUAL_NETWORK_IP_AUTO is selected for\nan endpoint, VER will try to determine the network based on the provided\nIP address\n\nConstraints:\nThis network type is only meaningful in an endpoint\n\nVoltADN Private Network is used on volterra RE(s) to connect to customer private networks\nThis network is created by opening a support ticket\n\nThis network is per site srv6 network\nVER IP Fabric network for the site.\nThis Virtual network type is used for exposing virtual host on IP Fabric network on the VER site or\nfor endpoint in IP Fabric network\nConstraints:\nIt is an internally created by the system. Must not be created by user\nNetwork internally created for a segment\nConstraints:\nIt is an internally created by the system. Must not be created by user",
            "title": "VirtualNetworkType",
            "enum": [
                "VIRTUAL_NETWORK_SITE_LOCAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE",
                "VIRTUAL_NETWORK_PER_SITE",
                "VIRTUAL_NETWORK_PUBLIC",
                "VIRTUAL_NETWORK_GLOBAL",
                "VIRTUAL_NETWORK_SITE_SERVICE",
                "VIRTUAL_NETWORK_VER_INTERNAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE",
                "VIRTUAL_NETWORK_IP_AUTO",
                "VIRTUAL_NETWORK_VOLTADN_PRIVATE_NETWORK",
                "VIRTUAL_NETWORK_SRV6_NETWORK",
                "VIRTUAL_NETWORK_IP_FABRIC",
                "VIRTUAL_NETWORK_SEGMENT"
            ],
            "default": "VIRTUAL_NETWORK_SITE_LOCAL",
            "x-displayname": "Virtual Network Type",
            "x-ves-proto-enum": "ves.io.schema.VirtualNetworkType"
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Wingman Secret\"\nWingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "x-displayName: \"Name\"\nx-required\nx-example: \"ChargeBack-API-Key\"\nName of the secret.",
                    "title": "Name"
                }
            }
        },
        "schemafleetCreateSpecType": {
            "type": "object",
            "description": "Create fleet will create a fleet object in 'system' namespace of the user",
            "title": "Create Fleet",
            "x-displayname": "Create Fleet",
            "x-ves-oneof-field-bond_choice": "[\"bond_device_list\",\"no_bond_devices\"]",
            "x-ves-oneof-field-dc_cluster_group_choice": "[\"dc_cluster_group\",\"dc_cluster_group_inside\",\"no_dc_cluster_group\"]",
            "x-ves-oneof-field-gpu_choice": "[\"disable_gpu\",\"enable_gpu\",\"enable_vgpu\"]",
            "x-ves-oneof-field-interface_choice": "[\"default_config\",\"device_list\",\"interface_list\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-sriov_interface_choice": "[\"default_sriov_interface\",\"sriov_interfaces\"]",
            "x-ves-oneof-field-storage_class_choice": "[\"default_storage_class\",\"storage_class_list\"]",
            "x-ves-oneof-field-storage_device_choice": "[\"no_storage_device\",\"storage_device_list\"]",
            "x-ves-oneof-field-storage_interface_choice": "[\"no_storage_interfaces\",\"storage_interface_list\"]",
            "x-ves-oneof-field-storage_static_routes_choice": "[\"no_storage_static_routes\",\"storage_static_routes\"]",
            "x-ves-oneof-field-usb_policy_choice": "[\"allow_all_usb\",\"deny_all_usb\",\"usb_policy\"]",
            "x-ves-oneof-field-vm_choice": "[\"disable_vm\",\"enable_vm\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.CreateSpecType",
            "properties": {
                "allow_all_usb": {
                    "description": "Exclusive with [deny_all_usb usb_policy]\n All USB devices are allowed",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow All USB Devices"
                },
                "blocked_services": {
                    "type": "array",
                    "description": " Disable node local services on this site.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 6\n",
                    "maxItems": 6,
                    "items": {
                        "$ref": "#/definitions/fleetBlockedServices"
                    },
                    "x-displayname": "Disable Node Local Services",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "6"
                    }
                },
                "bond_device_list": {
                    "description": "Exclusive with [no_bond_devices]\n Configure Bond Devices for this fleet",
                    "$ref": "#/definitions/fleetFleetBondDevicesListType",
                    "x-displayname": "Configure Bond Interfaces"
                },
                "dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group_inside no_dc_cluster_group]\n This fleet is member of dc cluster group via site local network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Site Local"
                },
                "dc_cluster_group_inside": {
                    "description": "Exclusive with [dc_cluster_group no_dc_cluster_group]\n This fleet is member of dc cluster group via site local inside network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Inside Network"
                },
                "default_config": {
                    "description": "Exclusive with [device_list interface_list]\nUse default configuration for interfaces belonging to this fleet",
                    "title": "No Interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Interface Config"
                },
                "default_sriov_interface": {
                    "description": "Exclusive with [sriov_interfaces]\n Disable Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable SR-IOV interfaces"
                },
                "default_storage_class": {
                    "description": "Exclusive with [storage_class_list]\n Use only default storage class in kubernetes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Storage Class"
                },
                "deny_all_usb": {
                    "description": "Exclusive with [allow_all_usb usb_policy]\n All USB devices are denied",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Deny All USB Devices"
                },
                "device_list": {
                    "description": "Exclusive with [default_config interface_list]\nAdd device for all interfaces belonging to this fleet",
                    "title": "Legacy Device Config",
                    "$ref": "#/definitions/fleetFleetDeviceListType",
                    "x-displayname": "Legacy Device List"
                },
                "disable_gpu": {
                    "description": "Exclusive with [enable_gpu enable_vgpu]\n GPU is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Disabled"
                },
                "disable_vm": {
                    "description": "Exclusive with [enable_vm]\n VMs support is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "VMs support Disabled"
                },
                "enable_default_fleet_config_download": {
                    "type": "boolean",
                    "description": " Enable default fleet config, It must be set for storage config and gpu config",
                    "format": "boolean",
                    "x-displayname": "Enable Default Fleet Config Download"
                },
                "enable_gpu": {
                    "description": "Exclusive with [disable_gpu enable_vgpu]\n GPU is enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Enabled"
                },
                "enable_vgpu": {
                    "description": "Exclusive with [disable_gpu enable_gpu]\n Enable NVIDIA vGPU hosted on VMware",
                    "$ref": "#/definitions/fleetVGPUConfiguration",
                    "x-displayname": "vGPU Enabled"
                },
                "enable_vm": {
                    "description": "Exclusive with [disable_vm]\n VMs support is enabled for this fleet",
                    "$ref": "#/definitions/fleetVMConfiguration",
                    "x-displayname": "VMs support Enabled"
                },
                "fleet_label": {
                    "type": "string",
                    "description": " fleet_label value is used to create known_label \"ves.io/fleet=\u003cfleet_label\u003e\"\n The known_label is created in the \"shared\" namespace for the tenant.\n\n A virtual_site object with name \u003cfleet_label\u003e is also created in \"shared\" namespace for tenant.\n The virtual_site object will select all sites configured with the known_label above\n fleet_label with \"sfo\" will create a known_label \"ves.io/fleet=sfo\" in tenant for the fleet\n\nExample: - \"sfo\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.k8s_label_value: true\n",
                    "x-displayname": "Fleet Label Value",
                    "x-ves-example": "sfo",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.k8s_label_value": "true"
                    }
                },
                "inside_virtual_network": {
                    "type": "array",
                    "description": " Default inside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Site Local Inside Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "interface_list": {
                    "description": "Exclusive with [default_config device_list]\n Add all interfaces belonging to this fleet",
                    "title": "List of Interfaces",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Interfaces"
                },
                "kubernetes_upgrade_drain": {
                    "description": " Enable Kubernetes Drain during OS or SW upgrade",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrain",
                    "x-displayname": "Kubernetes Upgrade Drain"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "network_connectors": {
                    "type": "array",
                    "description": " Network Connector defines connection between two virtual networks in a given site.\n Fleet defines one or more such network connectors.\n The network connectors configuration is applied on all sites that are member of the fleet.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Connectors",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8"
                    }
                },
                "network_firewall": {
                    "type": "array",
                    "description": " Network Firewall defines firewall to be applied for the virtual networks in the fleet.\n The network firewall configuration is applied on all sites that are member of the fleet.\n\n Constraints\n The Network Firewall is applied on Virtual Networks of type site local network and site local inside network\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Firewall",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "no_bond_devices": {
                    "description": "Exclusive with [bond_device_list]\n No Bond Devices configured for this Fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Bond Devices"
                },
                "no_dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group dc_cluster_group_inside]\n This fleet is not a member of a DC cluster group",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Not a Member"
                },
                "no_storage_device": {
                    "description": "Exclusive with [storage_device_list]\n This fleet does not have any storage devices",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Devices"
                },
                "no_storage_interfaces": {
                    "description": "Exclusive with [storage_interface_list]\n This fleet does not have any storage interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Interfaces"
                },
                "no_storage_static_routes": {
                    "description": "Exclusive with [storage_static_routes]\n This fleet does not have any storage static routes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Static Routes"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version that is applied to all sites that are member of the fleet.\n Current Operating System version can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "outside_virtual_network": {
                    "type": "array",
                    "description": " Default outside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Outside (Site Local) Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "sriov_interfaces": {
                    "description": "Exclusive with [default_sriov_interface]\n Use custom Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/fleetSriovInterfacesListType",
                    "x-displayname": "Custom SR-IOV interfaces Configuration"
                },
                "storage_class_list": {
                    "description": "Exclusive with [default_storage_class]\n Add additional custom storage classes in kubernetes for this fleet",
                    "$ref": "#/definitions/fleetFleetStorageClassListType",
                    "x-displayname": "Add Custom Storage Class"
                },
                "storage_device_list": {
                    "description": "Exclusive with [no_storage_device]\n Add all storage devices belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetStorageDeviceListType",
                    "x-displayname": "List of Storage Devices"
                },
                "storage_interface_list": {
                    "description": "Exclusive with [no_storage_interfaces]\n Add all storage interfaces belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Storage Interface"
                },
                "storage_static_routes": {
                    "description": "Exclusive with [no_storage_static_routes]\n Add all storage storage static routes",
                    "$ref": "#/definitions/fleetFleetStorageStaticRoutesListType",
                    "x-displayname": "List of Storage Static Routes"
                },
                "usb_policy": {
                    "description": "Exclusive with [allow_all_usb deny_all_usb]\n Allow only specific USB devices",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "USB Device Policy"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " F5XC software version is human readable string matching released set of version components.\n The given software version is applied to all sites that are member of the fleet.\n Current software installed can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Software Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                }
            }
        },
        "schemafleetGetSpecType": {
            "type": "object",
            "description": "Get fleet will get fleet object from system namespace",
            "title": "Get fleet",
            "x-displayname": "Get Fleet",
            "x-ves-oneof-field-bond_choice": "[\"bond_device_list\",\"no_bond_devices\"]",
            "x-ves-oneof-field-dc_cluster_group_choice": "[\"dc_cluster_group\",\"dc_cluster_group_inside\",\"no_dc_cluster_group\"]",
            "x-ves-oneof-field-gpu_choice": "[\"disable_gpu\",\"enable_gpu\",\"enable_vgpu\"]",
            "x-ves-oneof-field-interface_choice": "[\"default_config\",\"device_list\",\"interface_list\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-sriov_interface_choice": "[\"default_sriov_interface\",\"sriov_interfaces\"]",
            "x-ves-oneof-field-storage_class_choice": "[\"default_storage_class\",\"storage_class_list\"]",
            "x-ves-oneof-field-storage_device_choice": "[\"no_storage_device\",\"storage_device_list\"]",
            "x-ves-oneof-field-storage_interface_choice": "[\"no_storage_interfaces\",\"storage_interface_list\"]",
            "x-ves-oneof-field-storage_static_routes_choice": "[\"no_storage_static_routes\",\"storage_static_routes\"]",
            "x-ves-oneof-field-usb_policy_choice": "[\"allow_all_usb\",\"deny_all_usb\",\"usb_policy\"]",
            "x-ves-oneof-field-vm_choice": "[\"disable_vm\",\"enable_vm\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.GetSpecType",
            "properties": {
                "allow_all_usb": {
                    "description": "Exclusive with [deny_all_usb usb_policy]\n All USB devices are allowed",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow All USB Devices"
                },
                "blocked_services": {
                    "type": "array",
                    "description": " Disable node local services on this site.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 6\n",
                    "maxItems": 6,
                    "items": {
                        "$ref": "#/definitions/fleetBlockedServices"
                    },
                    "x-displayname": "Disable Node Local Services",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "6"
                    }
                },
                "bond_device_list": {
                    "description": "Exclusive with [no_bond_devices]\n Configure Bond Devices for this fleet",
                    "$ref": "#/definitions/fleetFleetBondDevicesListType",
                    "x-displayname": "Configure Bond Interfaces"
                },
                "dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group_inside no_dc_cluster_group]\n This fleet is member of dc cluster group via site local network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Site Local"
                },
                "dc_cluster_group_inside": {
                    "description": "Exclusive with [dc_cluster_group no_dc_cluster_group]\n This fleet is member of dc cluster group via site local inside network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Inside Network"
                },
                "default_config": {
                    "description": "Exclusive with [device_list interface_list]\nUse default configuration for interfaces belonging to this fleet",
                    "title": "No Interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Interface Config"
                },
                "default_sriov_interface": {
                    "description": "Exclusive with [sriov_interfaces]\n Disable Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable SR-IOV interfaces"
                },
                "default_storage_class": {
                    "description": "Exclusive with [storage_class_list]\n Use only default storage class in kubernetes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Storage Class"
                },
                "deny_all_usb": {
                    "description": "Exclusive with [allow_all_usb usb_policy]\n All USB devices are denied",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Deny All USB Devices"
                },
                "device_list": {
                    "description": "Exclusive with [default_config interface_list]\nAdd device for all interfaces belonging to this fleet",
                    "title": "Legacy Device Config",
                    "$ref": "#/definitions/fleetFleetDeviceListType",
                    "x-displayname": "Legacy Device List"
                },
                "disable_gpu": {
                    "description": "Exclusive with [enable_gpu enable_vgpu]\n GPU is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Disabled"
                },
                "disable_vm": {
                    "description": "Exclusive with [enable_vm]\n VMs support is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "VMs support Disabled"
                },
                "enable_default_fleet_config_download": {
                    "type": "boolean",
                    "description": " Enable default fleet config, It must be set for storage config and gpu config",
                    "format": "boolean",
                    "x-displayname": "Enable Default Fleet Config Download"
                },
                "enable_gpu": {
                    "description": "Exclusive with [disable_gpu enable_vgpu]\n GPU is enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Enabled"
                },
                "enable_vgpu": {
                    "description": "Exclusive with [disable_gpu enable_gpu]\n Enable NVIDIA vGPU hosted on VMware",
                    "$ref": "#/definitions/fleetVGPUConfiguration",
                    "x-displayname": "vGPU Enabled"
                },
                "enable_vm": {
                    "description": "Exclusive with [disable_vm]\n VMs support is enabled for this fleet",
                    "$ref": "#/definitions/fleetVMConfiguration",
                    "x-displayname": "VMs support Enabled"
                },
                "fleet_label": {
                    "type": "string",
                    "description": " fleet_label value is used to create known_label \"ves.io/fleet=\u003cfleet_label\u003e\"\n The known_label is created in the \"shared\" namespace for the tenant.\n\n A virtual_site object with name \u003cfleet_label\u003e is also created in \"shared\" namespace for tenant.\n The virtual_site object will select all sites configured with the known_label above\n fleet_label with \"sfo\" will create a known_label \"ves.io/fleet=sfo\" in tenant for the fleet\n\nExample: - \"sfo\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.k8s_label_value: true\n",
                    "x-displayname": "Fleet Label Value",
                    "x-ves-example": "sfo",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.k8s_label_value": "true"
                    }
                },
                "inside_virtual_network": {
                    "type": "array",
                    "description": " Default inside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Site Local Inside Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "interface_list": {
                    "description": "Exclusive with [default_config device_list]\n Add all interfaces belonging to this fleet",
                    "title": "List of Interfaces",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Interface"
                },
                "kubernetes_upgrade_drain": {
                    "description": " Enable Kubernetes Drain during OS or SW upgrade",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrain",
                    "x-displayname": "Kubernetes Upgrade Drain"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "network_connectors": {
                    "type": "array",
                    "description": " Network Connector defines connection between two virtual networks in a given site.\n Fleet defines one or more such network connectors.\n The network connectors configuration is applied on all sites that are member of the fleet.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Connectors",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8"
                    }
                },
                "network_firewall": {
                    "type": "array",
                    "description": " Network Firewall defines firewall to be applied for the virtual networks in the fleet.\n The network firewall configuration is applied on all sites that are member of the fleet.\n\n Constraints\n The Network Firewall is applied on Virtual Networks of type site local network and site local inside network\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Firewall",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "no_bond_devices": {
                    "description": "Exclusive with [bond_device_list]\n No Bond Devices configured for this Fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Bond Devices"
                },
                "no_dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group dc_cluster_group_inside]\n This fleet is not a member of a DC cluster group",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Not a Member"
                },
                "no_storage_device": {
                    "description": "Exclusive with [storage_device_list]\n This fleet does not have any storage devices",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Devices"
                },
                "no_storage_interfaces": {
                    "description": "Exclusive with [storage_interface_list]\n This fleet does not have any storage interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Interfaces"
                },
                "no_storage_static_routes": {
                    "description": "Exclusive with [storage_static_routes]\n This fleet does not have any storage static routes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Static Routes"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version that is applied to all sites that are member of the fleet.\n Current Operating System version can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "outside_virtual_network": {
                    "type": "array",
                    "description": " Default outside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Outside (Site Local) Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "sriov_interfaces": {
                    "description": "Exclusive with [default_sriov_interface]\n Use custom Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/fleetSriovInterfacesListType",
                    "x-displayname": "Custom SR-IOV interfaces Configuration"
                },
                "storage_class_list": {
                    "description": "Exclusive with [default_storage_class]\n Add additional custom storage classes in kubernetes for this fleet",
                    "$ref": "#/definitions/fleetFleetStorageClassListType",
                    "x-displayname": "Add Custom Storage Class"
                },
                "storage_device_list": {
                    "description": "Exclusive with [no_storage_device]\n Add all storage devices belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetStorageDeviceListType",
                    "x-displayname": "List of Storage Devices"
                },
                "storage_interface_list": {
                    "description": "Exclusive with [no_storage_interfaces]\n Add all storage interfaces belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Storage Interface"
                },
                "storage_static_routes": {
                    "description": "Exclusive with [no_storage_static_routes]\n Add all storage storage static routes",
                    "$ref": "#/definitions/fleetFleetStorageStaticRoutesListType",
                    "x-displayname": "List of Storage Static Routes"
                },
                "usb_policy": {
                    "description": "Exclusive with [allow_all_usb deny_all_usb]\n Allow only specific USB devices",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "USB Device Policy"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " F5XC software version is human readable string matching released set of version components.\n The given software version is applied to all sites that are member of the fleet.\n Current software installed can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Software Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                }
            }
        },
        "schemafleetReplaceSpecType": {
            "type": "object",
            "description": "Replace fleet will replace the contents of given fleet object",
            "title": "Replace fleet",
            "x-displayname": "Replace Fleet",
            "x-ves-oneof-field-bond_choice": "[\"bond_device_list\",\"no_bond_devices\"]",
            "x-ves-oneof-field-dc_cluster_group_choice": "[\"dc_cluster_group\",\"dc_cluster_group_inside\",\"no_dc_cluster_group\"]",
            "x-ves-oneof-field-gpu_choice": "[\"disable_gpu\",\"enable_gpu\",\"enable_vgpu\"]",
            "x-ves-oneof-field-interface_choice": "[\"default_config\",\"device_list\",\"interface_list\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-sriov_interface_choice": "[\"default_sriov_interface\",\"sriov_interfaces\"]",
            "x-ves-oneof-field-storage_class_choice": "[\"default_storage_class\",\"storage_class_list\"]",
            "x-ves-oneof-field-storage_device_choice": "[\"no_storage_device\",\"storage_device_list\"]",
            "x-ves-oneof-field-storage_interface_choice": "[\"no_storage_interfaces\",\"storage_interface_list\"]",
            "x-ves-oneof-field-storage_static_routes_choice": "[\"no_storage_static_routes\",\"storage_static_routes\"]",
            "x-ves-oneof-field-usb_policy_choice": "[\"allow_all_usb\",\"deny_all_usb\",\"usb_policy\"]",
            "x-ves-oneof-field-vm_choice": "[\"disable_vm\",\"enable_vm\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.ReplaceSpecType",
            "properties": {
                "allow_all_usb": {
                    "description": "Exclusive with [deny_all_usb usb_policy]\n All USB devices are allowed",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow All USB Devices"
                },
                "blocked_services": {
                    "type": "array",
                    "description": " Disable node local services on this site.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 6\n",
                    "maxItems": 6,
                    "items": {
                        "$ref": "#/definitions/fleetBlockedServices"
                    },
                    "x-displayname": "Disable Node Local Services",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "6"
                    }
                },
                "bond_device_list": {
                    "description": "Exclusive with [no_bond_devices]\n Configure Bond Devices for this fleet",
                    "$ref": "#/definitions/fleetFleetBondDevicesListType",
                    "x-displayname": "Configure Bond Interfaces"
                },
                "dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group_inside no_dc_cluster_group]\n This fleet is member of dc cluster group via site local network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Site Local"
                },
                "dc_cluster_group_inside": {
                    "description": "Exclusive with [dc_cluster_group no_dc_cluster_group]\n This fleet is member of dc cluster group via site local inside network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC cluster Group, Inside Network"
                },
                "default_config": {
                    "description": "Exclusive with [device_list interface_list]\nUse default configuration for interfaces belonging to this fleet",
                    "title": "No Interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Interface Config"
                },
                "default_sriov_interface": {
                    "description": "Exclusive with [sriov_interfaces]\n Disable Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable SR-IOV interfaces"
                },
                "default_storage_class": {
                    "description": "Exclusive with [storage_class_list]\n Use only default storage class in kubernetes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default Storage Class"
                },
                "deny_all_usb": {
                    "description": "Exclusive with [allow_all_usb usb_policy]\n All USB devices are denied",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Deny All USB Devices"
                },
                "device_list": {
                    "description": "Exclusive with [default_config interface_list]\nAdd device for all interfaces belonging to this fleet",
                    "title": "Legacy Device Config",
                    "$ref": "#/definitions/fleetFleetDeviceListType",
                    "x-displayname": "Legacy Device List"
                },
                "disable_gpu": {
                    "description": "Exclusive with [enable_gpu enable_vgpu]\n GPU is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Disabled"
                },
                "disable_vm": {
                    "description": "Exclusive with [enable_vm]\n VMs support is not enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "VMs support Disabled"
                },
                "enable_default_fleet_config_download": {
                    "type": "boolean",
                    "description": " Enable default fleet config, It must be set for storage config and gpu config",
                    "format": "boolean",
                    "x-displayname": "Enable Default Fleet Config Download"
                },
                "enable_gpu": {
                    "description": "Exclusive with [disable_gpu enable_vgpu]\n GPU is enabled for this fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "GPU Enabled"
                },
                "enable_vgpu": {
                    "description": "Exclusive with [disable_gpu enable_gpu]\n Enable NVIDIA vGPU hosted on VMware",
                    "$ref": "#/definitions/fleetVGPUConfiguration",
                    "x-displayname": "vGPU Enabled"
                },
                "enable_vm": {
                    "description": "Exclusive with [disable_vm]\n VMs support is enabled for this fleet",
                    "$ref": "#/definitions/fleetVMConfiguration",
                    "x-displayname": "VMs support Enabled"
                },
                "inside_virtual_network": {
                    "type": "array",
                    "description": " Default inside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Site Local Inside Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "interface_list": {
                    "description": "Exclusive with [default_config device_list]\n Add all interfaces belonging to this fleet",
                    "title": "List of Interfaces",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Interface"
                },
                "kubernetes_upgrade_drain": {
                    "description": " Enable Kubernetes Drain during OS or SW upgrade",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrain",
                    "x-displayname": "Kubernetes Upgrade Drain"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "network_connectors": {
                    "type": "array",
                    "description": " Network Connector defines connection between two virtual networks in a given site.\n Fleet defines one or more such network connectors.\n The network connectors configuration is applied on all sites that are member of the fleet.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 8\n",
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Connectors",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "8"
                    }
                },
                "network_firewall": {
                    "type": "array",
                    "description": " Network Firewall defines firewall to be applied for the virtual networks in the fleet.\n The network firewall configuration is applied on all sites that are member of the fleet.\n\n Constraints\n The Network Firewall is applied on Virtual Networks of type site local network and site local inside network\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Firewall",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "no_bond_devices": {
                    "description": "Exclusive with [bond_device_list]\n No Bond Devices configured for this Fleet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Bond Devices"
                },
                "no_dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group dc_cluster_group_inside]\n This fleet is not a member of a DC cluster group",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Not a Member"
                },
                "no_storage_device": {
                    "description": "Exclusive with [storage_device_list]\n This fleet does not have any storage devices",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Devices"
                },
                "no_storage_interfaces": {
                    "description": "Exclusive with [storage_interface_list]\n This fleet does not have any storage interfaces",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Interfaces"
                },
                "no_storage_static_routes": {
                    "description": "Exclusive with [storage_static_routes]\n This fleet does not have any storage static routes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Storage Static Routes"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version that is applied to all sites that are member of the fleet.\n Current Operating System version can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "outside_virtual_network": {
                    "type": "array",
                    "description": " Default outside (site local) virtual network for the fleet\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Outside (Site Local) Virtual Network",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "sriov_interfaces": {
                    "description": "Exclusive with [default_sriov_interface]\n Use custom Single Root I/O Virtualization interfaces",
                    "$ref": "#/definitions/fleetSriovInterfacesListType",
                    "x-displayname": "Custom SR-IOV interfaces Configuration"
                },
                "storage_class_list": {
                    "description": "Exclusive with [default_storage_class]\n Add additional custom storage classes in kubernetes for this fleet",
                    "$ref": "#/definitions/fleetFleetStorageClassListType",
                    "x-displayname": "Add Custom Storage Class"
                },
                "storage_device_list": {
                    "description": "Exclusive with [no_storage_device]\n Add all storage devices belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetStorageDeviceListType",
                    "x-displayname": "List of Storage Devices"
                },
                "storage_interface_list": {
                    "description": "Exclusive with [no_storage_interfaces]\n Add all storage interfaces belonging to this fleet",
                    "$ref": "#/definitions/fleetFleetInterfaceListType",
                    "x-displayname": "List of Storage Interface"
                },
                "storage_static_routes": {
                    "description": "Exclusive with [no_storage_static_routes]\n Add all storage storage static routes",
                    "$ref": "#/definitions/fleetFleetStorageStaticRoutesListType",
                    "x-displayname": "List of Storage Static Routes"
                },
                "usb_policy": {
                    "description": "Exclusive with [allow_all_usb deny_all_usb]\n Allow only specific USB devices",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "USB Device Policy"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " F5XC software version is human readable string matching released set of version components.\n The given software version is applied to all sites that are member of the fleet.\n Current software installed can be overridden via site config.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "maxLength": 256,
                    "x-displayname": "Software Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                }
            }
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 128\n  ves.io.schema.rules.string.min_bytes: 1\n",
                    "title": "name",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "128",
                        "ves.io.schema.rules.string.min_bytes": "1"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "namespace",
                    "maxLength": 64,
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "tenant",
                    "maxLength": 64,
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                }
            }
        },
        "viewsKubernetesUpgradeDrain": {
            "type": "object",
            "description": "Specify how worker nodes within a site will be upgraded.",
            "title": "Node by Node Upgrade",
            "x-displayname": "Node by Node Upgrade [BETA]",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-kubernetes_upgrade_drain_enable_choice": "[\"disable_upgrade_drain\",\"enable_upgrade_drain\"]",
            "x-ves-proto-message": "ves.io.schema.views.KubernetesUpgradeDrain",
            "properties": {
                "disable_upgrade_drain": {
                    "description": "Exclusive with [enable_upgrade_drain]\n",
                    "title": "Disable upgrade drain",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Node by Node Upgrade"
                },
                "enable_upgrade_drain": {
                    "description": "Exclusive with [disable_upgrade_drain]\n",
                    "title": "Enable Node by Node Upgrade",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrainConfig",
                    "x-displayname": "Enable Node by Node Upgrade"
                }
            }
        },
        "viewsKubernetesUpgradeDrainConfig": {
            "type": "object",
            "description": "Specify batch upgrade settings for worker nodes within a site.",
            "title": "Enable Node by Node Upgrade",
            "x-displayname": "Enable Node by Node Upgrade",
            "x-ves-oneof-field-drain_max_unavailable_choice": "[\"drain_max_unavailable_node_count\"]",
            "x-ves-oneof-field-vega_upgrade_mode_toggle_choice": "[\"disable_vega_upgrade_mode\",\"enable_vega_upgrade_mode\"]",
            "x-ves-proto-message": "ves.io.schema.views.KubernetesUpgradeDrainConfig",
            "properties": {
                "disable_vega_upgrade_mode": {
                    "description": "Exclusive with [enable_vega_upgrade_mode]\n Disable Vega Upgrade Mode",
                    "title": "Disable Vega Upgrade Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Vega Upgrade Mode"
                },
                "drain_max_unavailable_node_count": {
                    "type": "integer",
                    "description": "Exclusive with []\n\n\nExample: - \"1\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 5000\n",
                    "title": "Node Batch Size Count",
                    "format": "int64",
                    "x-displayname": "Node Batch Size Count",
                    "x-ves-example": "1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "5000"
                    }
                },
                "drain_node_timeout": {
                    "type": "integer",
                    "description": " Seconds to wait before initiating upgrade on the next set of nodes. Setting it to 0 will wait indefinitely for all services on nodes to be upgraded gracefully before proceeding to the next set of nodes.\n (Warning: It may block upgrade if services on a node cannot be gracefully upgraded. It is recommended to use the default value).\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 900\n",
                    "title": "Upgrade Wait Time",
                    "format": "int64",
                    "x-displayname": "Upgrade Wait Time",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "900"
                    }
                },
                "enable_vega_upgrade_mode": {
                    "description": "Exclusive with [disable_vega_upgrade_mode]\n Enable Vega Upgrade Mode\n When enabled, vega will inform RE to stop traffic to the specific node.",
                    "title": "Enable Vega Upgrade Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable Vega Upgrade Mode"
                }
            }
        },
        "viewsL3PerformanceEnhancementType": {
            "type": "object",
            "description": "x-required\nL3 enhanced performance mode options",
            "title": "L3 Mode Enhanced Performance options",
            "x-displayname": "L3 Mode Enhanced Performance",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"jumbo\",\"no_jumbo\"]",
            "x-ves-proto-message": "ves.io.schema.views.L3PerformanceEnhancementType",
            "properties": {
                "jumbo": {
                    "description": "Exclusive with [no_jumbo]\n",
                    "title": "L3 Mode Enhanced Performance with jumbo frame support(9000)",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enabled"
                },
                "no_jumbo": {
                    "description": "Exclusive with [jumbo]\n",
                    "title": "L3 Mode Enhanced Performance with no jumbo frame support",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disabled"
                }
            }
        },
        "viewsPerformanceEnhancementModeType": {
            "type": "object",
            "description": "x-required\nOptimize the site for L3 or L7 traffic processing. L7 optimized is the default.",
            "title": "Performance Enhancement Choice",
            "x-displayname": "Performance Enhancement Mode",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"perf_mode_l3_enhanced\",\"perf_mode_l7_enhanced\"]",
            "x-ves-proto-message": "ves.io.schema.views.PerformanceEnhancementModeType",
            "properties": {
                "perf_mode_l3_enhanced": {
                    "description": "Exclusive with [perf_mode_l7_enhanced]\n Site optimized for L3 traffic processing",
                    "title": "L3 Mode Enhanced Performance",
                    "$ref": "#/definitions/viewsL3PerformanceEnhancementType",
                    "x-displayname": "L3 Enhanced"
                },
                "perf_mode_l7_enhanced": {
                    "description": "Exclusive with [perf_mode_l3_enhanced]\n Site optimized for L7 traffic processing",
                    "title": "Default Performance Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "L7 Enhanced"
                }
            }
        },
        "viewsPrefixStringListType": {
            "type": "object",
            "description": "x-example: \"192.168.20.0/24\"\nList of IPv4 prefixes that represent an endpoint",
            "title": "ipv4 prefix list",
            "x-displayname": "IPv4 Prefix List",
            "x-ves-proto-message": "ves.io.schema.views.PrefixStringListType",
            "properties": {
                "ipv6_prefixes": {
                    "type": "array",
                    "description": " List of IPv6 prefix strings.\n\nExample: - \"fd48:fa09:d9d4::/48\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv6_prefix: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "ipv6 prefixes",
                    "maxItems": 128,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IPv6 Prefix List",
                    "x-ves-example": "fd48:fa09:d9d4::/48",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv6_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "prefixes": {
                    "type": "array",
                    "description": " List of IPv4 prefixes that represent an endpoint\n\nExample: - \"192.168.20.0/24\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv4_prefix: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "ipv4 prefix list",
                    "maxItems": 128,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IPv4 Prefix List",
                    "x-ves-example": "192.168.20.0/24",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        }
    },
    "x-displayname": "Fleet",
    "x-ves-proto-file": "ves.io/schema/fleet/public_crudapi.proto"
}`

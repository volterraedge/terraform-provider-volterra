// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package xc_saas

import (
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

func initializeValidatorRegistry(vr map[string]db.Validator) {
	vr["ves.io.schema.marketplace.xc_saas.SendInternalSignupEmailRequest"] = SendInternalSignupEmailRequestValidator()

	vr["ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsRequest"] = GetRegistrationDetailsRequestValidator()
	vr["ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsResponse"] = GetRegistrationDetailsResponseValidator()
	vr["ves.io.schema.marketplace.xc_saas.SendEmailResponse"] = SendEmailResponseValidator()
	vr["ves.io.schema.marketplace.xc_saas.SendSignupEmailRequest"] = SendSignupEmailRequestValidator()
	vr["ves.io.schema.marketplace.xc_saas.XCSaaSSignupRequest"] = XCSaaSSignupRequestValidator()
	vr["ves.io.schema.marketplace.xc_saas.XCSaaSSignupResponse"] = XCSaaSSignupResponseValidator()

}

func initializeEntryRegistry(mdr *svcfw.MDRegistry) {

}

func initializeRPCRegistry(mdr *svcfw.MDRegistry) {

}

func initializeAPIGwServiceSlugsRegistry(sm map[string]string) {
	sm["ves.io.schema.marketplace.xc_saas.CustomAPI"] = "marketplace/onboard"

}

func initializeP0PolicyRegistry(sm map[string]svcfw.P0PolicyInfo) {

}

func initializeCRUDServiceRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	var (
		csr       *svcfw.CRUDServiceRegistry
		customCSR *svcfw.CustomServiceRegistry
	)
	_, _ = csr, customCSR
	customCSR = mdr.PvtCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas

		customCSR.SwaggerRegistry["ves.io.schema.marketplace.xc_saas.Object"] = CustomPrivateAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.marketplace.xc_saas.CustomPrivateAPI"] = NewCustomPrivateAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.marketplace.xc_saas.CustomPrivateAPI"] = NewCustomPrivateAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.marketplace.xc_saas.CustomPrivateAPI"] = RegisterCustomPrivateAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.marketplace.xc_saas.CustomPrivateAPI"] = RegisterGwCustomPrivateAPIHandler
		customCSR.ServerRegistry["ves.io.schema.marketplace.xc_saas.CustomPrivateAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewCustomPrivateAPIServer(svc)
		}

	}()

	customCSR = mdr.PubCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas
		customCSR.SwaggerRegistry["ves.io.schema.marketplace.xc_saas.CustomAPI"] = CustomAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.marketplace.xc_saas.CustomAPI"] = NewCustomAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.marketplace.xc_saas.CustomAPI"] = NewCustomAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.marketplace.xc_saas.CustomAPI"] = RegisterCustomAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.marketplace.xc_saas.CustomAPI"] = RegisterGwCustomAPIHandler
		customCSR.ServerRegistry["ves.io.schema.marketplace.xc_saas.CustomAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewCustomAPIServer(svc)
		}

	}()

}

func InitializeMDRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	initializeEntryRegistry(mdr)
	initializeValidatorRegistry(mdr.ValidatorRegistry)

	initializeCRUDServiceRegistry(mdr, isExternal)
	if isExternal {
		return
	}

	initializeRPCRegistry(mdr)
	initializeAPIGwServiceSlugsRegistry(mdr.APIGwServiceSlugs)
	initializeP0PolicyRegistry(mdr.P0PolicyRegistry)

}

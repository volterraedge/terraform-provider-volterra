// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/marketplace/xc_saas/public_customapi.proto

// XC SaaS Onboarding API
//
// x-displayName: "XC SaaS Onboarding"

package xc_saas

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/marketplace/xc_saas/asb/asb_message"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// SendEmailResponse
//
// x-displayName: "Send Email Response"
// Response to indicate if the email was sent successfully
type SendEmailResponse struct {
	// success
	//
	// x-displayName: "Success"
	// Indicates if the email was sent successfully
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// message
	//
	// x-displayName: "Message"
	// Message provides additional context regarding the result of the email send operation
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *SendEmailResponse) Reset()      { *m = SendEmailResponse{} }
func (*SendEmailResponse) ProtoMessage() {}
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{0}
}
func (m *SendEmailResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendEmailResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailResponse.Merge(m, src)
}
func (m *SendEmailResponse) XXX_Size() int {
	return m.Size()
}
func (m *SendEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailResponse proto.InternalMessageInfo

func (m *SendEmailResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendEmailResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// GetRegistrationDetailsRequest
//
// x-displayName: "Get Registration Details Request"
// The request message for GetRegistrationDetails
type GetRegistrationDetailsRequest struct {
	// token
	//
	// x-displayName: "Token"
	// x-example: "7b22656e7469746c656d656e745f737562736372697074696f6e5f6964223a2261393933666633302d363138392d346231612d623064632d3630623034393063666463302d5445454d2d62343438666663362d34353166222c2276616c69645f74696c6c223a22323032342d31312d31355431373a31393a35382e3334323934352d30383a3030227d:d1bd81da4772d62fb424b805391fc946c611b5c245246e444410bcb0fe548ad7"
	// The token contains the encrypted data, secured using an HMAC key.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetRegistrationDetailsRequest) Reset()      { *m = GetRegistrationDetailsRequest{} }
func (*GetRegistrationDetailsRequest) ProtoMessage() {}
func (*GetRegistrationDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{1}
}
func (m *GetRegistrationDetailsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRegistrationDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRegistrationDetailsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRegistrationDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegistrationDetailsRequest.Merge(m, src)
}
func (m *GetRegistrationDetailsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetRegistrationDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegistrationDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegistrationDetailsRequest proto.InternalMessageInfo

func (m *GetRegistrationDetailsRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// SendSignupEmailRequest
//
// x-displayName: "Send Signup Email Request"
// The request message for SendSignupEmail
type SendSignupEmailRequest struct {
	// token
	//
	// x-displayName: "Token"
	// x-example: "7b22656e7469746c656d656e745f737562736372697074696f6e5f6964223a2261393933666633302d363138392d346231612d623064632d3630623034393063666463302d5445454d2d62343438666663362d34353166222c2276616c69645f74696c6c223a22323032342d31312d31355431373a31393a35382e3334323934352d30383a3030227d:d1bd81da4772d62fb424b805391fc946c611b5c245246e444410bcb0fe548ad7"
	// The token contains the encrypted data, secured using an HMAC key.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *SendSignupEmailRequest) Reset()      { *m = SendSignupEmailRequest{} }
func (*SendSignupEmailRequest) ProtoMessage() {}
func (*SendSignupEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{2}
}
func (m *SendSignupEmailRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendSignupEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendSignupEmailRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendSignupEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSignupEmailRequest.Merge(m, src)
}
func (m *SendSignupEmailRequest) XXX_Size() int {
	return m.Size()
}
func (m *SendSignupEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSignupEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendSignupEmailRequest proto.InternalMessageInfo

func (m *SendSignupEmailRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// GetRegistrationDetailsResponse
//
// x-displayName: "Get Registration Details Response"
// Response format for returning registration details associated with the ASB message
type GetRegistrationDetailsResponse struct {
	// domain
	//
	// x-displayName: "Domain"
	// The domain associated with the registered ASB message
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// email
	//
	// x-displayName: "Email"
	// The email associated with the registered ASB message
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// console_url
	//
	// x-displayName: "Console URL"
	// x-example: "console_url: https://console.ves.volterra.io/login/start"
	// A URL to the console page, returned if the tenant is already signed up and active
	ConsoleUrl string `protobuf:"bytes,3,opt,name=console_url,json=consoleUrl,proto3" json:"console_url,omitempty"`
	// error_message
	//
	// x-displayName: "Error Message"
	// x-example: "error_message": "Your account is already active. Please log in to continue."
	// An error message providing additional details (e.g., tenant already signed up)
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (m *GetRegistrationDetailsResponse) Reset()      { *m = GetRegistrationDetailsResponse{} }
func (*GetRegistrationDetailsResponse) ProtoMessage() {}
func (*GetRegistrationDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{3}
}
func (m *GetRegistrationDetailsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRegistrationDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRegistrationDetailsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRegistrationDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegistrationDetailsResponse.Merge(m, src)
}
func (m *GetRegistrationDetailsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetRegistrationDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegistrationDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegistrationDetailsResponse proto.InternalMessageInfo

func (m *GetRegistrationDetailsResponse) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *GetRegistrationDetailsResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetRegistrationDetailsResponse) GetConsoleUrl() string {
	if m != nil {
		return m.ConsoleUrl
	}
	return ""
}

func (m *GetRegistrationDetailsResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

// XCSaaSSignupRequest
//
// x-displayName: "XC SaaS Signup Request"
type XCSaaSSignupRequest struct {
	// domain
	//
	// x-displayName: "Domain"
	// The domain associated with the tenant/account
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// token
	//
	// x-displayName: "Token"
	// x-example: 7b22656e7469746c656d656e745f737562736372697074696f6e5f6964223a2261393933666633302d363138392d346231612d623064632d3630623034393063666463302d5445454d2d62343438666663362d34353166222c2276616c69645f74696c6c223a22323032342d31312d31355431373a31393a35382e3334323934352d30383a3030227d:d1bd81da4772d62fb424b805391fc946c611b5c245246e444410bcb0fe548ad7
	// The token contains the encrypted data, secured using an HMAC key.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *XCSaaSSignupRequest) Reset()      { *m = XCSaaSSignupRequest{} }
func (*XCSaaSSignupRequest) ProtoMessage() {}
func (*XCSaaSSignupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{4}
}
func (m *XCSaaSSignupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XCSaaSSignupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XCSaaSSignupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XCSaaSSignupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCSaaSSignupRequest.Merge(m, src)
}
func (m *XCSaaSSignupRequest) XXX_Size() int {
	return m.Size()
}
func (m *XCSaaSSignupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_XCSaaSSignupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_XCSaaSSignupRequest proto.InternalMessageInfo

func (m *XCSaaSSignupRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *XCSaaSSignupRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// XCSaaSSignupResponse
//
// x-displayName: "XC SaaS Signup Response"
type XCSaaSSignupResponse struct {
}

func (m *XCSaaSSignupResponse) Reset()      { *m = XCSaaSSignupResponse{} }
func (*XCSaaSSignupResponse) ProtoMessage() {}
func (*XCSaaSSignupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d45ed5bbbda0b407, []int{5}
}
func (m *XCSaaSSignupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XCSaaSSignupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XCSaaSSignupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XCSaaSSignupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCSaaSSignupResponse.Merge(m, src)
}
func (m *XCSaaSSignupResponse) XXX_Size() int {
	return m.Size()
}
func (m *XCSaaSSignupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_XCSaaSSignupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_XCSaaSSignupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SendEmailResponse)(nil), "ves.io.schema.marketplace.xc_saas.SendEmailResponse")
	golang_proto.RegisterType((*SendEmailResponse)(nil), "ves.io.schema.marketplace.xc_saas.SendEmailResponse")
	proto.RegisterType((*GetRegistrationDetailsRequest)(nil), "ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsRequest")
	golang_proto.RegisterType((*GetRegistrationDetailsRequest)(nil), "ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsRequest")
	proto.RegisterType((*SendSignupEmailRequest)(nil), "ves.io.schema.marketplace.xc_saas.SendSignupEmailRequest")
	golang_proto.RegisterType((*SendSignupEmailRequest)(nil), "ves.io.schema.marketplace.xc_saas.SendSignupEmailRequest")
	proto.RegisterType((*GetRegistrationDetailsResponse)(nil), "ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsResponse")
	golang_proto.RegisterType((*GetRegistrationDetailsResponse)(nil), "ves.io.schema.marketplace.xc_saas.GetRegistrationDetailsResponse")
	proto.RegisterType((*XCSaaSSignupRequest)(nil), "ves.io.schema.marketplace.xc_saas.XCSaaSSignupRequest")
	golang_proto.RegisterType((*XCSaaSSignupRequest)(nil), "ves.io.schema.marketplace.xc_saas.XCSaaSSignupRequest")
	proto.RegisterType((*XCSaaSSignupResponse)(nil), "ves.io.schema.marketplace.xc_saas.XCSaaSSignupResponse")
	golang_proto.RegisterType((*XCSaaSSignupResponse)(nil), "ves.io.schema.marketplace.xc_saas.XCSaaSSignupResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/marketplace/xc_saas/public_customapi.proto", fileDescriptor_d45ed5bbbda0b407)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/marketplace/xc_saas/public_customapi.proto", fileDescriptor_d45ed5bbbda0b407)
}

var fileDescriptor_d45ed5bbbda0b407 = []byte{
	// 747 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcf, 0x6f, 0xd3, 0x48,
	0x14, 0xce, 0x24, 0x6d, 0xb7, 0x9d, 0x76, 0xb5, 0x5b, 0x6f, 0x15, 0x59, 0xd9, 0xae, 0xb7, 0x9b,
	0x45, 0xa8, 0x6a, 0x15, 0x0f, 0x02, 0x5a, 0xa0, 0x08, 0xa9, 0x3f, 0xa8, 0x2a, 0x0e, 0x48, 0x55,
	0x22, 0x04, 0x0a, 0x07, 0x6b, 0xe2, 0xbc, 0xba, 0x56, 0x6d, 0x8f, 0xf1, 0x8c, 0x43, 0x7b, 0x43,
	0xfd, 0x0b, 0x40, 0xf0, 0x07, 0x70, 0xe4, 0x1f, 0x40, 0x42, 0x70, 0xc9, 0x09, 0x7a, 0x42, 0x95,
	0xe0, 0xd0, 0x23, 0x75, 0x38, 0xc0, 0xad, 0x67, 0x4e, 0x28, 0x63, 0x5b, 0x4a, 0xa2, 0xf4, 0x97,
	0x38, 0x58, 0xf2, 0x37, 0xef, 0x7d, 0xef, 0x7d, 0xdf, 0xcc, 0x9b, 0xc1, 0xd7, 0x1b, 0xc0, 0x75,
	0x9b, 0x11, 0x6e, 0x6e, 0x82, 0x4b, 0x89, 0x4b, 0x83, 0x2d, 0x10, 0xbe, 0x43, 0x4d, 0x20, 0xdb,
	0xa6, 0xc1, 0x29, 0xe5, 0xc4, 0x0f, 0x6b, 0x8e, 0x6d, 0x1a, 0x66, 0xc8, 0x05, 0x73, 0xa9, 0x6f,
	0xeb, 0x7e, 0xc0, 0x04, 0x53, 0xfe, 0x8b, 0x99, 0x7a, 0xcc, 0xd4, 0x3b, 0x98, 0x7a, 0xc2, 0x2c,
	0x94, 0x2c, 0x5b, 0x6c, 0x86, 0x35, 0xdd, 0x64, 0x2e, 0xb1, 0x98, 0xc5, 0x88, 0x64, 0xd6, 0xc2,
	0x0d, 0x89, 0x24, 0x90, 0x7f, 0x71, 0xc5, 0xc2, 0xa4, 0xc5, 0x98, 0xe5, 0x00, 0xa1, 0xbe, 0x4d,
	0xa8, 0xe7, 0x31, 0x41, 0x85, 0xcd, 0x3c, 0x9e, 0x44, 0x6f, 0x9d, 0xae, 0x94, 0xf2, 0x5a, 0xfb,
	0x33, 0x5c, 0xe0, 0x9c, 0x5a, 0x40, 0xc4, 0x8e, 0x0f, 0x29, 0xfd, 0xef, 0x6e, 0x3a, 0xf3, 0x3b,
	0x6b, 0x4f, 0x76, 0x07, 0x1b, 0xd4, 0xb1, 0xeb, 0x54, 0x40, 0x12, 0x2d, 0xf6, 0x44, 0x81, 0x83,
	0xd7, 0xe8, 0xa9, 0x30, 0xd5, 0x93, 0x63, 0xc3, 0x63, 0xa3, 0x2b, 0xa3, 0xb8, 0x86, 0xc7, 0x2b,
	0xe0, 0xd5, 0x57, 0x5d, 0x6a, 0x3b, 0x65, 0xe0, 0x3e, 0xf3, 0x38, 0x28, 0x2a, 0xfe, 0x8d, 0x87,
	0xa6, 0x09, 0x9c, 0xab, 0x68, 0x0a, 0x4d, 0x0f, 0x97, 0x53, 0xd8, 0x8e, 0x24, 0x36, 0xd4, 0xec,
	0x14, 0x9a, 0x1e, 0x29, 0xa7, 0xb0, 0x38, 0x87, 0xff, 0x59, 0x03, 0x51, 0x06, 0xcb, 0xe6, 0x22,
	0x90, 0x5b, 0x74, 0x1b, 0x04, 0xb5, 0x1d, 0x5e, 0x86, 0x47, 0x21, 0x70, 0xa1, 0x4c, 0xe0, 0x41,
	0xc1, 0xb6, 0xc0, 0x93, 0x25, 0x47, 0xca, 0x31, 0x28, 0xea, 0x38, 0xdf, 0xee, 0x5f, 0xb1, 0x2d,
	0x2f, 0xf4, 0x13, 0x15, 0x27, 0xe5, 0xbf, 0x40, 0x58, 0x3b, 0xae, 0x4f, 0xa2, 0x3e, 0x8f, 0x87,
	0xea, 0xcc, 0xa5, 0x76, 0xca, 0x4c, 0x50, 0xbb, 0x20, 0xb4, 0x1b, 0x24, 0xca, 0x63, 0xa0, 0xfc,
	0x8b, 0x47, 0x4d, 0xe6, 0x71, 0xe6, 0x80, 0x11, 0x06, 0x8e, 0x9a, 0x93, 0x31, 0x9c, 0x2c, 0xdd,
	0x0b, 0x1c, 0xe5, 0x7f, 0xfc, 0x3b, 0x04, 0x01, 0x0b, 0xd2, 0xf3, 0x53, 0x07, 0x64, 0xca, 0x98,
	0x5c, 0xbc, 0x9b, 0xb8, 0xf7, 0xf1, 0x5f, 0x0f, 0x56, 0x2a, 0x94, 0x56, 0x62, 0x23, 0xa9, 0x87,
	0x95, 0x6e, 0x29, 0xcb, 0xb3, 0x6f, 0xbf, 0x37, 0x73, 0x17, 0x83, 0x0b, 0x7f, 0x22, 0x75, 0xbc,
	0x9a, 0x6b, 0x00, 0xaf, 0x0e, 0x37, 0x98, 0x23, 0x20, 0x08, 0x68, 0x75, 0xa8, 0x01, 0xbc, 0x64,
	0xb3, 0xea, 0xc0, 0xc6, 0xdc, 0xb6, 0xf9, 0x32, 0x8b, 0x3a, 0x75, 0xc7, 0x1b, 0x91, 0xed, 0xdc,
	0x88, 0x3c, 0x9e, 0xe8, 0xee, 0x18, 0xbb, 0xbf, 0xfc, 0x7a, 0x10, 0x8f, 0xac, 0xc8, 0x4b, 0xb1,
	0xb4, 0x7e, 0x47, 0xf9, 0x8c, 0xf0, 0x1f, 0x3d, 0xfb, 0xab, 0xdc, 0xd0, 0x4f, 0xbd, 0x23, 0x7a,
	0xff, 0x33, 0x29, 0x5c, 0x3d, 0x23, 0xb5, 0x6b, 0x9c, 0x8a, 0xeb, 0xd1, 0x07, 0x75, 0xb4, 0xed,
	0xaa, 0xe4, 0x31, 0x1a, 0x8a, 0xcd, 0xdd, 0x4f, 0x5f, 0x9f, 0x67, 0x6f, 0x16, 0xe7, 0x89, 0xc7,
	0x8c, 0x36, 0x26, 0x1e, 0x75, 0x81, 0xfb, 0xd4, 0x04, 0x4e, 0xf8, 0x0e, 0x17, 0xe0, 0x12, 0x99,
	0x2d, 0x6f, 0x0f, 0x97, 0x2a, 0x08, 0x07, 0xaf, 0x6e, 0xc8, 0x13, 0x5b, 0x40, 0x33, 0xca, 0x0f,
	0x84, 0xf3, 0xfd, 0xa7, 0x40, 0x59, 0x3c, 0x83, 0xc4, 0x13, 0x07, 0xb5, 0xb0, 0xf4, 0x0b, 0x15,
	0x12, 0xc7, 0x0f, 0xf7, 0xde, 0x64, 0x51, 0x3f, 0xd7, 0xcb, 0xca, 0xe2, 0x79, 0x5c, 0x07, 0x1d,
	0x3d, 0x8c, 0x7a, 0xe2, 0xf0, 0x3d, 0xc2, 0x63, 0xf1, 0xd9, 0xc4, 0x03, 0xa0, 0xcc, 0x9f, 0x41,
	0x70, 0x9f, 0xe9, 0x2c, 0x5c, 0x3b, 0x37, 0x2f, 0xb1, 0xb7, 0xda, 0xcf, 0xda, 0xa5, 0xe2, 0xec,
	0x39, 0xac, 0x2d, 0xa0, 0x99, 0xc2, 0x68, 0xf3, 0x1d, 0xca, 0xed, 0x7e, 0x54, 0x73, 0xcd, 0x2c,
	0x5a, 0x7e, 0x86, 0xf6, 0x0f, 0xb5, 0xcc, 0xc1, 0xa1, 0x96, 0x39, 0x3a, 0xd4, 0xd0, 0x93, 0x48,
	0x43, 0xaf, 0x22, 0x0d, 0xed, 0x45, 0x1a, 0xda, 0x8f, 0x34, 0xf4, 0x25, 0xd2, 0xd0, 0xb7, 0x48,
	0xcb, 0x1c, 0x45, 0x1a, 0x7a, 0xda, 0xd2, 0x32, 0xcd, 0x96, 0x86, 0xf6, 0x5b, 0x5a, 0xe6, 0xa0,
	0xa5, 0x65, 0xaa, 0xf7, 0x2d, 0xe6, 0x6f, 0x59, 0x7a, 0x7a, 0x93, 0xf4, 0x90, 0x13, 0xf9, 0xb3,
	0xc1, 0x02, 0xb7, 0xe4, 0x07, 0xac, 0x61, 0xd7, 0x21, 0x28, 0xa5, 0x61, 0xe2, 0xd7, 0x2c, 0x46,
	0x60, 0x5b, 0x24, 0x8f, 0xe2, 0xf1, 0x2f, 0x77, 0x6d, 0x48, 0xbe, 0x91, 0x57, 0x7e, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x45, 0xf1, 0xd2, 0x97, 0x8f, 0x06, 0x00, 0x00,
}

func (this *SendEmailResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SendEmailResponse)
	if !ok {
		that2, ok := that.(SendEmailResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Success != that1.Success {
		return false
	}
	if this.Message != that1.Message {
		return false
	}
	return true
}
func (this *GetRegistrationDetailsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRegistrationDetailsRequest)
	if !ok {
		that2, ok := that.(GetRegistrationDetailsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	return true
}
func (this *SendSignupEmailRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SendSignupEmailRequest)
	if !ok {
		that2, ok := that.(SendSignupEmailRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	return true
}
func (this *GetRegistrationDetailsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRegistrationDetailsResponse)
	if !ok {
		that2, ok := that.(GetRegistrationDetailsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Domain != that1.Domain {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.ConsoleUrl != that1.ConsoleUrl {
		return false
	}
	if this.ErrorMessage != that1.ErrorMessage {
		return false
	}
	return true
}
func (this *XCSaaSSignupRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*XCSaaSSignupRequest)
	if !ok {
		that2, ok := that.(XCSaaSSignupRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Domain != that1.Domain {
		return false
	}
	if this.Token != that1.Token {
		return false
	}
	return true
}
func (this *XCSaaSSignupResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*XCSaaSSignupResponse)
	if !ok {
		that2, ok := that.(XCSaaSSignupResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *SendEmailResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&xc_saas.SendEmailResponse{")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetRegistrationDetailsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&xc_saas.GetRegistrationDetailsRequest{")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SendSignupEmailRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&xc_saas.SendSignupEmailRequest{")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetRegistrationDetailsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&xc_saas.GetRegistrationDetailsResponse{")
	s = append(s, "Domain: "+fmt.Sprintf("%#v", this.Domain)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "ConsoleUrl: "+fmt.Sprintf("%#v", this.ConsoleUrl)+",\n")
	s = append(s, "ErrorMessage: "+fmt.Sprintf("%#v", this.ErrorMessage)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *XCSaaSSignupRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&xc_saas.XCSaaSSignupRequest{")
	s = append(s, "Domain: "+fmt.Sprintf("%#v", this.Domain)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *XCSaaSSignupResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&xc_saas.XCSaaSSignupResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIClient is the client API for CustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIClient interface {
	// SendSignupEmail
	//
	// x-displayName: "Send Signup Email"
	// Use this API to send a tenant provisioning signup email when the signup URL link in the previously sent email has expired or is no longer accessible
	SendSignupEmail(ctx context.Context, in *SendSignupEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error)
	// GetRegistrationDetails
	//
	// x-displayName: "Get Registration Details"
	// Use this API to to get registration details (currently limited to email address and domain) associated with a specific asb_message object
	GetRegistrationDetails(ctx context.Context, in *GetRegistrationDetailsRequest, opts ...grpc.CallOption) (*GetRegistrationDetailsResponse, error)
	// SignupXCSaaS
	//
	// x-displayName: "Signup XC SaaS"
	// Use this API to signup registered Azure Service Bus (ASB) provisioning message for F5XC service.
	SignupXCSaaS(ctx context.Context, in *XCSaaSSignupRequest, opts ...grpc.CallOption) (*XCSaaSSignupResponse, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) SendSignupEmail(ctx context.Context, in *SendSignupEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error) {
	out := new(SendEmailResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.marketplace.xc_saas.CustomAPI/SendSignupEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) GetRegistrationDetails(ctx context.Context, in *GetRegistrationDetailsRequest, opts ...grpc.CallOption) (*GetRegistrationDetailsResponse, error) {
	out := new(GetRegistrationDetailsResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.marketplace.xc_saas.CustomAPI/GetRegistrationDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) SignupXCSaaS(ctx context.Context, in *XCSaaSSignupRequest, opts ...grpc.CallOption) (*XCSaaSSignupResponse, error) {
	out := new(XCSaaSSignupResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.marketplace.xc_saas.CustomAPI/SignupXCSaaS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIServer is the server API for CustomAPI service.
type CustomAPIServer interface {
	// SendSignupEmail
	//
	// x-displayName: "Send Signup Email"
	// Use this API to send a tenant provisioning signup email when the signup URL link in the previously sent email has expired or is no longer accessible
	SendSignupEmail(context.Context, *SendSignupEmailRequest) (*SendEmailResponse, error)
	// GetRegistrationDetails
	//
	// x-displayName: "Get Registration Details"
	// Use this API to to get registration details (currently limited to email address and domain) associated with a specific asb_message object
	GetRegistrationDetails(context.Context, *GetRegistrationDetailsRequest) (*GetRegistrationDetailsResponse, error)
	// SignupXCSaaS
	//
	// x-displayName: "Signup XC SaaS"
	// Use this API to signup registered Azure Service Bus (ASB) provisioning message for F5XC service.
	SignupXCSaaS(context.Context, *XCSaaSSignupRequest) (*XCSaaSSignupResponse, error)
}

// UnimplementedCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIServer struct {
}

func (*UnimplementedCustomAPIServer) SendSignupEmail(ctx context.Context, req *SendSignupEmailRequest) (*SendEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSignupEmail not implemented")
}
func (*UnimplementedCustomAPIServer) GetRegistrationDetails(ctx context.Context, req *GetRegistrationDetailsRequest) (*GetRegistrationDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistrationDetails not implemented")
}
func (*UnimplementedCustomAPIServer) SignupXCSaaS(ctx context.Context, req *XCSaaSSignupRequest) (*XCSaaSSignupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignupXCSaaS not implemented")
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_SendSignupEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSignupEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).SendSignupEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.marketplace.xc_saas.CustomAPI/SendSignupEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).SendSignupEmail(ctx, req.(*SendSignupEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_GetRegistrationDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistrationDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GetRegistrationDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.marketplace.xc_saas.CustomAPI/GetRegistrationDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GetRegistrationDetails(ctx, req.(*GetRegistrationDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_SignupXCSaaS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(XCSaaSSignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).SignupXCSaaS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.marketplace.xc_saas.CustomAPI/SignupXCSaaS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).SignupXCSaaS(ctx, req.(*XCSaaSSignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.marketplace.xc_saas.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSignupEmail",
			Handler:    _CustomAPI_SendSignupEmail_Handler,
		},
		{
			MethodName: "GetRegistrationDetails",
			Handler:    _CustomAPI_GetRegistrationDetails_Handler,
		},
		{
			MethodName: "SignupXCSaaS",
			Handler:    _CustomAPI_SignupXCSaaS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/marketplace/xc_saas/public_customapi.proto",
}

func (m *SendEmailResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendEmailResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendEmailResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetRegistrationDetailsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRegistrationDetailsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRegistrationDetailsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SendSignupEmailRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendSignupEmailRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendSignupEmailRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetRegistrationDetailsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRegistrationDetailsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRegistrationDetailsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ErrorMessage) > 0 {
		i -= len(m.ErrorMessage)
		copy(dAtA[i:], m.ErrorMessage)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.ErrorMessage)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ConsoleUrl) > 0 {
		i -= len(m.ConsoleUrl)
		copy(dAtA[i:], m.ConsoleUrl)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.ConsoleUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Domain) > 0 {
		i -= len(m.Domain)
		copy(dAtA[i:], m.Domain)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Domain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XCSaaSSignupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XCSaaSSignupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XCSaaSSignupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Domain) > 0 {
		i -= len(m.Domain)
		copy(dAtA[i:], m.Domain)
		i = encodeVarintPublicCustomapi(dAtA, i, uint64(len(m.Domain)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *XCSaaSSignupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XCSaaSSignupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XCSaaSSignupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintPublicCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SendEmailResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *GetRegistrationDetailsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *SendSignupEmailRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *GetRegistrationDetailsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Domain)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.ConsoleUrl)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.ErrorMessage)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *XCSaaSSignupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Domain)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovPublicCustomapi(uint64(l))
	}
	return n
}

func (m *XCSaaSSignupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovPublicCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCustomapi(x uint64) (n int) {
	return sovPublicCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *SendEmailResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SendEmailResponse{`,
		`Success:` + fmt.Sprintf("%v", this.Success) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetRegistrationDetailsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRegistrationDetailsRequest{`,
		`Token:` + fmt.Sprintf("%v", this.Token) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SendSignupEmailRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SendSignupEmailRequest{`,
		`Token:` + fmt.Sprintf("%v", this.Token) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetRegistrationDetailsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRegistrationDetailsResponse{`,
		`Domain:` + fmt.Sprintf("%v", this.Domain) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`ConsoleUrl:` + fmt.Sprintf("%v", this.ConsoleUrl) + `,`,
		`ErrorMessage:` + fmt.Sprintf("%v", this.ErrorMessage) + `,`,
		`}`,
	}, "")
	return s
}
func (this *XCSaaSSignupRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&XCSaaSSignupRequest{`,
		`Domain:` + fmt.Sprintf("%v", this.Domain) + `,`,
		`Token:` + fmt.Sprintf("%v", this.Token) + `,`,
		`}`,
	}, "")
	return s
}
func (this *XCSaaSSignupResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&XCSaaSSignupResponse{`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *SendEmailResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendEmailResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendEmailResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRegistrationDetailsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRegistrationDetailsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRegistrationDetailsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendSignupEmailRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendSignupEmailRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendSignupEmailRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRegistrationDetailsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRegistrationDetailsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRegistrationDetailsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Domain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsoleUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsoleUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XCSaaSSignupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: XCSaaSSignupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: XCSaaSSignupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Domain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *XCSaaSSignupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: XCSaaSSignupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: XCSaaSSignupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCustomapi = fmt.Errorf("proto: unexpected end of group")
)

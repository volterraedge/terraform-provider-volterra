// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/module_management/custom_api.proto

// Module Management
//
// x-displayName: "Module Management"
// Package for managing a module.

package module_management

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/user"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ModuleManagementRequest
//
// x-displayName: "ModuleManagementRequest"
// Defines settings for module control.
type ModuleManagementRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "ns1"
	// The namespace this item belongs to
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *ModuleManagementRequest) Reset()      { *m = ModuleManagementRequest{} }
func (*ModuleManagementRequest) ProtoMessage() {}
func (*ModuleManagementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e8995cbb311f1, []int{0}
}
func (m *ModuleManagementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleManagementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleManagementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleManagementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleManagementRequest.Merge(m, src)
}
func (m *ModuleManagementRequest) XXX_Size() int {
	return m.Size()
}
func (m *ModuleManagementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleManagementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleManagementRequest proto.InternalMessageInfo

func (m *ModuleManagementRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// ModuleManagementResponse
//
// x-displayName: "ModuleManagementResponse"
// Defines settings for module control.
type ModuleManagementResponse struct {
	// GLR Configuration
	//
	// x-displayName: "GLR Configuration"
	// Settings for GLR Configuration.
	GlrConfiguration ModuleManagement `protobuf:"varint,1,opt,name=glr_configuration,json=glrConfiguration,proto3,enum=ves.io.schema.module_management.ModuleManagement" json:"glr_configuration,omitempty"`
}

func (m *ModuleManagementResponse) Reset()      { *m = ModuleManagementResponse{} }
func (*ModuleManagementResponse) ProtoMessage() {}
func (*ModuleManagementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e8995cbb311f1, []int{1}
}
func (m *ModuleManagementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleManagementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleManagementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleManagementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleManagementResponse.Merge(m, src)
}
func (m *ModuleManagementResponse) XXX_Size() int {
	return m.Size()
}
func (m *ModuleManagementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleManagementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleManagementResponse proto.InternalMessageInfo

func (m *ModuleManagementResponse) GetGlrConfiguration() ModuleManagement {
	if m != nil {
		return m.GlrConfiguration
	}
	return MM_NONE
}

func init() {
	proto.RegisterType((*ModuleManagementRequest)(nil), "ves.io.schema.module_management.ModuleManagementRequest")
	proto.RegisterType((*ModuleManagementResponse)(nil), "ves.io.schema.module_management.ModuleManagementResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/module_management/custom_api.proto", fileDescriptor_152e8995cbb311f1)
}

var fileDescriptor_152e8995cbb311f1 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x7d, 0x41, 0x42, 0xaa, 0x07, 0x54, 0xcc, 0x40, 0x48, 0xab, 0x6b, 0x94, 0x09, 0x44,
	0xed, 0x83, 0x22, 0x04, 0x15, 0x13, 0x30, 0x54, 0x0c, 0x95, 0x50, 0x11, 0x0b, 0x03, 0xd1, 0xd9,
	0x79, 0x71, 0x4f, 0xd8, 0xf7, 0x8e, 0xbb, 0xb3, 0x69, 0x41, 0x48, 0xa8, 0x2b, 0x0c, 0x48, 0x7c,
	0x02, 0x36, 0xbe, 0x03, 0x0b, 0x0b, 0x82, 0x09, 0x45, 0x62, 0xe9, 0x48, 0x1c, 0x06, 0xc6, 0x7e,
	0x04, 0x24, 0xdb, 0x0d, 0x71, 0x53, 0x54, 0xc1, 0x76, 0xbe, 0xdf, 0xfb, 0xbf, 0x7b, 0xef, 0xff,
	0x9e, 0xdd, 0x2b, 0x39, 0x98, 0x40, 0x20, 0x33, 0xd1, 0x36, 0xa4, 0x9c, 0xa5, 0x38, 0xc8, 0x12,
	0xe8, 0xa7, 0x5c, 0xf2, 0x18, 0x52, 0x90, 0x96, 0x45, 0x99, 0xb1, 0x98, 0xf6, 0xb9, 0x12, 0x81,
	0xd2, 0x68, 0xd1, 0x5b, 0xa9, 0x14, 0x41, 0xa5, 0x08, 0xe6, 0x14, 0x9d, 0xe5, 0x18, 0x31, 0x4e,
	0x80, 0x71, 0x25, 0x18, 0x97, 0x12, 0x2d, 0xb7, 0x02, 0xa5, 0xa9, 0xe4, 0x9d, 0x0b, 0x33, 0x74,
	0xdb, 0x5a, 0x15, 0xe2, 0x60, 0xb7, 0x46, 0x2b, 0x35, 0x2a, 0xbf, 0xc2, 0x6c, 0xc8, 0xac, 0x48,
	0xc1, 0x58, 0x9e, 0xaa, 0x3a, 0xe0, 0xf2, 0x49, 0xc5, 0xda, 0x5d, 0x05, 0x87, 0x0f, 0x2d, 0x35,
	0x83, 0x51, 0x35, 0xaa, 0x68, 0xc2, 0x59, 0xdd, 0xa5, 0x26, 0xca, 0x0c, 0x68, 0xa6, 0xb2, 0x30,
	0x11, 0x51, 0xbf, 0xf2, 0x62, 0x6a, 0x45, 0x87, 0x1e, 0x13, 0x3a, 0x9b, 0xaa, 0xd7, 0xe4, 0x39,
	0x18, 0x90, 0x79, 0xb3, 0x92, 0xde, 0x0d, 0xf7, 0xfc, 0x66, 0xd9, 0xc7, 0xe6, 0xb4, 0x8d, 0x2d,
	0x78, 0x9a, 0x81, 0xb1, 0xde, 0xb2, 0xbb, 0x20, 0x79, 0x0a, 0x46, 0xf1, 0x08, 0xda, 0xa4, 0x4b,
	0x2e, 0x2e, 0x6c, 0xfd, 0xb9, 0xe8, 0x3d, 0x77, 0xdb, 0xf3, 0x42, 0xa3, 0x50, 0x1a, 0xf0, 0x1e,
	0xbb, 0x67, 0xe3, 0x44, 0xf7, 0x23, 0x94, 0x43, 0x11, 0x67, 0xba, 0x1c, 0x40, 0x99, 0xe1, 0xcc,
	0xda, 0xd5, 0xe0, 0x84, 0xf9, 0x05, 0x73, 0x59, 0x17, 0xe3, 0x44, 0xdf, 0x9d, 0x4d, 0xb5, 0xf6,
	0xb9, 0xe5, 0x9e, 0x3b, 0x1a, 0x76, 0xfb, 0xfe, 0x3d, 0xef, 0x7d, 0xcb, 0x5d, 0xda, 0x00, 0x7b,
	0x14, 0x3d, 0x00, 0x6b, 0x85, 0x8c, 0x8d, 0x77, 0xf3, 0xdf, 0x1f, 0xaf, 0xbc, 0xe8, 0xac, 0xff,
	0x87, 0xb2, 0x32, 0xa3, 0xf7, 0x86, 0x14, 0x5f, 0xda, 0x1b, 0xc3, 0xeb, 0x3b, 0x91, 0x1f, 0xa1,
	0x34, 0x98, 0x80, 0x1f, 0x72, 0x23, 0x22, 0x3f, 0x45, 0x29, 0x2c, 0xea, 0xd5, 0x6e, 0xc9, 0x06,
	0x30, 0xe4, 0x59, 0x62, 0x7d, 0x1e, 0x45, 0x60, 0xcc, 0x6a, 0x37, 0x07, 0xe3, 0x0b, 0xf4, 0x9f,
	0x41, 0x58, 0x5f, 0xf9, 0x1a, 0xf8, 0x60, 0xef, 0xfb, 0xcf, 0x77, 0xad, 0x5b, 0xde, 0x7a, 0xbd,
	0x12, 0x6c, 0x3a, 0x0f, 0xc3, 0x5e, 0x4c, 0xcf, 0x2f, 0x8f, 0x59, 0x4d, 0x53, 0x7b, 0xd0, 0x71,
	0x3f, 0x7d, 0x24, 0xa7, 0xf6, 0xbe, 0xb5, 0x5b, 0x8b, 0xe4, 0xce, 0x6b, 0x32, 0x1a, 0x53, 0x67,
	0x7f, 0x4c, 0x9d, 0x83, 0x31, 0x25, 0xaf, 0x0a, 0x4a, 0x3e, 0x14, 0x94, 0x7c, 0x2d, 0x28, 0x19,
	0x15, 0x94, 0xfc, 0x28, 0x28, 0xf9, 0x55, 0x50, 0xe7, 0xa0, 0xa0, 0xe4, 0xed, 0x84, 0x3a, 0xa3,
	0x09, 0x75, 0xf6, 0x27, 0xd4, 0x79, 0xf4, 0x30, 0x46, 0xf5, 0x24, 0x0e, 0x72, 0x4c, 0x2c, 0x68,
	0xcd, 0x83, 0xcc, 0xb0, 0xf2, 0x30, 0x44, 0x9d, 0xfa, 0x4a, 0x63, 0x2e, 0x06, 0xa0, 0xfd, 0x43,
	0xcc, 0x54, 0x18, 0x23, 0x83, 0x1d, 0x5b, 0xaf, 0xe1, 0xdf, 0xfe, 0x9e, 0xf0, 0x74, 0xb9, 0x91,
	0xd7, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xb0, 0xde, 0xc5, 0x14, 0x04, 0x00, 0x00,
}

func (this *ModuleManagementRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ModuleManagementRequest)
	if !ok {
		that2, ok := that.(ModuleManagementRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *ModuleManagementResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ModuleManagementResponse)
	if !ok {
		that2, ok := that.(ModuleManagementResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.GlrConfiguration != that1.GlrConfiguration {
		return false
	}
	return true
}
func (this *ModuleManagementRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&module_management.ModuleManagementRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ModuleManagementResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&module_management.ModuleManagementResponse{")
	s = append(s, "GlrConfiguration: "+fmt.Sprintf("%#v", this.GlrConfiguration)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringCustomApi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ModuleManagementAPIClient is the client API for ModuleManagementAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModuleManagementAPIClient interface {
	// Module Management Settings
	//
	// x-displayName: "Module Management Settings"
	// Receive the module settings.
	GetModuleManagementSettings(ctx context.Context, in *ModuleManagementRequest, opts ...grpc.CallOption) (*ModuleManagementResponse, error)
}

type moduleManagementAPIClient struct {
	cc *grpc.ClientConn
}

func NewModuleManagementAPIClient(cc *grpc.ClientConn) ModuleManagementAPIClient {
	return &moduleManagementAPIClient{cc}
}

func (c *moduleManagementAPIClient) GetModuleManagementSettings(ctx context.Context, in *ModuleManagementRequest, opts ...grpc.CallOption) (*ModuleManagementResponse, error) {
	out := new(ModuleManagementResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.module_management.ModuleManagementAPI/GetModuleManagementSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModuleManagementAPIServer is the server API for ModuleManagementAPI service.
type ModuleManagementAPIServer interface {
	// Module Management Settings
	//
	// x-displayName: "Module Management Settings"
	// Receive the module settings.
	GetModuleManagementSettings(context.Context, *ModuleManagementRequest) (*ModuleManagementResponse, error)
}

// UnimplementedModuleManagementAPIServer can be embedded to have forward compatible implementations.
type UnimplementedModuleManagementAPIServer struct {
}

func (*UnimplementedModuleManagementAPIServer) GetModuleManagementSettings(ctx context.Context, req *ModuleManagementRequest) (*ModuleManagementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModuleManagementSettings not implemented")
}

func RegisterModuleManagementAPIServer(s *grpc.Server, srv ModuleManagementAPIServer) {
	s.RegisterService(&_ModuleManagementAPI_serviceDesc, srv)
}

func _ModuleManagementAPI_GetModuleManagementSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModuleManagementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleManagementAPIServer).GetModuleManagementSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.module_management.ModuleManagementAPI/GetModuleManagementSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleManagementAPIServer).GetModuleManagementSettings(ctx, req.(*ModuleManagementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModuleManagementAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.module_management.ModuleManagementAPI",
	HandlerType: (*ModuleManagementAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetModuleManagementSettings",
			Handler:    _ModuleManagementAPI_GetModuleManagementSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/module_management/custom_api.proto",
}

func (m *ModuleManagementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleManagementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleManagementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCustomApi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleManagementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleManagementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleManagementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GlrConfiguration != 0 {
		i = encodeVarintCustomApi(dAtA, i, uint64(m.GlrConfiguration))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCustomApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovCustomApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ModuleManagementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCustomApi(uint64(l))
	}
	return n
}

func (m *ModuleManagementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GlrConfiguration != 0 {
		n += 1 + sovCustomApi(uint64(m.GlrConfiguration))
	}
	return n
}

func sovCustomApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCustomApi(x uint64) (n int) {
	return sovCustomApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ModuleManagementRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ModuleManagementRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ModuleManagementResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ModuleManagementResponse{`,
		`GlrConfiguration:` + fmt.Sprintf("%v", this.GlrConfiguration) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCustomApi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ModuleManagementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleManagementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleManagementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCustomApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCustomApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleManagementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleManagementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleManagementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlrConfiguration", wireType)
			}
			m.GlrConfiguration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GlrConfiguration |= ModuleManagement(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCustomApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCustomApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCustomApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCustomApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCustomApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCustomApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCustomApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCustomApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCustomApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCustomApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCustomApi = fmt.Errorf("proto: unexpected end of group")
)

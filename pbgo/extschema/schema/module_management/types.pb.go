// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/module_management/types.proto

package module_management

import (
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ModuleManagement
//
// x-displayName: "Module Management"
// Module is allowed or not
type ModuleManagement int32

const (
	// x-displayName: "None"
	// Default check value. Check response details for more info.
	MM_NONE ModuleManagement = 0
	// x-displayName: "Allowed"
	// Configuration Allowed
	ALLOWED ModuleManagement = 1
	// x-displayName: "Not Allowed"
	// Configuration not allowed
	NOT_ALLOWED ModuleManagement = 2
)

var ModuleManagement_name = map[int32]string{
	0: "MM_NONE",
	1: "ALLOWED",
	2: "NOT_ALLOWED",
}

var ModuleManagement_value = map[string]int32{
	"MM_NONE":     0,
	"ALLOWED":     1,
	"NOT_ALLOWED": 2,
}

func (ModuleManagement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_076e429c2bbfccc6, []int{0}
}

func init() {
	proto.RegisterEnum("ves.io.schema.module_management.ModuleManagement", ModuleManagement_name, ModuleManagement_value)
	golang_proto.RegisterEnum("ves.io.schema.module_management.ModuleManagement", ModuleManagement_name, ModuleManagement_value)
}

func init() {
	proto.RegisterFile("ves.io/schema/module_management/types.proto", fileDescriptor_076e429c2bbfccc6)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/module_management/types.proto", fileDescriptor_076e429c2bbfccc6)
}

var fileDescriptor_076e429c2bbfccc6 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0xc7, 0xe3, 0x6f, 0xf8, 0x90, 0xd2, 0x81, 0xaa, 0x1b, 0xa1, 0x3a, 0x10, 0x23, 0xa8, 0xf1,
	0xc0, 0xcc, 0x00, 0xa2, 0x5b, 0xd3, 0x2e, 0x20, 0x24, 0x96, 0xc8, 0x69, 0xaf, 0x6e, 0x44, 0x92,
	0x8b, 0x12, 0x27, 0xc0, 0xc6, 0x23, 0x20, 0xf1, 0x12, 0x3c, 0x06, 0x23, 0x63, 0xc7, 0x8e, 0xd4,
	0x59, 0x18, 0xfb, 0x08, 0x08, 0xb7, 0x45, 0x4d, 0x11, 0xdb, 0x9d, 0x7f, 0x3f, 0x9f, 0xef, 0x2f,
	0xdb, 0x27, 0x25, 0xe6, 0x6e, 0x48, 0x3c, 0x1f, 0x4e, 0x30, 0x16, 0x3c, 0xa6, 0x51, 0x11, 0xa1,
	0x1f, 0x8b, 0x44, 0x48, 0x8c, 0x31, 0x51, 0x5c, 0x3d, 0xa6, 0x98, 0xbb, 0x69, 0x46, 0x8a, 0x5a,
	0x07, 0x4b, 0xd9, 0x5d, 0xca, 0xee, 0x2f, 0xd9, 0xe9, 0xc8, 0x50, 0x4d, 0x8a, 0xc0, 0x1d, 0x52,
	0xcc, 0x25, 0x49, 0xe2, 0xe6, 0x5e, 0x50, 0x8c, 0x4d, 0x67, 0x1a, 0x53, 0x2d, 0xe7, 0x39, 0x6d,
	0x49, 0x24, 0x23, 0xe4, 0x22, 0x0d, 0xb9, 0x48, 0x12, 0x52, 0x42, 0x85, 0x94, 0xac, 0x5e, 0x73,
	0xf6, 0xeb, 0xab, 0x51, 0xba, 0x09, 0xf7, 0xea, 0x70, 0x63, 0x4b, 0xa7, 0x5d, 0x47, 0xa5, 0x88,
	0xc2, 0x91, 0x50, 0xb8, 0xa2, 0x47, 0x5b, 0x14, 0x73, 0x4c, 0xca, 0xad, 0xe1, 0x87, 0x5b, 0x4e,
	0x88, 0xf7, 0x7e, 0xcd, 0x38, 0x3e, 0xb3, 0x9b, 0x9e, 0x49, 0xef, 0xfd, 0x84, 0x6f, 0x35, 0xec,
	0x1d, 0xcf, 0xf3, 0xfb, 0x83, 0x7e, 0xb7, 0x69, 0x7d, 0x37, 0xe7, 0xbd, 0xde, 0xe0, 0xa6, 0x7b,
	0xd9, 0x64, 0xad, 0x5d, 0xbb, 0xd1, 0x1f, 0x5c, 0xf9, 0xeb, 0x83, 0x7f, 0x17, 0x2f, 0x6c, 0x3a,
	0x07, 0x6b, 0x36, 0x07, 0x6b, 0x31, 0x07, 0xf6, 0xa4, 0x81, 0xbd, 0x6a, 0x60, 0xef, 0x1a, 0xd8,
	0x54, 0x03, 0x9b, 0x69, 0x60, 0x1f, 0x1a, 0xd8, 0xa7, 0x06, 0x6b, 0xa1, 0x81, 0x3d, 0x57, 0x60,
	0xbd, 0x55, 0xc0, 0xa6, 0x15, 0x58, 0xb3, 0x0a, 0xac, 0xdb, 0x6b, 0x49, 0xe9, 0x9d, 0x74, 0x4b,
	0x8a, 0x14, 0x66, 0x99, 0x70, 0x8b, 0x9c, 0x9b, 0x62, 0x4c, 0x59, 0xdc, 0x49, 0x33, 0x2a, 0xc3,
	0x11, 0x66, 0x9d, 0x35, 0xe6, 0x69, 0x20, 0x89, 0xe3, 0x83, 0x5a, 0xc5, 0xf9, 0xeb, 0xab, 0x83,
	0xff, 0x26, 0xdb, 0xe9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x07, 0x0e, 0x3d, 0x14, 0x02,
	0x00, 0x00,
}

func (x ModuleManagement) String() string {
	s, ok := ModuleManagement_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

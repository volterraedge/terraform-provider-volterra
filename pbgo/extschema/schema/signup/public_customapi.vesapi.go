// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package signup

import (
	"bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create CustomAPI GRPC Client satisfying server.CustomClient
type CustomAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient CustomAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *CustomAPIGrpcClient) doRPCGet(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.GetRequest", yamlReq)
	}
	rsp, err := c.grpcClient.Get(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListCities(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListCitiesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListCitiesRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListCities(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListCountries(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListCountriesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListCountriesRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListCountries(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListStates(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListStatesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListStatesRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListStates(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCSendPasswordEmail(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &SendPasswordEmailRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.SendPasswordEmailRequest", yamlReq)
	}
	rsp, err := c.grpcClient.SendPasswordEmail(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCValidateContact(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ValidateContactRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ValidateContactRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ValidateContact(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCValidateRegistration(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ValidateRegistrationRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ValidateRegistrationRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ValidateRegistration(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewCustomAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &CustomAPIGrpcClient{
		conn:       cc,
		grpcClient: NewCustomAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["Get"] = ccl.doRPCGet

	rpcFns["ListCities"] = ccl.doRPCListCities

	rpcFns["ListCountries"] = ccl.doRPCListCountries

	rpcFns["ListStates"] = ccl.doRPCListStates

	rpcFns["SendPasswordEmail"] = ccl.doRPCSendPasswordEmail

	rpcFns["ValidateContact"] = ccl.doRPCValidateContact

	rpcFns["ValidateRegistration"] = ccl.doRPCValidateRegistration

	ccl.rpcFns = rpcFns

	return ccl
}

// Create CustomAPI REST Client satisfying server.CustomClient
type CustomAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *CustomAPIRestClient) doRPCGet(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.GetRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("name", fmt.Sprintf("%v", req.Name))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.GetResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListCities(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListCitiesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListCitiesRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("country_code", fmt.Sprintf("%v", req.CountryCode))
		q.Add("prefix", fmt.Sprintf("%v", req.Prefix))
		q.Add("state_code", fmt.Sprintf("%v", req.StateCode))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListCitiesResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.ListCitiesResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListCountries(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListCountriesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListCountriesRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("prefix", fmt.Sprintf("%v", req.Prefix))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListCountriesResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.ListCountriesResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListStates(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListStatesRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ListStatesRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("country_code", fmt.Sprintf("%v", req.CountryCode))
		q.Add("prefix", fmt.Sprintf("%v", req.Prefix))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListStatesResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.ListStatesResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCSendPasswordEmail(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &SendPasswordEmailRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.SendPasswordEmailRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("cname", fmt.Sprintf("%v", req.Cname))
		q.Add("email", fmt.Sprintf("%v", req.Email))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &SendPasswordEmailResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.SendPasswordEmailResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCValidateContact(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ValidateContactRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ValidateContactRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("spec", fmt.Sprintf("%v", req.Spec))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ValidateContactResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.ValidateContactResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCValidateRegistration(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ValidateRegistrationRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.ValidateRegistrationRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("email", fmt.Sprintf("%v", req.Email))
		q.Add("tenant_type", fmt.Sprintf("%v", req.TenantType))
		q.Add("token", fmt.Sprintf("%v", req.Token))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ValidateRegistrationResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.ValidateRegistrationResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewCustomAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &CustomAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["Get"] = ccl.doRPCGet

	rpcFns["ListCities"] = ccl.doRPCListCities

	rpcFns["ListCountries"] = ccl.doRPCListCountries

	rpcFns["ListStates"] = ccl.doRPCListStates

	rpcFns["SendPasswordEmail"] = ccl.doRPCSendPasswordEmail

	rpcFns["ValidateContact"] = ccl.doRPCValidateContact

	rpcFns["ValidateRegistration"] = ccl.doRPCValidateRegistration

	ccl.rpcFns = rpcFns

	return ccl
}

// Create customAPIInprocClient

// INPROC Client (satisfying CustomAPIClient interface)
type customAPIInprocClient struct {
	CustomAPIServer
}

func (c *customAPIInprocClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.Get")
	return c.CustomAPIServer.Get(ctx, in)
}
func (c *customAPIInprocClient) ListCities(ctx context.Context, in *ListCitiesRequest, opts ...grpc.CallOption) (*ListCitiesResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.ListCities")
	return c.CustomAPIServer.ListCities(ctx, in)
}
func (c *customAPIInprocClient) ListCountries(ctx context.Context, in *ListCountriesRequest, opts ...grpc.CallOption) (*ListCountriesResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.ListCountries")
	return c.CustomAPIServer.ListCountries(ctx, in)
}
func (c *customAPIInprocClient) ListStates(ctx context.Context, in *ListStatesRequest, opts ...grpc.CallOption) (*ListStatesResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.ListStates")
	return c.CustomAPIServer.ListStates(ctx, in)
}
func (c *customAPIInprocClient) SendPasswordEmail(ctx context.Context, in *SendPasswordEmailRequest, opts ...grpc.CallOption) (*SendPasswordEmailResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.SendPasswordEmail")
	return c.CustomAPIServer.SendPasswordEmail(ctx, in)
}
func (c *customAPIInprocClient) ValidateContact(ctx context.Context, in *ValidateContactRequest, opts ...grpc.CallOption) (*ValidateContactResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.ValidateContact")
	return c.CustomAPIServer.ValidateContact(ctx, in)
}
func (c *customAPIInprocClient) ValidateRegistration(ctx context.Context, in *ValidateRegistrationRequest, opts ...grpc.CallOption) (*ValidateRegistrationResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.signup.CustomAPI.ValidateRegistration")
	return c.CustomAPIServer.ValidateRegistration(ctx, in)
}

func NewCustomAPIInprocClient(svc svcfw.Service) CustomAPIClient {
	return &customAPIInprocClient{CustomAPIServer: NewCustomAPIServer(svc)}
}

// RegisterGwCustomAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwCustomAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterCustomAPIHandlerClient(ctx, mux, NewCustomAPIInprocClient(s))
}

// Create customAPISrv

// SERVER (satisfying CustomAPIServer interface)
type customAPISrv struct {
	svc svcfw.Service
}

func (s *customAPISrv) Get(ctx context.Context, in *GetRequest) (*GetResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *GetResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.GetRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.Get' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.Get"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.Get(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.GetResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListCities(ctx context.Context, in *ListCitiesRequest) (*ListCitiesResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListCitiesResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.ListCitiesRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListCities' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.ListCities"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListCities(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.ListCitiesResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListCountries(ctx context.Context, in *ListCountriesRequest) (*ListCountriesResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListCountriesResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.ListCountriesRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListCountries' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.ListCountries"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListCountries(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.ListCountriesResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListStates(ctx context.Context, in *ListStatesRequest) (*ListStatesResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListStatesResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.ListStatesRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListStates' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.ListStates"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListStates(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.ListStatesResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) SendPasswordEmail(ctx context.Context, in *SendPasswordEmailRequest) (*SendPasswordEmailResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *SendPasswordEmailResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.SendPasswordEmailRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.SendPasswordEmail' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.SendPasswordEmail"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.SendPasswordEmail(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.SendPasswordEmailResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ValidateContact(ctx context.Context, in *ValidateContactRequest) (*ValidateContactResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ValidateContactResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.ValidateContactRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ValidateContact' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.ValidateContact"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ValidateContact(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.ValidateContactResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ValidateRegistration(ctx context.Context, in *ValidateRegistrationRequest) (*ValidateRegistrationResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ValidateRegistrationResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.signup.ValidateRegistrationRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ValidateRegistration' operation on 'signup'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomAPI.ValidateRegistration"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ValidateRegistration(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.signup.ValidateRegistrationResponse", rsp)...)

	return rsp, nil
}

func NewCustomAPIServer(svc svcfw.Service) CustomAPIServer {
	return &customAPISrv{svc: svc}
}

var CustomAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Signup API",
        "description": "Use this API to signup for F5XC service.\none can signup to use volterra service as an individual/free account or\nas a team account more suited for enterprise customers. \nfor more details on what each type of account features, visit - https://console.ves.volterra.io/signup/usage_plan\nsince signup flow includes more complex selections and passing in secure payment processing,\nwe recommend using web UI for this process https://console.ves.volterra.io/signup/start",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/no_auth/countries/{country_code}/states/{prefix}": {
            "get": {
                "summary": "List states",
                "description": "Returns a list of known states of a country. List will be empty if country has no states.",
                "operationId": "ves.io.schema.signup.CustomAPI.ListStates",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListStatesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country_code",
                        "description": "country code\n\nx-example: \"US\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-1, column -alpha-2-",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Country code"
                    },
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"AL for Alabama\"\nfirst two or more characters of the state you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-liststates"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListStates"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/countries/{country_code}/states/{state_code}/cities/{prefix}": {
            "get": {
                "summary": "List cities",
                "description": "Returns a list of known cities of a country/state.",
                "operationId": "ves.io.schema.signup.CustomAPI.ListCities",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListCitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country_code",
                        "description": "country code\n\nx-example: \"US\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-1, column -alpha-2-",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Country code"
                    },
                    {
                        "name": "state_code",
                        "description": "state code\n\nx-example: \"TN\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-2:US/CA/IN, column -code-, excluding the leading country code",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "State"
                    },
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"DE\"\nfirst two or more characters of the city you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-listcities"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListCities"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/countries/{prefix}": {
            "get": {
                "summary": "List countries",
                "description": "Returns a list of supported countries along with with additional information such as address validation rules",
                "operationId": "ves.io.schema.signup.CustomAPI.ListCountries",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListCountriesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"US for USA\"\nfirst two or more characters of the country you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-listcountries"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListCountries"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/login/validate_registration": {
            "post": {
                "summary": "Validate Registration",
                "description": "ValidateRegistration validates if the signup registration request is valid when a new customer attempts to signup",
                "operationId": "ves.io.schema.signup.CustomAPI.ValidateRegistration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupValidateRegistrationResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signupValidateRegistrationRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-validateregistration"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ValidateRegistration"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/send_password_email": {
            "post": {
                "summary": "Send Password Email",
                "description": "SendPasswordEmail enables resetting the password at the time of on-boarding new customer",
                "operationId": "ves.io.schema.signup.CustomAPI.SendPasswordEmail",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupSendPasswordEmailResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signupSendPasswordEmailRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-sendpasswordemail"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.SendPasswordEmail"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/signup/{name}": {
            "get": {
                "summary": "Read Signup",
                "description": "Get allows users to query signup and its status. Use this to query for a status of a submitted signup object.",
                "operationId": "ves.io.schema.signup.CustomAPI.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupGetResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "Signup name\n\nx-example: \"signup-1234-5678-9012-3456\"\nName of the signup we want to retrieve . The name is returned after a signup object submission.",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-get"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.Get"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/no_auth/validate_contact": {
            "post": {
                "summary": "Validate contact",
                "description": "It validates that:\n* the provided country and zip code are not empty\n* the provided country is in the configured list of countries\n* a provided zip code matches a regexp for a given country",
                "operationId": "ves.io.schema.signup.CustomAPI.ValidateContact",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupValidateContactResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signupValidateContactRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-validatecontact"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ValidateContact"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/custom/countries/{country_code}/states/{prefix}": {
            "get": {
                "summary": "List states",
                "description": "Returns a list of known states of a country. List will be empty if country has no states.",
                "operationId": "ves.io.schema.signup.CustomAPI.ListStates",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListStatesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country_code",
                        "description": "country code\n\nx-example: \"US\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-1, column -alpha-2-",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Country code"
                    },
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"AL for Alabama\"\nfirst two or more characters of the state you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-liststates"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListStates"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/custom/countries/{country_code}/states/{state_code}/cities/{prefix}": {
            "get": {
                "summary": "List cities",
                "description": "Returns a list of known cities of a country/state.",
                "operationId": "ves.io.schema.signup.CustomAPI.ListCities",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListCitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country_code",
                        "description": "country code\n\nx-example: \"US\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-1, column -alpha-2-",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Country code"
                    },
                    {
                        "name": "state_code",
                        "description": "state code\n\nx-example: \"TN\"\n2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-2:US/CA/IN, column -code-, excluding the leading country code",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "State"
                    },
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"DE\"\nfirst two or more characters of the city you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-listcities"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListCities"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/custom/countries/{prefix}": {
            "get": {
                "summary": "List countries",
                "description": "Returns a list of supported countries along with with additional information such as address validation rules",
                "operationId": "ves.io.schema.signup.CustomAPI.ListCountries",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupListCountriesResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "prefix",
                        "description": "Prefix\n\nx-example: \"US for USA\"\nfirst two or more characters of the country you look for (can be upper or lower case)",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Prefix"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-signup-customapi-listcountries"
                },
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomAPI.ListCountries"
            },
            "x-displayname": "Signup",
            "x-ves-proto-service": "ves.io.schema.signup.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "contactContactType": {
            "type": "string",
            "description": "Determines the contact type\n\nIndicates snail mail address (used for correspondence)\nIndicates billing address (this address will appear on invoices)\nIndicates contact used for a payment method (this address is used when charging a payment method)",
            "title": "Contact Type",
            "enum": [
                "MAILING",
                "BILLING",
                "PAYMENT"
            ],
            "default": "MAILING",
            "x-displayname": "Contact Type",
            "x-ves-proto-enum": "ves.io.schema.contact.ContactType"
        },
        "infraprotect_informationPolicer": {
            "type": "object",
            "description": "Policer config for bandwidth restrictions",
            "title": "Policer Config",
            "x-displayname": "Policer Config",
            "x-ves-proto-message": "ves.io.schema.infraprotect_information.Policer",
            "properties": {
                "bandwidth_max_mb": {
                    "type": "integer",
                    "description": " Bandwidth max allowed for a customer defined by contract\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 9999\n",
                    "title": "Bandwidth Max",
                    "format": "int64",
                    "x-displayname": "Bandwidth Max in MB",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "9999"
                    }
                }
            }
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by F5XC Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.\n\nExample: - \"value\"-",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider",
                    "x-ves-example": "value"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"value\"-",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaCRMInfo": {
            "type": "object",
            "description": "CRM Information",
            "title": "CRM Information",
            "x-displayname": "CRM Information",
            "x-ves-proto-message": "ves.io.schema.CRMInfo"
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 131072\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "URL",
                    "maxLength": 131072,
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "131072",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed.\n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]\n",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]"
                    }
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Validation\\\",\\\"Operational\\\"]\n",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Validation\\\",\\\"Operational\\\"]"
                    }
                }
            }
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaObjectMetaType": {
            "type": "object",
            "description": "ObjectMetaType is metadata(common attributes) of an object that all configuration objects will have.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "ObjectMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. Object create will fail if\n provided by the client and the value exists in the system. Typically generated by the\n server on successful creation of an object and is not allowed to change once populated.\n Shadowed by SystemObjectMeta's uid field.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "x-displayName: \"Secret Encoding\"\nSecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\n - EncodingNone: x-displayName: \"None\"\nNo Encoding\n - EncodingBase64: Base64\n\nx-displayName: \"Base64\"\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info]\n Blindfold Secret is used for the secrets managed by F5XC Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info]\n Clear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType",
                    "x-displayname": "Clear Secret"
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status\n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Origin of this status exchanged by VTRP.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do Not Publish\n\nDo not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Publish\n\nPropagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Status Publish Type",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSyncMode": {
            "type": "string",
            "description": "Sync mode is to specify where the user details are being synced from.\n\n - SELF: Self\nSystem managed user.\n - SCIM: SCIM\nSCIM synced user. Full user life cycle is managed by the SCIM provider.",
            "title": "Sync Mode",
            "enum": [
                "SELF",
                "SCIM"
            ],
            "default": "SELF",
            "x-displayname": "Sync Mode",
            "x-ves-proto-enum": "ves.io.schema.SyncMode"
        },
        "schemaSystemObjectMetaType": {
            "type": "object",
            "description": "SystemObjectMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "value"
                },
                "creator_cookie": {
                    "type": "string",
                    "description": " This can used by the creator of the object for later audit for e.g. by storing the\n version identifying information of the object so at future it can be determined if\n version present at remote end is current or stale.\n\nExample: - \"value\"-",
                    "title": "creator_cookie",
                    "x-displayname": "Creator Cookie",
                    "x-ves-example": "value"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "value"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n\n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n\n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the operator or software. Values here can be interpreted\n by software(backend or frontend) to enable certain behavior e.g. things marked as soft-deleted(restorable).\n\nExample: - \"'ves.io/soft-deleted''true'\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "'ves.io/soft-deleted': 'true'"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "namespace": {
                    "type": "array",
                    "description": " The namespace this object belongs to. This is populated by the service based on the\n metadata.namespace field when an object is created.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "title": "namespace",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    },
                    "x-displayname": "Namespace Reference",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "sre_disable": {
                    "type": "boolean",
                    "description": " This should be set to true If VES/SRE operator wants to suppress an object from being\n presented to business-logic of a daemon(e.g. due to bad-form/issue-causing Object).\n This is meant only to be used in temporary situations for operational continuity till\n a fix is rolled out in business-logic.\n\nExample: - \"true\"-",
                    "title": "sre_disable",
                    "format": "boolean",
                    "x-displayname": "SRE Disable",
                    "x-ves-example": "true"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "trace_info": {
                    "type": "string",
                    "description": " trace_info holds information(\u003ctrace-id\u003e:\u003cspan-id\u003e:\u003cparent-span-id\u003e) of the request doing\n the object modification. This can be used on the watch side to create subsequent spans.\n This information can be used to co-relate activities across services (modulo state compression)\n for a synchronous API.\n\nExample: - \"value\"-",
                    "title": "trace_info",
                    "x-displayname": "Trace Info",
                    "x-ves-example": "value"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Indicate origin of this object.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaTaxExemptionType": {
            "type": "string",
            "description": "TaxExemptionType holds possible tax exemption option.\n\nUNKNOWN indicates the field not being set\nTAX_REGULAR indicates customers that are required to pay taxes\nTAX_EXEMPT indicates customers exempt from paying taxes - their status needs to be verified once signup is completed.\nTAX_EXEMPT indicates customers exempt from paying taxes - their status has been verified and the customer is not being taxed by us.\nTAX_EXEMPT_VERIFICATION_FAILED indicates customers that the tax exempt verification process failed - they can contact F5XC to get more details\nTAX_EXEMPT_VERIFICATION_PENDING indicates customers that the tax exempt verification process is ongoing",
            "title": "TaxExemptionType",
            "enum": [
                "TAX_UNKNOWN",
                "TAX_REGULAR",
                "TAX_EXEMPT_UNVERIFIED",
                "TAX_EXEMPT_VERIFIED",
                "TAX_EXEMPT_VERIFICATION_FAILED",
                "TAX_EXEMPT_VERIFICATION_PENDING"
            ],
            "default": "TAX_UNKNOWN",
            "x-displayname": "Tax Exemption",
            "x-ves-proto-enum": "ves.io.schema.TaxExemptionType"
        },
        "schemaTenantType": {
            "type": "string",
            "description": "TenantType is the type of the customer\n\nUNKNOWN indicates the field not being set\nFREEMIUM are customer that don't have their domain\nENTERPRiISE customer have their domain",
            "title": "TenantType",
            "enum": [
                "UNKNOWN",
                "FREEMIUM",
                "ENTERPRISE"
            ],
            "default": "UNKNOWN",
            "x-displayname": "Tenant type",
            "x-ves-proto-enum": "ves.io.schema.TenantType"
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Vault Secret\"\nVaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "x-displayName: \"Key\"\nx-example: \"key_pem\"\nKey of the individual secret. Vault Secrets are stored as key-value pair.\nIf user is only interested in one value from the map, this field should be set to the corresponding key.\nIf not provided entire secret will be returned.",
                    "title": "Key"
                },
                "location": {
                    "type": "string",
                    "description": "x-displayName: \"Location\"\nx-required\nx-example: \"v1/data/vhost_key\"\nPath to secret in Vault.",
                    "title": "Location"
                },
                "provider": {
                    "type": "string",
                    "description": "x-displayName: \"Provider\"\nx-required\nx-example: \"vault-vh-provider\"\nName of the Secret Management Access object that contains information about the backend Vault.",
                    "title": "Provider"
                },
                "secret_encoding": {
                    "description": "x-displayName: \"Secret Encoding\"\nThis field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType"
                },
                "version": {
                    "type": "integer",
                    "description": "x-displayName: \"Version\"\nx-example: \"1\"\nVersion of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\nIf not provided latest version will be returned.",
                    "title": "Version",
                    "format": "int64"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Wingman Secret\"\nWingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "x-displayName: \"Name\"\nx-required\nx-example: \"ChargeBack-API-Key\"\nName of the secret.",
                    "title": "Name"
                }
            }
        },
        "schemacontactGlobalSpecType": {
            "type": "object",
            "description": "Instance of one single contact that can be used to communicate with customers.\nDepending on contact type we use these details to send general communication (regular, physical mail) or invoices.",
            "title": "Contact",
            "x-displayname": "Contact",
            "x-ves-proto-message": "ves.io.schema.contact.GlobalSpecType",
            "properties": {
                "address1": {
                    "type": "string",
                    "description": "\n\nExample: - \"1234 Main road\"-",
                    "title": "address1",
                    "x-displayname": "Address Line 1",
                    "x-ves-example": "1234 Main road"
                },
                "address2": {
                    "type": "string",
                    "description": "\n\nExample: - \"P.O BOX 56\"-",
                    "title": "address2",
                    "x-displayname": "Address Line 2",
                    "x-ves-example": "P.O BOX 56"
                },
                "city": {
                    "type": "string",
                    "description": "\n\nExample: - \"Sunnyvale\"-",
                    "title": "city",
                    "x-displayname": "City",
                    "x-ves-example": "Sunnyvale"
                },
                "contact_type": {
                    "description": " type of the contact (snail mail, billing)",
                    "title": "contact_type",
                    "$ref": "#/definitions/contactContactType",
                    "x-displayname": "Contact Type"
                },
                "country": {
                    "type": "string",
                    "description": "\n\nExample: - \"US\"-",
                    "title": "country",
                    "x-displayname": "Country",
                    "x-ves-example": "US"
                },
                "county": {
                    "type": "string",
                    "description": "\n\nExample: - \"Santa Clara\"-",
                    "title": "county",
                    "x-displayname": "County",
                    "x-ves-example": "Santa Clara"
                },
                "phone_number": {
                    "type": "string",
                    "description": "\n\nExample: - \"+11234567890\"-",
                    "title": "phone_number",
                    "x-displayname": "Phone Number",
                    "x-ves-example": "+11234567890"
                },
                "state": {
                    "type": "string",
                    "description": "\n\nExample: - \"California\"-",
                    "title": "state",
                    "x-displayname": "State",
                    "x-ves-example": "California"
                },
                "state_code": {
                    "type": "string",
                    "description": "\n\nExample: - \"CA\"-",
                    "title": "state code",
                    "x-displayname": "State Code",
                    "x-ves-example": "CA"
                },
                "zip_code": {
                    "type": "string",
                    "description": "\n\nExample: - \"95054\"-",
                    "title": "zip_code",
                    "x-displayname": "ZIP code",
                    "x-ves-example": "95054"
                }
            }
        },
        "schemainfraprotect_informationGlobalSpecType": {
            "type": "object",
            "description": "Organisation information",
            "title": "Information",
            "x-displayname": "Information",
            "x-ves-oneof-field-as_path_choice": "[\"as_path_choice_full\",\"as_path_choice_none\",\"as_path_choice_origin\"]",
            "x-ves-oneof-field-default_tunnel_bgp_secret_choice": "[\"default_tunnel_bgp_secret\",\"default_tunnel_bgp_secret_none\"]",
            "x-ves-oneof-field-route_advertisement_management_choice": "[\"route_advertisement_mgmt_not_specified\",\"route_advertisement_mgmt_not_using_f5xc\",\"route_advertisement_mgmt_using_f5xc\"]",
            "x-ves-oneof-field-tunnel_f5_ip_usage_choice": "[\"reuse_ips\",\"use_dedicated_ips\"]",
            "x-ves-proto-message": "ves.io.schema.infraprotect_information.GlobalSpecType",
            "properties": {
                "arbor_cid": {
                    "type": "string",
                    "description": " L3/L4 provider customer ID\n\nExample: - \"value\"-",
                    "title": "L3/L4 CID",
                    "x-displayname": "L3/L4 CID",
                    "x-ves-example": "value"
                },
                "as_path_choice_full": {
                    "description": "Exclusive with [as_path_choice_none as_path_choice_origin]\n Use Matching Clean VRF's path's AS Path",
                    "title": "Full AS Path",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Full AS Path"
                },
                "as_path_choice_none": {
                    "description": "Exclusive with [as_path_choice_full as_path_choice_origin]\n No AS Path Used",
                    "title": "No AS Path",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "None"
                },
                "as_path_choice_origin": {
                    "description": "Exclusive with [as_path_choice_full as_path_choice_none]\n Use Right-Most ASN of Clean VRF's Matching Path's AS Path",
                    "title": "Origin AS Only",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Origin AS Only"
                },
                "asn": {
                    "type": "integer",
                    "description": " AS Number\n\nExample: - \"0\"-",
                    "title": "asn",
                    "format": "int32",
                    "x-displayname": "ASN",
                    "x-ves-example": "0"
                },
                "default_tunnel_bgp_secret": {
                    "description": "Exclusive with [default_tunnel_bgp_secret_none]\n Default tunnel BGP Secret",
                    "title": "Default tunnel BGP Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Default tunnel BGP Secret"
                },
                "default_tunnel_bgp_secret_none": {
                    "description": "Exclusive with [default_tunnel_bgp_secret]\n No default tunnel BGP secret",
                    "title": "No default tunnel BGP secret",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No default tunnel BGP secret"
                },
                "policer": {
                    "description": " Policer config for bandwidth restrictions",
                    "title": "Policer Config",
                    "$ref": "#/definitions/infraprotect_informationPolicer",
                    "x-displayname": "Policer Config"
                },
                "prefixes": {
                    "type": "array",
                    "description": " List of tenant 'super' prefixes noted in CIDR\n\nExample: - \"value\"-",
                    "title": "prefixes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Super prefixes",
                    "x-ves-example": "value"
                },
                "primary_network_name": {
                    "type": "string",
                    "description": " Name of the default customer network\n\nExample: - \"defensenet_local\"-",
                    "title": "Primary Network Name",
                    "x-displayname": "Primary network name",
                    "x-ves-example": "defensenet_local"
                },
                "reuse_ips": {
                    "description": "Exclusive with [use_dedicated_ips]\n Reuse IP addresses",
                    "title": "Reuse IP addresses",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Reuse IP addresses"
                },
                "route_advertisement_mgmt_not_specified": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_using_f5xc route_advertisement_mgmt_using_f5xc]\n (management choice) not specified",
                    "title": "(management choice) not specified",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Not specified"
                },
                "route_advertisement_mgmt_not_using_f5xc": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_specified route_advertisement_mgmt_using_f5xc]\n Tenant manages outside F5XC",
                    "title": "Tenant manages outside F5XC",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Tenant manages not using F5XC"
                },
                "route_advertisement_mgmt_using_f5xc": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_specified route_advertisement_mgmt_not_using_f5xc]\n Tenant manages using F5XC",
                    "title": "Tenant manages using F5XC",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Tenant manages using F5XC"
                },
                "use_dedicated_ips": {
                    "description": "Exclusive with [reuse_ips]\n Use dedicated IP addresses",
                    "title": "Use dedicated IP addresses",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Use dedicated IP addresses"
                },
                "uuid": {
                    "type": "string",
                    "description": " Organisation UUID\n\nExample: - \"value\"-",
                    "title": "uuid",
                    "x-displayname": "Uuid",
                    "x-ves-example": "value"
                }
            }
        },
        "schemasignupErrorCode": {
            "type": "string",
            "description": "ErrorCode is used to know the specific reason for signup registration failures\n\n - ETOKEN_OK: token related codes go here\n - EUSER_OK: user related codes go here\n - ECONTACT_VALIDATE_OK: contact validation codes go here\nValidation is ok\n - ECONTACT_EMPTY_COUNTRY: Empty country during validation of a contact\n - ECONTACT_EMPTY_ZIP_CODE: Empty zip code during validation of a contact\n - ECONTACT_UNKNOWN_COUNTRY: A given country is not present in the configured list of country-zipCodeRegexp\n - ECONTACT_INVALID_ZIP: A given zip doesn't match a configured regexp for a given country\n - EOK: EOK indicates no error\n - ENO_STATES: ENO_STATES indicates no states in a country\n - ENO_CITIES: ENO_CITIES indicates no cities in country/state",
            "title": "error code",
            "enum": [
                "EUNKNOWN",
                "ETOKEN_OK",
                "ETOKEN_FAILED",
                "ETOKEN_NOTFOUND",
                "ETOKEN_USED",
                "ETOKEN_EXPIRED",
                "EUSER_OK",
                "EUSER_EXISTS",
                "EUSER_FAILED",
                "ECONTACT_VALIDATE_OK",
                "ECONTACT_EMPTY_COUNTRY",
                "ECONTACT_EMPTY_ZIP_CODE",
                "ECONTACT_UNKNOWN_COUNTRY",
                "ECONTACT_INVALID_ZIP",
                "EOK",
                "ENO_STATES",
                "ENO_CITIES"
            ],
            "default": "EUNKNOWN",
            "x-displayname": "Error Code",
            "x-ves-proto-enum": "ves.io.schema.signup.ErrorCode"
        },
        "schemasignupGlobalSpecType": {
            "type": "object",
            "description": "desired state of Signup",
            "title": "Signup specification",
            "x-displayname": "Signup",
            "x-ves-proto-message": "ves.io.schema.signup.GlobalSpecType",
            "properties": {
                "billing_address": {
                    "description": " address associated with the credit card details provided using the payment_provider_token\n if no billing address is provided then any address tokenized with payment_provider_token will be used - including an empty address.",
                    "title": "billing_address",
                    "$ref": "#/definitions/schemacontactGlobalSpecType",
                    "x-displayname": "Billing Address"
                },
                "billing_provider_account_id": {
                    "type": "string",
                    "description": " Id of the billing provider account created to verify the billing info provided with this object.\n The id is then used to ensure no more duplicate billing account is created.",
                    "title": "billing_provider_account_id",
                    "x-displayname": "Billing provider account id"
                },
                "company": {
                    "description": " company details (enterprise only), name, email",
                    "title": "company",
                    "$ref": "#/definitions/schemauserGlobalSpecType",
                    "x-displayname": "Company"
                },
                "company_contact": {
                    "description": " contact details of the enterprise customer",
                    "title": "company contact",
                    "$ref": "#/definitions/schemacontactGlobalSpecType",
                    "x-displayname": "Company Contact"
                },
                "company_name": {
                    "type": "string",
                    "description": " company name (enterprise only)\n\nExample: - \"ACME Ltd.\"-",
                    "title": "company name",
                    "x-displayname": "Company Name",
                    "x-ves-example": "ACME Ltd."
                },
                "contact_number": {
                    "type": "string",
                    "description": " phone contact number\n obsolete\n\nExample: - \"+11234567890\"-",
                    "title": "contact_number",
                    "x-displayname": "Contact Number",
                    "x-ves-example": "+11234567890"
                },
                "crm_details": {
                    "description": " CrmDetails message to include crm info in source pipeline.",
                    "title": "crm_details",
                    "$ref": "#/definitions/schemaCRMInfo",
                    "x-displayname": "CrmDetails"
                },
                "currency": {
                    "type": "string",
                    "description": " preferred currency on the tenant level - individual billing accounts may\n override this.\n\nExample: - \"USD\"-",
                    "title": "currency",
                    "x-displayname": "Currency",
                    "x-ves-example": "USD"
                },
                "customer": {
                    "description": " customer details (personal/enterprise)",
                    "title": "customer",
                    "$ref": "#/definitions/schemauserGlobalSpecType",
                    "x-displayname": "Customer"
                },
                "customer_contact": {
                    "description": " contact details of the customer",
                    "title": "customer contact",
                    "$ref": "#/definitions/schemacontactGlobalSpecType",
                    "x-displayname": "Customer Contact"
                },
                "domain": {
                    "type": "string",
                    "description": " domain the customer chose to use - enterprise customers only.\n\nExample: - \"value\"-",
                    "title": "domain",
                    "x-displayname": "Domain",
                    "x-ves-example": "value"
                },
                "email": {
                    "type": "string",
                    "description": " email of the customer (ideally someone who's responsible for the company\n account)\n obsolete\n\nExample: - \"customer@email.com\"-",
                    "title": "email",
                    "x-displayname": "Email",
                    "x-ves-example": "customer@email.com"
                },
                "first_name": {
                    "type": "string",
                    "description": " first name of the customer\n obsolete\n\nExample: - \"John\"-",
                    "title": "first_name",
                    "x-displayname": "First Name",
                    "x-ves-example": "John"
                },
                "infraprotect_info": {
                    "description": " Optional information that allows link any existing Infraprotect customer to Voltconsole",
                    "title": "infra protect info",
                    "$ref": "#/definitions/schemainfraprotect_informationGlobalSpecType",
                    "x-displayname": "Infraprotect information"
                },
                "last_name": {
                    "type": "string",
                    "description": " last name of the customer (the superuser)\n obsolete\n\nExample: - \"Doe\"-",
                    "title": "last_name",
                    "x-displayname": "Last Name",
                    "x-ves-example": "Doe"
                },
                "locale": {
                    "type": "string",
                    "description": " locale of this sign up\n\nExample: - \"en-us\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "locale",
                    "x-displayname": "Locale",
                    "x-ves-example": "en-us",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "payment_provider_token": {
                    "type": "string",
                    "description": " payment provider token (for credit card details)\n\nExample: - \"tok_1234567890\"-",
                    "title": "payment_provider_token",
                    "x-displayname": "Payment Provider Token",
                    "x-ves-example": "tok_1234567890"
                },
                "support_plan_name": {
                    "type": "string",
                    "description": " what sort of support plan the customer will be on.\n\nExample: - \"xxxx-yyyy-zzzz-1111\"-",
                    "title": "support_plan_name",
                    "x-displayname": "Support Plan Name",
                    "x-ves-example": "xxxx-yyyy-zzzz-1111"
                },
                "tax_exempt": {
                    "description": " indicates the customer is tax exempt. once confirmed with the finance team the customer will not be charged taxes.\n\nExample: - \"TAX_EXEMPT\"-",
                    "title": "tax exempt flag",
                    "$ref": "#/definitions/schemaTaxExemptionType",
                    "x-displayname": "Tax exemption",
                    "x-ves-example": "TAX_EXEMPT"
                },
                "token": {
                    "type": "string",
                    "description": " token of the user requesting for.\n Valid tokens are internally generated in the system and shared with respective customers.\n Onboarding of new customers will proceed only when a valid token along with the email is provided during the signup process.\n\nExample: - \"tok_1234567890\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "token of the user",
                    "x-displayname": "Token",
                    "x-ves-example": "tok_1234567890",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "tos_accepted": {
                    "type": "string",
                    "description": " t\u0026c accepted date as millis from 01/01/1970 UTC\n\nExample: - \"1569926163000\"-",
                    "title": "tos_accepted",
                    "format": "int64",
                    "x-displayname": "TOS Accepted",
                    "x-ves-example": "1569926163000"
                },
                "tos_accepted_at": {
                    "type": "string",
                    "description": " tos accepted timestamp.\n\nExample: - \"2020-04-20T12:32:51.341959216Z\"-",
                    "title": "tos_accepted_at",
                    "format": "date-time",
                    "x-displayname": "TosAcceptedAt",
                    "x-ves-example": "2020-04-20T12:32:51.341959216Z"
                },
                "tos_version": {
                    "type": "string",
                    "description": " indicates the version of ToS customer approved during signup. Any new version will require the customer to re-approve during login.\n\nExample: - \"v1.2\"-",
                    "title": "version of terms of services the customer accepted",
                    "x-displayname": "TOS version",
                    "x-ves-example": "v1.2"
                },
                "type": {
                    "description": " what tenant type we're processing (FREEMIUM, ENTERPRISE ...)\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "type",
                    "$ref": "#/definitions/schemaTenantType",
                    "x-displayname": "Tenant Type",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "usage_plan_name": {
                    "type": "string",
                    "description": " what sort of usage plan the customer will be on.\n\nExample: - \"xxxx-yyyy-zzzz-1111\"-",
                    "title": "usage_plan_name",
                    "x-displayname": "Usage Plan Name",
                    "x-ves-example": "xxxx-yyyy-zzzz-1111"
                }
            }
        },
        "schemauserGlobalSpecType": {
            "type": "object",
            "title": "GlobalSpecType",
            "x-displayname": "Global Specification",
            "x-ves-proto-message": "ves.io.schema.user.GlobalSpecType",
            "properties": {
                "contacts": {
                    "type": "array",
                    "description": " Contact information for user",
                    "title": "contacts",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    },
                    "x-displayname": "Contact"
                },
                "domain_owner": {
                    "type": "boolean",
                    "description": " Domain owner is the first user who registered or signed up the associated Tenant.\n User created via signup flow will have this value set to true.\n Few restrictions apply to this user w.r.t role update and deletion.\n\nExample: - \"true\"-",
                    "title": "Domain Owner",
                    "format": "boolean",
                    "x-displayname": "Domain Owner",
                    "x-ves-example": "true"
                },
                "email": {
                    "type": "string",
                    "description": " user's email\n\nExample: - \"value\"-",
                    "title": "email",
                    "x-displayname": "Email",
                    "x-ves-example": "value"
                },
                "first_name": {
                    "type": "string",
                    "description": " user's first name\n\nExample: - \"value\"-",
                    "title": "first_name",
                    "x-displayname": "First Name",
                    "x-ves-example": "value"
                },
                "groups": {
                    "type": "array",
                    "description": " Reference to the user groups.",
                    "title": "Groups",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    },
                    "x-displayname": "Groups"
                },
                "idm_type": {
                    "description": " Type of the identity management who is managing this user.",
                    "title": "IDM Type",
                    "$ref": "#/definitions/userIdmType",
                    "x-displayname": "Identity Management Type"
                },
                "last_login_timestamp": {
                    "type": "string",
                    "description": " Last successful login timestamp of the user.",
                    "title": "last_login_timestamp",
                    "format": "date-time",
                    "x-displayname": "Last Login Timestamp"
                },
                "last_name": {
                    "type": "string",
                    "description": " user's last name\n\nExample: - \"value\"-",
                    "title": "last_name",
                    "x-displayname": "Last Name",
                    "x-ves-example": "value"
                },
                "locale": {
                    "type": "string",
                    "description": " locale of the user (defaults to English)\n\nExample: - \"value\"-",
                    "title": "locale",
                    "x-displayname": "Locale",
                    "x-ves-example": "value"
                },
                "state": {
                    "description": " State of the user.",
                    "title": "State",
                    "$ref": "#/definitions/userFSMState",
                    "x-displayname": "State"
                },
                "sync_mode": {
                    "description": " Denotes if this is an externally managed entity imported into UAM by SCIM protocol, or self managed.\n\nExample: - \"self\"-",
                    "title": "Sync Mode",
                    "$ref": "#/definitions/schemaSyncMode",
                    "x-displayname": "Sync Mode",
                    "x-ves-example": "self"
                },
                "tos_accepted": {
                    "type": "string",
                    "description": " tos accepted version, this field is deprecated refer the fields -tos_accepted_at- and -tos_version- instead.\n\nExample: - \"1.0\"-",
                    "title": "tos_accepted",
                    "x-displayname": "TOS Accepted",
                    "x-ves-example": "1.0"
                },
                "tos_accepted_at": {
                    "type": "string",
                    "description": " tos accepted timestamp.\n\nExample: - \"2020-04-20T12:32:51.341959216Z\"-",
                    "title": "tos_accepted_at",
                    "format": "date-time",
                    "x-displayname": "TOS Accepted Timestamp",
                    "x-ves-example": "2020-04-20T12:32:51.341959216Z"
                },
                "tos_version": {
                    "type": "string",
                    "description": " tos accepted version\n\nExample: - \"v1.0\"-",
                    "title": "tos_version",
                    "x-displayname": "TOS version",
                    "x-ves-example": "v1.0"
                },
                "type": {
                    "description": " type of the user",
                    "title": "type",
                    "$ref": "#/definitions/userUserType",
                    "x-displayname": "Type"
                }
            }
        },
        "signupCityItem": {
            "type": "object",
            "description": "CityItem contains a single element of city list response.",
            "title": "City item",
            "x-displayname": "City item",
            "x-ves-proto-message": "ves.io.schema.signup.CityItem",
            "properties": {
                "additional_info": {
                    "type": "object",
                    "description": " Any additional information related to the city\n\nExample: - \"[alternative_name:Madras]\"-",
                    "title": "additional information",
                    "x-displayname": "additional information",
                    "x-ves-example": "[alternative_name:Madras]"
                },
                "city_name": {
                    "type": "string",
                    "description": " Name of the city in the human readable form (can be used as a description)\n\nExample: - \"Chennai\"-",
                    "title": "city name",
                    "x-displayname": "City",
                    "x-ves-example": "Chennai"
                }
            }
        },
        "signupCountryItem": {
            "type": "object",
            "description": "CountryItem contains a single element of country list response.",
            "title": "Country item",
            "x-displayname": "Country item",
            "x-ves-proto-message": "ves.io.schema.signup.CountryItem",
            "properties": {
                "additional_info": {
                    "type": "object",
                    "description": " Any additional information related to the country\n\nExample: - \"[zip_code_validation:^.{2,}$]\"-",
                    "title": "additional information",
                    "x-displayname": "additional information",
                    "x-ves-example": "[zip_code_validation:^.{2,}$]"
                },
                "country_code": {
                    "type": "string",
                    "description": " x-displayName : \"Country code\"\n 2 characters country code as described in https://en.wikipedia.org/wiki/ISO_3166-1, column -alpha-2-\n\nExample: - \"US\"-",
                    "title": "country code",
                    "x-ves-example": "US"
                },
                "country_name": {
                    "type": "string",
                    "description": " Name of the country in the human readable form (can be used as a description)\n\nExample: - \"USA\"-",
                    "title": "country name",
                    "x-displayname": "Country name",
                    "x-ves-example": "USA"
                }
            }
        },
        "signupGetResponse": {
            "type": "object",
            "description": "Signup object including its status. Use it when you want to see the progress of the signup flow.",
            "title": "Get response",
            "x-displayname": "Signup Get Response",
            "x-ves-proto-message": "ves.io.schema.signup.GetResponse",
            "properties": {
                "object": {
                    "description": " Signup object.",
                    "title": "Signup object",
                    "$ref": "#/definitions/signupObject",
                    "x-displayname": "Signup Object"
                },
                "status": {
                    "type": "array",
                    "description": " Signup object status, including any failures.",
                    "title": "Signup status object",
                    "items": {
                        "$ref": "#/definitions/signupStatusObject"
                    },
                    "x-displayname": "Signup Status Object"
                }
            }
        },
        "signupListCitiesResponse": {
            "type": "object",
            "description": "ListCitiesResponse contains a list of cities (for a country) supported by the platform",
            "title": "City list response",
            "x-displayname": "City response",
            "x-ves-proto-message": "ves.io.schema.signup.ListCitiesResponse",
            "properties": {
                "cities": {
                    "type": "array",
                    "description": " List of all cities in",
                    "title": "available cities in the country",
                    "items": {
                        "$ref": "#/definitions/signupCityItem"
                    },
                    "x-displayname": "Cities"
                },
                "error_code": {
                    "description": " Error flag - EOK, ENO_CITIES can be returned",
                    "title": "error code",
                    "$ref": "#/definitions/schemasignupErrorCode",
                    "x-displayname": "Error Code"
                }
            }
        },
        "signupListCountriesResponse": {
            "type": "object",
            "description": "ListCountriesResponse contains a list of countries supported by the platform",
            "title": "Country list response",
            "x-displayname": "Country response",
            "x-ves-proto-message": "ves.io.schema.signup.ListCountriesResponse",
            "properties": {
                "countries": {
                    "type": "array",
                    "description": " List of all countries supported by the platform",
                    "title": "available  countries",
                    "items": {
                        "$ref": "#/definitions/signupCountryItem"
                    },
                    "x-displayname": "Countries"
                }
            }
        },
        "signupListStatesResponse": {
            "type": "object",
            "description": "ListStatesResponse contains a list of states supported by the platform",
            "title": "Country list response",
            "x-displayname": "Country response",
            "x-ves-proto-message": "ves.io.schema.signup.ListStatesResponse",
            "properties": {
                "error_code": {
                    "description": " Error flag - EOK, ENO_STATES can be returned",
                    "title": "error code",
                    "$ref": "#/definitions/schemasignupErrorCode",
                    "x-displayname": "Error Code"
                },
                "states": {
                    "type": "array",
                    "description": " List of all states of a country supported by the platform",
                    "title": "available states in a country",
                    "items": {
                        "$ref": "#/definitions/signupStateItem"
                    },
                    "x-displayname": "States"
                }
            }
        },
        "signupObject": {
            "type": "object",
            "description": "signup object",
            "title": "Signup",
            "x-displayname": "Signup",
            "x-ves-proto-message": "ves.io.schema.signup.Object",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of Object",
                    "title": "spec",
                    "$ref": "#/definitions/signupSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system_metadata",
                    "$ref": "#/definitions/schemaSystemObjectMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "signupSendPasswordEmailRequest": {
            "type": "object",
            "description": "SendPasswordEmailRequest is the request format for resetting the password at the time of on-boarding new customer",
            "title": "Request to resend password email",
            "x-displayname": "Signup Resend Password Email Request",
            "x-ves-proto-message": "ves.io.schema.signup.SendPasswordEmailRequest",
            "properties": {
                "cname": {
                    "type": "string",
                    "description": " domain under which the tenant belongs to\n\nExample: - \"volterra\"-",
                    "title": "cname",
                    "x-displayname": "Domain Name",
                    "x-ves-example": "volterra"
                },
                "email": {
                    "type": "string",
                    "description": " email of the user requesting for\n\nExample: - \"admin@email.com\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "email of the user",
                    "x-displayname": "email",
                    "x-ves-example": "admin@email.com",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "signupSendPasswordEmailResponse": {
            "type": "object",
            "description": "SendPasswordEmailResponse is an empty response after an email had been sent..",
            "title": "Send password email response",
            "x-displayname": "Send Password Email Response",
            "x-ves-proto-message": "ves.io.schema.signup.SendPasswordEmailResponse"
        },
        "signupSpecType": {
            "type": "object",
            "description": "Shape of the signup specification",
            "title": "Signup specification",
            "x-displayname": "Signup object specification",
            "x-ves-proto-message": "ves.io.schema.signup.SpecType",
            "properties": {
                "gc_spec": {
                    "title": "gc_spec",
                    "$ref": "#/definitions/schemasignupGlobalSpecType",
                    "x-displayname": "GC Spec"
                }
            }
        },
        "signupStateItem": {
            "type": "object",
            "description": "CountryItem contains a single element of country list response.",
            "title": "Country item",
            "x-displayname": "Country item",
            "x-ves-proto-message": "ves.io.schema.signup.StateItem",
            "properties": {
                "additional_info": {
                    "type": "object",
                    "description": " Any additional information related to the state\n\nExample: - \"[zip_code_validation:^.{2,}$]\"-",
                    "title": "additional information",
                    "x-displayname": "additional information",
                    "x-ves-example": "[zip_code_validation:^.{2,}$]"
                },
                "state_code": {
                    "type": "string",
                    "description": " 2 characters state code as described in https://en.wikipedia.org/wiki/ISO_3166-2:US/CA/IN, column -code- (excluding the leading country code)\n\nExample: - \"TN\"-",
                    "title": "state code",
                    "x-displayname": "State code",
                    "x-ves-example": "TN"
                },
                "state_name": {
                    "type": "string",
                    "description": " Name of the state in the human readable form (can be used as a description)\n\nExample: - \"Tamil Nadu\"-",
                    "title": "state name",
                    "x-displayname": "State name",
                    "x-ves-example": "Tamil Nadu"
                }
            }
        },
        "signupStatusObject": {
            "type": "object",
            "description": "Most recently observed status of signup object",
            "title": "Signup status",
            "x-displayname": "Signup object status",
            "x-ves-proto-message": "ves.io.schema.signup.StatusObject",
            "properties": {
                "billingAccount": {
                    "type": "array",
                    "title": "Billing account reference",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    }
                },
                "conditions": {
                    "type": "array",
                    "description": " Conditions",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " Object reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                },
                "tenant": {
                    "type": "array",
                    "title": "Tenant reference",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    }
                },
                "user": {
                    "type": "array",
                    "title": "User reference",
                    "items": {
                        "$ref": "#/definitions/schemaObjectRefType"
                    }
                }
            }
        },
        "signupValidateContactRequest": {
            "type": "object",
            "description": "Validate contacts request",
            "title": "Request to validate contact",
            "x-displayname": "Validate contact request",
            "x-ves-proto-message": "ves.io.schema.signup.ValidateContactRequest",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " The name of the configuration object to be fetched. Is not used for now.\n\nExample: - \"value\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "value"
                },
                "namespace": {
                    "type": "string",
                    "description": " The namespace in which the configuration object is present. Is not used for now.\n\nExample: - \"value\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "value"
                },
                "spec": {
                    "description": " Contact data to be validated.",
                    "title": "Contact specification",
                    "$ref": "#/definitions/schemacontactGlobalSpecType",
                    "x-displayname": "Contact Specification"
                }
            }
        },
        "signupValidateContactResponse": {
            "type": "object",
            "description": "ValidateRegistrationResponse is the response that indicates if the contact is valid or not.\nIf the contact is not valid, a corresponding error code is returned.\nA list of supported validation is provided under Validate rpc call documentation.",
            "title": "Response to validate contact",
            "x-displayname": "Validate contact response",
            "x-ves-proto-message": "ves.io.schema.signup.ValidateContactResponse",
            "properties": {
                "err": {
                    "description": " x-displayName : \"Error\"\n err gives specific reason why a given contact is invalid.",
                    "title": "error code",
                    "$ref": "#/definitions/schemasignupErrorCode"
                },
                "is_valid": {
                    "type": "boolean",
                    "description": " flag indicates if the contact is valid\n\nExample: - \"true\"-",
                    "title": "Is a valid contact",
                    "format": "boolean",
                    "x-displayname": "Is Contact Valid",
                    "x-ves-example": "true"
                },
                "validation_errors": {
                    "type": "array",
                    "description": " x-displayName : \"Validation errors\"\n collection of validation errors",
                    "title": "validation errors",
                    "items": {
                        "$ref": "#/definitions/signupValidationErrorField"
                    }
                }
            }
        },
        "signupValidateRegistrationRequest": {
            "type": "object",
            "description": "ValidateRegistrationRequest is the request body parameeters required to validate the registration",
            "title": "Request to validate registration",
            "x-displayname": "Request to Validate Registration",
            "x-ves-proto-message": "ves.io.schema.signup.ValidateRegistrationRequest",
            "properties": {
                "email": {
                    "type": "string",
                    "description": " email of the user requesting for\n\nExample: - \"admin@email.com\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "email of the user",
                    "x-displayname": "Email",
                    "x-ves-example": "admin@email.com",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "tenant_type": {
                    "description": " tenant type of the user (FREEMIUM, ENTERPRISE, ...)\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Tenant type",
                    "$ref": "#/definitions/schemaTenantType",
                    "x-displayname": "Tenant Type",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "token": {
                    "type": "string",
                    "description": " token of the user requesting for\n\nExample: - \"value\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "token of the user",
                    "x-displayname": "Token",
                    "x-ves-example": "value",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "signupValidateRegistrationResponse": {
            "type": "object",
            "description": "ValidateRegistrationResponse is the response that indicates if the registration is valid or not.\nFor a brand new registration, the valid_registration is set to true that indicates that signup flow can flow through.\nIn case of an existing user, the valid_registration is set to false.",
            "title": "Response to validate registration",
            "x-displayname": "Response to Validate Resistration",
            "x-ves-proto-message": "ves.io.schema.signup.ValidateRegistrationResponse",
            "properties": {
                "err": {
                    "description": " x-displayName : \"Error\"\n err gives specific reason for an invalid registration",
                    "title": "error code",
                    "$ref": "#/definitions/schemasignupErrorCode"
                },
                "valid_registration": {
                    "type": "boolean",
                    "description": " valid registration flag indicates if the registration is valid\n\nExample: - \"true\"-",
                    "title": "Valid registration",
                    "format": "boolean",
                    "x-displayname": "Valid Registration",
                    "x-ves-example": "true"
                }
            }
        },
        "signupValidationErrorField": {
            "type": "object",
            "description": "Contains information on a single validation error",
            "title": "Validation error field",
            "x-displayname": "Validation error field",
            "x-ves-proto-message": "ves.io.schema.signup.ValidationErrorField",
            "properties": {
                "error_field": {
                    "type": "string",
                    "description": " path indicates the field that is not valid\n\nExample: - \"zip_code\"-",
                    "title": "Error field",
                    "x-displayname": "Error field",
                    "x-ves-example": "zip_code"
                },
                "error_message": {
                    "type": "string",
                    "description": " more descriptive error message\n\nExample: - \"Zip code should be a 000-00000 format\"-",
                    "title": "Error message",
                    "x-displayname": "Error message",
                    "x-ves-example": "Zip code should be a 000-00000 format"
                }
            }
        },
        "userFSMState": {
            "type": "string",
            "description": "States describes possible states for user.\n\n - StateUndefined: StateUndefined\n\nUser state when it was created without any state.\n - StateCreating: StateCreating\n\nUser state during initial creation. It includes registering in IDM, creating user-settings object, etc...\n - StateCreateFailed: StateCreateFailed\n\nUser state when initial creation was failed by some reason and must be retried\nafter issue is solved.\n - StateActive: StateActive\n\nUser state of completely created and available to use user.\n - StateDisabled: StateDisabled\n\nUser is currently disabled, login is not possible for this user, but it may become active again in the future.",
            "title": "States",
            "enum": [
                "StateUndefined",
                "StateCreating",
                "StateCreateFailed",
                "StateActive",
                "StateDisabled"
            ],
            "default": "StateUndefined",
            "x-displayname": "States",
            "x-ves-proto-enum": "ves.io.schema.user.FSMState"
        },
        "userIdmType": {
            "type": "string",
            "description": "IdmType is to identify who is managing the user.\n\n - SSO: SSO User\nExternally managed Single Sign On based user imported into UAM.\n - VOLTERRA_MANAGED: F5XC Managed Local user\nF5XC managed local user. Full user life cycle is managed by volterra UAM and Identity.\n - UNDEFINED: Undefined\nUndefined IDM type",
            "title": "IDM Type",
            "enum": [
                "SSO",
                "VOLTERRA_MANAGED",
                "UNDEFINED"
            ],
            "default": "SSO",
            "x-displayname": "Identity Management Type",
            "x-ves-proto-enum": "ves.io.schema.user.IdmType"
        },
        "userUserType": {
            "type": "string",
            "description": "UserType is to identify the type of user\n\n - USER: User\nRegular User\n - SERVICE: Service User\nUser for accessing only APIs/services\n - DEBUG: Debug\nUser which was created by tenant admin for volterra-support team.",
            "title": "UserType",
            "enum": [
                "USER",
                "SERVICE",
                "DEBUG"
            ],
            "default": "USER",
            "x-displayname": "User Type",
            "x-ves-proto-enum": "ves.io.schema.user.UserType"
        }
    },
    "x-displayname": "Signup",
    "x-ves-proto-file": "ves.io/schema/signup/public_customapi.proto"
}`

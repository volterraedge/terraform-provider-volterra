// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package signup

import (
	"bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create CustomPrivateAPIEywaprime GRPC Client satisfying server.CustomClient
type CustomPrivateAPIEywaprimeGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient CustomPrivateAPIEywaprimeClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *CustomPrivateAPIEywaprimeGrpcClient) doRPCCreateV2(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &CreateV2Request{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.CreateV2Request", yamlReq)
	}
	rsp, err := c.grpcClient.CreateV2(ctx, req, opts...)
	return rsp, err
}

func (c *CustomPrivateAPIEywaprimeGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewCustomPrivateAPIEywaprimeGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &CustomPrivateAPIEywaprimeGrpcClient{
		conn:       cc,
		grpcClient: NewCustomPrivateAPIEywaprimeClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["CreateV2"] = ccl.doRPCCreateV2

	ccl.rpcFns = rpcFns

	return ccl
}

// Create CustomPrivateAPIEywaprime REST Client satisfying server.CustomClient
type CustomPrivateAPIEywaprimeRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *CustomPrivateAPIEywaprimeRestClient) doRPCCreateV2(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &CreateV2Request{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.signup.CreateV2Request: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("account_details", fmt.Sprintf("%v", req.AccountDetails))
		q.Add("billing_details", fmt.Sprintf("%v", req.BillingDetails))
		q.Add("company_details", fmt.Sprintf("%v", req.CompanyDetails))
		q.Add("source_choice", fmt.Sprintf("%v", req.SourceChoice))
		q.Add("user_details", fmt.Sprintf("%v", req.UserDetails))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &CreateV2Response{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.signup.CreateV2Response", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomPrivateAPIEywaprimeRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewCustomPrivateAPIEywaprimeRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &CustomPrivateAPIEywaprimeRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["CreateV2"] = ccl.doRPCCreateV2

	ccl.rpcFns = rpcFns

	return ccl
}

// Create customPrivateAPIEywaprimeInprocClient

// INPROC Client (satisfying CustomPrivateAPIEywaprimeClient interface)
type customPrivateAPIEywaprimeInprocClient struct {
	CustomPrivateAPIEywaprimeServer
}

func (c *customPrivateAPIEywaprimeInprocClient) CreateV2(ctx context.Context, in *CreateV2Request, opts ...grpc.CallOption) (*CreateV2Response, error) {
	ctx = server.ContextFromInprocReq(ctx, "ves.io.schema.signup.CustomPrivateAPIEywaprime.CreateV2", nil)
	return c.CustomPrivateAPIEywaprimeServer.CreateV2(ctx, in)
}

func NewCustomPrivateAPIEywaprimeInprocClient(svc svcfw.Service) CustomPrivateAPIEywaprimeClient {
	return &customPrivateAPIEywaprimeInprocClient{CustomPrivateAPIEywaprimeServer: NewCustomPrivateAPIEywaprimeServer(svc)}
}

// RegisterGwCustomPrivateAPIEywaprimeHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwCustomPrivateAPIEywaprimeHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterCustomPrivateAPIEywaprimeHandlerClient(ctx, mux, NewCustomPrivateAPIEywaprimeInprocClient(s))
}

// Create customPrivateAPIEywaprimeSrv

// SERVER (satisfying CustomPrivateAPIEywaprimeServer interface)
type customPrivateAPIEywaprimeSrv struct {
	svc svcfw.Service
}

func (s *customPrivateAPIEywaprimeSrv) CreateV2(ctx context.Context, in *CreateV2Request) (*CreateV2Response, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.signup.CustomPrivateAPIEywaprime")
	cah, ok := ah.(CustomPrivateAPIEywaprimeServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomPrivateAPIEywaprimeServer", ah)
	}

	var (
		rsp *CreateV2Response
		err error
	)

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.signup.CustomPrivateAPIEywaprime.CreateV2"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.CreateV2(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	return rsp, nil
}

func NewCustomPrivateAPIEywaprimeServer(svc svcfw.Service) CustomPrivateAPIEywaprimeServer {
	return &customPrivateAPIEywaprimeSrv{svc: svc}
}

var CustomPrivateAPIEywaprimeSwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Signup V2 API",
        "description": "Use this API to signup (v2) for F5XC service.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/ves.io.schema/introspect/write/v2/signup": {
            "post": {
                "summary": "Create V2",
                "description": "CreateV2 creates a new v2 signup request, this will trigger the signup flow and eventually result in a new customer tenant.",
                "operationId": "ves.io.schema.signup.CustomPrivateAPIEywaprime.CreateV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/signupCreateV2Response"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signupCreateV2Request"
                        }
                    }
                ],
                "tags": [
                    "CustomPrivateAPIEywaprime"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-signup-customprivateapieywaprime-createv2"
                },
                "x-ves-in-development": "true",
                "x-ves-proto-rpc": "ves.io.schema.signup.CustomPrivateAPIEywaprime.CreateV2"
            },
            "x-displayname": "Custom Private API Eywaprime",
            "x-ves-proto-service": "ves.io.schema.signup.CustomPrivateAPIEywaprime",
            "x-ves-proto-service-type": "CUSTOM_PRIVATE"
        }
    },
    "definitions": {
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by F5XC Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.\n\nExample: - \"value\"-",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider",
                    "x-ves-example": "value"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"value\"-",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaCRMInfo": {
            "type": "object",
            "description": "CRM Information",
            "title": "CRM Information",
            "x-displayname": "CRM Information",
            "x-ves-proto-message": "ves.io.schema.CRMInfo"
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 131072\n  ves.io.schema.rules.string.uri_ref: true\n",
                    "title": "URL",
                    "maxLength": 131072,
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "131072",
                        "ves.io.schema.rules.string.uri_ref": "true"
                    }
                }
            }
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "x-displayName: \"Secret Encoding\"\nSecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\n - EncodingNone: x-displayName: \"None\"\nNo Encoding\n - EncodingBase64: Base64\n\nx-displayName: \"Base64\"\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info]\n Blindfold Secret is used for the secrets managed by F5XC Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info]\n Clear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType",
                    "x-displayname": "Clear Secret"
                }
            }
        },
        "schemaTaxExemptionType": {
            "type": "string",
            "description": "TaxExemptionType holds possible tax exemption option.\n\nUNKNOWN indicates the field not being set\nTAX_REGULAR indicates customers that are required to pay taxes\nTAX_EXEMPT indicates customers exempt from paying taxes - their status needs to be verified once signup is completed.\nTAX_EXEMPT indicates customers exempt from paying taxes - their status has been verified and the customer is not being taxed by us.\nTAX_EXEMPT_VERIFICATION_FAILED indicates customers that the tax exempt verification process failed - they can contact F5XC to get more details\nTAX_EXEMPT_VERIFICATION_PENDING indicates customers that the tax exempt verification process is ongoing",
            "title": "TaxExemptionType",
            "enum": [
                "TAX_UNKNOWN",
                "TAX_REGULAR",
                "TAX_EXEMPT_UNVERIFIED",
                "TAX_EXEMPT_VERIFIED",
                "TAX_EXEMPT_VERIFICATION_FAILED",
                "TAX_EXEMPT_VERIFICATION_PENDING"
            ],
            "default": "TAX_UNKNOWN",
            "x-displayname": "Tax Exemption",
            "x-ves-proto-enum": "ves.io.schema.TaxExemptionType"
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Vault Secret\"\nVaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "x-displayName: \"Key\"\nx-example: \"key_pem\"\nKey of the individual secret. Vault Secrets are stored as key-value pair.\nIf user is only interested in one value from the map, this field should be set to the corresponding key.\nIf not provided entire secret will be returned.",
                    "title": "Key"
                },
                "location": {
                    "type": "string",
                    "description": "x-displayName: \"Location\"\nx-required\nx-example: \"v1/data/vhost_key\"\nPath to secret in Vault.",
                    "title": "Location"
                },
                "provider": {
                    "type": "string",
                    "description": "x-displayName: \"Provider\"\nx-required\nx-example: \"vault-vh-provider\"\nName of the Secret Management Access object that contains information about the backend Vault.",
                    "title": "Provider"
                },
                "secret_encoding": {
                    "description": "x-displayName: \"Secret Encoding\"\nThis field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType"
                },
                "version": {
                    "type": "integer",
                    "description": "x-displayName: \"Version\"\nx-example: \"1\"\nVersion of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\nIf not provided latest version will be returned.",
                    "title": "Version",
                    "format": "int64"
                }
            }
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Wingman Secret\"\nWingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "x-displayName: \"Name\"\nx-required\nx-example: \"ChargeBack-API-Key\"\nName of the secret.",
                    "title": "Name"
                }
            }
        },
        "schemainfraprotect_informationGlobalSpecType": {
            "type": "object",
            "description": "Organisation information",
            "title": "information",
            "x-displayname": "Information",
            "x-ves-oneof-field-as_path_choice": "[\"as_path_choice_full\",\"as_path_choice_none\",\"as_path_choice_origin\"]",
            "x-ves-oneof-field-default_tunnel_bgp_secret_choice": "[\"default_tunnel_bgp_secret\",\"default_tunnel_bgp_secret_none\"]",
            "x-ves-oneof-field-route_advertisement_management_choice": "[\"route_advertisement_mgmt_not_specified\",\"route_advertisement_mgmt_not_using_f5xc\",\"route_advertisement_mgmt_using_f5xc\"]",
            "x-ves-oneof-field-tunnel_f5_ip_usage_choice": "[\"reuse_ips\",\"use_dedicated_ips\"]",
            "x-ves-proto-message": "ves.io.schema.infraprotect_information.GlobalSpecType",
            "properties": {
                "arbor_cid": {
                    "type": "string",
                    "description": " L3/L4 provider customer ID\n\nExample: - \"value\"-",
                    "title": "L3/L4 CID",
                    "x-displayname": "L3/L4 CID",
                    "x-ves-example": "value"
                },
                "as_path_choice_full": {
                    "description": "Exclusive with [as_path_choice_none as_path_choice_origin]\n Use Matching Clean VRF's path's AS Path",
                    "title": "Full AS Path",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Full AS Path"
                },
                "as_path_choice_none": {
                    "description": "Exclusive with [as_path_choice_full as_path_choice_origin]\n No AS Path Used",
                    "title": "No AS Path",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "None"
                },
                "as_path_choice_origin": {
                    "description": "Exclusive with [as_path_choice_full as_path_choice_none]\n Use Right-Most ASN of Clean VRF's Matching Path's AS Path",
                    "title": "Origin AS Only",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Origin AS Only"
                },
                "asn": {
                    "type": "integer",
                    "description": " AS Number\n\nExample: - \"0\"-",
                    "title": "asn",
                    "format": "int32",
                    "x-displayname": "ASN",
                    "x-ves-example": "0"
                },
                "default_tunnel_bgp_secret": {
                    "description": "Exclusive with [default_tunnel_bgp_secret_none]\n Default tunnel BGP Secret",
                    "title": "Default tunnel BGP Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Default tunnel BGP Secret"
                },
                "default_tunnel_bgp_secret_none": {
                    "description": "Exclusive with [default_tunnel_bgp_secret]\n No default tunnel BGP secret",
                    "title": "No default tunnel BGP secret",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No default tunnel BGP secret"
                },
                "prefixes": {
                    "type": "array",
                    "description": " List of tenant 'super' prefixes noted in CIDR\n\nExample: - \"value\"-",
                    "title": "prefixes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Super prefixes",
                    "x-ves-example": "value"
                },
                "primary_network_name": {
                    "type": "string",
                    "description": " Name of the default customer network\n\nExample: - \"defensenet_local\"-",
                    "title": "Primary Network Name",
                    "x-displayname": "Primary network name",
                    "x-ves-example": "defensenet_local"
                },
                "reuse_ips": {
                    "description": "Exclusive with [use_dedicated_ips]\n Reuse IP addresses",
                    "title": "Reuse IP addresses",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Reuse IP addresses"
                },
                "route_advertisement_mgmt_not_specified": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_using_f5xc route_advertisement_mgmt_using_f5xc]\n (management choice) not specified",
                    "title": "(management choice) not specified",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Not specified"
                },
                "route_advertisement_mgmt_not_using_f5xc": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_specified route_advertisement_mgmt_using_f5xc]\n Tenant manages outside F5XC",
                    "title": "Tenant manages outside F5XC",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Tenant manages not using F5XC"
                },
                "route_advertisement_mgmt_using_f5xc": {
                    "description": "Exclusive with [route_advertisement_mgmt_not_specified route_advertisement_mgmt_not_using_f5xc]\n Tenant manages using F5XC",
                    "title": "Tenant manages using F5XC",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Tenant manages using F5XC"
                },
                "use_dedicated_ips": {
                    "description": "Exclusive with [reuse_ips]\n Use dedicated IP addresses",
                    "title": "Use dedicated IP addresses",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Use dedicated IP addresses"
                },
                "uuid": {
                    "type": "string",
                    "description": " Organisation UUID\n\nExample: - \"value\"-",
                    "title": "uuid",
                    "x-displayname": "Uuid",
                    "x-ves-example": "value"
                }
            }
        },
        "signupAccountMeta": {
            "type": "object",
            "title": "Account Meta",
            "x-displayname": "Account Meta",
            "x-ves-proto-message": "ves.io.schema.signup.AccountMeta",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": " domain of the account\n\nExample: - \"john-deer\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 17\n  ves.io.schema.rules.string.not_in: [\\\"ves\\\",\\\"volterra\\\"]\n  ves.io.schema.rules.string.ves_object_name: true\n",
                    "title": "Domain",
                    "maxLength": 17,
                    "x-displayname": "Domain",
                    "x-ves-example": "john-deer",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "17",
                        "ves.io.schema.rules.string.not_in": "[\\\"ves\\\",\\\"volterra\\\"]",
                        "ves.io.schema.rules.string.ves_object_name": "true"
                    }
                },
                "locale": {
                    "type": "string",
                    "description": " locale of the account\n\nExample: - \"en-US\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 16\n",
                    "title": "Locale",
                    "maxLength": 16,
                    "x-displayname": "Locale",
                    "x-ves-example": "en-US",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "16"
                    }
                },
                "tos_accepted_at": {
                    "type": "string",
                    "description": " terms of services accepted timestamp\n\nExample: - \"2020-04-20T12:32:51.341959216Z\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.timestamp.lt_now: true\n",
                    "title": "TOS Accepted Timestamp",
                    "format": "date-time",
                    "x-displayname": "TOS Accepted Timestamp",
                    "x-ves-example": "2020-04-20T12:32:51.341959216Z",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.timestamp.lt_now": "true"
                    }
                },
                "tos_version": {
                    "type": "string",
                    "description": " terms of services version\n\nExample: - \"v2022.3.14\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 12\n  ves.io.schema.rules.string.min_len: 2\n",
                    "title": "TOS Version",
                    "minLength": 2,
                    "maxLength": 12,
                    "x-displayname": "TOS Version",
                    "x-ves-example": "v2022.3.14",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "12",
                        "ves.io.schema.rules.string.min_len": "2"
                    }
                }
            }
        },
        "signupBillingMeta": {
            "type": "object",
            "title": "Billing Meta",
            "x-displayname": "Billing Meta",
            "x-ves-proto-message": "ves.io.schema.signup.BillingMeta",
            "properties": {
                "billing_address": {
                    "description": " billing address for the account, if not provided, the company mailing address is assumed as the billing address",
                    "title": "Billing Address",
                    "$ref": "#/definitions/signupContactMeta",
                    "x-displayname": "Billing Address"
                },
                "currency": {
                    "type": "string",
                    "description": " currency for the account\n\nExample: - \"USD\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 6\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Currency",
                    "minLength": 1,
                    "maxLength": 6,
                    "x-displayname": "Currency",
                    "x-ves-example": "USD",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "6",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "infraprotect_info": {
                    "description": " infrastructure protection information",
                    "title": "Infra Protect Info",
                    "$ref": "#/definitions/schemainfraprotect_informationGlobalSpecType",
                    "x-displayname": "Infra Protect Info"
                },
                "payment_provider_token": {
                    "type": "string",
                    "description": " provider token for payment for the account\n\nExample: - \"msnofjaonoaksnqaaz\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Payment Provider Token",
                    "maxLength": 256,
                    "x-displayname": "Payment Provider Token",
                    "x-ves-example": "msnofjaonoaksnqaaz",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "plan_name": {
                    "type": "string",
                    "description": " plan selection name\n\nExample: - \"individual-plan-monthly-1\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 10\n  ves.io.schema.rules.string.ves_object_name: true\n",
                    "title": "Plan Name",
                    "minLength": 10,
                    "maxLength": 256,
                    "x-displayname": "Plan Name",
                    "x-ves-example": "individual-plan-monthly-1",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "10",
                        "ves.io.schema.rules.string.ves_object_name": "true"
                    }
                },
                "tax_exemption": {
                    "description": " tax exemption details",
                    "title": "Tax Exemption",
                    "$ref": "#/definitions/schemaTaxExemptionType",
                    "x-displayname": "Tax Exemption"
                }
            }
        },
        "signupCompanyMeta": {
            "type": "object",
            "title": "Company Meta",
            "x-displayname": "Company Meta",
            "x-ves-proto-message": "ves.io.schema.signup.CompanyMeta",
            "properties": {
                "mailing_address": {
                    "description": " mailing address of the company\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Mailing Address",
                    "$ref": "#/definitions/signupContactMeta",
                    "x-displayname": "Mailing Address",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " name of the company\n\nExample: - \"F5 Networks, Inc\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 5\n",
                    "title": "Name",
                    "minLength": 5,
                    "maxLength": 256,
                    "x-displayname": "Name",
                    "x-ves-example": "F5 Networks, Inc",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "5"
                    }
                }
            }
        },
        "signupContactMeta": {
            "type": "object",
            "description": "Instance of one single contact that can be used to communicate with customers.\nDepending on contact type we use these details to send general communication (regular, physical mail) or invoices.",
            "title": "ContactMeta",
            "x-displayname": "ContactMeta",
            "x-ves-proto-message": "ves.io.schema.signup.ContactMeta",
            "properties": {
                "address1": {
                    "type": "string",
                    "description": " address line 1\n\nExample: - \"1234 Main road\"-",
                    "title": "address1",
                    "x-displayname": "Address Line 1",
                    "x-ves-example": "1234 Main road"
                },
                "address2": {
                    "type": "string",
                    "description": " address line 2\n\nExample: - \"P.O BOX 56\"-",
                    "title": "address2",
                    "x-displayname": "Address Line 2",
                    "x-ves-example": "P.O BOX 56"
                },
                "city": {
                    "type": "string",
                    "description": " city / town of the contact\n\nExample: - \"Sunnyvale\"-",
                    "title": "city",
                    "x-displayname": "City",
                    "x-ves-example": "Sunnyvale"
                },
                "country": {
                    "type": "string",
                    "description": " country of contact (e.g. USA). refer to https://en.wikipedia.org/wiki/ISO_3166-1, column alpha-2\n\nExample: - \"US\"-",
                    "title": "country",
                    "x-displayname": "Country",
                    "x-ves-example": "US"
                },
                "county": {
                    "type": "string",
                    "description": " county (optional, for countries where they have counties)\n\nExample: - \"Santa Clara\"-",
                    "title": "county",
                    "x-displayname": "County",
                    "x-ves-example": "Santa Clara"
                },
                "phone_number": {
                    "type": "string",
                    "description": " phone number of the contact\n\nExample: - \"+11234567890\"-",
                    "title": "phone_number",
                    "x-displayname": "Phone Number",
                    "x-ves-example": "+11234567890"
                },
                "state": {
                    "type": "string",
                    "description": " state (optional, for countries where they have states)\n\nExample: - \"California\"-",
                    "title": "state",
                    "x-displayname": "State",
                    "x-ves-example": "California"
                },
                "state_code": {
                    "type": "string",
                    "description": " state code (optional, for countries where they have states)\n\nExample: - \"CA\"-",
                    "title": "state code",
                    "x-displayname": "State Code",
                    "x-ves-example": "CA"
                },
                "zip_code": {
                    "type": "string",
                    "description": " zip or postal code\n\nExample: - \"95054\"-",
                    "title": "zip_code",
                    "x-displayname": "ZIP code",
                    "x-ves-example": "95054"
                }
            }
        },
        "signupCreateV2Request": {
            "type": "object",
            "title": "Create V2 Request",
            "x-displayname": "Create V2 Request",
            "x-ves-oneof-field-source_choice": "[\"source_internal_sre\"]",
            "x-ves-proto-message": "ves.io.schema.signup.CreateV2Request",
            "properties": {
                "account_details": {
                    "description": " details of the new F5XC account to be created\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Account Details",
                    "$ref": "#/definitions/signupAccountMeta",
                    "x-displayname": "Account Details",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "billing_details": {
                    "description": " details about the billing of the account\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Billing Details",
                    "$ref": "#/definitions/signupBillingMeta",
                    "x-displayname": "Billing Details",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "company_details": {
                    "description": " details of the company\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Company Details",
                    "$ref": "#/definitions/signupCompanyMeta",
                    "x-displayname": "Company Details",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "source_internal_sre": {
                    "description": "Exclusive with []\n For internal use ONLY\n payload for the request made internally, probably via SRE",
                    "title": "Source Internal SRE",
                    "$ref": "#/definitions/signupSourceInternalSre",
                    "x-displayname": "Source Internal SRE"
                },
                "user_details": {
                    "description": " details of the user\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "User Details",
                    "$ref": "#/definitions/signupUserMeta",
                    "x-displayname": "User Details",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "signupCreateV2Response": {
            "type": "object",
            "title": "Create V2 Response",
            "x-displayname": "Create V2 Response",
            "x-ves-proto-message": "ves.io.schema.signup.CreateV2Response",
            "properties": {
                "tenant_id": {
                    "type": "string",
                    "description": " identifier for the corresponding tenant object",
                    "title": "Tenant ID",
                    "x-displayname": "Tenant ID"
                },
                "uid": {
                    "type": "string",
                    "description": " identifier for the signup object",
                    "title": "UID",
                    "x-displayname": "Uid"
                }
            }
        },
        "signupCrmInfoV2": {
            "type": "object",
            "description": "Deprecated: use the CRMInfo defined in schema/types.proto",
            "title": "fields of crm info message",
            "x-displayname": "Crm Info",
            "x-ves-proto-message": "ves.io.schema.signup.CrmInfoV2"
        },
        "signupMarketplaceAws": {
            "type": "object",
            "description": "x-displayName: \"Marketplace Aws\"\npayload for the creation request, for AWS Marketplace",
            "title": "Marketplace Aws",
            "properties": {
                "crm_details": {
                    "description": "x-displayName: \"CRM Details\"\nx-required\nThis field holds CRM information",
                    "title": "CRM Details",
                    "$ref": "#/definitions/schemaCRMInfo"
                }
            }
        },
        "signupSourceInternalScaling": {
            "type": "object",
            "description": "x-displayName: \"Source Internal Scaling\"",
            "title": "Source Internal Scaling"
        },
        "signupSourceInternalSre": {
            "type": "object",
            "title": "Source Internal SRE",
            "x-displayname": "Source Internal SRE",
            "x-ves-proto-message": "ves.io.schema.signup.SourceInternalSre",
            "properties": {
                "crm_details": {
                    "description": " This field holds CRM information",
                    "title": "CRM Details",
                    "$ref": "#/definitions/schemaCRMInfo",
                    "x-displayname": "CRM Details"
                },
                "crm_info": {
                    "description": " this field holds the CRM info\n This field is deprecated. use CrmDetails instead",
                    "title": "crm_info",
                    "$ref": "#/definitions/signupCrmInfoV2",
                    "x-displayname": "CRM Info"
                },
                "f5xc_instance_name": {
                    "type": "string",
                    "description": " this field holds the f5xc instance name to be used for tenant allocation\n\nExample: - \"f5xc-instance-2\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "f5xc_instance_name",
                    "maxLength": 64,
                    "x-displayname": "F5XC Instance Name",
                    "x-ves-example": "f5xc-instance-2",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                },
                "kc_instance_name": {
                    "type": "string",
                    "description": " this field holds the kc instance name to be used for tenant realm allocation\n\nExample: - \"kc-instance-3\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "kc_instance_name",
                    "maxLength": 64,
                    "x-displayname": "KC Instance Name",
                    "x-ves-example": "kc-instance-3",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                },
                "tenant_id": {
                    "type": "string",
                    "description": " tenant id to be used while creating a tenant instead of generating a new one.\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "tenant_id",
                    "maxLength": 64,
                    "x-displayname": "Tenant Id",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                }
            }
        },
        "signupSourceMarketplace": {
            "type": "object",
            "description": "x-displayName: \"Source Marketplace\"\npayload for the creation request, for Marketplace source",
            "title": "Source Marketplace",
            "properties": {
                "marketplace_aws": {
                    "description": "x-displayName: \"Marketplace Aws\"\npayload for the creation request, for Aws Marketplace",
                    "title": "MarketplaceAws",
                    "$ref": "#/definitions/signupMarketplaceAws"
                }
            }
        },
        "signupSourceMsp": {
            "type": "object",
            "description": "x-displayName: \"Source MSP\"",
            "title": "Source MSP",
            "properties": {
                "child_tenant_obj_name": {
                    "type": "string",
                    "description": "x-displayName: \"Child Tenant Object Name\"\nthis field holds the name of child tenant configuration.",
                    "title": "child_tenant_obj_name"
                },
                "crm_details": {
                    "description": "x-displayName: \"CRM Details\"\nThis field holds CRM information",
                    "title": "CRM Details",
                    "$ref": "#/definitions/schemaCRMInfo"
                },
                "crm_info": {
                    "description": "x-displayName: \"CRM Info\"\nthis field holds the CRM info\nThis field is deprecated. use CrmDetails instead",
                    "title": "crm_info",
                    "$ref": "#/definitions/signupCrmInfoV2"
                }
            }
        },
        "signupSourcePlanTransition": {
            "type": "object",
            "description": "x-displayName: \"Source Plan Transition\"\nSourcePlanTransition can be only used for Free to Individual plan transition signups",
            "title": "Source Plan Transition",
            "properties": {
                "is_sso_enabled": {
                    "type": "boolean",
                    "description": "x-displayName: \"IsSsoEnabled\"\nx-example: true\nIsSsoEnabled tells whether the sso should be enabled for new tenant",
                    "title": "IsSsoEnabled",
                    "format": "boolean"
                }
            }
        },
        "signupUserMeta": {
            "type": "object",
            "title": "User Meta",
            "x-displayname": "User Meta",
            "x-ves-proto-message": "ves.io.schema.signup.UserMeta",
            "properties": {
                "contact_number": {
                    "type": "string",
                    "description": " contact number of the user\n\nExample: - \"+14084004001\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n  ves.io.schema.rules.string.phone_number: true\n",
                    "title": "Contact Number",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Contact Number",
                    "x-ves-example": "+14084004001",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1",
                        "ves.io.schema.rules.string.phone_number": "true"
                    }
                },
                "email": {
                    "type": "string",
                    "description": " email of the user\n\nExample: - \"jane.doe@gmail.com\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.email: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "E-mail",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "E-mail",
                    "x-ves-example": "jane.doe@gmail.com",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.email": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "first_name": {
                    "type": "string",
                    "description": " first name of the user\n\nExample: - \"Jane\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "First Name",
                    "maxLength": 256,
                    "x-displayname": "First Name",
                    "x-ves-example": "Jane",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "last_name": {
                    "type": "string",
                    "description": " last name of the user\n\nExample: - \"Doe\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Last Name",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "Last Name",
                    "x-ves-example": "Doe",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                }
            }
        }
    },
    "x-displayname": "Signup V2",
    "x-ves-proto-file": "ves.io/schema/signup/private_customapi_eywaprime.proto"
}`

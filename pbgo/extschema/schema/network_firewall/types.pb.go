// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/network_firewall/types.proto

package network_firewall

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Active Firewall Policies Type
//
// x-displayName: "Active Firewall Policies Type"
// List of firewall policy views.
type ActiveNetworkPoliciesType struct {
	// Firewall Policy
	//
	// x-displayName: "Firewall Policy"
	// x-required
	// Ordered List of Firewall Policies active for this network firewall
	NetworkPolicies []*views.ObjectRefType `protobuf:"bytes,1,rep,name=network_policies,json=networkPolicies,proto3" json:"network_policies,omitempty"`
}

func (m *ActiveNetworkPoliciesType) Reset()      { *m = ActiveNetworkPoliciesType{} }
func (*ActiveNetworkPoliciesType) ProtoMessage() {}
func (*ActiveNetworkPoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{0}
}
func (m *ActiveNetworkPoliciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActiveNetworkPoliciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ActiveNetworkPoliciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveNetworkPoliciesType.Merge(m, src)
}
func (m *ActiveNetworkPoliciesType) XXX_Size() int {
	return m.Size()
}
func (m *ActiveNetworkPoliciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveNetworkPoliciesType.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveNetworkPoliciesType proto.InternalMessageInfo

func (m *ActiveNetworkPoliciesType) GetNetworkPolicies() []*views.ObjectRefType {
	if m != nil {
		return m.NetworkPolicies
	}
	return nil
}

// Active Enhanced Firewall Policies Type
//
// x-displayName: "Active Enhanced Network Policies Type"
// List of Enhanced Firewall Policies
// These policies use session-based rules and provide all options available under firewall policies
// with an additional option for service insertion.
type ActiveEnhancedFirewallPoliciesType struct {
	// Enhanced Firewall Policy
	//
	// x-displayName: "Enhanced Firewall Policy"
	// x-required
	// Ordered List of Enhanced Firewall Policies active
	EnhancedFirewallPolicies []*views.ObjectRefType `protobuf:"bytes,1,rep,name=enhanced_firewall_policies,json=enhancedFirewallPolicies,proto3" json:"enhanced_firewall_policies,omitempty"`
}

func (m *ActiveEnhancedFirewallPoliciesType) Reset()      { *m = ActiveEnhancedFirewallPoliciesType{} }
func (*ActiveEnhancedFirewallPoliciesType) ProtoMessage() {}
func (*ActiveEnhancedFirewallPoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{1}
}
func (m *ActiveEnhancedFirewallPoliciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActiveEnhancedFirewallPoliciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ActiveEnhancedFirewallPoliciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveEnhancedFirewallPoliciesType.Merge(m, src)
}
func (m *ActiveEnhancedFirewallPoliciesType) XXX_Size() int {
	return m.Size()
}
func (m *ActiveEnhancedFirewallPoliciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveEnhancedFirewallPoliciesType.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveEnhancedFirewallPoliciesType proto.InternalMessageInfo

func (m *ActiveEnhancedFirewallPoliciesType) GetEnhancedFirewallPolicies() []*views.ObjectRefType {
	if m != nil {
		return m.EnhancedFirewallPolicies
	}
	return nil
}

// Active Forward Proxy Policies Type
//
// x-displayName: "Active Forward Proxy Policies Type"
// Ordered List of Forward Proxy Policies active
type ActiveForwardProxyPoliciesType struct {
	// Forward Proxy Policies
	//
	// x-displayName: "Forward Proxy Policies"
	// x-required
	// Ordered List of Forward Proxy Policies active
	ForwardProxyPolicies []*views.ObjectRefType `protobuf:"bytes,1,rep,name=forward_proxy_policies,json=forwardProxyPolicies,proto3" json:"forward_proxy_policies,omitempty"`
}

func (m *ActiveForwardProxyPoliciesType) Reset()      { *m = ActiveForwardProxyPoliciesType{} }
func (*ActiveForwardProxyPoliciesType) ProtoMessage() {}
func (*ActiveForwardProxyPoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{2}
}
func (m *ActiveForwardProxyPoliciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActiveForwardProxyPoliciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ActiveForwardProxyPoliciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveForwardProxyPoliciesType.Merge(m, src)
}
func (m *ActiveForwardProxyPoliciesType) XXX_Size() int {
	return m.Size()
}
func (m *ActiveForwardProxyPoliciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveForwardProxyPoliciesType.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveForwardProxyPoliciesType proto.InternalMessageInfo

func (m *ActiveForwardProxyPoliciesType) GetForwardProxyPolicies() []*views.ObjectRefType {
	if m != nil {
		return m.ForwardProxyPolicies
	}
	return nil
}

// Active Fast ACL Type
//
// x-displayName: "Active Fast ACL(s)"
// List of Fast ACL(s).
type ActiveFastACLsType struct {
	// Fast ACL
	//
	// x-displayName: "Fast ACL(s)"
	// x-required
	// Ordered List of Fast ACL(s) active for this network firewall
	FastAcls []*views.ObjectRefType `protobuf:"bytes,1,rep,name=fast_acls,json=fastAcls,proto3" json:"fast_acls,omitempty"`
}

func (m *ActiveFastACLsType) Reset()      { *m = ActiveFastACLsType{} }
func (*ActiveFastACLsType) ProtoMessage() {}
func (*ActiveFastACLsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{3}
}
func (m *ActiveFastACLsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActiveFastACLsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ActiveFastACLsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveFastACLsType.Merge(m, src)
}
func (m *ActiveFastACLsType) XXX_Size() int {
	return m.Size()
}
func (m *ActiveFastACLsType) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveFastACLsType.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveFastACLsType proto.InternalMessageInfo

func (m *ActiveFastACLsType) GetFastAcls() []*views.ObjectRefType {
	if m != nil {
		return m.FastAcls
	}
	return nil
}

// Network Firewall Specification
//
// x-displayName: "Specification"
// Global spec, desired state of the network firewall
type GlobalSpecType struct {
	// Firewall Policy Set
	//
	// x-displayName: "Firewall Policy Set (Legacy)"
	// L3/L4 firewall (Legacy Mode)
	// Firewall Policy set to be used as firewall for the fleet where this firewall is attached
	// Currently, Firewall Policy is applied for following Virtual Networks in a site,
	//    - Site Local Inside
	//    - Site Local
	NetworkPolicySet []*schema.ObjectRefType `protobuf:"bytes,1,rep,name=network_policy_set,json=networkPolicySet,proto3" json:"network_policy_set,omitempty"`
	// Forward proxy policy set
	//
	// x-displayName: "Forward Proxy (Service) Policy Set (Legacy)"
	// L7 firewall for forward proxy. Assign service_policy_set to be used for forward proxies in this firewall.
	ForwardProxyPolicySet []*schema.ObjectRefType `protobuf:"bytes,2,rep,name=forward_proxy_policy_set,json=forwardProxyPolicySet,proto3" json:"forward_proxy_policy_set,omitempty"`
	// Fast ACL Set
	//
	// x-displayName: "Fast ACL Set (Legacy)"
	// Fast ACL set defined for the fleet. Fast ACL set is applied for all sites that are member of the fleet.
	// The list of Virtual Networks / Interfaces is selected by the Fast ACL set object
	FastAclSet []*schema.ObjectRefType `protobuf:"bytes,4,rep,name=fast_acl_set,json=fastAclSet,proto3" json:"fast_acl_set,omitempty"`
	// Enhanced Firewall Policy
	//
	// x-displayName: "Enhanced Firewall Policy (Legacy)"
	// L3/L4 Security rules
	// Enhanced Firewall Policies to be used as firewall for the fleet where this firewall is attached
	// Currently, Firewall Policy is applied for following Virtual Networks in a site,
	//    - Site Local Inside
	//    - Site Local
	EnhancedFirewallPolicies []*schema.ObjectRefType `protobuf:"bytes,32,rep,name=enhanced_firewall_policies,json=enhancedFirewallPolicies,proto3" json:"enhanced_firewall_policies,omitempty"`
	// Internal Firewall Policy Config Mode
	//
	// x-displayName: "Internal Firewall Policy Config Mode"
	// Internal
	//
	// Types that are valid to be assigned to NetworkPolicyConfigMode:
	//	*GlobalSpecType_DisableNetworkPolicy
	//	*GlobalSpecType_ActiveNetworkPolicies
	//	*GlobalSpecType_NetworkPolicyLegacyMode
	//	*GlobalSpecType_ActiveEnhancedFirewallPolicies
	NetworkPolicyConfigMode isGlobalSpecType_NetworkPolicyConfigMode `protobuf_oneof:"network_policy_config_mode"`
	// Internal Forward Proxy Policy Config Mode
	//
	// x-displayName: "Internal Forward Proxy PolicyConfig Mode"
	//
	// Types that are valid to be assigned to ForwardProxyPolicyConfigMode:
	//	*GlobalSpecType_DisableForwardProxyPolicy
	//	*GlobalSpecType_ActiveForwardProxyPolicies
	//	*GlobalSpecType_ForwardProxyPolicyLegacyMode
	ForwardProxyPolicyConfigMode isGlobalSpecType_ForwardProxyPolicyConfigMode `protobuf_oneof:"forward_proxy_policy_config_mode"`
	// Internal Fast ACL config Mode
	//
	// x-displayName: "Internal Fast ACL config Mode"
	// Internal
	//
	// Types that are valid to be assigned to FastAclConfigMode:
	//	*GlobalSpecType_DisableFastAcl
	//	*GlobalSpecType_ActiveFastAcls
	//	*GlobalSpecType_FastAclLegacyMode
	FastAclConfigMode isGlobalSpecType_FastAclConfigMode `protobuf_oneof:"fast_acl_config_mode"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object
	ViewInternal *views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal,proto3" json:"view_internal,omitempty"`
}

func (m *GlobalSpecType) Reset()      { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage() {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{4}
}
func (m *GlobalSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GlobalSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSpecType.Merge(m, src)
}
func (m *GlobalSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GlobalSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSpecType proto.InternalMessageInfo

type isGlobalSpecType_NetworkPolicyConfigMode interface {
	isGlobalSpecType_NetworkPolicyConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_ForwardProxyPolicyConfigMode interface {
	isGlobalSpecType_ForwardProxyPolicyConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGlobalSpecType_FastAclConfigMode interface {
	isGlobalSpecType_FastAclConfigMode()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *schema.Empty `protobuf:"bytes,6,opt,name=disable_network_policy,json=disableNetworkPolicy,proto3,oneof" json:"disable_network_policy,omitempty"`
}
type GlobalSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,7,opt,name=active_network_policies,json=activeNetworkPolicies,proto3,oneof" json:"active_network_policies,omitempty"`
}
type GlobalSpecType_NetworkPolicyLegacyMode struct {
	NetworkPolicyLegacyMode *schema.Empty `protobuf:"bytes,12,opt,name=network_policy_legacy_mode,json=networkPolicyLegacyMode,proto3,oneof" json:"network_policy_legacy_mode,omitempty"`
}
type GlobalSpecType_ActiveEnhancedFirewallPolicies struct {
	ActiveEnhancedFirewallPolicies *ActiveEnhancedFirewallPoliciesType `protobuf:"bytes,33,opt,name=active_enhanced_firewall_policies,json=activeEnhancedFirewallPolicies,proto3,oneof" json:"active_enhanced_firewall_policies,omitempty"`
}
type GlobalSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *schema.Empty `protobuf:"bytes,9,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,proto3,oneof" json:"disable_forward_proxy_policy,omitempty"`
}
type GlobalSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,10,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,proto3,oneof" json:"active_forward_proxy_policies,omitempty"`
}
type GlobalSpecType_ForwardProxyPolicyLegacyMode struct {
	ForwardProxyPolicyLegacyMode *schema.Empty `protobuf:"bytes,14,opt,name=forward_proxy_policy_legacy_mode,json=forwardProxyPolicyLegacyMode,proto3,oneof" json:"forward_proxy_policy_legacy_mode,omitempty"`
}
type GlobalSpecType_DisableFastAcl struct {
	DisableFastAcl *schema.Empty `protobuf:"bytes,16,opt,name=disable_fast_acl,json=disableFastAcl,proto3,oneof" json:"disable_fast_acl,omitempty"`
}
type GlobalSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,17,opt,name=active_fast_acls,json=activeFastAcls,proto3,oneof" json:"active_fast_acls,omitempty"`
}
type GlobalSpecType_FastAclLegacyMode struct {
	FastAclLegacyMode *schema.Empty `protobuf:"bytes,18,opt,name=fast_acl_legacy_mode,json=fastAclLegacyMode,proto3,oneof" json:"fast_acl_legacy_mode,omitempty"`
}

func (*GlobalSpecType_DisableNetworkPolicy) isGlobalSpecType_NetworkPolicyConfigMode()              {}
func (*GlobalSpecType_ActiveNetworkPolicies) isGlobalSpecType_NetworkPolicyConfigMode()             {}
func (*GlobalSpecType_NetworkPolicyLegacyMode) isGlobalSpecType_NetworkPolicyConfigMode()           {}
func (*GlobalSpecType_ActiveEnhancedFirewallPolicies) isGlobalSpecType_NetworkPolicyConfigMode()    {}
func (*GlobalSpecType_DisableForwardProxyPolicy) isGlobalSpecType_ForwardProxyPolicyConfigMode()    {}
func (*GlobalSpecType_ActiveForwardProxyPolicies) isGlobalSpecType_ForwardProxyPolicyConfigMode()   {}
func (*GlobalSpecType_ForwardProxyPolicyLegacyMode) isGlobalSpecType_ForwardProxyPolicyConfigMode() {}
func (*GlobalSpecType_DisableFastAcl) isGlobalSpecType_FastAclConfigMode()                          {}
func (*GlobalSpecType_ActiveFastAcls) isGlobalSpecType_FastAclConfigMode()                          {}
func (*GlobalSpecType_FastAclLegacyMode) isGlobalSpecType_FastAclConfigMode()                       {}

func (m *GlobalSpecType) GetNetworkPolicyConfigMode() isGlobalSpecType_NetworkPolicyConfigMode {
	if m != nil {
		return m.NetworkPolicyConfigMode
	}
	return nil
}
func (m *GlobalSpecType) GetForwardProxyPolicyConfigMode() isGlobalSpecType_ForwardProxyPolicyConfigMode {
	if m != nil {
		return m.ForwardProxyPolicyConfigMode
	}
	return nil
}
func (m *GlobalSpecType) GetFastAclConfigMode() isGlobalSpecType_FastAclConfigMode {
	if m != nil {
		return m.FastAclConfigMode
	}
	return nil
}

func (m *GlobalSpecType) GetNetworkPolicySet() []*schema.ObjectRefType {
	if m != nil {
		return m.NetworkPolicySet
	}
	return nil
}

func (m *GlobalSpecType) GetForwardProxyPolicySet() []*schema.ObjectRefType {
	if m != nil {
		return m.ForwardProxyPolicySet
	}
	return nil
}

func (m *GlobalSpecType) GetFastAclSet() []*schema.ObjectRefType {
	if m != nil {
		return m.FastAclSet
	}
	return nil
}

func (m *GlobalSpecType) GetEnhancedFirewallPolicies() []*schema.ObjectRefType {
	if m != nil {
		return m.EnhancedFirewallPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetDisableNetworkPolicy() *schema.Empty {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *GlobalSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetNetworkPolicyLegacyMode() *schema.Empty {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_NetworkPolicyLegacyMode); ok {
		return x.NetworkPolicyLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetActiveEnhancedFirewallPolicies() *ActiveEnhancedFirewallPoliciesType {
	if x, ok := m.GetNetworkPolicyConfigMode().(*GlobalSpecType_ActiveEnhancedFirewallPolicies); ok {
		return x.ActiveEnhancedFirewallPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetDisableForwardProxyPolicy() *schema.Empty {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *GlobalSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *GlobalSpecType) GetForwardProxyPolicyLegacyMode() *schema.Empty {
	if x, ok := m.GetForwardProxyPolicyConfigMode().(*GlobalSpecType_ForwardProxyPolicyLegacyMode); ok {
		return x.ForwardProxyPolicyLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetDisableFastAcl() *schema.Empty {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *GlobalSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *GlobalSpecType) GetFastAclLegacyMode() *schema.Empty {
	if x, ok := m.GetFastAclConfigMode().(*GlobalSpecType_FastAclLegacyMode); ok {
		return x.FastAclLegacyMode
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GlobalSpecType_DisableNetworkPolicy)(nil),
		(*GlobalSpecType_ActiveNetworkPolicies)(nil),
		(*GlobalSpecType_NetworkPolicyLegacyMode)(nil),
		(*GlobalSpecType_ActiveEnhancedFirewallPolicies)(nil),
		(*GlobalSpecType_DisableForwardProxyPolicy)(nil),
		(*GlobalSpecType_ActiveForwardProxyPolicies)(nil),
		(*GlobalSpecType_ForwardProxyPolicyLegacyMode)(nil),
		(*GlobalSpecType_DisableFastAcl)(nil),
		(*GlobalSpecType_ActiveFastAcls)(nil),
		(*GlobalSpecType_FastAclLegacyMode)(nil),
	}
}

// Create network firewall
//
// x-displayName: "Create Network Firewall"
// network firewall is created by users in system namespace
type CreateSpecType struct {
	// Firewall Policy List Configuration
	//
	// x-displayName: "Select Firewall Policy Configuration"
	// x-required
	// Active Firewall Policies can be configured via policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*CreateSpecType_DisableNetworkPolicy
	//	*CreateSpecType_ActiveNetworkPolicies
	//	*CreateSpecType_NetworkPolicySet
	//	*CreateSpecType_ActiveEnhancedFirewallPolicies
	NetworkPolicyChoice isCreateSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*CreateSpecType_DisableForwardProxyPolicy
	//	*CreateSpecType_ActiveForwardProxyPolicies
	//	*CreateSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isCreateSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*CreateSpecType_DisableFastAcl
	//	*CreateSpecType_ActiveFastAcls
	//	*CreateSpecType_FastAclSet
	FastAclChoice isCreateSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *CreateSpecType) Reset()      { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage() {}
func (*CreateSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{5}
}
func (m *CreateSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpecType.Merge(m, src)
}
func (m *CreateSpecType) XXX_Size() int {
	return m.Size()
}
func (m *CreateSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpecType proto.InternalMessageInfo

type isCreateSpecType_NetworkPolicyChoice interface {
	isCreateSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_ForwardProxyPolicyChoice interface {
	isCreateSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isCreateSpecType_FastAclChoice interface {
	isCreateSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *schema.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,proto3,oneof" json:"disable_network_policy,omitempty"`
}
type CreateSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,proto3,oneof" json:"active_network_policies,omitempty"`
}
type CreateSpecType_NetworkPolicySet struct {
	NetworkPolicySet *views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,proto3,oneof" json:"network_policy_set,omitempty"`
}
type CreateSpecType_ActiveEnhancedFirewallPolicies struct {
	ActiveEnhancedFirewallPolicies *ActiveEnhancedFirewallPoliciesType `protobuf:"bytes,32,opt,name=active_enhanced_firewall_policies,json=activeEnhancedFirewallPolicies,proto3,oneof" json:"active_enhanced_firewall_policies,omitempty"`
}
type CreateSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *schema.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,proto3,oneof" json:"disable_forward_proxy_policy,omitempty"`
}
type CreateSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,proto3,oneof" json:"active_forward_proxy_policies,omitempty"`
}
type CreateSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,proto3,oneof" json:"forward_proxy_policy_set,omitempty"`
}
type CreateSpecType_DisableFastAcl struct {
	DisableFastAcl *schema.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,proto3,oneof" json:"disable_fast_acl,omitempty"`
}
type CreateSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,proto3,oneof" json:"active_fast_acls,omitempty"`
}
type CreateSpecType_FastAclSet struct {
	FastAclSet *views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,proto3,oneof" json:"fast_acl_set,omitempty"`
}

func (*CreateSpecType_DisableNetworkPolicy) isCreateSpecType_NetworkPolicyChoice()            {}
func (*CreateSpecType_ActiveNetworkPolicies) isCreateSpecType_NetworkPolicyChoice()           {}
func (*CreateSpecType_NetworkPolicySet) isCreateSpecType_NetworkPolicyChoice()                {}
func (*CreateSpecType_ActiveEnhancedFirewallPolicies) isCreateSpecType_NetworkPolicyChoice()  {}
func (*CreateSpecType_DisableForwardProxyPolicy) isCreateSpecType_ForwardProxyPolicyChoice()  {}
func (*CreateSpecType_ActiveForwardProxyPolicies) isCreateSpecType_ForwardProxyPolicyChoice() {}
func (*CreateSpecType_ForwardProxyPolicySet) isCreateSpecType_ForwardProxyPolicyChoice()      {}
func (*CreateSpecType_DisableFastAcl) isCreateSpecType_FastAclChoice()                        {}
func (*CreateSpecType_ActiveFastAcls) isCreateSpecType_FastAclChoice()                        {}
func (*CreateSpecType_FastAclSet) isCreateSpecType_FastAclChoice()                            {}

func (m *CreateSpecType) GetNetworkPolicyChoice() isCreateSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetForwardProxyPolicyChoice() isCreateSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *CreateSpecType) GetFastAclChoice() isCreateSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *CreateSpecType) GetDisableNetworkPolicy() *schema.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *CreateSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *CreateSpecType) GetNetworkPolicySet() *views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *CreateSpecType) GetActiveEnhancedFirewallPolicies() *ActiveEnhancedFirewallPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*CreateSpecType_ActiveEnhancedFirewallPolicies); ok {
		return x.ActiveEnhancedFirewallPolicies
	}
	return nil
}

func (m *CreateSpecType) GetDisableForwardProxyPolicy() *schema.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *CreateSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *CreateSpecType) GetForwardProxyPolicySet() *views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*CreateSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *CreateSpecType) GetDisableFastAcl() *schema.Empty {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *CreateSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *CreateSpecType) GetFastAclSet() *views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*CreateSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateSpecType_DisableNetworkPolicy)(nil),
		(*CreateSpecType_ActiveNetworkPolicies)(nil),
		(*CreateSpecType_NetworkPolicySet)(nil),
		(*CreateSpecType_ActiveEnhancedFirewallPolicies)(nil),
		(*CreateSpecType_DisableForwardProxyPolicy)(nil),
		(*CreateSpecType_ActiveForwardProxyPolicies)(nil),
		(*CreateSpecType_ForwardProxyPolicySet)(nil),
		(*CreateSpecType_DisableFastAcl)(nil),
		(*CreateSpecType_ActiveFastAcls)(nil),
		(*CreateSpecType_FastAclSet)(nil),
	}
}

// Replace network firewall
//
// x-displayName: "Replace Network Firewall"
// Replace network firewall  will replace the contains of given object
type ReplaceSpecType struct {
	// Firewall Policy List Configuration
	//
	// x-displayName: "Select Firewall Policy Configuration"
	// x-required
	// Active Firewall Policies can be configured via policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*ReplaceSpecType_DisableNetworkPolicy
	//	*ReplaceSpecType_ActiveNetworkPolicies
	//	*ReplaceSpecType_NetworkPolicySet
	//	*ReplaceSpecType_ActiveEnhancedFirewallPolicies
	NetworkPolicyChoice isReplaceSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*ReplaceSpecType_DisableForwardProxyPolicy
	//	*ReplaceSpecType_ActiveForwardProxyPolicies
	//	*ReplaceSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isReplaceSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*ReplaceSpecType_DisableFastAcl
	//	*ReplaceSpecType_ActiveFastAcls
	//	*ReplaceSpecType_FastAclSet
	FastAclChoice isReplaceSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *ReplaceSpecType) Reset()      { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage() {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{6}
}
func (m *ReplaceSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplaceSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ReplaceSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceSpecType.Merge(m, src)
}
func (m *ReplaceSpecType) XXX_Size() int {
	return m.Size()
}
func (m *ReplaceSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceSpecType proto.InternalMessageInfo

type isReplaceSpecType_NetworkPolicyChoice interface {
	isReplaceSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_ForwardProxyPolicyChoice interface {
	isReplaceSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isReplaceSpecType_FastAclChoice interface {
	isReplaceSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *schema.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,proto3,oneof" json:"disable_network_policy,omitempty"`
}
type ReplaceSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,proto3,oneof" json:"active_network_policies,omitempty"`
}
type ReplaceSpecType_NetworkPolicySet struct {
	NetworkPolicySet *views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,proto3,oneof" json:"network_policy_set,omitempty"`
}
type ReplaceSpecType_ActiveEnhancedFirewallPolicies struct {
	ActiveEnhancedFirewallPolicies *ActiveEnhancedFirewallPoliciesType `protobuf:"bytes,32,opt,name=active_enhanced_firewall_policies,json=activeEnhancedFirewallPolicies,proto3,oneof" json:"active_enhanced_firewall_policies,omitempty"`
}
type ReplaceSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *schema.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,proto3,oneof" json:"disable_forward_proxy_policy,omitempty"`
}
type ReplaceSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,proto3,oneof" json:"active_forward_proxy_policies,omitempty"`
}
type ReplaceSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,proto3,oneof" json:"forward_proxy_policy_set,omitempty"`
}
type ReplaceSpecType_DisableFastAcl struct {
	DisableFastAcl *schema.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,proto3,oneof" json:"disable_fast_acl,omitempty"`
}
type ReplaceSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,proto3,oneof" json:"active_fast_acls,omitempty"`
}
type ReplaceSpecType_FastAclSet struct {
	FastAclSet *views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,proto3,oneof" json:"fast_acl_set,omitempty"`
}

func (*ReplaceSpecType_DisableNetworkPolicy) isReplaceSpecType_NetworkPolicyChoice()            {}
func (*ReplaceSpecType_ActiveNetworkPolicies) isReplaceSpecType_NetworkPolicyChoice()           {}
func (*ReplaceSpecType_NetworkPolicySet) isReplaceSpecType_NetworkPolicyChoice()                {}
func (*ReplaceSpecType_ActiveEnhancedFirewallPolicies) isReplaceSpecType_NetworkPolicyChoice()  {}
func (*ReplaceSpecType_DisableForwardProxyPolicy) isReplaceSpecType_ForwardProxyPolicyChoice()  {}
func (*ReplaceSpecType_ActiveForwardProxyPolicies) isReplaceSpecType_ForwardProxyPolicyChoice() {}
func (*ReplaceSpecType_ForwardProxyPolicySet) isReplaceSpecType_ForwardProxyPolicyChoice()      {}
func (*ReplaceSpecType_DisableFastAcl) isReplaceSpecType_FastAclChoice()                        {}
func (*ReplaceSpecType_ActiveFastAcls) isReplaceSpecType_FastAclChoice()                        {}
func (*ReplaceSpecType_FastAclSet) isReplaceSpecType_FastAclChoice()                            {}

func (m *ReplaceSpecType) GetNetworkPolicyChoice() isReplaceSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetForwardProxyPolicyChoice() isReplaceSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *ReplaceSpecType) GetFastAclChoice() isReplaceSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableNetworkPolicy() *schema.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *ReplaceSpecType) GetNetworkPolicySet() *views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveEnhancedFirewallPolicies() *ActiveEnhancedFirewallPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*ReplaceSpecType_ActiveEnhancedFirewallPolicies); ok {
		return x.ActiveEnhancedFirewallPolicies
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableForwardProxyPolicy() *schema.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *ReplaceSpecType) GetForwardProxyPolicySet() *views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*ReplaceSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *ReplaceSpecType) GetDisableFastAcl() *schema.Empty {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *ReplaceSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *ReplaceSpecType) GetFastAclSet() *views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*ReplaceSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReplaceSpecType_DisableNetworkPolicy)(nil),
		(*ReplaceSpecType_ActiveNetworkPolicies)(nil),
		(*ReplaceSpecType_NetworkPolicySet)(nil),
		(*ReplaceSpecType_ActiveEnhancedFirewallPolicies)(nil),
		(*ReplaceSpecType_DisableForwardProxyPolicy)(nil),
		(*ReplaceSpecType_ActiveForwardProxyPolicies)(nil),
		(*ReplaceSpecType_ForwardProxyPolicySet)(nil),
		(*ReplaceSpecType_DisableFastAcl)(nil),
		(*ReplaceSpecType_ActiveFastAcls)(nil),
		(*ReplaceSpecType_FastAclSet)(nil),
	}
}

// Get network firewall
//
// x-displayName: "Get Network Firewall"
// Get network firewall in system namespace
type GetSpecType struct {
	// Firewall Policy List Configuration
	//
	// x-displayName: "Select Firewall Policy Configuration"
	// x-required
	// Active Firewall Policies can be configured via policy set or inline.
	//
	// Types that are valid to be assigned to NetworkPolicyChoice:
	//	*GetSpecType_DisableNetworkPolicy
	//	*GetSpecType_ActiveNetworkPolicies
	//	*GetSpecType_NetworkPolicySet
	//	*GetSpecType_ActiveEnhancedFirewallPolicies
	NetworkPolicyChoice isGetSpecType_NetworkPolicyChoice `protobuf_oneof:"network_policy_choice"`
	// Forward Proxy Policy List Configuration
	//
	// x-displayName: "Select Forward Policy Configuration"
	// x-required
	// Active Forward Proxy Policies can be configured via service policy set or inline.
	//
	// Types that are valid to be assigned to ForwardProxyPolicyChoice:
	//	*GetSpecType_DisableForwardProxyPolicy
	//	*GetSpecType_ActiveForwardProxyPolicies
	//	*GetSpecType_ForwardProxyPolicySet
	ForwardProxyPolicyChoice isGetSpecType_ForwardProxyPolicyChoice `protobuf_oneof:"forward_proxy_policy_choice"`
	// Active Fast ACL(s) Configuration
	//
	// x-displayName: "Select Fast ACL Configuration"
	// x-required
	// Active fast acls can be configured via fast acl set or inline.
	//
	// Types that are valid to be assigned to FastAclChoice:
	//	*GetSpecType_DisableFastAcl
	//	*GetSpecType_ActiveFastAcls
	//	*GetSpecType_FastAclSet
	FastAclChoice isGetSpecType_FastAclChoice `protobuf_oneof:"fast_acl_choice"`
}

func (m *GetSpecType) Reset()      { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage() {}
func (*GetSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{7}
}
func (m *GetSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpecType.Merge(m, src)
}
func (m *GetSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GetSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpecType proto.InternalMessageInfo

type isGetSpecType_NetworkPolicyChoice interface {
	isGetSpecType_NetworkPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_ForwardProxyPolicyChoice interface {
	isGetSpecType_ForwardProxyPolicyChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}
type isGetSpecType_FastAclChoice interface {
	isGetSpecType_FastAclChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_DisableNetworkPolicy struct {
	DisableNetworkPolicy *schema.Empty `protobuf:"bytes,21,opt,name=disable_network_policy,json=disableNetworkPolicy,proto3,oneof" json:"disable_network_policy,omitempty"`
}
type GetSpecType_ActiveNetworkPolicies struct {
	ActiveNetworkPolicies *ActiveNetworkPoliciesType `protobuf:"bytes,22,opt,name=active_network_policies,json=activeNetworkPolicies,proto3,oneof" json:"active_network_policies,omitempty"`
}
type GetSpecType_NetworkPolicySet struct {
	NetworkPolicySet *views.ObjectRefType `protobuf:"bytes,23,opt,name=network_policy_set,json=networkPolicySet,proto3,oneof" json:"network_policy_set,omitempty"`
}
type GetSpecType_ActiveEnhancedFirewallPolicies struct {
	ActiveEnhancedFirewallPolicies *ActiveEnhancedFirewallPoliciesType `protobuf:"bytes,32,opt,name=active_enhanced_firewall_policies,json=activeEnhancedFirewallPolicies,proto3,oneof" json:"active_enhanced_firewall_policies,omitempty"`
}
type GetSpecType_DisableForwardProxyPolicy struct {
	DisableForwardProxyPolicy *schema.Empty `protobuf:"bytes,25,opt,name=disable_forward_proxy_policy,json=disableForwardProxyPolicy,proto3,oneof" json:"disable_forward_proxy_policy,omitempty"`
}
type GetSpecType_ActiveForwardProxyPolicies struct {
	ActiveForwardProxyPolicies *ActiveForwardProxyPoliciesType `protobuf:"bytes,26,opt,name=active_forward_proxy_policies,json=activeForwardProxyPolicies,proto3,oneof" json:"active_forward_proxy_policies,omitempty"`
}
type GetSpecType_ForwardProxyPolicySet struct {
	ForwardProxyPolicySet *views.ObjectRefType `protobuf:"bytes,27,opt,name=forward_proxy_policy_set,json=forwardProxyPolicySet,proto3,oneof" json:"forward_proxy_policy_set,omitempty"`
}
type GetSpecType_DisableFastAcl struct {
	DisableFastAcl *schema.Empty `protobuf:"bytes,29,opt,name=disable_fast_acl,json=disableFastAcl,proto3,oneof" json:"disable_fast_acl,omitempty"`
}
type GetSpecType_ActiveFastAcls struct {
	ActiveFastAcls *ActiveFastACLsType `protobuf:"bytes,30,opt,name=active_fast_acls,json=activeFastAcls,proto3,oneof" json:"active_fast_acls,omitempty"`
}
type GetSpecType_FastAclSet struct {
	FastAclSet *views.ObjectRefType `protobuf:"bytes,31,opt,name=fast_acl_set,json=fastAclSet,proto3,oneof" json:"fast_acl_set,omitempty"`
}

func (*GetSpecType_DisableNetworkPolicy) isGetSpecType_NetworkPolicyChoice()            {}
func (*GetSpecType_ActiveNetworkPolicies) isGetSpecType_NetworkPolicyChoice()           {}
func (*GetSpecType_NetworkPolicySet) isGetSpecType_NetworkPolicyChoice()                {}
func (*GetSpecType_ActiveEnhancedFirewallPolicies) isGetSpecType_NetworkPolicyChoice()  {}
func (*GetSpecType_DisableForwardProxyPolicy) isGetSpecType_ForwardProxyPolicyChoice()  {}
func (*GetSpecType_ActiveForwardProxyPolicies) isGetSpecType_ForwardProxyPolicyChoice() {}
func (*GetSpecType_ForwardProxyPolicySet) isGetSpecType_ForwardProxyPolicyChoice()      {}
func (*GetSpecType_DisableFastAcl) isGetSpecType_FastAclChoice()                        {}
func (*GetSpecType_ActiveFastAcls) isGetSpecType_FastAclChoice()                        {}
func (*GetSpecType_FastAclSet) isGetSpecType_FastAclChoice()                            {}

func (m *GetSpecType) GetNetworkPolicyChoice() isGetSpecType_NetworkPolicyChoice {
	if m != nil {
		return m.NetworkPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetForwardProxyPolicyChoice() isGetSpecType_ForwardProxyPolicyChoice {
	if m != nil {
		return m.ForwardProxyPolicyChoice
	}
	return nil
}
func (m *GetSpecType) GetFastAclChoice() isGetSpecType_FastAclChoice {
	if m != nil {
		return m.FastAclChoice
	}
	return nil
}

func (m *GetSpecType) GetDisableNetworkPolicy() *schema.Empty {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_DisableNetworkPolicy); ok {
		return x.DisableNetworkPolicy
	}
	return nil
}

func (m *GetSpecType) GetActiveNetworkPolicies() *ActiveNetworkPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_ActiveNetworkPolicies); ok {
		return x.ActiveNetworkPolicies
	}
	return nil
}

func (m *GetSpecType) GetNetworkPolicySet() *views.ObjectRefType {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_NetworkPolicySet); ok {
		return x.NetworkPolicySet
	}
	return nil
}

func (m *GetSpecType) GetActiveEnhancedFirewallPolicies() *ActiveEnhancedFirewallPoliciesType {
	if x, ok := m.GetNetworkPolicyChoice().(*GetSpecType_ActiveEnhancedFirewallPolicies); ok {
		return x.ActiveEnhancedFirewallPolicies
	}
	return nil
}

func (m *GetSpecType) GetDisableForwardProxyPolicy() *schema.Empty {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_DisableForwardProxyPolicy); ok {
		return x.DisableForwardProxyPolicy
	}
	return nil
}

func (m *GetSpecType) GetActiveForwardProxyPolicies() *ActiveForwardProxyPoliciesType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_ActiveForwardProxyPolicies); ok {
		return x.ActiveForwardProxyPolicies
	}
	return nil
}

func (m *GetSpecType) GetForwardProxyPolicySet() *views.ObjectRefType {
	if x, ok := m.GetForwardProxyPolicyChoice().(*GetSpecType_ForwardProxyPolicySet); ok {
		return x.ForwardProxyPolicySet
	}
	return nil
}

func (m *GetSpecType) GetDisableFastAcl() *schema.Empty {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_DisableFastAcl); ok {
		return x.DisableFastAcl
	}
	return nil
}

func (m *GetSpecType) GetActiveFastAcls() *ActiveFastACLsType {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_ActiveFastAcls); ok {
		return x.ActiveFastAcls
	}
	return nil
}

func (m *GetSpecType) GetFastAclSet() *views.ObjectRefType {
	if x, ok := m.GetFastAclChoice().(*GetSpecType_FastAclSet); ok {
		return x.FastAclSet
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetSpecType_DisableNetworkPolicy)(nil),
		(*GetSpecType_ActiveNetworkPolicies)(nil),
		(*GetSpecType_NetworkPolicySet)(nil),
		(*GetSpecType_ActiveEnhancedFirewallPolicies)(nil),
		(*GetSpecType_DisableForwardProxyPolicy)(nil),
		(*GetSpecType_ActiveForwardProxyPolicies)(nil),
		(*GetSpecType_ForwardProxyPolicySet)(nil),
		(*GetSpecType_DisableFastAcl)(nil),
		(*GetSpecType_ActiveFastAcls)(nil),
		(*GetSpecType_FastAclSet)(nil),
	}
}

// Network firewall status
//
// x-displayName: "Network Firewall Status"
// Network Firewall status provides the installed status of network firewall
type NetworkFirewallStatus struct {
	// installed
	//
	// x-displayName: "Installed"
	// Installed status of network firewall
	Installed bool `protobuf:"varint,1,opt,name=installed,proto3" json:"installed,omitempty"`
}

func (m *NetworkFirewallStatus) Reset()      { *m = NetworkFirewallStatus{} }
func (*NetworkFirewallStatus) ProtoMessage() {}
func (*NetworkFirewallStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e07e50a9abc3814c, []int{8}
}
func (m *NetworkFirewallStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkFirewallStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkFirewallStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkFirewallStatus.Merge(m, src)
}
func (m *NetworkFirewallStatus) XXX_Size() int {
	return m.Size()
}
func (m *NetworkFirewallStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkFirewallStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkFirewallStatus proto.InternalMessageInfo

func (m *NetworkFirewallStatus) GetInstalled() bool {
	if m != nil {
		return m.Installed
	}
	return false
}

func init() {
	proto.RegisterType((*ActiveNetworkPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveNetworkPoliciesType")
	golang_proto.RegisterType((*ActiveNetworkPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveNetworkPoliciesType")
	proto.RegisterType((*ActiveEnhancedFirewallPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveEnhancedFirewallPoliciesType")
	golang_proto.RegisterType((*ActiveEnhancedFirewallPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveEnhancedFirewallPoliciesType")
	proto.RegisterType((*ActiveForwardProxyPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType")
	golang_proto.RegisterType((*ActiveForwardProxyPoliciesType)(nil), "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType")
	proto.RegisterType((*ActiveFastACLsType)(nil), "ves.io.schema.network_firewall.ActiveFastACLsType")
	golang_proto.RegisterType((*ActiveFastACLsType)(nil), "ves.io.schema.network_firewall.ActiveFastACLsType")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.network_firewall.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.network_firewall.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.network_firewall.CreateSpecType")
	golang_proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.network_firewall.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.network_firewall.ReplaceSpecType")
	golang_proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.network_firewall.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.network_firewall.GetSpecType")
	golang_proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.network_firewall.GetSpecType")
	proto.RegisterType((*NetworkFirewallStatus)(nil), "ves.io.schema.network_firewall.NetworkFirewallStatus")
	golang_proto.RegisterType((*NetworkFirewallStatus)(nil), "ves.io.schema.network_firewall.NetworkFirewallStatus")
}

func init() {
	proto.RegisterFile("ves.io/schema/network_firewall/types.proto", fileDescriptor_e07e50a9abc3814c)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/network_firewall/types.proto", fileDescriptor_e07e50a9abc3814c)
}

var fileDescriptor_e07e50a9abc3814c = []byte{
	// 1468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x99, 0xdf, 0x6f, 0xdb, 0x54,
	0x1b, 0xc7, 0x73, 0x5a, 0xbf, 0xad, 0x7b, 0xda, 0xb5, 0x67, 0x5e, 0xd2, 0xfc, 0x68, 0xe2, 0x66,
	0x79, 0x2f, 0xde, 0xe9, 0x7d, 0xbd, 0xa4, 0x71, 0xb6, 0x75, 0x7b, 0x91, 0x26, 0x96, 0x69, 0x5b,
	0x67, 0x0d, 0x98, 0xb2, 0x21, 0x10, 0x82, 0x05, 0xc7, 0x39, 0x49, 0xcd, 0x9c, 0xd8, 0xb2, 0xdd,
	0x74, 0x99, 0x88, 0x34, 0x09, 0x89, 0x2b, 0x24, 0xa0, 0x5c, 0x70, 0x89, 0x04, 0x37, 0x90, 0xff,
	0x00, 0xcc, 0x45, 0x85, 0x84, 0x84, 0xb8, 0xca, 0x65, 0x2f, 0xb7, 0x54, 0x62, 0xe5, 0x6e, 0x7f,
	0x02, 0x8a, 0xe3, 0xa4, 0x76, 0x62, 0x67, 0xde, 0x86, 0xb8, 0xca, 0x5d, 0xe2, 0xe7, 0x79, 0xce,
	0xf7, 0x7b, 0x9e, 0x73, 0xce, 0xc7, 0x47, 0x32, 0xfc, 0x6f, 0x03, 0x6b, 0x69, 0x51, 0xce, 0x68,
	0xc2, 0x36, 0xae, 0xf1, 0x99, 0x3a, 0xd6, 0x77, 0x65, 0xf5, 0x7e, 0xb1, 0x22, 0xaa, 0x78, 0x97,
	0x97, 0xa4, 0x8c, 0xde, 0x54, 0xb0, 0x96, 0x56, 0x54, 0x59, 0x97, 0x29, 0xba, 0x9f, 0x9b, 0xee,
	0xe7, 0xa6, 0x47, 0x73, 0x63, 0x67, 0xab, 0xa2, 0xbe, 0xbd, 0x53, 0x4a, 0x0b, 0x72, 0x2d, 0x53,
	0x95, 0xab, 0x72, 0xc6, 0x2c, 0x2b, 0xed, 0x54, 0xcc, 0x7f, 0xe6, 0x1f, 0xf3, 0x57, 0x7f, 0xb8,
	0xd8, 0x7a, 0x55, 0x96, 0xab, 0x12, 0x3e, 0xce, 0xd2, 0xc5, 0x1a, 0xd6, 0x74, 0xbe, 0xa6, 0x58,
	0x09, 0xe1, 0x31, 0x6f, 0x56, 0x60, 0xcd, 0x19, 0x90, 0x15, 0x5d, 0x94, 0xeb, 0x96, 0xcb, 0x58,
	0xc2, 0x19, 0x54, 0x1a, 0x7a, 0xd1, 0x36, 0x89, 0x58, 0xd4, 0x19, 0xb6, 0x87, 0xe2, 0xce, 0x50,
	0x83, 0x97, 0xc4, 0x32, 0xaf, 0x63, 0x2b, 0x9a, 0x1c, 0x89, 0x8a, 0x78, 0xb7, 0xe8, 0x54, 0x5e,
	0x1f, 0xcf, 0xd0, 0xec, 0x02, 0xa9, 0xaf, 0x01, 0x8c, 0x5e, 0x11, 0x74, 0xb1, 0x81, 0xdf, 0xec,
	0xf7, 0xee, 0xb6, 0x2c, 0x89, 0x82, 0x88, 0xb5, 0xbb, 0x4d, 0x05, 0x53, 0x0f, 0x21, 0x1a, 0xb4,
	0x54, 0xb1, 0x9e, 0x47, 0x40, 0x72, 0xf6, 0xcc, 0x22, 0x9b, 0x4a, 0x3b, 0x3b, 0x6f, 0x8e, 0x9c,
	0x7e, 0xab, 0xf4, 0x11, 0x16, 0xf4, 0x02, 0xae, 0xf4, 0xaa, 0xf3, 0xff, 0x6b, 0xb7, 0x4e, 0x39,
	0xca, 0x9b, 0xc5, 0x5e, 0xda, 0x4f, 0x7f, 0xee, 0xcf, 0xce, 0xed, 0x81, 0x59, 0xf4, 0x08, 0xf4,
	0x7e, 0xfe, 0x6b, 0x0f, 0xcc, 0x90, 0xa0, 0xb0, 0x52, 0x77, 0xea, 0xa7, 0x7e, 0x04, 0x30, 0xd5,
	0x77, 0x76, 0xad, 0xbe, 0xcd, 0xd7, 0x05, 0x5c, 0xbe, 0x6e, 0xad, 0xaa, 0xc3, 0xe2, 0x1e, 0x80,
	0x31, 0x6c, 0x25, 0x0c, 0xd7, 0xfd, 0x65, 0xdc, 0x6e, 0xb4, 0x5b, 0x11, 0x8f, 0x81, 0x9a, 0xee,
	0x96, 0x87, 0xe9, 0xa3, 0xc6, 0x52, 0x3f, 0x00, 0x48, 0xf7, 0xbd, 0x5f, 0x97, 0xd5, 0x5d, 0x5e,
	0x2d, 0xdf, 0x56, 0xe5, 0x07, 0x4d, 0x87, 0xef, 0x4f, 0x01, 0x5c, 0xad, 0xf4, 0x83, 0x45, 0xa5,
	0x17, 0x7d, 0x19, 0xcf, 0x4c, 0xbb, 0x15, 0x74, 0x19, 0xc4, 0xc3, 0xef, 0x20, 0xd5, 0x61, 0x26,
	0xb5, 0x0b, 0x29, 0xcb, 0x2a, 0xaf, 0xe9, 0x57, 0xae, 0xde, 0xea, 0xdb, 0xe3, 0xe1, 0x42, 0x85,
	0xd7, 0xf4, 0x22, 0x2f, 0x48, 0x2f, 0x62, 0x28, 0xd9, 0x6e, 0x91, 0x83, 0x3a, 0x77, 0x13, 0x66,
	0xf8, 0x8a, 0x20, 0x69, 0xa9, 0xaf, 0x56, 0xe0, 0xf2, 0x0d, 0x49, 0x2e, 0xf1, 0xd2, 0x1d, 0x05,
	0x0b, 0xa6, 0xaa, 0x0c, 0xa9, 0x91, 0x0d, 0xa3, 0x61, 0xdd, 0x92, 0x8f, 0x8f, 0xc8, 0x3b, 0x85,
	0xff, 0xdd, 0x6e, 0xb9, 0x94, 0x1e, 0x19, 0x60, 0xa8, 0x8d, 0x40, 0x01, 0xd9, 0xf7, 0x58, 0xf3,
	0x0e, 0xd6, 0xa9, 0x87, 0x30, 0xe2, 0xd6, 0x3f, 0x53, 0x76, 0xc6, 0xa7, 0xac, 0x86, 0xd5, 0x86,
	0x28, 0x60, 0x6f, 0xd9, 0xd0, 0x58, 0xdf, 0x4d, 0xed, 0x0f, 0xe0, 0xd2, 0xa0, 0x55, 0xa6, 0x1e,
	0xe1, 0x43, 0x2f, 0xd1, 0x6e, 0x39, 0x8a, 0x46, 0x94, 0xa0, 0xd5, 0xdc, 0xde, 0xf0, 0x5f, 0x4e,
	0x3e, 0x18, 0x49, 0x1f, 0x6a, 0xe7, 0x27, 0x1c, 0x89, 0x81, 0xb2, 0xb5, 0xc2, 0xdd, 0xc7, 0xbf,
	0xce, 0xce, 0xed, 0xfd, 0x6c, 0xba, 0xf0, 0x3c, 0x17, 0xd4, 0xdb, 0x70, 0xb5, 0x2c, 0x6a, 0x7c,
	0x49, 0xc2, 0x45, 0xe7, 0x62, 0x45, 0xe6, 0x92, 0xe0, 0xcc, 0x22, 0x1b, 0x1c, 0xb1, 0x73, 0xad,
	0xa6, 0xe8, 0xcd, 0xfc, 0xfc, 0x41, 0x0b, 0xf4, 0xe4, 0xb6, 0x02, 0x85, 0xa0, 0x55, 0x6e, 0x87,
	0x55, 0x93, 0xfa, 0x18, 0x86, 0x79, 0x73, 0x0b, 0x17, 0xc7, 0x68, 0x35, 0x6f, 0x8e, 0x7b, 0x29,
	0x3d, 0xf9, 0x3d, 0x91, 0xf6, 0x44, 0xa0, 0x5d, 0x3c, 0xc4, 0xbb, 0x65, 0x51, 0xef, 0xc3, 0xd8,
	0xc8, 0xce, 0x93, 0x70, 0x95, 0x17, 0x9a, 0xc5, 0x9a, 0x5c, 0xc6, 0x91, 0x25, 0x7f, 0x13, 0x0b,
	0x3b, 0xb6, 0xe6, 0x2d, 0x73, 0x80, 0x37, 0xe4, 0x32, 0xa6, 0x3e, 0x07, 0xf0, 0xb4, 0x35, 0xb9,
	0x09, 0xab, 0x79, 0xda, 0x54, 0xc9, 0xfb, 0x9b, 0xe6, 0x24, 0x9e, 0x6e, 0x05, 0x0a, 0x34, 0x3f,
	0x31, 0x8b, 0xfa, 0x10, 0xc6, 0x07, 0x8b, 0xe8, 0x76, 0x76, 0x22, 0x0b, 0x7e, 0x66, 0x0c, 0x0a,
	0x51, 0x6b, 0x90, 0x31, 0x42, 0x36, 0xa9, 0xcf, 0x00, 0x4c, 0x58, 0x73, 0xf6, 0x40, 0x24, 0x34,
	0x35, 0x2e, 0xfb, 0x9b, 0xaf, 0x17, 0x83, 0xed, 0x6e, 0x62, 0xbc, 0x67, 0x2a, 0x55, 0x85, 0x49,
	0x57, 0x48, 0xd8, 0x97, 0x79, 0xd9, 0xdf, 0xa4, 0xe3, 0xe3, 0x28, 0xb0, 0xad, 0xf5, 0x4d, 0x88,
	0x86, 0x9d, 0xb5, 0x0e, 0x79, 0x04, 0xf9, 0x19, 0x78, 0xa6, 0xb0, 0x3c, 0xe8, 0x66, 0x1f, 0x00,
	0x54, 0x15, 0xa2, 0x41, 0x07, 0x87, 0x18, 0x3f, 0x69, 0x0e, 0xc5, 0xfa, 0x6c, 0x9a, 0xed, 0x6d,
	0xe0, 0x10, 0xe2, 0x8f, 0xc3, 0x82, 0xa4, 0x51, 0xb7, 0x61, 0x70, 0x08, 0x24, 0x7b, 0x43, 0x28,
	0x7f, 0xbe, 0x4f, 0x5a, 0xc4, 0xb2, 0x75, 0xe1, 0x1e, 0x3c, 0x61, 0xde, 0x64, 0xc4, 0xba, 0x8e,
	0xd5, 0x3a, 0x2f, 0x45, 0x8e, 0xfa, 0x87, 0xd8, 0xcf, 0xfb, 0x27, 0xd8, 0x6e, 0x39, 0x8b, 0x7b,
	0x32, 0x85, 0xa5, 0xde, 0xa3, 0x9b, 0xd6, 0x93, 0xfc, 0xe6, 0xd8, 0x79, 0x15, 0xe4, 0x7a, 0x45,
	0xac, 0x9a, 0xbe, 0xa9, 0xe8, 0xbe, 0x01, 0xe6, 0x3a, 0x06, 0x58, 0xec, 0x1a, 0x60, 0xe1, 0x02,
	0x93, 0xcb, 0x31, 0x9b, 0x4c, 0x96, 0x7d, 0x66, 0x00, 0x90, 0x7f, 0xcd, 0x63, 0x1f, 0xd8, 0xcb,
	0xc3, 0xfb, 0x06, 0x58, 0xe8, 0x18, 0xe0, 0x44, 0xd7, 0x00, 0xf3, 0x97, 0x98, 0xec, 0x06, 0x93,
	0x3d, 0x67, 0x16, 0x6f, 0xd8, 0xfa, 0x64, 0x2f, 0x88, 0xec, 0x1b, 0x00, 0x75, 0x0c, 0xb0, 0xd2,
	0x35, 0x00, 0x99, 0xbd, 0xc0, 0x64, 0x37, 0x99, 0xec, 0xc5, 0x5e, 0x05, 0x47, 0x90, 0xb3, 0x88,
	0xe0, 0x08, 0x72, 0x11, 0x2d, 0x71, 0x04, 0x79, 0x02, 0x2d, 0x73, 0x04, 0xb9, 0x82, 0x10, 0x47,
	0x90, 0xa7, 0x50, 0x90, 0x23, 0xc8, 0x20, 0x0a, 0x71, 0x04, 0x19, 0x42, 0xab, 0x1c, 0x41, 0xae,
	0xa2, 0x30, 0x47, 0x90, 0x61, 0x14, 0xe1, 0x08, 0x32, 0x82, 0xa2, 0x1c, 0x41, 0x46, 0x51, 0x8c,
	0x23, 0xc8, 0x18, 0x5a, 0xe3, 0x08, 0x72, 0x0d, 0xc5, 0x39, 0x82, 0x8c, 0xa3, 0x04, 0x47, 0x90,
	0x09, 0x44, 0x73, 0x04, 0x49, 0xa3, 0x75, 0x8e, 0x20, 0xd7, 0x51, 0x92, 0x9b, 0x23, 0xff, 0x98,
	0x47, 0x4f, 0xe7, 0xb9, 0x39, 0xf2, 0xe9, 0x3c, 0x3a, 0x9a, 0x4f, 0x7d, 0x0b, 0xe1, 0xf2, 0x55,
	0x15, 0xf3, 0x3a, 0x1e, 0xbe, 0x95, 0x6f, 0x79, 0x52, 0x3b, 0xe4, 0xbd, 0xc8, 0x9e, 0xb0, 0xd6,
	0xbc, 0x61, 0xbd, 0xfa, 0x8a, 0xb0, 0xf6, 0x66, 0xb4, 0xe8, 0x7a, 0xb1, 0x08, 0xfb, 0xde, 0x57,
	0x21, 0xd7, 0xeb, 0xc5, 0x56, 0xc0, 0xe5, 0x4a, 0xe1, 0x0f, 0xd8, 0xc9, 0x7f, 0x10, 0xd8, 0xef,
	0x3c, 0x07, 0xd8, 0xd1, 0x09, 0xab, 0x38, 0x91, 0xd3, 0x9f, 0x3c, 0x97, 0xd3, 0xb1, 0xbf, 0x83,
	0xd3, 0xcf, 0xc1, 0xb3, 0x3e, 0xe1, 0x0e, 0xb7, 0xf6, 0x42, 0x2b, 0x3c, 0x7e, 0x93, 0xdb, 0xf2,
	0xbc, 0xbd, 0xbd, 0xee, 0xc2, 0xea, 0xc4, 0x84, 0x46, 0x8e, 0x23, 0xfa, 0x9e, 0x0b, 0xa2, 0xe9,
	0x97, 0x45, 0xb4, 0x0b, 0x99, 0x47, 0xef, 0x97, 0xeb, 0xaf, 0xda, 0x8b, 0x19, 0xfb, 0xfd, 0xf2,
	0xff, 0xef, 0xfe, 0x7e, 0x79, 0xe4, 0xfa, 0xfe, 0x8b, 0x01, 0xae, 0xc2, 0x18, 0x0c, 0x5a, 0xab,
	0x94, 0x34, 0x3b, 0x96, 0xb4, 0xf6, 0xca, 0x0c, 0x7b, 0x0e, 0x86, 0xe0, 0xca, 0x60, 0x73, 0x1e,
	0x3f, 0xde, 0x80, 0xcb, 0x90, 0xec, 0x99, 0x4e, 0xf6, 0x9a, 0x32, 0xc3, 0x5e, 0xcc, 0x6f, 0xc0,
	0xd0, 0x28, 0xa0, 0xb7, 0x65, 0x51, 0xe8, 0xc3, 0x35, 0xd4, 0x31, 0x40, 0xb0, 0x6b, 0x80, 0x45,
	0x36, 0xcb, 0xe4, 0x58, 0x86, 0x65, 0x19, 0x36, 0x97, 0xcf, 0xc1, 0x35, 0x77, 0x32, 0xf7, 0xeb,
	0x82, 0xfb, 0x06, 0x88, 0x76, 0x0c, 0x10, 0xe9, 0x31, 0x96, 0x3d, 0xcf, 0xb0, 0x17, 0x18, 0x76,
	0x33, 0xff, 0x1f, 0xb8, 0x72, 0x4c, 0xe4, 0xe3, 0xc4, 0x44, 0xc7, 0x00, 0x71, 0x33, 0xf1, 0x12,
	0x93, 0xdb, 0x60, 0x72, 0xd9, 0x21, 0x6a, 0xfb, 0x60, 0x8d, 0xa3, 0x44, 0xea, 0x3b, 0x08, 0x57,
	0x0a, 0x58, 0x91, 0x78, 0x61, 0x4a, 0xc9, 0x29, 0x25, 0xa7, 0x94, 0x9c, 0x52, 0x72, 0x4a, 0xc9,
	0x71, 0x4a, 0x7e, 0x03, 0xe1, 0xe2, 0x0d, 0xac, 0x4f, 0x09, 0x39, 0x25, 0xe4, 0x94, 0x90, 0x53,
	0x42, 0x4e, 0x09, 0x39, 0x46, 0xc8, 0xf3, 0x30, 0x64, 0x11, 0x66, 0x30, 0x9f, 0x3b, 0x3a, 0xaf,
	0xef, 0x68, 0x54, 0x1c, 0x2e, 0x88, 0x75, 0x4d, 0xe7, 0x25, 0x09, 0x97, 0x23, 0x20, 0x09, 0xce,
	0x90, 0x85, 0xe3, 0x07, 0xf9, 0x3d, 0xd0, 0x79, 0x42, 0x07, 0x0e, 0x9e, 0xd0, 0x81, 0x67, 0x4f,
	0x68, 0xf0, 0xa8, 0x4b, 0x83, 0xef, 0xbb, 0x34, 0xf8, 0xad, 0x4b, 0x83, 0x4e, 0x97, 0x06, 0x07,
	0x5d, 0x1a, 0x3c, 0xee, 0xd2, 0xe0, 0xa8, 0x4b, 0x07, 0x9e, 0x75, 0x69, 0xf0, 0xc5, 0x21, 0x1d,
	0xd8, 0x3f, 0xa4, 0x41, 0xe7, 0x90, 0x0e, 0x1c, 0x1c, 0xd2, 0x81, 0xf7, 0xee, 0x56, 0x65, 0xe5,
	0x7e, 0x35, 0xdd, 0x90, 0x25, 0x1d, 0xab, 0x2a, 0x9f, 0xde, 0xd1, 0x32, 0xe6, 0x8f, 0x8a, 0xac,
	0xd6, 0xce, 0x2a, 0xaa, 0xdc, 0x10, 0xcb, 0x58, 0x3d, 0x3b, 0x08, 0x67, 0x94, 0x52, 0x55, 0xce,
	0xe0, 0x07, 0xba, 0xf5, 0x0d, 0xc9, 0xe3, 0xb3, 0x5c, 0x69, 0xce, 0xfc, 0xa0, 0x94, 0xfb, 0x2b,
	0x00, 0x00, 0xff, 0xff, 0xf5, 0x5b, 0xad, 0x80, 0xbf, 0x1b, 0x00, 0x00,
}

func (this *ActiveNetworkPoliciesType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveNetworkPoliciesType)
	if !ok {
		that2, ok := that.(ActiveNetworkPoliciesType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NetworkPolicies) != len(that1.NetworkPolicies) {
		return false
	}
	for i := range this.NetworkPolicies {
		if !this.NetworkPolicies[i].Equal(that1.NetworkPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ActiveEnhancedFirewallPoliciesType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveEnhancedFirewallPoliciesType)
	if !ok {
		that2, ok := that.(ActiveEnhancedFirewallPoliciesType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.EnhancedFirewallPolicies) != len(that1.EnhancedFirewallPolicies) {
		return false
	}
	for i := range this.EnhancedFirewallPolicies {
		if !this.EnhancedFirewallPolicies[i].Equal(that1.EnhancedFirewallPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ActiveForwardProxyPoliciesType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveForwardProxyPoliciesType)
	if !ok {
		that2, ok := that.(ActiveForwardProxyPoliciesType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ForwardProxyPolicies) != len(that1.ForwardProxyPolicies) {
		return false
	}
	for i := range this.ForwardProxyPolicies {
		if !this.ForwardProxyPolicies[i].Equal(that1.ForwardProxyPolicies[i]) {
			return false
		}
	}
	return true
}
func (this *ActiveFastACLsType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ActiveFastACLsType)
	if !ok {
		that2, ok := that.(ActiveFastACLsType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.FastAcls) != len(that1.FastAcls) {
		return false
	}
	for i := range this.FastAcls {
		if !this.FastAcls[i].Equal(that1.FastAcls[i]) {
			return false
		}
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NetworkPolicySet) != len(that1.NetworkPolicySet) {
		return false
	}
	for i := range this.NetworkPolicySet {
		if !this.NetworkPolicySet[i].Equal(that1.NetworkPolicySet[i]) {
			return false
		}
	}
	if len(this.ForwardProxyPolicySet) != len(that1.ForwardProxyPolicySet) {
		return false
	}
	for i := range this.ForwardProxyPolicySet {
		if !this.ForwardProxyPolicySet[i].Equal(that1.ForwardProxyPolicySet[i]) {
			return false
		}
	}
	if len(this.FastAclSet) != len(that1.FastAclSet) {
		return false
	}
	for i := range this.FastAclSet {
		if !this.FastAclSet[i].Equal(that1.FastAclSet[i]) {
			return false
		}
	}
	if len(this.EnhancedFirewallPolicies) != len(that1.EnhancedFirewallPolicies) {
		return false
	}
	for i := range this.EnhancedFirewallPolicies {
		if !this.EnhancedFirewallPolicies[i].Equal(that1.EnhancedFirewallPolicies[i]) {
			return false
		}
	}
	if that1.NetworkPolicyConfigMode == nil {
		if this.NetworkPolicyConfigMode != nil {
			return false
		}
	} else if this.NetworkPolicyConfigMode == nil {
		return false
	} else if !this.NetworkPolicyConfigMode.Equal(that1.NetworkPolicyConfigMode) {
		return false
	}
	if that1.ForwardProxyPolicyConfigMode == nil {
		if this.ForwardProxyPolicyConfigMode != nil {
			return false
		}
	} else if this.ForwardProxyPolicyConfigMode == nil {
		return false
	} else if !this.ForwardProxyPolicyConfigMode.Equal(that1.ForwardProxyPolicyConfigMode) {
		return false
	}
	if that1.FastAclConfigMode == nil {
		if this.FastAclConfigMode != nil {
			return false
		}
	} else if this.FastAclConfigMode == nil {
		return false
	} else if !this.FastAclConfigMode.Equal(that1.FastAclConfigMode) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_NetworkPolicyLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_NetworkPolicyLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicyLegacyMode.Equal(that1.NetworkPolicyLegacyMode) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveEnhancedFirewallPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveEnhancedFirewallPolicies)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveEnhancedFirewallPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveEnhancedFirewallPolicies.Equal(that1.ActiveEnhancedFirewallPolicies) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ForwardProxyPolicyLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_ForwardProxyPolicyLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicyLegacyMode.Equal(that1.ForwardProxyPolicyLegacyMode) {
		return false
	}
	return true
}
func (this *GlobalSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(GlobalSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *GlobalSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(GlobalSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *GlobalSpecType_FastAclLegacyMode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_FastAclLegacyMode)
	if !ok {
		that2, ok := that.(GlobalSpecType_FastAclLegacyMode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclLegacyMode.Equal(that1.FastAclLegacyMode) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *CreateSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(CreateSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveEnhancedFirewallPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveEnhancedFirewallPolicies)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveEnhancedFirewallPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveEnhancedFirewallPolicies.Equal(that1.ActiveEnhancedFirewallPolicies) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *CreateSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(CreateSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *CreateSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(CreateSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *CreateSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(CreateSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *CreateSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(CreateSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveEnhancedFirewallPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveEnhancedFirewallPolicies)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveEnhancedFirewallPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveEnhancedFirewallPolicies.Equal(that1.ActiveEnhancedFirewallPolicies) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(ReplaceSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(ReplaceSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(ReplaceSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.NetworkPolicyChoice == nil {
		if this.NetworkPolicyChoice != nil {
			return false
		}
	} else if this.NetworkPolicyChoice == nil {
		return false
	} else if !this.NetworkPolicyChoice.Equal(that1.NetworkPolicyChoice) {
		return false
	}
	if that1.ForwardProxyPolicyChoice == nil {
		if this.ForwardProxyPolicyChoice != nil {
			return false
		}
	} else if this.ForwardProxyPolicyChoice == nil {
		return false
	} else if !this.ForwardProxyPolicyChoice.Equal(that1.ForwardProxyPolicyChoice) {
		return false
	}
	if that1.FastAclChoice == nil {
		if this.FastAclChoice != nil {
			return false
		}
	} else if this.FastAclChoice == nil {
		return false
	} else if !this.FastAclChoice.Equal(that1.FastAclChoice) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableNetworkPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableNetworkPolicy)
	if !ok {
		that2, ok := that.(GetSpecType_DisableNetworkPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableNetworkPolicy.Equal(that1.DisableNetworkPolicy) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveNetworkPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveNetworkPolicies)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveNetworkPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveNetworkPolicies.Equal(that1.ActiveNetworkPolicies) {
		return false
	}
	return true
}
func (this *GetSpecType_NetworkPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_NetworkPolicySet)
	if !ok {
		that2, ok := that.(GetSpecType_NetworkPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NetworkPolicySet.Equal(that1.NetworkPolicySet) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveEnhancedFirewallPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveEnhancedFirewallPolicies)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveEnhancedFirewallPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveEnhancedFirewallPolicies.Equal(that1.ActiveEnhancedFirewallPolicies) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableForwardProxyPolicy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableForwardProxyPolicy)
	if !ok {
		that2, ok := that.(GetSpecType_DisableForwardProxyPolicy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableForwardProxyPolicy.Equal(that1.DisableForwardProxyPolicy) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveForwardProxyPolicies) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveForwardProxyPolicies)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveForwardProxyPolicies)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveForwardProxyPolicies.Equal(that1.ActiveForwardProxyPolicies) {
		return false
	}
	return true
}
func (this *GetSpecType_ForwardProxyPolicySet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ForwardProxyPolicySet)
	if !ok {
		that2, ok := that.(GetSpecType_ForwardProxyPolicySet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ForwardProxyPolicySet.Equal(that1.ForwardProxyPolicySet) {
		return false
	}
	return true
}
func (this *GetSpecType_DisableFastAcl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_DisableFastAcl)
	if !ok {
		that2, ok := that.(GetSpecType_DisableFastAcl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DisableFastAcl.Equal(that1.DisableFastAcl) {
		return false
	}
	return true
}
func (this *GetSpecType_ActiveFastAcls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_ActiveFastAcls)
	if !ok {
		that2, ok := that.(GetSpecType_ActiveFastAcls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ActiveFastAcls.Equal(that1.ActiveFastAcls) {
		return false
	}
	return true
}
func (this *GetSpecType_FastAclSet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_FastAclSet)
	if !ok {
		that2, ok := that.(GetSpecType_FastAclSet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.FastAclSet.Equal(that1.FastAclSet) {
		return false
	}
	return true
}
func (this *NetworkFirewallStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*NetworkFirewallStatus)
	if !ok {
		that2, ok := that.(NetworkFirewallStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Installed != that1.Installed {
		return false
	}
	return true
}
func (this *ActiveNetworkPoliciesType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveNetworkPoliciesType{")
	if this.NetworkPolicies != nil {
		s = append(s, "NetworkPolicies: "+fmt.Sprintf("%#v", this.NetworkPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ActiveEnhancedFirewallPoliciesType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveEnhancedFirewallPoliciesType{")
	if this.EnhancedFirewallPolicies != nil {
		s = append(s, "EnhancedFirewallPolicies: "+fmt.Sprintf("%#v", this.EnhancedFirewallPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ActiveForwardProxyPoliciesType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveForwardProxyPoliciesType{")
	if this.ForwardProxyPolicies != nil {
		s = append(s, "ForwardProxyPolicies: "+fmt.Sprintf("%#v", this.ForwardProxyPolicies)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ActiveFastACLsType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.ActiveFastACLsType{")
	if this.FastAcls != nil {
		s = append(s, "FastAcls: "+fmt.Sprintf("%#v", this.FastAcls)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 19)
	s = append(s, "&network_firewall.GlobalSpecType{")
	if this.NetworkPolicySet != nil {
		s = append(s, "NetworkPolicySet: "+fmt.Sprintf("%#v", this.NetworkPolicySet)+",\n")
	}
	if this.ForwardProxyPolicySet != nil {
		s = append(s, "ForwardProxyPolicySet: "+fmt.Sprintf("%#v", this.ForwardProxyPolicySet)+",\n")
	}
	if this.FastAclSet != nil {
		s = append(s, "FastAclSet: "+fmt.Sprintf("%#v", this.FastAclSet)+",\n")
	}
	if this.EnhancedFirewallPolicies != nil {
		s = append(s, "EnhancedFirewallPolicies: "+fmt.Sprintf("%#v", this.EnhancedFirewallPolicies)+",\n")
	}
	if this.NetworkPolicyConfigMode != nil {
		s = append(s, "NetworkPolicyConfigMode: "+fmt.Sprintf("%#v", this.NetworkPolicyConfigMode)+",\n")
	}
	if this.ForwardProxyPolicyConfigMode != nil {
		s = append(s, "ForwardProxyPolicyConfigMode: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyConfigMode)+",\n")
	}
	if this.FastAclConfigMode != nil {
		s = append(s, "FastAclConfigMode: "+fmt.Sprintf("%#v", this.FastAclConfigMode)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_NetworkPolicyLegacyMode{` +
		`NetworkPolicyLegacyMode:` + fmt.Sprintf("%#v", this.NetworkPolicyLegacyMode) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveEnhancedFirewallPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveEnhancedFirewallPolicies{` +
		`ActiveEnhancedFirewallPolicies:` + fmt.Sprintf("%#v", this.ActiveEnhancedFirewallPolicies) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ForwardProxyPolicyLegacyMode{` +
		`ForwardProxyPolicyLegacyMode:` + fmt.Sprintf("%#v", this.ForwardProxyPolicyLegacyMode) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_FastAclLegacyMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GlobalSpecType_FastAclLegacyMode{` +
		`FastAclLegacyMode:` + fmt.Sprintf("%#v", this.FastAclLegacyMode) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&network_firewall.CreateSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveEnhancedFirewallPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveEnhancedFirewallPolicies{` +
		`ActiveEnhancedFirewallPolicies:` + fmt.Sprintf("%#v", this.ActiveEnhancedFirewallPolicies) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.CreateSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&network_firewall.ReplaceSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveEnhancedFirewallPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveEnhancedFirewallPolicies{` +
		`ActiveEnhancedFirewallPolicies:` + fmt.Sprintf("%#v", this.ActiveEnhancedFirewallPolicies) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.ReplaceSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&network_firewall.GetSpecType{")
	if this.NetworkPolicyChoice != nil {
		s = append(s, "NetworkPolicyChoice: "+fmt.Sprintf("%#v", this.NetworkPolicyChoice)+",\n")
	}
	if this.ForwardProxyPolicyChoice != nil {
		s = append(s, "ForwardProxyPolicyChoice: "+fmt.Sprintf("%#v", this.ForwardProxyPolicyChoice)+",\n")
	}
	if this.FastAclChoice != nil {
		s = append(s, "FastAclChoice: "+fmt.Sprintf("%#v", this.FastAclChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_DisableNetworkPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableNetworkPolicy{` +
		`DisableNetworkPolicy:` + fmt.Sprintf("%#v", this.DisableNetworkPolicy) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveNetworkPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveNetworkPolicies{` +
		`ActiveNetworkPolicies:` + fmt.Sprintf("%#v", this.ActiveNetworkPolicies) + `}`}, ", ")
	return s
}
func (this *GetSpecType_NetworkPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_NetworkPolicySet{` +
		`NetworkPolicySet:` + fmt.Sprintf("%#v", this.NetworkPolicySet) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveEnhancedFirewallPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveEnhancedFirewallPolicies{` +
		`ActiveEnhancedFirewallPolicies:` + fmt.Sprintf("%#v", this.ActiveEnhancedFirewallPolicies) + `}`}, ", ")
	return s
}
func (this *GetSpecType_DisableForwardProxyPolicy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableForwardProxyPolicy{` +
		`DisableForwardProxyPolicy:` + fmt.Sprintf("%#v", this.DisableForwardProxyPolicy) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveForwardProxyPolicies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveForwardProxyPolicies{` +
		`ActiveForwardProxyPolicies:` + fmt.Sprintf("%#v", this.ActiveForwardProxyPolicies) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ForwardProxyPolicySet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ForwardProxyPolicySet{` +
		`ForwardProxyPolicySet:` + fmt.Sprintf("%#v", this.ForwardProxyPolicySet) + `}`}, ", ")
	return s
}
func (this *GetSpecType_DisableFastAcl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_DisableFastAcl{` +
		`DisableFastAcl:` + fmt.Sprintf("%#v", this.DisableFastAcl) + `}`}, ", ")
	return s
}
func (this *GetSpecType_ActiveFastAcls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_ActiveFastAcls{` +
		`ActiveFastAcls:` + fmt.Sprintf("%#v", this.ActiveFastAcls) + `}`}, ", ")
	return s
}
func (this *GetSpecType_FastAclSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&network_firewall.GetSpecType_FastAclSet{` +
		`FastAclSet:` + fmt.Sprintf("%#v", this.FastAclSet) + `}`}, ", ")
	return s
}
func (this *NetworkFirewallStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&network_firewall.NetworkFirewallStatus{")
	s = append(s, "Installed: "+fmt.Sprintf("%#v", this.Installed)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ActiveNetworkPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveNetworkPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActiveNetworkPoliciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NetworkPolicies) > 0 {
		for iNdEx := len(m.NetworkPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActiveEnhancedFirewallPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveEnhancedFirewallPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActiveEnhancedFirewallPoliciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EnhancedFirewallPolicies) > 0 {
		for iNdEx := len(m.EnhancedFirewallPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EnhancedFirewallPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActiveForwardProxyPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveForwardProxyPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActiveForwardProxyPoliciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ForwardProxyPolicies) > 0 {
		for iNdEx := len(m.ForwardProxyPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ForwardProxyPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ActiveFastACLsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveFastACLsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActiveFastACLsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FastAcls) > 0 {
		for iNdEx := len(m.FastAcls) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FastAcls[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ViewInternal != nil {
		{
			size, err := m.ViewInternal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xc2
	}
	if m.NetworkPolicyConfigMode != nil {
		{
			size := m.NetworkPolicyConfigMode.Size()
			i -= size
			if _, err := m.NetworkPolicyConfigMode.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.EnhancedFirewallPolicies) > 0 {
		for iNdEx := len(m.EnhancedFirewallPolicies) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EnhancedFirewallPolicies[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0x82
		}
	}
	if m.FastAclConfigMode != nil {
		{
			size := m.FastAclConfigMode.Size()
			i -= size
			if _, err := m.FastAclConfigMode.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ForwardProxyPolicyConfigMode != nil {
		{
			size := m.ForwardProxyPolicyConfigMode.Size()
			i -= size
			if _, err := m.ForwardProxyPolicyConfigMode.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.FastAclSet) > 0 {
		for iNdEx := len(m.FastAclSet) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FastAclSet[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.ForwardProxyPolicySet) > 0 {
		for iNdEx := len(m.ForwardProxyPolicySet) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ForwardProxyPolicySet[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.NetworkPolicySet) > 0 {
		for iNdEx := len(m.NetworkPolicySet) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkPolicySet[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_DisableNetworkPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableNetworkPolicy != nil {
		{
			size, err := m.DisableNetworkPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ActiveNetworkPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveNetworkPolicies != nil {
		{
			size, err := m.ActiveNetworkPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_DisableForwardProxyPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableForwardProxyPolicy != nil {
		{
			size, err := m.DisableForwardProxyPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ActiveForwardProxyPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveForwardProxyPolicies != nil {
		{
			size, err := m.ActiveForwardProxyPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_NetworkPolicyLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_NetworkPolicyLegacyMode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NetworkPolicyLegacyMode != nil {
		{
			size, err := m.NetworkPolicyLegacyMode.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ForwardProxyPolicyLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ForwardProxyPolicyLegacyMode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ForwardProxyPolicyLegacyMode != nil {
		{
			size, err := m.ForwardProxyPolicyLegacyMode.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_DisableFastAcl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableFastAcl != nil {
		{
			size, err := m.DisableFastAcl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ActiveFastAcls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveFastAcls != nil {
		{
			size, err := m.ActiveFastAcls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_FastAclLegacyMode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_FastAclLegacyMode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FastAclLegacyMode != nil {
		{
			size, err := m.FastAclLegacyMode.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_ActiveEnhancedFirewallPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_ActiveEnhancedFirewallPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveEnhancedFirewallPolicies != nil {
		{
			size, err := m.ActiveEnhancedFirewallPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		{
			size := m.NetworkPolicyChoice.Size()
			i -= size
			if _, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.FastAclChoice != nil {
		{
			size := m.FastAclChoice.Size()
			i -= size
			if _, err := m.FastAclChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ForwardProxyPolicyChoice != nil {
		{
			size := m.ForwardProxyPolicyChoice.Size()
			i -= size
			if _, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_DisableNetworkPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableNetworkPolicy != nil {
		{
			size, err := m.DisableNetworkPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ActiveNetworkPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveNetworkPolicies != nil {
		{
			size, err := m.ActiveNetworkPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_NetworkPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NetworkPolicySet != nil {
		{
			size, err := m.NetworkPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_DisableForwardProxyPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableForwardProxyPolicy != nil {
		{
			size, err := m.DisableForwardProxyPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ActiveForwardProxyPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveForwardProxyPolicies != nil {
		{
			size, err := m.ActiveForwardProxyPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ForwardProxyPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ForwardProxyPolicySet != nil {
		{
			size, err := m.ForwardProxyPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_DisableFastAcl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableFastAcl != nil {
		{
			size, err := m.DisableFastAcl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ActiveFastAcls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveFastAcls != nil {
		{
			size, err := m.ActiveFastAcls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_FastAclSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FastAclSet != nil {
		{
			size, err := m.FastAclSet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_ActiveEnhancedFirewallPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_ActiveEnhancedFirewallPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveEnhancedFirewallPolicies != nil {
		{
			size, err := m.ActiveEnhancedFirewallPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		{
			size := m.NetworkPolicyChoice.Size()
			i -= size
			if _, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.FastAclChoice != nil {
		{
			size := m.FastAclChoice.Size()
			i -= size
			if _, err := m.FastAclChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ForwardProxyPolicyChoice != nil {
		{
			size := m.ForwardProxyPolicyChoice.Size()
			i -= size
			if _, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReplaceSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_DisableNetworkPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableNetworkPolicy != nil {
		{
			size, err := m.DisableNetworkPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ActiveNetworkPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveNetworkPolicies != nil {
		{
			size, err := m.ActiveNetworkPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_NetworkPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NetworkPolicySet != nil {
		{
			size, err := m.NetworkPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_DisableForwardProxyPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableForwardProxyPolicy != nil {
		{
			size, err := m.DisableForwardProxyPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ActiveForwardProxyPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveForwardProxyPolicies != nil {
		{
			size, err := m.ActiveForwardProxyPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ForwardProxyPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ForwardProxyPolicySet != nil {
		{
			size, err := m.ForwardProxyPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_DisableFastAcl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableFastAcl != nil {
		{
			size, err := m.DisableFastAcl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ActiveFastAcls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveFastAcls != nil {
		{
			size, err := m.ActiveFastAcls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_FastAclSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FastAclSet != nil {
		{
			size, err := m.FastAclSet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_ActiveEnhancedFirewallPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_ActiveEnhancedFirewallPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveEnhancedFirewallPolicies != nil {
		{
			size, err := m.ActiveEnhancedFirewallPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		{
			size := m.NetworkPolicyChoice.Size()
			i -= size
			if _, err := m.NetworkPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.FastAclChoice != nil {
		{
			size := m.FastAclChoice.Size()
			i -= size
			if _, err := m.FastAclChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ForwardProxyPolicyChoice != nil {
		{
			size := m.ForwardProxyPolicyChoice.Size()
			i -= size
			if _, err := m.ForwardProxyPolicyChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetSpecType_DisableNetworkPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_DisableNetworkPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableNetworkPolicy != nil {
		{
			size, err := m.DisableNetworkPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ActiveNetworkPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ActiveNetworkPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveNetworkPolicies != nil {
		{
			size, err := m.ActiveNetworkPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_NetworkPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_NetworkPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NetworkPolicySet != nil {
		{
			size, err := m.NetworkPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_DisableForwardProxyPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_DisableForwardProxyPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableForwardProxyPolicy != nil {
		{
			size, err := m.DisableForwardProxyPolicy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ActiveForwardProxyPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ActiveForwardProxyPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveForwardProxyPolicies != nil {
		{
			size, err := m.ActiveForwardProxyPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ForwardProxyPolicySet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ForwardProxyPolicySet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ForwardProxyPolicySet != nil {
		{
			size, err := m.ForwardProxyPolicySet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_DisableFastAcl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_DisableFastAcl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DisableFastAcl != nil {
		{
			size, err := m.DisableFastAcl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ActiveFastAcls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ActiveFastAcls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveFastAcls != nil {
		{
			size, err := m.ActiveFastAcls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_FastAclSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_FastAclSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FastAclSet != nil {
		{
			size, err := m.FastAclSet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_ActiveEnhancedFirewallPolicies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_ActiveEnhancedFirewallPolicies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ActiveEnhancedFirewallPolicies != nil {
		{
			size, err := m.ActiveEnhancedFirewallPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *NetworkFirewallStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkFirewallStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkFirewallStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Installed {
		i--
		if m.Installed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ActiveNetworkPoliciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkPolicies) > 0 {
		for _, e := range m.NetworkPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ActiveEnhancedFirewallPoliciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.EnhancedFirewallPolicies) > 0 {
		for _, e := range m.EnhancedFirewallPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ActiveForwardProxyPoliciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ForwardProxyPolicies) > 0 {
		for _, e := range m.ForwardProxyPolicies {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *ActiveFastACLsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FastAcls) > 0 {
		for _, e := range m.FastAcls {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GlobalSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkPolicySet) > 0 {
		for _, e := range m.NetworkPolicySet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if len(m.ForwardProxyPolicySet) > 0 {
		for _, e := range m.ForwardProxyPolicySet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if len(m.FastAclSet) > 0 {
		for _, e := range m.FastAclSet {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if m.NetworkPolicyConfigMode != nil {
		n += m.NetworkPolicyConfigMode.Size()
	}
	if m.ForwardProxyPolicyConfigMode != nil {
		n += m.ForwardProxyPolicyConfigMode.Size()
	}
	if m.FastAclConfigMode != nil {
		n += m.FastAclConfigMode.Size()
	}
	if len(m.EnhancedFirewallPolicies) > 0 {
		for _, e := range m.EnhancedFirewallPolicies {
			l = e.Size()
			n += 2 + l + sovTypes(uint64(l))
		}
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GlobalSpecType_DisableNetworkPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveNetworkPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_DisableForwardProxyPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_NetworkPolicyLegacyMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicyLegacyMode != nil {
		l = m.NetworkPolicyLegacyMode.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ForwardProxyPolicyLegacyMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ForwardProxyPolicyLegacyMode != nil {
		l = m.ForwardProxyPolicyLegacyMode.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_DisableFastAcl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveFastAcls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_FastAclLegacyMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FastAclLegacyMode != nil {
		l = m.FastAclLegacyMode.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_ActiveEnhancedFirewallPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveEnhancedFirewallPolicies != nil {
		l = m.ActiveEnhancedFirewallPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *CreateSpecType_DisableNetworkPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveNetworkPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_NetworkPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_DisableForwardProxyPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ForwardProxyPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_DisableFastAcl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveFastAcls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_FastAclSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_ActiveEnhancedFirewallPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveEnhancedFirewallPolicies != nil {
		l = m.ActiveEnhancedFirewallPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *ReplaceSpecType_DisableNetworkPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveNetworkPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_NetworkPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_DisableForwardProxyPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ForwardProxyPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_DisableFastAcl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveFastAcls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_FastAclSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_ActiveEnhancedFirewallPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveEnhancedFirewallPolicies != nil {
		l = m.ActiveEnhancedFirewallPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicyChoice != nil {
		n += m.NetworkPolicyChoice.Size()
	}
	if m.ForwardProxyPolicyChoice != nil {
		n += m.ForwardProxyPolicyChoice.Size()
	}
	if m.FastAclChoice != nil {
		n += m.FastAclChoice.Size()
	}
	return n
}

func (m *GetSpecType_DisableNetworkPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableNetworkPolicy != nil {
		l = m.DisableNetworkPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveNetworkPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveNetworkPolicies != nil {
		l = m.ActiveNetworkPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_NetworkPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkPolicySet != nil {
		l = m.NetworkPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_DisableForwardProxyPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableForwardProxyPolicy != nil {
		l = m.DisableForwardProxyPolicy.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveForwardProxyPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveForwardProxyPolicies != nil {
		l = m.ActiveForwardProxyPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ForwardProxyPolicySet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ForwardProxyPolicySet != nil {
		l = m.ForwardProxyPolicySet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_DisableFastAcl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisableFastAcl != nil {
		l = m.DisableFastAcl.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveFastAcls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveFastAcls != nil {
		l = m.ActiveFastAcls.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_FastAclSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FastAclSet != nil {
		l = m.FastAclSet.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_ActiveEnhancedFirewallPolicies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActiveEnhancedFirewallPolicies != nil {
		l = m.ActiveEnhancedFirewallPolicies.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *NetworkFirewallStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Installed {
		n += 2
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ActiveNetworkPoliciesType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForNetworkPolicies := "[]*ObjectRefType{"
	for _, f := range this.NetworkPolicies {
		repeatedStringForNetworkPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForNetworkPolicies += "}"
	s := strings.Join([]string{`&ActiveNetworkPoliciesType{`,
		`NetworkPolicies:` + repeatedStringForNetworkPolicies + `,`,
		`}`,
	}, "")
	return s
}
func (this *ActiveEnhancedFirewallPoliciesType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForEnhancedFirewallPolicies := "[]*ObjectRefType{"
	for _, f := range this.EnhancedFirewallPolicies {
		repeatedStringForEnhancedFirewallPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForEnhancedFirewallPolicies += "}"
	s := strings.Join([]string{`&ActiveEnhancedFirewallPoliciesType{`,
		`EnhancedFirewallPolicies:` + repeatedStringForEnhancedFirewallPolicies + `,`,
		`}`,
	}, "")
	return s
}
func (this *ActiveForwardProxyPoliciesType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForForwardProxyPolicies := "[]*ObjectRefType{"
	for _, f := range this.ForwardProxyPolicies {
		repeatedStringForForwardProxyPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForForwardProxyPolicies += "}"
	s := strings.Join([]string{`&ActiveForwardProxyPoliciesType{`,
		`ForwardProxyPolicies:` + repeatedStringForForwardProxyPolicies + `,`,
		`}`,
	}, "")
	return s
}
func (this *ActiveFastACLsType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForFastAcls := "[]*ObjectRefType{"
	for _, f := range this.FastAcls {
		repeatedStringForFastAcls += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "views.ObjectRefType", 1) + ","
	}
	repeatedStringForFastAcls += "}"
	s := strings.Join([]string{`&ActiveFastACLsType{`,
		`FastAcls:` + repeatedStringForFastAcls + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForNetworkPolicySet := "[]*ObjectRefType{"
	for _, f := range this.NetworkPolicySet {
		repeatedStringForNetworkPolicySet += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForNetworkPolicySet += "}"
	repeatedStringForForwardProxyPolicySet := "[]*ObjectRefType{"
	for _, f := range this.ForwardProxyPolicySet {
		repeatedStringForForwardProxyPolicySet += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForForwardProxyPolicySet += "}"
	repeatedStringForFastAclSet := "[]*ObjectRefType{"
	for _, f := range this.FastAclSet {
		repeatedStringForFastAclSet += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForFastAclSet += "}"
	repeatedStringForEnhancedFirewallPolicies := "[]*ObjectRefType{"
	for _, f := range this.EnhancedFirewallPolicies {
		repeatedStringForEnhancedFirewallPolicies += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForEnhancedFirewallPolicies += "}"
	s := strings.Join([]string{`&GlobalSpecType{`,
		`NetworkPolicySet:` + repeatedStringForNetworkPolicySet + `,`,
		`ForwardProxyPolicySet:` + repeatedStringForForwardProxyPolicySet + `,`,
		`FastAclSet:` + repeatedStringForFastAclSet + `,`,
		`NetworkPolicyConfigMode:` + fmt.Sprintf("%v", this.NetworkPolicyConfigMode) + `,`,
		`ForwardProxyPolicyConfigMode:` + fmt.Sprintf("%v", this.ForwardProxyPolicyConfigMode) + `,`,
		`FastAclConfigMode:` + fmt.Sprintf("%v", this.FastAclConfigMode) + `,`,
		`EnhancedFirewallPolicies:` + repeatedStringForEnhancedFirewallPolicies + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_NetworkPolicyLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_NetworkPolicyLegacyMode{`,
		`NetworkPolicyLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicyLegacyMode), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ForwardProxyPolicyLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ForwardProxyPolicyLegacyMode{`,
		`ForwardProxyPolicyLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicyLegacyMode), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_FastAclLegacyMode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_FastAclLegacyMode{`,
		`FastAclLegacyMode:` + strings.Replace(fmt.Sprintf("%v", this.FastAclLegacyMode), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_ActiveEnhancedFirewallPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_ActiveEnhancedFirewallPolicies{`,
		`ActiveEnhancedFirewallPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveEnhancedFirewallPolicies), "ActiveEnhancedFirewallPoliciesType", "ActiveEnhancedFirewallPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_ActiveEnhancedFirewallPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_ActiveEnhancedFirewallPolicies{`,
		`ActiveEnhancedFirewallPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveEnhancedFirewallPolicies), "ActiveEnhancedFirewallPoliciesType", "ActiveEnhancedFirewallPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_ActiveEnhancedFirewallPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_ActiveEnhancedFirewallPolicies{`,
		`ActiveEnhancedFirewallPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveEnhancedFirewallPolicies), "ActiveEnhancedFirewallPoliciesType", "ActiveEnhancedFirewallPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`NetworkPolicyChoice:` + fmt.Sprintf("%v", this.NetworkPolicyChoice) + `,`,
		`ForwardProxyPolicyChoice:` + fmt.Sprintf("%v", this.ForwardProxyPolicyChoice) + `,`,
		`FastAclChoice:` + fmt.Sprintf("%v", this.FastAclChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableNetworkPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableNetworkPolicy{`,
		`DisableNetworkPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableNetworkPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveNetworkPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveNetworkPolicies{`,
		`ActiveNetworkPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveNetworkPolicies), "ActiveNetworkPoliciesType", "ActiveNetworkPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_NetworkPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_NetworkPolicySet{`,
		`NetworkPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.NetworkPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableForwardProxyPolicy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableForwardProxyPolicy{`,
		`DisableForwardProxyPolicy:` + strings.Replace(fmt.Sprintf("%v", this.DisableForwardProxyPolicy), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveForwardProxyPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveForwardProxyPolicies{`,
		`ActiveForwardProxyPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveForwardProxyPolicies), "ActiveForwardProxyPoliciesType", "ActiveForwardProxyPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ForwardProxyPolicySet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ForwardProxyPolicySet{`,
		`ForwardProxyPolicySet:` + strings.Replace(fmt.Sprintf("%v", this.ForwardProxyPolicySet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_DisableFastAcl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_DisableFastAcl{`,
		`DisableFastAcl:` + strings.Replace(fmt.Sprintf("%v", this.DisableFastAcl), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveFastAcls) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveFastAcls{`,
		`ActiveFastAcls:` + strings.Replace(fmt.Sprintf("%v", this.ActiveFastAcls), "ActiveFastACLsType", "ActiveFastACLsType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_FastAclSet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_FastAclSet{`,
		`FastAclSet:` + strings.Replace(fmt.Sprintf("%v", this.FastAclSet), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_ActiveEnhancedFirewallPolicies) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_ActiveEnhancedFirewallPolicies{`,
		`ActiveEnhancedFirewallPolicies:` + strings.Replace(fmt.Sprintf("%v", this.ActiveEnhancedFirewallPolicies), "ActiveEnhancedFirewallPoliciesType", "ActiveEnhancedFirewallPoliciesType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkFirewallStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkFirewallStatus{`,
		`Installed:` + fmt.Sprintf("%v", this.Installed) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ActiveNetworkPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveNetworkPoliciesType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveNetworkPoliciesType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkPolicies = append(m.NetworkPolicies, &views.ObjectRefType{})
			if err := m.NetworkPolicies[len(m.NetworkPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveEnhancedFirewallPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveEnhancedFirewallPoliciesType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveEnhancedFirewallPoliciesType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnhancedFirewallPolicies = append(m.EnhancedFirewallPolicies, &views.ObjectRefType{})
			if err := m.EnhancedFirewallPolicies[len(m.EnhancedFirewallPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveForwardProxyPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveForwardProxyPoliciesType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveForwardProxyPoliciesType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardProxyPolicies = append(m.ForwardProxyPolicies, &views.ObjectRefType{})
			if err := m.ForwardProxyPolicies[len(m.ForwardProxyPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveFastACLsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveFastACLsType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveFastACLsType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FastAcls = append(m.FastAcls, &views.ObjectRefType{})
			if err := m.FastAcls[len(m.FastAcls)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkPolicySet = append(m.NetworkPolicySet, &schema.ObjectRefType{})
			if err := m.NetworkPolicySet[len(m.NetworkPolicySet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardProxyPolicySet = append(m.ForwardProxyPolicySet, &schema.ObjectRefType{})
			if err := m.ForwardProxyPolicySet[len(m.ForwardProxyPolicySet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FastAclSet = append(m.FastAclSet, &schema.ObjectRefType{})
			if err := m.FastAclSet[len(m.FastAclSet)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicyLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_NetworkPolicyLegacyMode{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicyLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyConfigMode = &GlobalSpecType_ForwardProxyPolicyLegacyMode{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclLegacyMode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclConfigMode = &GlobalSpecType_FastAclLegacyMode{v}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnhancedFirewallPolicies = append(m.EnhancedFirewallPolicies, &schema.ObjectRefType{})
			if err := m.EnhancedFirewallPolicies[len(m.EnhancedFirewallPolicies)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveEnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveEnhancedFirewallPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyConfigMode = &GlobalSpecType_ActiveEnhancedFirewallPolicies{v}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &CreateSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &CreateSpecType_FastAclSet{v}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveEnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveEnhancedFirewallPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &CreateSpecType_ActiveEnhancedFirewallPolicies{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &ReplaceSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &ReplaceSpecType_FastAclSet{v}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveEnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveEnhancedFirewallPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &ReplaceSpecType_ActiveEnhancedFirewallPolicies{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableNetworkPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_DisableNetworkPolicy{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveNetworkPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveNetworkPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_ActiveNetworkPolicies{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_NetworkPolicySet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableForwardProxyPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_DisableForwardProxyPolicy{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveForwardProxyPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveForwardProxyPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_ActiveForwardProxyPolicies{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardProxyPolicySet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ForwardProxyPolicyChoice = &GetSpecType_ForwardProxyPolicySet{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFastAcl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_DisableFastAcl{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveFastAcls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveFastACLsType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_ActiveFastAcls{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastAclSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &views.ObjectRefType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.FastAclChoice = &GetSpecType_FastAclSet{v}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveEnhancedFirewallPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ActiveEnhancedFirewallPoliciesType{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NetworkPolicyChoice = &GetSpecType_ActiveEnhancedFirewallPolicies{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkFirewallStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkFirewallStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkFirewallStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Installed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Installed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)

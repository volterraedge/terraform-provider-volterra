// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/alert_receiver/types.proto

package alert_receiver

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Slack Config
//
// x-displayName: "Slack Config"
// Slack configuration to send alert notifications
type SlackConfig struct {
	// URL
	//
	// x-displayName: "Webhook URL"
	// x-required
	// Incoming webhook url to send alert notifications.
	// API Key is embedded in the webhook URL.
	Url *schema.SecretType `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Channel
	//
	// x-displayName: "Channel"
	// x-required
	// Channel or user to send notifications to
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (m *SlackConfig) Reset()      { *m = SlackConfig{} }
func (*SlackConfig) ProtoMessage() {}
func (*SlackConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{0}
}
func (m *SlackConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SlackConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *SlackConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlackConfig.Merge(m, src)
}
func (m *SlackConfig) XXX_Size() int {
	return m.Size()
}
func (m *SlackConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SlackConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SlackConfig proto.InternalMessageInfo

func (m *SlackConfig) GetUrl() *schema.SecretType {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *SlackConfig) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

// PagerDuty Config
//
// x-displayName: "PagerDuty Config"
// PagerDuty configuration to send alert notifications
type PagerDutyConfig struct {
	// Routing Key
	//
	// x-displayName: "Integration Key"
	// x-required
	// PagerDuty integration key (choose Integration Type: Events API v2)
	RoutingKey *schema.SecretType `protobuf:"bytes,1,opt,name=routing_key,json=routingKey,proto3" json:"routing_key,omitempty"`
	// URL
	//
	// x-displayName: "Pager Duty URL"
	// x-required
	// URL to send API requests to
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *PagerDutyConfig) Reset()      { *m = PagerDutyConfig{} }
func (*PagerDutyConfig) ProtoMessage() {}
func (*PagerDutyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{1}
}
func (m *PagerDutyConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PagerDutyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PagerDutyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagerDutyConfig.Merge(m, src)
}
func (m *PagerDutyConfig) XXX_Size() int {
	return m.Size()
}
func (m *PagerDutyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PagerDutyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PagerDutyConfig proto.InternalMessageInfo

func (m *PagerDutyConfig) GetRoutingKey() *schema.SecretType {
	if m != nil {
		return m.RoutingKey
	}
	return nil
}

func (m *PagerDutyConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Opsgenie Config
//
// x-displayName: "OpsGenie Config"
// OpsGenie configuration to send alert notifications
type OpsGenieConfig struct {
	// API Key
	//
	// x-displayName: "API Key"
	// x-required
	// API integration key to send alert notifications using REST API to OpsGenie service.
	ApiKey *schema.SecretType `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// URL
	//
	// x-displayName: "API URL"
	// x-required
	// URL to send API requests to
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *OpsGenieConfig) Reset()      { *m = OpsGenieConfig{} }
func (*OpsGenieConfig) ProtoMessage() {}
func (*OpsGenieConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{2}
}
func (m *OpsGenieConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OpsGenieConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OpsGenieConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpsGenieConfig.Merge(m, src)
}
func (m *OpsGenieConfig) XXX_Size() int {
	return m.Size()
}
func (m *OpsGenieConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OpsGenieConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OpsGenieConfig proto.InternalMessageInfo

func (m *OpsGenieConfig) GetApiKey() *schema.SecretType {
	if m != nil {
		return m.ApiKey
	}
	return nil
}

func (m *OpsGenieConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type EmailConfig struct {
	// Email
	//
	// x-displayName: "Email"
	// x-example: "abc@email.com"
	// Email id of the user
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (m *EmailConfig) Reset()      { *m = EmailConfig{} }
func (*EmailConfig) ProtoMessage() {}
func (*EmailConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{3}
}
func (m *EmailConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EmailConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailConfig.Merge(m, src)
}
func (m *EmailConfig) XXX_Size() int {
	return m.Size()
}
func (m *EmailConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EmailConfig proto.InternalMessageInfo

func (m *EmailConfig) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SMSConfig struct {
	// Contact Number
	//
	// x-displayName: "Contact Number"
	// x-example: "+14084004001"
	// Contact number of the user in ITU E.164 format [+][country code][subscriber number including area code]
	ContactNumber string `protobuf:"bytes,1,opt,name=contact_number,json=contactNumber,proto3" json:"contact_number,omitempty"`
}

func (m *SMSConfig) Reset()      { *m = SMSConfig{} }
func (*SMSConfig) ProtoMessage() {}
func (*SMSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{4}
}
func (m *SMSConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SMSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *SMSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSConfig.Merge(m, src)
}
func (m *SMSConfig) XXX_Size() int {
	return m.Size()
}
func (m *SMSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SMSConfig proto.InternalMessageInfo

func (m *SMSConfig) GetContactNumber() string {
	if m != nil {
		return m.ContactNumber
	}
	return ""
}

// Specification for Alert Receiver
//
// x-displayName: "Specification"
// Shape of the Alert Receiver object
type GlobalSpecType struct {
	// Receiver
	//
	// x-displayName: "Receiver"
	// x-required
	// Receiver Config
	//
	// Types that are valid to be assigned to Receiver:
	//	*GlobalSpecType_Slack
	//	*GlobalSpecType_Pagerduty
	//	*GlobalSpecType_Opsgenie
	//	*GlobalSpecType_Email
	//	*GlobalSpecType_Sms
	Receiver isGlobalSpecType_Receiver `protobuf_oneof:"receiver"`
}

func (m *GlobalSpecType) Reset()      { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage() {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{5}
}
func (m *GlobalSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GlobalSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSpecType.Merge(m, src)
}
func (m *GlobalSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GlobalSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSpecType proto.InternalMessageInfo

type isGlobalSpecType_Receiver interface {
	isGlobalSpecType_Receiver()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_Slack struct {
	Slack *SlackConfig `protobuf:"bytes,1,opt,name=slack,proto3,oneof" json:"slack,omitempty"`
}
type GlobalSpecType_Pagerduty struct {
	Pagerduty *PagerDutyConfig `protobuf:"bytes,2,opt,name=pagerduty,proto3,oneof" json:"pagerduty,omitempty"`
}
type GlobalSpecType_Opsgenie struct {
	Opsgenie *OpsGenieConfig `protobuf:"bytes,3,opt,name=opsgenie,proto3,oneof" json:"opsgenie,omitempty"`
}
type GlobalSpecType_Email struct {
	Email *EmailConfig `protobuf:"bytes,4,opt,name=email,proto3,oneof" json:"email,omitempty"`
}
type GlobalSpecType_Sms struct {
	Sms *SMSConfig `protobuf:"bytes,5,opt,name=sms,proto3,oneof" json:"sms,omitempty"`
}

func (*GlobalSpecType_Slack) isGlobalSpecType_Receiver()     {}
func (*GlobalSpecType_Pagerduty) isGlobalSpecType_Receiver() {}
func (*GlobalSpecType_Opsgenie) isGlobalSpecType_Receiver()  {}
func (*GlobalSpecType_Email) isGlobalSpecType_Receiver()     {}
func (*GlobalSpecType_Sms) isGlobalSpecType_Receiver()       {}

func (m *GlobalSpecType) GetReceiver() isGlobalSpecType_Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *GlobalSpecType) GetSlack() *SlackConfig {
	if x, ok := m.GetReceiver().(*GlobalSpecType_Slack); ok {
		return x.Slack
	}
	return nil
}

func (m *GlobalSpecType) GetPagerduty() *PagerDutyConfig {
	if x, ok := m.GetReceiver().(*GlobalSpecType_Pagerduty); ok {
		return x.Pagerduty
	}
	return nil
}

func (m *GlobalSpecType) GetOpsgenie() *OpsGenieConfig {
	if x, ok := m.GetReceiver().(*GlobalSpecType_Opsgenie); ok {
		return x.Opsgenie
	}
	return nil
}

func (m *GlobalSpecType) GetEmail() *EmailConfig {
	if x, ok := m.GetReceiver().(*GlobalSpecType_Email); ok {
		return x.Email
	}
	return nil
}

func (m *GlobalSpecType) GetSms() *SMSConfig {
	if x, ok := m.GetReceiver().(*GlobalSpecType_Sms); ok {
		return x.Sms
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GlobalSpecType_Slack)(nil),
		(*GlobalSpecType_Pagerduty)(nil),
		(*GlobalSpecType_Opsgenie)(nil),
		(*GlobalSpecType_Email)(nil),
		(*GlobalSpecType_Sms)(nil),
	}
}

// Create Alert Receiver
//
// x-displayName: "Create Alert Receiver"
// Creates a new Alert Receiver object
type CreateSpecType struct {
	// Types that are valid to be assigned to Receiver:
	//	*CreateSpecType_Slack
	//	*CreateSpecType_Pagerduty
	//	*CreateSpecType_Opsgenie
	//	*CreateSpecType_Email
	//	*CreateSpecType_Sms
	Receiver isCreateSpecType_Receiver `protobuf_oneof:"receiver"`
}

func (m *CreateSpecType) Reset()      { *m = CreateSpecType{} }
func (*CreateSpecType) ProtoMessage() {}
func (*CreateSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{6}
}
func (m *CreateSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpecType.Merge(m, src)
}
func (m *CreateSpecType) XXX_Size() int {
	return m.Size()
}
func (m *CreateSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpecType proto.InternalMessageInfo

type isCreateSpecType_Receiver interface {
	isCreateSpecType_Receiver()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateSpecType_Slack struct {
	Slack *SlackConfig `protobuf:"bytes,1,opt,name=slack,proto3,oneof" json:"slack,omitempty"`
}
type CreateSpecType_Pagerduty struct {
	Pagerduty *PagerDutyConfig `protobuf:"bytes,2,opt,name=pagerduty,proto3,oneof" json:"pagerduty,omitempty"`
}
type CreateSpecType_Opsgenie struct {
	Opsgenie *OpsGenieConfig `protobuf:"bytes,3,opt,name=opsgenie,proto3,oneof" json:"opsgenie,omitempty"`
}
type CreateSpecType_Email struct {
	Email *EmailConfig `protobuf:"bytes,4,opt,name=email,proto3,oneof" json:"email,omitempty"`
}
type CreateSpecType_Sms struct {
	Sms *SMSConfig `protobuf:"bytes,5,opt,name=sms,proto3,oneof" json:"sms,omitempty"`
}

func (*CreateSpecType_Slack) isCreateSpecType_Receiver()     {}
func (*CreateSpecType_Pagerduty) isCreateSpecType_Receiver() {}
func (*CreateSpecType_Opsgenie) isCreateSpecType_Receiver()  {}
func (*CreateSpecType_Email) isCreateSpecType_Receiver()     {}
func (*CreateSpecType_Sms) isCreateSpecType_Receiver()       {}

func (m *CreateSpecType) GetReceiver() isCreateSpecType_Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *CreateSpecType) GetSlack() *SlackConfig {
	if x, ok := m.GetReceiver().(*CreateSpecType_Slack); ok {
		return x.Slack
	}
	return nil
}

func (m *CreateSpecType) GetPagerduty() *PagerDutyConfig {
	if x, ok := m.GetReceiver().(*CreateSpecType_Pagerduty); ok {
		return x.Pagerduty
	}
	return nil
}

func (m *CreateSpecType) GetOpsgenie() *OpsGenieConfig {
	if x, ok := m.GetReceiver().(*CreateSpecType_Opsgenie); ok {
		return x.Opsgenie
	}
	return nil
}

func (m *CreateSpecType) GetEmail() *EmailConfig {
	if x, ok := m.GetReceiver().(*CreateSpecType_Email); ok {
		return x.Email
	}
	return nil
}

func (m *CreateSpecType) GetSms() *SMSConfig {
	if x, ok := m.GetReceiver().(*CreateSpecType_Sms); ok {
		return x.Sms
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateSpecType_Slack)(nil),
		(*CreateSpecType_Pagerduty)(nil),
		(*CreateSpecType_Opsgenie)(nil),
		(*CreateSpecType_Email)(nil),
		(*CreateSpecType_Sms)(nil),
	}
}

// Replace Alert Receiver
//
// x-displayName: "Replace Alert Receiver"
// Replaces the content of an Alert Receiver object
type ReplaceSpecType struct {
	// Types that are valid to be assigned to Receiver:
	//	*ReplaceSpecType_Slack
	//	*ReplaceSpecType_Pagerduty
	//	*ReplaceSpecType_Opsgenie
	//	*ReplaceSpecType_Email
	//	*ReplaceSpecType_Sms
	Receiver isReplaceSpecType_Receiver `protobuf_oneof:"receiver"`
}

func (m *ReplaceSpecType) Reset()      { *m = ReplaceSpecType{} }
func (*ReplaceSpecType) ProtoMessage() {}
func (*ReplaceSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{7}
}
func (m *ReplaceSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplaceSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ReplaceSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceSpecType.Merge(m, src)
}
func (m *ReplaceSpecType) XXX_Size() int {
	return m.Size()
}
func (m *ReplaceSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceSpecType proto.InternalMessageInfo

type isReplaceSpecType_Receiver interface {
	isReplaceSpecType_Receiver()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ReplaceSpecType_Slack struct {
	Slack *SlackConfig `protobuf:"bytes,1,opt,name=slack,proto3,oneof" json:"slack,omitempty"`
}
type ReplaceSpecType_Pagerduty struct {
	Pagerduty *PagerDutyConfig `protobuf:"bytes,2,opt,name=pagerduty,proto3,oneof" json:"pagerduty,omitempty"`
}
type ReplaceSpecType_Opsgenie struct {
	Opsgenie *OpsGenieConfig `protobuf:"bytes,3,opt,name=opsgenie,proto3,oneof" json:"opsgenie,omitempty"`
}
type ReplaceSpecType_Email struct {
	Email *EmailConfig `protobuf:"bytes,4,opt,name=email,proto3,oneof" json:"email,omitempty"`
}
type ReplaceSpecType_Sms struct {
	Sms *SMSConfig `protobuf:"bytes,5,opt,name=sms,proto3,oneof" json:"sms,omitempty"`
}

func (*ReplaceSpecType_Slack) isReplaceSpecType_Receiver()     {}
func (*ReplaceSpecType_Pagerduty) isReplaceSpecType_Receiver() {}
func (*ReplaceSpecType_Opsgenie) isReplaceSpecType_Receiver()  {}
func (*ReplaceSpecType_Email) isReplaceSpecType_Receiver()     {}
func (*ReplaceSpecType_Sms) isReplaceSpecType_Receiver()       {}

func (m *ReplaceSpecType) GetReceiver() isReplaceSpecType_Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *ReplaceSpecType) GetSlack() *SlackConfig {
	if x, ok := m.GetReceiver().(*ReplaceSpecType_Slack); ok {
		return x.Slack
	}
	return nil
}

func (m *ReplaceSpecType) GetPagerduty() *PagerDutyConfig {
	if x, ok := m.GetReceiver().(*ReplaceSpecType_Pagerduty); ok {
		return x.Pagerduty
	}
	return nil
}

func (m *ReplaceSpecType) GetOpsgenie() *OpsGenieConfig {
	if x, ok := m.GetReceiver().(*ReplaceSpecType_Opsgenie); ok {
		return x.Opsgenie
	}
	return nil
}

func (m *ReplaceSpecType) GetEmail() *EmailConfig {
	if x, ok := m.GetReceiver().(*ReplaceSpecType_Email); ok {
		return x.Email
	}
	return nil
}

func (m *ReplaceSpecType) GetSms() *SMSConfig {
	if x, ok := m.GetReceiver().(*ReplaceSpecType_Sms); ok {
		return x.Sms
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReplaceSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReplaceSpecType_Slack)(nil),
		(*ReplaceSpecType_Pagerduty)(nil),
		(*ReplaceSpecType_Opsgenie)(nil),
		(*ReplaceSpecType_Email)(nil),
		(*ReplaceSpecType_Sms)(nil),
	}
}

// Get Alert Receiver
//
// x-displayName: "Get Alert Receiver"
// Get the Alert Receiver object
type GetSpecType struct {
	// Types that are valid to be assigned to Receiver:
	//	*GetSpecType_Slack
	//	*GetSpecType_Pagerduty
	//	*GetSpecType_Opsgenie
	//	*GetSpecType_Email
	//	*GetSpecType_Sms
	Receiver isGetSpecType_Receiver `protobuf_oneof:"receiver"`
}

func (m *GetSpecType) Reset()      { *m = GetSpecType{} }
func (*GetSpecType) ProtoMessage() {}
func (*GetSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca1466d8d1f67094, []int{8}
}
func (m *GetSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpecType.Merge(m, src)
}
func (m *GetSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GetSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpecType proto.InternalMessageInfo

type isGetSpecType_Receiver interface {
	isGetSpecType_Receiver()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetSpecType_Slack struct {
	Slack *SlackConfig `protobuf:"bytes,1,opt,name=slack,proto3,oneof" json:"slack,omitempty"`
}
type GetSpecType_Pagerduty struct {
	Pagerduty *PagerDutyConfig `protobuf:"bytes,2,opt,name=pagerduty,proto3,oneof" json:"pagerduty,omitempty"`
}
type GetSpecType_Opsgenie struct {
	Opsgenie *OpsGenieConfig `protobuf:"bytes,3,opt,name=opsgenie,proto3,oneof" json:"opsgenie,omitempty"`
}
type GetSpecType_Email struct {
	Email *EmailConfig `protobuf:"bytes,4,opt,name=email,proto3,oneof" json:"email,omitempty"`
}
type GetSpecType_Sms struct {
	Sms *SMSConfig `protobuf:"bytes,5,opt,name=sms,proto3,oneof" json:"sms,omitempty"`
}

func (*GetSpecType_Slack) isGetSpecType_Receiver()     {}
func (*GetSpecType_Pagerduty) isGetSpecType_Receiver() {}
func (*GetSpecType_Opsgenie) isGetSpecType_Receiver()  {}
func (*GetSpecType_Email) isGetSpecType_Receiver()     {}
func (*GetSpecType_Sms) isGetSpecType_Receiver()       {}

func (m *GetSpecType) GetReceiver() isGetSpecType_Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *GetSpecType) GetSlack() *SlackConfig {
	if x, ok := m.GetReceiver().(*GetSpecType_Slack); ok {
		return x.Slack
	}
	return nil
}

func (m *GetSpecType) GetPagerduty() *PagerDutyConfig {
	if x, ok := m.GetReceiver().(*GetSpecType_Pagerduty); ok {
		return x.Pagerduty
	}
	return nil
}

func (m *GetSpecType) GetOpsgenie() *OpsGenieConfig {
	if x, ok := m.GetReceiver().(*GetSpecType_Opsgenie); ok {
		return x.Opsgenie
	}
	return nil
}

func (m *GetSpecType) GetEmail() *EmailConfig {
	if x, ok := m.GetReceiver().(*GetSpecType_Email); ok {
		return x.Email
	}
	return nil
}

func (m *GetSpecType) GetSms() *SMSConfig {
	if x, ok := m.GetReceiver().(*GetSpecType_Sms); ok {
		return x.Sms
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetSpecType_Slack)(nil),
		(*GetSpecType_Pagerduty)(nil),
		(*GetSpecType_Opsgenie)(nil),
		(*GetSpecType_Email)(nil),
		(*GetSpecType_Sms)(nil),
	}
}

func init() {
	proto.RegisterType((*SlackConfig)(nil), "ves.io.schema.alert_receiver.SlackConfig")
	proto.RegisterType((*PagerDutyConfig)(nil), "ves.io.schema.alert_receiver.PagerDutyConfig")
	proto.RegisterType((*OpsGenieConfig)(nil), "ves.io.schema.alert_receiver.OpsGenieConfig")
	proto.RegisterType((*EmailConfig)(nil), "ves.io.schema.alert_receiver.EmailConfig")
	proto.RegisterType((*SMSConfig)(nil), "ves.io.schema.alert_receiver.SMSConfig")
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.alert_receiver.GlobalSpecType")
	proto.RegisterType((*CreateSpecType)(nil), "ves.io.schema.alert_receiver.CreateSpecType")
	proto.RegisterType((*ReplaceSpecType)(nil), "ves.io.schema.alert_receiver.ReplaceSpecType")
	proto.RegisterType((*GetSpecType)(nil), "ves.io.schema.alert_receiver.GetSpecType")
}

func init() {
	proto.RegisterFile("ves.io/schema/alert_receiver/types.proto", fileDescriptor_ca1466d8d1f67094)
}

var fileDescriptor_ca1466d8d1f67094 = []byte{
	// 710 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x96, 0xcf, 0x4f, 0x13, 0x5b,
	0x14, 0xc7, 0xe7, 0x32, 0x6d, 0x69, 0x6f, 0xdf, 0x2b, 0xef, 0x4d, 0xc8, 0x4b, 0x29, 0x64, 0x1e,
	0x69, 0x4c, 0xc4, 0x84, 0xce, 0x00, 0xc6, 0x04, 0x35, 0x21, 0x5a, 0x34, 0x34, 0x18, 0xd4, 0x4c,
	0x5d, 0x69, 0xb4, 0xde, 0x0e, 0x87, 0xe9, 0x84, 0xe9, 0xdc, 0xf1, 0xce, 0x9d, 0x62, 0x35, 0x26,
	0xc6, 0xa5, 0x71, 0xc1, 0xd2, 0x44, 0xff, 0x00, 0xff, 0x06, 0xd9, 0xb0, 0x34, 0xae, 0xba, 0x64,
	0x29, 0xc3, 0x46, 0x77, 0xac, 0x5d, 0x99, 0xf9, 0x51, 0xec, 0x10, 0x03, 0xb8, 0x31, 0x2c, 0xd8,
	0xcd, 0x99, 0xf3, 0x3d, 0xe7, 0x7b, 0xce, 0xfd, 0xdc, 0xc5, 0xc5, 0x53, 0x1d, 0x70, 0x15, 0x93,
	0xaa, 0xae, 0xde, 0x82, 0x36, 0x51, 0x89, 0x05, 0x8c, 0x37, 0x18, 0xe8, 0x60, 0x76, 0x80, 0xa9,
	0xbc, 0xeb, 0x80, 0xab, 0x38, 0x8c, 0x72, 0x2a, 0x4d, 0x44, 0x4a, 0x25, 0x52, 0x2a, 0x49, 0x65,
	0xa9, 0x62, 0x98, 0xbc, 0xe5, 0x35, 0x15, 0x9d, 0xb6, 0x55, 0x83, 0x1a, 0x54, 0x0d, 0x8b, 0x9a,
	0xde, 0x5a, 0x18, 0x85, 0x41, 0xf8, 0x15, 0x35, 0x2b, 0x8d, 0x27, 0x6d, 0xa9, 0xc3, 0x4d, 0x6a,
	0xc7, 0x4e, 0xa5, 0xb1, 0x64, 0x72, 0x60, 0x88, 0xd2, 0x44, 0x32, 0xd5, 0x21, 0x96, 0xb9, 0x4a,
	0x38, 0xc4, 0xd9, 0xc9, 0x43, 0x59, 0x13, 0x36, 0x1a, 0x89, 0xd6, 0xe5, 0x0d, 0x9c, 0xaf, 0x5b,
	0x44, 0x5f, 0x5f, 0xa4, 0xf6, 0x9a, 0x69, 0x48, 0xb3, 0x58, 0xf4, 0x98, 0x55, 0x44, 0x93, 0x68,
	0x2a, 0x3f, 0x37, 0xa6, 0x24, 0x37, 0xac, 0x83, 0xce, 0x80, 0xdf, 0xeb, 0x3a, 0x50, 0x4d, 0xf5,
	0xb6, 0x10, 0xd2, 0x02, 0xad, 0x74, 0x09, 0x0f, 0xeb, 0x2d, 0x62, 0xdb, 0x60, 0x15, 0x87, 0x26,
	0xd1, 0x54, 0xae, 0x3a, 0xfe, 0xf1, 0xdb, 0xb6, 0xf8, 0x1f, 0x1b, 0x9d, 0x93, 0x1e, 0x3d, 0x20,
	0x95, 0x67, 0x33, 0x95, 0xcb, 0x95, 0xc6, 0xc3, 0xe7, 0xb3, 0xd3, 0xf3, 0x33, 0x2f, 0xce, 0x69,
	0x7d, 0x6d, 0xf9, 0x09, 0x1e, 0xb9, 0x4b, 0x0c, 0x60, 0x37, 0x3c, 0xde, 0x8d, 0xcd, 0xaf, 0xe1,
	0x3c, 0xa3, 0x1e, 0x37, 0x6d, 0xa3, 0xb1, 0x0e, 0xdd, 0x93, 0x0e, 0x81, 0xe3, 0x9a, 0x5b, 0xd0,
	0x95, 0x26, 0xa2, 0xf1, 0xa3, 0x39, 0x70, 0x30, 0x47, 0x9a, 0x89, 0x9b, 0xf1, 0xa4, 0xe5, 0x16,
	0x2e, 0xdc, 0x71, 0xdc, 0x25, 0xb0, 0x4d, 0x88, 0x1d, 0xe7, 0xf1, 0x30, 0x71, 0xcc, 0xdf, 0x71,
	0xcb, 0x10, 0xc7, 0x3c, 0xde, 0x49, 0xc1, 0xf9, 0x9b, 0x6d, 0x62, 0x5a, 0xb1, 0xcd, 0xff, 0x38,
	0x0d, 0x41, 0x18, 0x9a, 0xe4, 0xaa, 0xb9, 0x40, 0x9e, 0x62, 0x43, 0x8f, 0x91, 0x16, 0xfd, 0x2f,
	0x2f, 0xe0, 0x5c, 0x7d, 0xa5, 0x7e, 0xc0, 0xa0, 0xa0, 0x53, 0x9b, 0x13, 0x9d, 0x37, 0x6c, 0xaf,
	0xdd, 0x04, 0x16, 0x97, 0xf5, 0x5d, 0xb6, 0x87, 0x90, 0xf6, 0x77, 0xac, 0xb8, 0x1d, 0x0a, 0xca,
	0xaf, 0x45, 0x5c, 0x58, 0xb2, 0x68, 0x93, 0x58, 0x75, 0x07, 0xf4, 0x60, 0x5c, 0xe9, 0x3a, 0x4e,
	0xbb, 0x01, 0xd8, 0x78, 0xb1, 0x0b, 0xca, 0x51, 0xb7, 0x55, 0x19, 0xb8, 0x03, 0x35, 0x41, 0x8b,
	0x2a, 0xa5, 0x15, 0x9c, 0x73, 0x02, 0x44, 0xab, 0x1e, 0xef, 0x86, 0x9b, 0xe6, 0xe7, 0x2a, 0x47,
	0xb7, 0x39, 0x44, 0xb4, 0x26, 0x68, 0x3f, 0x3b, 0x48, 0xcb, 0x38, 0x4b, 0x1d, 0xd7, 0x08, 0x8e,
	0xbf, 0x28, 0x86, 0xdd, 0xa6, 0x8f, 0xee, 0x96, 0x84, 0x55, 0x13, 0xb4, 0x83, 0xfa, 0x60, 0xbb,
	0xe8, 0x44, 0x53, 0x27, 0xd9, 0x6e, 0x80, 0x45, 0xb0, 0x5d, 0x58, 0x29, 0x5d, 0xc5, 0xa2, 0xdb,
	0x76, 0x8b, 0xe9, 0xb0, 0xc1, 0xf9, 0x63, 0x8e, 0xa7, 0x0f, 0xa7, 0x26, 0x68, 0x41, 0x55, 0x75,
	0x14, 0x67, 0xfb, 0x49, 0x29, 0xbb, 0xbd, 0x85, 0x50, 0x6f, 0x0b, 0x65, 0x96, 0x53, 0xd9, 0xcc,
	0x3f, 0xc3, 0xe5, 0x77, 0x22, 0x2e, 0x2c, 0x32, 0x20, 0x1c, 0xce, 0x60, 0xfc, 0x09, 0x18, 0x57,
	0xfe, 0xfd, 0xbc, 0x70, 0xe8, 0xf6, 0x57, 0x8b, 0x03, 0x7c, 0xfe, 0x7a, 0xf5, 0x1d, 0x1d, 0x44,
	0xe5, 0xf7, 0x22, 0x1e, 0xd1, 0xc0, 0xb1, 0x88, 0x7e, 0x86, 0xe7, 0x14, 0xe2, 0x79, 0x2b, 0xe2,
	0xfc, 0x12, 0xf0, 0x33, 0x34, 0xa7, 0x0e, 0x4d, 0xf5, 0x0d, 0xea, 0xed, 0xca, 0xc2, 0xce, 0xae,
	0x2c, 0xec, 0xef, 0xca, 0xe8, 0xa5, 0x2f, 0xa3, 0x0f, 0xbe, 0x8c, 0x3e, 0xf9, 0x32, 0xea, 0xf9,
	0x32, 0xda, 0xf1, 0x65, 0xf4, 0xc5, 0x97, 0xd1, 0x57, 0x5f, 0x16, 0xf6, 0x7d, 0x19, 0x6d, 0xee,
	0xc9, 0x42, 0x6f, 0x4f, 0x16, 0x76, 0xf6, 0x64, 0xe1, 0xbe, 0x66, 0x50, 0x67, 0xdd, 0x50, 0x3a,
	0xd4, 0xe2, 0xc0, 0x18, 0x51, 0x3c, 0x57, 0x0d, 0x3f, 0xd6, 0x28, 0x6b, 0x57, 0x1c, 0x46, 0x3b,
	0xe6, 0x2a, 0xb0, 0x4a, 0x3f, 0xad, 0x3a, 0x4d, 0x83, 0xaa, 0xf0, 0x94, 0xc7, 0xcf, 0x96, 0x5f,
	0x3e, 0xc5, 0x9a, 0x99, 0xf0, 0x01, 0x73, 0xf1, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x51,
	0x9e, 0x1f, 0xb1, 0x09, 0x00, 0x00,
}

func (this *SlackConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SlackConfig)
	if !ok {
		that2, ok := that.(SlackConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Url.Equal(that1.Url) {
		return false
	}
	if this.Channel != that1.Channel {
		return false
	}
	return true
}
func (this *PagerDutyConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PagerDutyConfig)
	if !ok {
		that2, ok := that.(PagerDutyConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RoutingKey.Equal(that1.RoutingKey) {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	return true
}
func (this *OpsGenieConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OpsGenieConfig)
	if !ok {
		that2, ok := that.(OpsGenieConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ApiKey.Equal(that1.ApiKey) {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	return true
}
func (this *EmailConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EmailConfig)
	if !ok {
		that2, ok := that.(EmailConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	return true
}
func (this *SMSConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SMSConfig)
	if !ok {
		that2, ok := that.(SMSConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ContactNumber != that1.ContactNumber {
		return false
	}
	return true
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Receiver == nil {
		if this.Receiver != nil {
			return false
		}
	} else if this.Receiver == nil {
		return false
	} else if !this.Receiver.Equal(that1.Receiver) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Slack) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Slack)
	if !ok {
		that2, ok := that.(GlobalSpecType_Slack)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Slack.Equal(that1.Slack) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Pagerduty) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Pagerduty)
	if !ok {
		that2, ok := that.(GlobalSpecType_Pagerduty)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Pagerduty.Equal(that1.Pagerduty) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Opsgenie) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Opsgenie)
	if !ok {
		that2, ok := that.(GlobalSpecType_Opsgenie)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Opsgenie.Equal(that1.Opsgenie) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Email) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Email)
	if !ok {
		that2, ok := that.(GlobalSpecType_Email)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Email.Equal(that1.Email) {
		return false
	}
	return true
}
func (this *GlobalSpecType_Sms) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_Sms)
	if !ok {
		that2, ok := that.(GlobalSpecType_Sms)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Sms.Equal(that1.Sms) {
		return false
	}
	return true
}
func (this *CreateSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType)
	if !ok {
		that2, ok := that.(CreateSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Receiver == nil {
		if this.Receiver != nil {
			return false
		}
	} else if this.Receiver == nil {
		return false
	} else if !this.Receiver.Equal(that1.Receiver) {
		return false
	}
	return true
}
func (this *CreateSpecType_Slack) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Slack)
	if !ok {
		that2, ok := that.(CreateSpecType_Slack)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Slack.Equal(that1.Slack) {
		return false
	}
	return true
}
func (this *CreateSpecType_Pagerduty) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Pagerduty)
	if !ok {
		that2, ok := that.(CreateSpecType_Pagerduty)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Pagerduty.Equal(that1.Pagerduty) {
		return false
	}
	return true
}
func (this *CreateSpecType_Opsgenie) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Opsgenie)
	if !ok {
		that2, ok := that.(CreateSpecType_Opsgenie)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Opsgenie.Equal(that1.Opsgenie) {
		return false
	}
	return true
}
func (this *CreateSpecType_Email) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Email)
	if !ok {
		that2, ok := that.(CreateSpecType_Email)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Email.Equal(that1.Email) {
		return false
	}
	return true
}
func (this *CreateSpecType_Sms) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSpecType_Sms)
	if !ok {
		that2, ok := that.(CreateSpecType_Sms)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Sms.Equal(that1.Sms) {
		return false
	}
	return true
}
func (this *ReplaceSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType)
	if !ok {
		that2, ok := that.(ReplaceSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Receiver == nil {
		if this.Receiver != nil {
			return false
		}
	} else if this.Receiver == nil {
		return false
	} else if !this.Receiver.Equal(that1.Receiver) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_Slack) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_Slack)
	if !ok {
		that2, ok := that.(ReplaceSpecType_Slack)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Slack.Equal(that1.Slack) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_Pagerduty) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_Pagerduty)
	if !ok {
		that2, ok := that.(ReplaceSpecType_Pagerduty)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Pagerduty.Equal(that1.Pagerduty) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_Opsgenie) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_Opsgenie)
	if !ok {
		that2, ok := that.(ReplaceSpecType_Opsgenie)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Opsgenie.Equal(that1.Opsgenie) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_Email) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_Email)
	if !ok {
		that2, ok := that.(ReplaceSpecType_Email)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Email.Equal(that1.Email) {
		return false
	}
	return true
}
func (this *ReplaceSpecType_Sms) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ReplaceSpecType_Sms)
	if !ok {
		that2, ok := that.(ReplaceSpecType_Sms)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Sms.Equal(that1.Sms) {
		return false
	}
	return true
}
func (this *GetSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType)
	if !ok {
		that2, ok := that.(GetSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Receiver == nil {
		if this.Receiver != nil {
			return false
		}
	} else if this.Receiver == nil {
		return false
	} else if !this.Receiver.Equal(that1.Receiver) {
		return false
	}
	return true
}
func (this *GetSpecType_Slack) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Slack)
	if !ok {
		that2, ok := that.(GetSpecType_Slack)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Slack.Equal(that1.Slack) {
		return false
	}
	return true
}
func (this *GetSpecType_Pagerduty) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Pagerduty)
	if !ok {
		that2, ok := that.(GetSpecType_Pagerduty)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Pagerduty.Equal(that1.Pagerduty) {
		return false
	}
	return true
}
func (this *GetSpecType_Opsgenie) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Opsgenie)
	if !ok {
		that2, ok := that.(GetSpecType_Opsgenie)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Opsgenie.Equal(that1.Opsgenie) {
		return false
	}
	return true
}
func (this *GetSpecType_Email) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Email)
	if !ok {
		that2, ok := that.(GetSpecType_Email)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Email.Equal(that1.Email) {
		return false
	}
	return true
}
func (this *GetSpecType_Sms) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSpecType_Sms)
	if !ok {
		that2, ok := that.(GetSpecType_Sms)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Sms.Equal(that1.Sms) {
		return false
	}
	return true
}
func (this *SlackConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&alert_receiver.SlackConfig{")
	if this.Url != nil {
		s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	}
	s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PagerDutyConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&alert_receiver.PagerDutyConfig{")
	if this.RoutingKey != nil {
		s = append(s, "RoutingKey: "+fmt.Sprintf("%#v", this.RoutingKey)+",\n")
	}
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *OpsGenieConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&alert_receiver.OpsGenieConfig{")
	if this.ApiKey != nil {
		s = append(s, "ApiKey: "+fmt.Sprintf("%#v", this.ApiKey)+",\n")
	}
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *EmailConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&alert_receiver.EmailConfig{")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SMSConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&alert_receiver.SMSConfig{")
	s = append(s, "ContactNumber: "+fmt.Sprintf("%#v", this.ContactNumber)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&alert_receiver.GlobalSpecType{")
	if this.Receiver != nil {
		s = append(s, "Receiver: "+fmt.Sprintf("%#v", this.Receiver)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_Slack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GlobalSpecType_Slack{` +
		`Slack:` + fmt.Sprintf("%#v", this.Slack) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Pagerduty) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GlobalSpecType_Pagerduty{` +
		`Pagerduty:` + fmt.Sprintf("%#v", this.Pagerduty) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Opsgenie) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GlobalSpecType_Opsgenie{` +
		`Opsgenie:` + fmt.Sprintf("%#v", this.Opsgenie) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Email) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GlobalSpecType_Email{` +
		`Email:` + fmt.Sprintf("%#v", this.Email) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_Sms) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GlobalSpecType_Sms{` +
		`Sms:` + fmt.Sprintf("%#v", this.Sms) + `}`}, ", ")
	return s
}
func (this *CreateSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&alert_receiver.CreateSpecType{")
	if this.Receiver != nil {
		s = append(s, "Receiver: "+fmt.Sprintf("%#v", this.Receiver)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSpecType_Slack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.CreateSpecType_Slack{` +
		`Slack:` + fmt.Sprintf("%#v", this.Slack) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_Pagerduty) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.CreateSpecType_Pagerduty{` +
		`Pagerduty:` + fmt.Sprintf("%#v", this.Pagerduty) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_Opsgenie) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.CreateSpecType_Opsgenie{` +
		`Opsgenie:` + fmt.Sprintf("%#v", this.Opsgenie) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_Email) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.CreateSpecType_Email{` +
		`Email:` + fmt.Sprintf("%#v", this.Email) + `}`}, ", ")
	return s
}
func (this *CreateSpecType_Sms) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.CreateSpecType_Sms{` +
		`Sms:` + fmt.Sprintf("%#v", this.Sms) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&alert_receiver.ReplaceSpecType{")
	if this.Receiver != nil {
		s = append(s, "Receiver: "+fmt.Sprintf("%#v", this.Receiver)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ReplaceSpecType_Slack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.ReplaceSpecType_Slack{` +
		`Slack:` + fmt.Sprintf("%#v", this.Slack) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_Pagerduty) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.ReplaceSpecType_Pagerduty{` +
		`Pagerduty:` + fmt.Sprintf("%#v", this.Pagerduty) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_Opsgenie) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.ReplaceSpecType_Opsgenie{` +
		`Opsgenie:` + fmt.Sprintf("%#v", this.Opsgenie) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_Email) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.ReplaceSpecType_Email{` +
		`Email:` + fmt.Sprintf("%#v", this.Email) + `}`}, ", ")
	return s
}
func (this *ReplaceSpecType_Sms) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.ReplaceSpecType_Sms{` +
		`Sms:` + fmt.Sprintf("%#v", this.Sms) + `}`}, ", ")
	return s
}
func (this *GetSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&alert_receiver.GetSpecType{")
	if this.Receiver != nil {
		s = append(s, "Receiver: "+fmt.Sprintf("%#v", this.Receiver)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSpecType_Slack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GetSpecType_Slack{` +
		`Slack:` + fmt.Sprintf("%#v", this.Slack) + `}`}, ", ")
	return s
}
func (this *GetSpecType_Pagerduty) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GetSpecType_Pagerduty{` +
		`Pagerduty:` + fmt.Sprintf("%#v", this.Pagerduty) + `}`}, ", ")
	return s
}
func (this *GetSpecType_Opsgenie) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GetSpecType_Opsgenie{` +
		`Opsgenie:` + fmt.Sprintf("%#v", this.Opsgenie) + `}`}, ", ")
	return s
}
func (this *GetSpecType_Email) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GetSpecType_Email{` +
		`Email:` + fmt.Sprintf("%#v", this.Email) + `}`}, ", ")
	return s
}
func (this *GetSpecType_Sms) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&alert_receiver.GetSpecType_Sms{` +
		`Sms:` + fmt.Sprintf("%#v", this.Sms) + `}`}, ", ")
	return s
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *SlackConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SlackConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SlackConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		{
			size, err := m.Url.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PagerDutyConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PagerDutyConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PagerDutyConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if m.RoutingKey != nil {
		{
			size, err := m.RoutingKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OpsGenieConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OpsGenieConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OpsGenieConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if m.ApiKey != nil {
		{
			size, err := m.ApiKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EmailConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmailConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SMSConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SMSConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SMSConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContactNumber) > 0 {
		i -= len(m.ContactNumber)
		copy(dAtA[i:], m.ContactNumber)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ContactNumber)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Receiver != nil {
		{
			size := m.Receiver.Size()
			i -= size
			if _, err := m.Receiver.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType_Slack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Slack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Slack != nil {
		{
			size, err := m.Slack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Pagerduty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Pagerduty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pagerduty != nil {
		{
			size, err := m.Pagerduty.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Opsgenie) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Opsgenie) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Opsgenie != nil {
		{
			size, err := m.Opsgenie.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Email) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Email) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Email != nil {
		{
			size, err := m.Email.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_Sms) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_Sms) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Sms != nil {
		{
			size, err := m.Sms.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Receiver != nil {
		{
			size := m.Receiver.Size()
			i -= size
			if _, err := m.Receiver.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateSpecType_Slack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_Slack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Slack != nil {
		{
			size, err := m.Slack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_Pagerduty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_Pagerduty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pagerduty != nil {
		{
			size, err := m.Pagerduty.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_Opsgenie) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_Opsgenie) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Opsgenie != nil {
		{
			size, err := m.Opsgenie.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_Email) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_Email) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Email != nil {
		{
			size, err := m.Email.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *CreateSpecType_Sms) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSpecType_Sms) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Sms != nil {
		{
			size, err := m.Sms.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplaceSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Receiver != nil {
		{
			size := m.Receiver.Size()
			i -= size
			if _, err := m.Receiver.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReplaceSpecType_Slack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_Slack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Slack != nil {
		{
			size, err := m.Slack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_Pagerduty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_Pagerduty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pagerduty != nil {
		{
			size, err := m.Pagerduty.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_Opsgenie) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_Opsgenie) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Opsgenie != nil {
		{
			size, err := m.Opsgenie.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_Email) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_Email) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Email != nil {
		{
			size, err := m.Email.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ReplaceSpecType_Sms) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplaceSpecType_Sms) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Sms != nil {
		{
			size, err := m.Sms.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Receiver != nil {
		{
			size := m.Receiver.Size()
			i -= size
			if _, err := m.Receiver.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetSpecType_Slack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_Slack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Slack != nil {
		{
			size, err := m.Slack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_Pagerduty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_Pagerduty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pagerduty != nil {
		{
			size, err := m.Pagerduty.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_Opsgenie) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_Opsgenie) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Opsgenie != nil {
		{
			size, err := m.Opsgenie.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_Email) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_Email) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Email != nil {
		{
			size, err := m.Email.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *GetSpecType_Sms) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSpecType_Sms) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Sms != nil {
		{
			size, err := m.Sms.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SlackConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *PagerDutyConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoutingKey != nil {
		l = m.RoutingKey.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *OpsGenieConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApiKey != nil {
		l = m.ApiKey.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *EmailConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *SMSConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ContactNumber)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GlobalSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Receiver != nil {
		n += m.Receiver.Size()
	}
	return n
}

func (m *GlobalSpecType_Slack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slack != nil {
		l = m.Slack.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Pagerduty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagerduty != nil {
		l = m.Pagerduty.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Opsgenie) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Opsgenie != nil {
		l = m.Opsgenie.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Email) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Email != nil {
		l = m.Email.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_Sms) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sms != nil {
		l = m.Sms.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Receiver != nil {
		n += m.Receiver.Size()
	}
	return n
}

func (m *CreateSpecType_Slack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slack != nil {
		l = m.Slack.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_Pagerduty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagerduty != nil {
		l = m.Pagerduty.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_Opsgenie) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Opsgenie != nil {
		l = m.Opsgenie.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_Email) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Email != nil {
		l = m.Email.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *CreateSpecType_Sms) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sms != nil {
		l = m.Sms.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Receiver != nil {
		n += m.Receiver.Size()
	}
	return n
}

func (m *ReplaceSpecType_Slack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slack != nil {
		l = m.Slack.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_Pagerduty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagerduty != nil {
		l = m.Pagerduty.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_Opsgenie) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Opsgenie != nil {
		l = m.Opsgenie.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_Email) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Email != nil {
		l = m.Email.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *ReplaceSpecType_Sms) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sms != nil {
		l = m.Sms.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Receiver != nil {
		n += m.Receiver.Size()
	}
	return n
}

func (m *GetSpecType_Slack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slack != nil {
		l = m.Slack.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_Pagerduty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagerduty != nil {
		l = m.Pagerduty.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_Opsgenie) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Opsgenie != nil {
		l = m.Opsgenie.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_Email) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Email != nil {
		l = m.Email.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GetSpecType_Sms) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sms != nil {
		l = m.Sms.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *SlackConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SlackConfig{`,
		`Url:` + strings.Replace(fmt.Sprintf("%v", this.Url), "SecretType", "schema.SecretType", 1) + `,`,
		`Channel:` + fmt.Sprintf("%v", this.Channel) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PagerDutyConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PagerDutyConfig{`,
		`RoutingKey:` + strings.Replace(fmt.Sprintf("%v", this.RoutingKey), "SecretType", "schema.SecretType", 1) + `,`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OpsGenieConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OpsGenieConfig{`,
		`ApiKey:` + strings.Replace(fmt.Sprintf("%v", this.ApiKey), "SecretType", "schema.SecretType", 1) + `,`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`}`,
	}, "")
	return s
}
func (this *EmailConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EmailConfig{`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SMSConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SMSConfig{`,
		`ContactNumber:` + fmt.Sprintf("%v", this.ContactNumber) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType{`,
		`Receiver:` + fmt.Sprintf("%v", this.Receiver) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Slack) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Slack{`,
		`Slack:` + strings.Replace(fmt.Sprintf("%v", this.Slack), "SlackConfig", "SlackConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Pagerduty) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Pagerduty{`,
		`Pagerduty:` + strings.Replace(fmt.Sprintf("%v", this.Pagerduty), "PagerDutyConfig", "PagerDutyConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Opsgenie) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Opsgenie{`,
		`Opsgenie:` + strings.Replace(fmt.Sprintf("%v", this.Opsgenie), "OpsGenieConfig", "OpsGenieConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Email) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Email{`,
		`Email:` + strings.Replace(fmt.Sprintf("%v", this.Email), "EmailConfig", "EmailConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_Sms) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_Sms{`,
		`Sms:` + strings.Replace(fmt.Sprintf("%v", this.Sms), "SMSConfig", "SMSConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType{`,
		`Receiver:` + fmt.Sprintf("%v", this.Receiver) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Slack) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Slack{`,
		`Slack:` + strings.Replace(fmt.Sprintf("%v", this.Slack), "SlackConfig", "SlackConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Pagerduty) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Pagerduty{`,
		`Pagerduty:` + strings.Replace(fmt.Sprintf("%v", this.Pagerduty), "PagerDutyConfig", "PagerDutyConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Opsgenie) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Opsgenie{`,
		`Opsgenie:` + strings.Replace(fmt.Sprintf("%v", this.Opsgenie), "OpsGenieConfig", "OpsGenieConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Email) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Email{`,
		`Email:` + strings.Replace(fmt.Sprintf("%v", this.Email), "EmailConfig", "EmailConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSpecType_Sms) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSpecType_Sms{`,
		`Sms:` + strings.Replace(fmt.Sprintf("%v", this.Sms), "SMSConfig", "SMSConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType{`,
		`Receiver:` + fmt.Sprintf("%v", this.Receiver) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_Slack) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_Slack{`,
		`Slack:` + strings.Replace(fmt.Sprintf("%v", this.Slack), "SlackConfig", "SlackConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_Pagerduty) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_Pagerduty{`,
		`Pagerduty:` + strings.Replace(fmt.Sprintf("%v", this.Pagerduty), "PagerDutyConfig", "PagerDutyConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_Opsgenie) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_Opsgenie{`,
		`Opsgenie:` + strings.Replace(fmt.Sprintf("%v", this.Opsgenie), "OpsGenieConfig", "OpsGenieConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_Email) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_Email{`,
		`Email:` + strings.Replace(fmt.Sprintf("%v", this.Email), "EmailConfig", "EmailConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ReplaceSpecType_Sms) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ReplaceSpecType_Sms{`,
		`Sms:` + strings.Replace(fmt.Sprintf("%v", this.Sms), "SMSConfig", "SMSConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType{`,
		`Receiver:` + fmt.Sprintf("%v", this.Receiver) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Slack) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Slack{`,
		`Slack:` + strings.Replace(fmt.Sprintf("%v", this.Slack), "SlackConfig", "SlackConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Pagerduty) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Pagerduty{`,
		`Pagerduty:` + strings.Replace(fmt.Sprintf("%v", this.Pagerduty), "PagerDutyConfig", "PagerDutyConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Opsgenie) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Opsgenie{`,
		`Opsgenie:` + strings.Replace(fmt.Sprintf("%v", this.Opsgenie), "OpsGenieConfig", "OpsGenieConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Email) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Email{`,
		`Email:` + strings.Replace(fmt.Sprintf("%v", this.Email), "EmailConfig", "EmailConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetSpecType_Sms) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetSpecType_Sms{`,
		`Sms:` + strings.Replace(fmt.Sprintf("%v", this.Sms), "SMSConfig", "SMSConfig", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *SlackConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SlackConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SlackConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &schema.SecretType{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PagerDutyConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PagerDutyConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PagerDutyConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoutingKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoutingKey == nil {
				m.RoutingKey = &schema.SecretType{}
			}
			if err := m.RoutingKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OpsGenieConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpsGenieConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpsGenieConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiKey == nil {
				m.ApiKey = &schema.SecretType{}
			}
			if err := m.ApiKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SMSConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SMSConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SMSConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContactNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SlackConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GlobalSpecType_Slack{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagerduty", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PagerDutyConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GlobalSpecType_Pagerduty{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opsgenie", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OpsGenieConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GlobalSpecType_Opsgenie{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmailConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GlobalSpecType_Email{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SMSConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GlobalSpecType_Sms{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SlackConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &CreateSpecType_Slack{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagerduty", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PagerDutyConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &CreateSpecType_Pagerduty{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opsgenie", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OpsGenieConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &CreateSpecType_Opsgenie{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmailConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &CreateSpecType_Email{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SMSConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &CreateSpecType_Sms{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplaceSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplaceSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplaceSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SlackConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &ReplaceSpecType_Slack{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagerduty", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PagerDutyConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &ReplaceSpecType_Pagerduty{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opsgenie", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OpsGenieConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &ReplaceSpecType_Opsgenie{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmailConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &ReplaceSpecType_Email{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SMSConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &ReplaceSpecType_Sms{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SlackConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GetSpecType_Slack{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagerduty", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PagerDutyConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GetSpecType_Pagerduty{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opsgenie", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OpsGenieConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GetSpecType_Opsgenie{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmailConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GetSpecType_Email{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SMSConfig{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Receiver = &GetSpecType_Sms{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)

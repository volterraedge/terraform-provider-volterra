// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/site/public_uam_kubeconfig.proto

// Site UAM KubeConfig custom API
//
// x-displayName: "Site"
// API for manage kube configs.

package site

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("ves.io/schema/site/public_uam_kubeconfig.proto", fileDescriptor_56ac8a9f27d6b79f)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/site/public_uam_kubeconfig.proto", fileDescriptor_56ac8a9f27d6b79f)
}

var fileDescriptor_56ac8a9f27d6b79f = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xc1, 0x6b, 0xd4, 0x40,
	0x14, 0xc6, 0x33, 0x11, 0x14, 0xf6, 0x24, 0xa1, 0x94, 0x76, 0x95, 0x41, 0x16, 0xa4, 0xa0, 0x66,
	0x06, 0x2c, 0x42, 0x55, 0x10, 0x6c, 0x0f, 0x56, 0x14, 0x94, 0x8a, 0x17, 0x2f, 0x65, 0x92, 0xbc,
	0xcd, 0x4e, 0x77, 0x93, 0x37, 0xce, 0x4c, 0x62, 0x17, 0x11, 0xa4, 0xe0, 0x51, 0x10, 0xf4, 0x0f,
	0xf0, 0xa6, 0x17, 0x4f, 0x5e, 0x84, 0x5e, 0x7a, 0xb3, 0x27, 0x29, 0x7a, 0xe9, 0xd1, 0x66, 0x3d,
	0x78, 0xec, 0x9f, 0x20, 0x9b, 0xdd, 0xed, 0xee, 0xd2, 0x14, 0xc4, 0x83, 0xa7, 0xcc, 0xe4, 0xfb,
	0xe6, 0x25, 0xdf, 0x6f, 0x1e, 0xaf, 0xc6, 0x72, 0x30, 0x4c, 0x22, 0x37, 0x61, 0x0b, 0x12, 0xc1,
	0x8d, 0xb4, 0xc0, 0x55, 0x16, 0x74, 0x64, 0xb8, 0x9e, 0x89, 0x64, 0xbd, 0x9d, 0x05, 0x10, 0x62,
	0xda, 0x94, 0x31, 0x53, 0x1a, 0x2d, 0x7a, 0xde, 0xc0, 0xcf, 0x06, 0x7e, 0xd6, 0xf7, 0xd7, 0xfd,
	0x58, 0xda, 0x56, 0x16, 0xb0, 0x10, 0x13, 0x1e, 0x63, 0x8c, 0xbc, 0xb4, 0x06, 0x59, 0xb3, 0xdc,
	0x95, 0x9b, 0x72, 0x35, 0x28, 0x51, 0x3f, 0x1f, 0x23, 0xc6, 0x1d, 0xe0, 0x42, 0x49, 0x2e, 0xd2,
	0x14, 0xad, 0xb0, 0x12, 0x53, 0x33, 0x54, 0xe7, 0x27, 0xd4, 0x96, 0xb5, 0x2a, 0xc0, 0xa8, 0x3b,
	0x94, 0xce, 0x4d, 0xff, 0x2b, 0xaa, 0xc9, 0x73, 0xb4, 0x22, 0x88, 0xed, 0x2a, 0x18, 0xe9, 0x8d,
	0x69, 0x3d, 0x07, 0x03, 0x69, 0x3e, 0x5d, 0xe3, 0xea, 0xab, 0x33, 0xb5, 0xb3, 0x8f, 0x45, 0x72,
	0x2f, 0x0b, 0x60, 0xa5, 0x0c, 0x7d, 0xfb, 0xe1, 0x5d, 0xef, 0xb5, 0x5b, 0x9b, 0x5d, 0xd1, 0x20,
	0x2c, 0xdc, 0xe9, 0x60, 0x20, 0x3a, 0x63, 0xd5, 0xf3, 0xd9, 0x71, 0x1a, 0xac, 0xda, 0xbb, 0x06,
	0x4f, 0xeb, 0x33, 0x6c, 0x90, 0x8d, 0x09, 0x25, 0xd9, 0xaa, 0xb5, 0x6a, 0x19, 0xa3, 0x6e, 0xe3,
	0x13, 0x29, 0xbe, 0xce, 0x41, 0xf3, 0xda, 0x66, 0xe8, 0x0b, 0xa5, 0x8c, 0x15, 0x61, 0xdb, 0x0f,
	0x84, 0x91, 0xa1, 0x9f, 0x19, 0xd0, 0x57, 0x2e, 0x4c, 0x2b, 0xc6, 0x8a, 0x34, 0x12, 0x3a, 0x1a,
	0x8a, 0x39, 0x18, 0x5f, 0xa2, 0xdf, 0x5e, 0x32, 0xfe, 0x33, 0x2d, 0x2d, 0x1c, 0xbd, 0x89, 0xcb,
	0xef, 0x97, 0xc2, 0xf8, 0x0e, 0xb7, 0x7e, 0xfc, 0x7a, 0xeb, 0xde, 0x6a, 0x5c, 0x1f, 0xde, 0x30,
	0x4f, 0x45, 0x02, 0x46, 0x89, 0x10, 0x0c, 0x37, 0x5d, 0x63, 0x21, 0x29, 0xb1, 0x19, 0xfe, 0xbc,
	0xff, 0x78, 0xc1, 0x47, 0x35, 0x8e, 0xce, 0x9b, 0x1b, 0xe4, 0x92, 0xf7, 0xde, 0xad, 0xcd, 0xdc,
	0x97, 0xc6, 0x1e, 0xa3, 0x71, 0xb9, 0x8a, 0x46, 0x95, 0xb3, 0xcf, 0xe2, 0xe2, 0x49, 0xe6, 0x09,
	0x9b, 0x51, 0x8d, 0xcf, 0x64, 0xf7, 0x8b, 0xdb, 0x07, 0xb4, 0x51, 0x05, 0x28, 0xc1, 0x54, 0x5a,
	0x3c, 0x99, 0xd1, 0x91, 0x3e, 0x81, 0x49, 0x83, 0x88, 0xfe, 0x82, 0xd2, 0x4d, 0xef, 0xdf, 0x29,
	0x79, 0xef, 0xdc, 0xda, 0xec, 0x1a, 0xe4, 0xd8, 0x3e, 0xde, 0x32, 0x0b, 0x55, 0xb9, 0x07, 0xde,
	0x69, 0x40, 0x95, 0xc6, 0xb1, 0xe5, 0x91, 0x15, 0x36, 0x33, 0x7d, 0x44, 0x1f, 0xfe, 0x73, 0xff,
	0x2c, 0x35, 0x16, 0x4f, 0x26, 0xa3, 0xcb, 0x24, 0xd5, 0x9d, 0x53, 0x5f, 0xd8, 0xd9, 0x26, 0xa7,
	0xbe, 0x6f, 0x93, 0xf9, 0x8a, 0x64, 0x0f, 0x82, 0x0d, 0x08, 0xed, 0xd6, 0xb7, 0x39, 0xb7, 0x45,
	0x96, 0xb7, 0xc8, 0xde, 0x01, 0x75, 0xf6, 0x0f, 0xa8, 0x73, 0x78, 0x40, 0xc9, 0xcb, 0x82, 0x92,
	0x8f, 0x05, 0x25, 0xbb, 0x05, 0x25, 0x7b, 0x05, 0x25, 0x3f, 0x0b, 0x4a, 0x7e, 0x17, 0xd4, 0x39,
	0x2c, 0x28, 0x79, 0xd3, 0xa3, 0xce, 0x4e, 0x8f, 0x92, 0xbd, 0x1e, 0x75, 0xf6, 0x7b, 0xd4, 0x79,
	0xb2, 0x1a, 0xa3, 0x6a, 0xc7, 0x2c, 0xc7, 0x8e, 0x05, 0xad, 0x05, 0xcb, 0x0c, 0x2f, 0x17, 0x4d,
	0xd4, 0x89, 0xaf, 0x34, 0xe6, 0x32, 0x02, 0xed, 0x8f, 0x64, 0xae, 0x82, 0x18, 0x39, 0x6c, 0xda,
	0xd1, 0xd4, 0x18, 0x0f, 0x8f, 0xe0, 0x74, 0x39, 0x13, 0x16, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xf3, 0x8d, 0x78, 0x28, 0x22, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UamKubeConfigAPIClient is the client API for UamKubeConfigAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UamKubeConfigAPIClient interface {
	// Create Global Kube Config
	//
	// x-displayName: "Create Global Kube Config"
	// Download kube config for global k8s cluster access
	CreateGlobalKubeConfig(ctx context.Context, in *CreateGlobalKubeConfigReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// List Global Kube Configs
	//
	// x-displayName: "List Global Kube Configs"
	// Returns list of all global active kubeconfig minted for this site
	ListGlobalKubeConfig(ctx context.Context, in *ListGlobalKubeConfigReq, opts ...grpc.CallOption) (*ListKubeConfigRsp, error)
	// Revoke Global Kubeconfig
	//
	// x-displayName: "Revoke Global Kubeconfig"
	// Kubeconfig credential revoke/deletion.
	RevokeGlobalKubeConfig(ctx context.Context, in *RevokeKubeConfigReq, opts ...grpc.CallOption) (*KubeConfigStatusRsp, error)
}

type uamKubeConfigAPIClient struct {
	cc *grpc.ClientConn
}

func NewUamKubeConfigAPIClient(cc *grpc.ClientConn) UamKubeConfigAPIClient {
	return &uamKubeConfigAPIClient{cc}
}

func (c *uamKubeConfigAPIClient) CreateGlobalKubeConfig(ctx context.Context, in *CreateGlobalKubeConfigReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.UamKubeConfigAPI/CreateGlobalKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uamKubeConfigAPIClient) ListGlobalKubeConfig(ctx context.Context, in *ListGlobalKubeConfigReq, opts ...grpc.CallOption) (*ListKubeConfigRsp, error) {
	out := new(ListKubeConfigRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.UamKubeConfigAPI/ListGlobalKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uamKubeConfigAPIClient) RevokeGlobalKubeConfig(ctx context.Context, in *RevokeKubeConfigReq, opts ...grpc.CallOption) (*KubeConfigStatusRsp, error) {
	out := new(KubeConfigStatusRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.UamKubeConfigAPI/RevokeGlobalKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UamKubeConfigAPIServer is the server API for UamKubeConfigAPI service.
type UamKubeConfigAPIServer interface {
	// Create Global Kube Config
	//
	// x-displayName: "Create Global Kube Config"
	// Download kube config for global k8s cluster access
	CreateGlobalKubeConfig(context.Context, *CreateGlobalKubeConfigReq) (*httpbody.HttpBody, error)
	// List Global Kube Configs
	//
	// x-displayName: "List Global Kube Configs"
	// Returns list of all global active kubeconfig minted for this site
	ListGlobalKubeConfig(context.Context, *ListGlobalKubeConfigReq) (*ListKubeConfigRsp, error)
	// Revoke Global Kubeconfig
	//
	// x-displayName: "Revoke Global Kubeconfig"
	// Kubeconfig credential revoke/deletion.
	RevokeGlobalKubeConfig(context.Context, *RevokeKubeConfigReq) (*KubeConfigStatusRsp, error)
}

// UnimplementedUamKubeConfigAPIServer can be embedded to have forward compatible implementations.
type UnimplementedUamKubeConfigAPIServer struct {
}

func (*UnimplementedUamKubeConfigAPIServer) CreateGlobalKubeConfig(ctx context.Context, req *CreateGlobalKubeConfigReq) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGlobalKubeConfig not implemented")
}
func (*UnimplementedUamKubeConfigAPIServer) ListGlobalKubeConfig(ctx context.Context, req *ListGlobalKubeConfigReq) (*ListKubeConfigRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGlobalKubeConfig not implemented")
}
func (*UnimplementedUamKubeConfigAPIServer) RevokeGlobalKubeConfig(ctx context.Context, req *RevokeKubeConfigReq) (*KubeConfigStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeGlobalKubeConfig not implemented")
}

func RegisterUamKubeConfigAPIServer(s *grpc.Server, srv UamKubeConfigAPIServer) {
	s.RegisterService(&_UamKubeConfigAPI_serviceDesc, srv)
}

func _UamKubeConfigAPI_CreateGlobalKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGlobalKubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UamKubeConfigAPIServer).CreateGlobalKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.UamKubeConfigAPI/CreateGlobalKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UamKubeConfigAPIServer).CreateGlobalKubeConfig(ctx, req.(*CreateGlobalKubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UamKubeConfigAPI_ListGlobalKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGlobalKubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UamKubeConfigAPIServer).ListGlobalKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.UamKubeConfigAPI/ListGlobalKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UamKubeConfigAPIServer).ListGlobalKubeConfig(ctx, req.(*ListGlobalKubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UamKubeConfigAPI_RevokeGlobalKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeKubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UamKubeConfigAPIServer).RevokeGlobalKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.UamKubeConfigAPI/RevokeGlobalKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UamKubeConfigAPIServer).RevokeGlobalKubeConfig(ctx, req.(*RevokeKubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UamKubeConfigAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.site.UamKubeConfigAPI",
	HandlerType: (*UamKubeConfigAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGlobalKubeConfig",
			Handler:    _UamKubeConfigAPI_CreateGlobalKubeConfig_Handler,
		},
		{
			MethodName: "ListGlobalKubeConfig",
			Handler:    _UamKubeConfigAPI_ListGlobalKubeConfig_Handler,
		},
		{
			MethodName: "RevokeGlobalKubeConfig",
			Handler:    _UamKubeConfigAPI_RevokeGlobalKubeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/site/public_uam_kubeconfig.proto",
}

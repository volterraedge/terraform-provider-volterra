// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/site/public_config_kubeconfig.proto

// Site KubeConfig custom API
//
// x-displayName: "Site"
// API for manage kube configs.

package site

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("ves.io/schema/site/public_config_kubeconfig.proto", fileDescriptor_d1ea8d623951f759)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/site/public_config_kubeconfig.proto", fileDescriptor_d1ea8d623951f759)
}

var fileDescriptor_d1ea8d623951f759 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xc1, 0x6b, 0x13, 0x4f,
	0x18, 0xdd, 0xe9, 0xef, 0x87, 0x87, 0x9c, 0x64, 0xab, 0xd0, 0x46, 0x19, 0x25, 0x20, 0x05, 0x71,
	0x67, 0x50, 0x11, 0x44, 0x14, 0x69, 0x7b, 0xa9, 0x1a, 0x50, 0x3c, 0x7a, 0x29, 0xb3, 0xbb, 0x5f,
	0x36, 0x63, 0xb2, 0xfb, 0x8d, 0x33, 0xb3, 0x6b, 0x83, 0x14, 0x24, 0x7f, 0x81, 0x20, 0x1e, 0xfc,
	0x0f, 0xbc, 0x7a, 0x13, 0x7a, 0xe9, 0xcd, 0x9e, 0x24, 0xe8, 0xa5, 0x47, 0xb3, 0xf1, 0xe0, 0x49,
	0xfa, 0x1f, 0x28, 0xd9, 0xdd, 0x24, 0x8d, 0x46, 0x14, 0xbc, 0xbd, 0xfd, 0xde, 0xfb, 0x1e, 0xfb,
	0xde, 0x7c, 0xb5, 0xcb, 0x19, 0x18, 0x26, 0x91, 0x9b, 0xa0, 0x0d, 0xb1, 0xe0, 0x46, 0x5a, 0xe0,
	0x2a, 0xf5, 0xbb, 0x32, 0xd8, 0x0e, 0x30, 0x69, 0xc9, 0x68, 0xbb, 0x93, 0xfa, 0x50, 0x42, 0xa6,
	0x34, 0x5a, 0x74, 0xdd, 0x72, 0x85, 0x95, 0x2b, 0x6c, 0xbc, 0x52, 0xf7, 0x22, 0x69, 0xdb, 0xa9,
	0xcf, 0x02, 0x8c, 0x79, 0x84, 0x11, 0xf2, 0x42, 0xea, 0xa7, 0xad, 0xe2, 0xab, 0xf8, 0x28, 0x50,
	0x69, 0x51, 0x3f, 0x1b, 0x21, 0x46, 0x5d, 0xe0, 0x42, 0x49, 0x2e, 0x92, 0x04, 0xad, 0xb0, 0x12,
	0x13, 0x53, 0xb1, 0xab, 0xc7, 0xd8, 0xb6, 0xb5, 0xca, 0xc7, 0xb0, 0x57, 0x51, 0xe7, 0x2a, 0x6a,
	0x6a, 0x6f, 0x65, 0x0c, 0xc6, 0x8a, 0x58, 0x55, 0x82, 0x33, 0xf3, 0x79, 0x50, 0x1d, 0x37, 0xa6,
	0x0b, 0xc2, 0xda, 0x9e, 0x82, 0x09, 0xdf, 0x98, 0xe7, 0x33, 0x30, 0x90, 0x64, 0xf3, 0x1e, 0x57,
	0xde, 0xfe, 0x5f, 0x5b, 0xde, 0x2c, 0xea, 0xb8, 0x97, 0xfa, 0x50, 0xa2, 0xf5, 0x07, 0x77, 0xdc,
	0x6f, 0xa4, 0x76, 0x7a, 0x53, 0x83, 0xb0, 0xd0, 0xc4, 0x40, 0x74, 0x67, 0xa4, 0xbb, 0xc6, 0x7e,
	0x2d, 0x8c, 0x95, 0xd2, 0x99, 0xea, 0x21, 0x3c, 0xa9, 0x9f, 0x62, 0x65, 0x3a, 0x26, 0x94, 0x64,
	0x5b, 0xd6, 0xaa, 0x0d, 0x0c, 0x7b, 0x8d, 0x57, 0x24, 0x7f, 0xbf, 0x72, 0xb7, 0x75, 0x6d, 0x27,
	0xf0, 0x84, 0x52, 0xc6, 0x8a, 0xa0, 0xe3, 0x19, 0x2b, 0x92, 0x50, 0xe8, 0xd0, 0x4b, 0x0d, 0xe8,
	0x4b, 0xe7, 0x33, 0x30, 0x9e, 0x44, 0xaf, 0x73, 0xdd, 0x78, 0x4f, 0xb5, 0xb4, 0x30, 0x9d, 0x74,
	0xc7, 0xbf, 0x52, 0xcc, 0x67, 0xaf, 0xd8, 0xff, 0xf4, 0xe5, 0xe5, 0xd2, 0x7a, 0xe3, 0x66, 0xf5,
	0xcc, 0x3c, 0x11, 0x31, 0x18, 0x25, 0x02, 0x30, 0xfc, 0xd9, 0x14, 0xef, 0x16, 0xe5, 0x54, 0x93,
	0x5d, 0x5e, 0xf9, 0x4c, 0x3d, 0x6e, 0x90, 0x8b, 0xee, 0x77, 0x52, 0x5b, 0x6e, 0x4a, 0x63, 0x7f,
	0x8e, 0x7b, 0x61, 0x51, 0xdc, 0xb1, 0x70, 0x3e, 0xec, 0xdf, 0xc8, 0x8c, 0x6a, 0xbc, 0x26, 0x07,
	0xef, 0x96, 0xc6, 0x0d, 0x34, 0x7f, 0xd3, 0x40, 0x8c, 0x89, 0xb4, 0x38, 0x5f, 0x82, 0x06, 0x11,
	0xfe, 0xb9, 0x83, 0xdb, 0xee, 0xad, 0x7f, 0xe9, 0xc0, 0xd4, 0xd7, 0xf6, 0xf7, 0xc8, 0x7f, 0x1f,
	0xf7, 0xc8, 0xea, 0x82, 0x24, 0xf7, 0xfd, 0xc7, 0x10, 0xd8, 0xfe, 0x87, 0x95, 0xa5, 0x93, 0x64,
	0xa3, 0x4f, 0x06, 0x43, 0xea, 0x1c, 0x0e, 0xa9, 0x73, 0x34, 0xa4, 0xe4, 0x79, 0x4e, 0xc9, 0x9b,
	0x9c, 0x92, 0x83, 0x9c, 0x92, 0x41, 0x4e, 0xc9, 0xe7, 0x9c, 0x92, 0xaf, 0x39, 0x75, 0x8e, 0x72,
	0x4a, 0x5e, 0x8c, 0xa8, 0xb3, 0x3f, 0xa2, 0x64, 0x30, 0xa2, 0xce, 0xe1, 0x88, 0x3a, 0x8f, 0xb6,
	0x22, 0x54, 0x9d, 0x88, 0x65, 0xd8, 0xb5, 0xa0, 0xb5, 0x60, 0xa9, 0xe1, 0x05, 0x68, 0xa1, 0x8e,
	0x3d, 0xa5, 0x31, 0x93, 0x21, 0x68, 0x6f, 0x42, 0x73, 0xe5, 0x47, 0xc8, 0x61, 0xc7, 0x4e, 0x2e,
	0x7c, 0x76, 0xe8, 0xfe, 0x89, 0xe2, 0x7e, 0xaf, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff, 0x55, 0xf1,
	0x10, 0x9c, 0xf2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigKubeConfigAPIClient is the client API for ConfigKubeConfigAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigKubeConfigAPIClient interface {
	// Create K8s Cluster Local Kube Config
	//
	// x-displayName: "Create K8s Cluster Local Kube Config"
	// Down load kube config for local k8s cluster access
	CreateLocalKubeConfig(ctx context.Context, in *CreateKubeConfigReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// List Local Kube Configs
	//
	// x-displayName: "List Local Kube Configs"
	// Returns list of all local active kubeconfig minted for this site
	ListLocalKubeConfig(ctx context.Context, in *ListKubeConfigReq, opts ...grpc.CallOption) (*ListKubeConfigRsp, error)
}

type configKubeConfigAPIClient struct {
	cc *grpc.ClientConn
}

func NewConfigKubeConfigAPIClient(cc *grpc.ClientConn) ConfigKubeConfigAPIClient {
	return &configKubeConfigAPIClient{cc}
}

func (c *configKubeConfigAPIClient) CreateLocalKubeConfig(ctx context.Context, in *CreateKubeConfigReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.ConfigKubeConfigAPI/CreateLocalKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configKubeConfigAPIClient) ListLocalKubeConfig(ctx context.Context, in *ListKubeConfigReq, opts ...grpc.CallOption) (*ListKubeConfigRsp, error) {
	out := new(ListKubeConfigRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.ConfigKubeConfigAPI/ListLocalKubeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigKubeConfigAPIServer is the server API for ConfigKubeConfigAPI service.
type ConfigKubeConfigAPIServer interface {
	// Create K8s Cluster Local Kube Config
	//
	// x-displayName: "Create K8s Cluster Local Kube Config"
	// Down load kube config for local k8s cluster access
	CreateLocalKubeConfig(context.Context, *CreateKubeConfigReq) (*httpbody.HttpBody, error)
	// List Local Kube Configs
	//
	// x-displayName: "List Local Kube Configs"
	// Returns list of all local active kubeconfig minted for this site
	ListLocalKubeConfig(context.Context, *ListKubeConfigReq) (*ListKubeConfigRsp, error)
}

// UnimplementedConfigKubeConfigAPIServer can be embedded to have forward compatible implementations.
type UnimplementedConfigKubeConfigAPIServer struct {
}

func (*UnimplementedConfigKubeConfigAPIServer) CreateLocalKubeConfig(ctx context.Context, req *CreateKubeConfigReq) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLocalKubeConfig not implemented")
}
func (*UnimplementedConfigKubeConfigAPIServer) ListLocalKubeConfig(ctx context.Context, req *ListKubeConfigReq) (*ListKubeConfigRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLocalKubeConfig not implemented")
}

func RegisterConfigKubeConfigAPIServer(s *grpc.Server, srv ConfigKubeConfigAPIServer) {
	s.RegisterService(&_ConfigKubeConfigAPI_serviceDesc, srv)
}

func _ConfigKubeConfigAPI_CreateLocalKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateKubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigKubeConfigAPIServer).CreateLocalKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.ConfigKubeConfigAPI/CreateLocalKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigKubeConfigAPIServer).CreateLocalKubeConfig(ctx, req.(*CreateKubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigKubeConfigAPI_ListLocalKubeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKubeConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigKubeConfigAPIServer).ListLocalKubeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.ConfigKubeConfigAPI/ListLocalKubeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigKubeConfigAPIServer).ListLocalKubeConfig(ctx, req.(*ListKubeConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigKubeConfigAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.site.ConfigKubeConfigAPI",
	HandlerType: (*ConfigKubeConfigAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLocalKubeConfig",
			Handler:    _ConfigKubeConfigAPI_CreateLocalKubeConfig_Handler,
		},
		{
			MethodName: "ListLocalKubeConfig",
			Handler:    _ConfigKubeConfigAPI_ListLocalKubeConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/site/public_config_kubeconfig.proto",
}

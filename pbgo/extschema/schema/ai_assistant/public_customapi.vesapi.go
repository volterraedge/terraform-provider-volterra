// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package ai_assistant

import (
	"bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create SahayaAPI GRPC Client satisfying server.CustomClient
type SahayaAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient SahayaAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *SahayaAPIGrpcClient) doRPCAIAssistantFeedback(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &AIAssistantQueryFeedbackRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.ai_assistant.AIAssistantQueryFeedbackRequest", yamlReq)
	}
	rsp, err := c.grpcClient.AIAssistantFeedback(ctx, req, opts...)
	return rsp, err
}

func (c *SahayaAPIGrpcClient) doRPCAIAssistantQuery(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &AIAssistantQueryRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.ai_assistant.AIAssistantQueryRequest", yamlReq)
	}
	rsp, err := c.grpcClient.AIAssistantQuery(ctx, req, opts...)
	return rsp, err
}

func (c *SahayaAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewSahayaAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &SahayaAPIGrpcClient{
		conn:       cc,
		grpcClient: NewSahayaAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["AIAssistantFeedback"] = ccl.doRPCAIAssistantFeedback

	rpcFns["AIAssistantQuery"] = ccl.doRPCAIAssistantQuery

	ccl.rpcFns = rpcFns

	return ccl
}

// Create SahayaAPI REST Client satisfying server.CustomClient
type SahayaAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *SahayaAPIRestClient) doRPCAIAssistantFeedback(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &AIAssistantQueryFeedbackRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.ai_assistant.AIAssistantQueryFeedbackRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("comment", fmt.Sprintf("%v", req.Comment))
		q.Add("feedback_choice", fmt.Sprintf("%v", req.FeedbackChoice))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("query", fmt.Sprintf("%v", req.Query))
		q.Add("query_id", fmt.Sprintf("%v", req.QueryId))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ves_io_schema.Empty{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.Empty", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *SahayaAPIRestClient) doRPCAIAssistantQuery(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &AIAssistantQueryRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.ai_assistant.AIAssistantQueryRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("current_query", fmt.Sprintf("%v", req.CurrentQuery))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &AIAssistantQueryResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.ai_assistant.AIAssistantQueryResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *SahayaAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewSahayaAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &SahayaAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["AIAssistantFeedback"] = ccl.doRPCAIAssistantFeedback

	rpcFns["AIAssistantQuery"] = ccl.doRPCAIAssistantQuery

	ccl.rpcFns = rpcFns

	return ccl
}

// Create sahayaAPIInprocClient

// INPROC Client (satisfying SahayaAPIClient interface)
type sahayaAPIInprocClient struct {
	SahayaAPIServer
}

func (c *sahayaAPIInprocClient) AIAssistantFeedback(ctx context.Context, in *AIAssistantQueryFeedbackRequest, opts ...grpc.CallOption) (*ves_io_schema.Empty, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantFeedback")
	return c.SahayaAPIServer.AIAssistantFeedback(ctx, in)
}
func (c *sahayaAPIInprocClient) AIAssistantQuery(ctx context.Context, in *AIAssistantQueryRequest, opts ...grpc.CallOption) (*AIAssistantQueryResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantQuery")
	return c.SahayaAPIServer.AIAssistantQuery(ctx, in)
}

func NewSahayaAPIInprocClient(svc svcfw.Service) SahayaAPIClient {
	return &sahayaAPIInprocClient{SahayaAPIServer: NewSahayaAPIServer(svc)}
}

// RegisterGwSahayaAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwSahayaAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterSahayaAPIHandlerClient(ctx, mux, NewSahayaAPIInprocClient(s))
}

// Create sahayaAPISrv

// SERVER (satisfying SahayaAPIServer interface)
type sahayaAPISrv struct {
	svc svcfw.Service
}

func (s *sahayaAPISrv) AIAssistantFeedback(ctx context.Context, in *AIAssistantQueryFeedbackRequest) (*ves_io_schema.Empty, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.ai_assistant.SahayaAPI")
	cah, ok := ah.(SahayaAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *SahayaAPIServer", ah)
	}

	var (
		rsp *ves_io_schema.Empty
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.ai_assistant.AIAssistantQueryFeedbackRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'SahayaAPI.AIAssistantFeedback' operation on 'ai_assistant'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.ai_assistant.SahayaAPI.AIAssistantFeedback"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.AIAssistantFeedback(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.Empty", rsp)...)

	return rsp, nil
}
func (s *sahayaAPISrv) AIAssistantQuery(ctx context.Context, in *AIAssistantQueryRequest) (*AIAssistantQueryResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.ai_assistant.SahayaAPI")
	cah, ok := ah.(SahayaAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *SahayaAPIServer", ah)
	}

	var (
		rsp *AIAssistantQueryResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.ai_assistant.AIAssistantQueryRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'SahayaAPI.AIAssistantQuery' operation on 'ai_assistant'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.ai_assistant.SahayaAPI.AIAssistantQuery"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.AIAssistantQuery(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.ai_assistant.AIAssistantQueryResponse", rsp)...)

	return rsp, nil
}

func NewSahayaAPIServer(svc svcfw.Service) SahayaAPIServer {
	return &sahayaAPISrv{svc: svc}
}

var SahayaAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "AI Assistant APIs",
        "description": "Custom handler for ai assistant related microservice",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{namespace}/query": {
            "post": {
                "summary": "AI Assistant Query",
                "description": "Enable service by returning service account details",
                "operationId": "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantQuery",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ai_assistantAIAssistantQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"system\"\nNamespace of the HTTP Load Balancer for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ai_assistantAIAssistantQueryRequest"
                        }
                    }
                ],
                "tags": [
                    "SahayaAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-ai_assistant-sahayaapi-aiassistantquery"
                },
                "x-ves-proto-rpc": "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantQuery"
            },
            "x-displayname": "SahayaAPI",
            "x-ves-proto-service": "ves.io.schema.ai_assistant.SahayaAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/query_feedback": {
            "post": {
                "summary": "Feedback of AI Assistant Query",
                "description": "Enable service by returning service account details",
                "operationId": "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantFeedback",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/schemaEmpty"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nNamespace of the HTTP Load Balancer for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ai_assistantAIAssistantQueryFeedbackRequest"
                        }
                    }
                ],
                "tags": [
                    "SahayaAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-ai_assistant-sahayaapi-aiassistantfeedback"
                },
                "x-ves-proto-rpc": "ves.io.schema.ai_assistant.SahayaAPI.AIAssistantFeedback"
            },
            "x-displayname": "SahayaAPI",
            "x-ves-proto-service": "ves.io.schema.ai_assistant.SahayaAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "ai_assistantAIAssistantQueryFeedbackRequest": {
            "type": "object",
            "description": "AI Assistant Query Feedback Request",
            "title": "AI Assistant Query Feedback Request",
            "x-displayname": "AI Assistant Query Feedback Request",
            "x-ves-oneof-field-feedback_choice": "[\"negative_feedback\",\"positive_feedback\"]",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.AIAssistantQueryFeedbackRequest",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "\n\nExample: - \"Response is biased\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 4096\n",
                    "title": "comment",
                    "maxLength": 4096,
                    "x-displayname": "Comment",
                    "x-ves-example": "Response is biased",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "4096"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the HTTP Load Balancer for current request\n\nExample: - \"system\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "system"
                },
                "negative_feedback": {
                    "description": "Exclusive with [positive_feedback]\n Negative Feedback",
                    "title": "negative_feedback",
                    "$ref": "#/definitions/ai_assistantNegativeFeedbackDetails",
                    "x-displayname": "Negative Feedback"
                },
                "positive_feedback": {
                    "description": "Exclusive with [negative_feedback]\n Postive Feedback",
                    "title": "positive_feedback",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Positive Feedback"
                },
                "query": {
                    "type": "string",
                    "description": " Query will be in text format\n\nExample: - \"How to investigate request log\"-",
                    "title": "query",
                    "x-displayname": "Query",
                    "x-ves-example": "How to investigate request log"
                },
                "query_id": {
                    "type": "string",
                    "description": " Query Identifier\n\nExample: - \"07e03bc6-81d4-4c86-a865-67b5763fe294\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.pattern: ^([0-9a-f]{8}-){1}([0-9a-f]{4}-){3}([0-9a-f]{12})$\n",
                    "title": "query_id",
                    "x-displayname": "Query Id",
                    "x-ves-example": "07e03bc6-81d4-4c86-a865-67b5763fe294",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.pattern": "^([0-9a-f]{8}-){1}([0-9a-f]{4}-){3}([0-9a-f]{12})$"
                    }
                }
            }
        },
        "ai_assistantAIAssistantQueryRequest": {
            "type": "object",
            "description": "AI Assistant Query Request",
            "title": "AI Assistant Query Request",
            "x-displayname": "AI Assistant Query Request",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.AIAssistantQueryRequest",
            "properties": {
                "current_query": {
                    "type": "string",
                    "description": " Current query will be in text format\n\nExample: - \"Explain security event 07e03bc6-81d4-4c86-a865-67b5763fe294\"-",
                    "title": "current_query",
                    "x-displayname": "Current query",
                    "x-ves-example": "Explain security event 07e03bc6-81d4-4c86-a865-67b5763fe294"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the HTTP Load Balancer for current request\n\nExample: - \"system\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "system"
                }
            }
        },
        "ai_assistantAIAssistantQueryResponse": {
            "type": "object",
            "description": "AI Assistant Query Response",
            "title": "AI Assistant Query Response",
            "x-displayname": "AI Assistant Query Response",
            "x-ves-oneof-field-response_choice": "[\"explain_log\",\"gen_dashboard_filter\",\"generic_response\",\"site_analysis_response\",\"widget_response\"]",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.AIAssistantQueryResponse",
            "properties": {
                "current_query": {
                    "type": "string",
                    "description": " Current query will be in text format\n\nExample: - \"Explain security event 07e03bc6-81d4-4c86-a865-67b5763fe294\"-",
                    "title": "current_query",
                    "x-displayname": "Current query",
                    "x-ves-example": "Explain security event 07e03bc6-81d4-4c86-a865-67b5763fe294"
                },
                "explain_log": {
                    "description": "Exclusive with [gen_dashboard_filter generic_response site_analysis_response widget_response]\n Explain log response",
                    "title": "explain_log",
                    "$ref": "#/definitions/explain_log_recordExplainLogRecordResponse",
                    "x-displayname": "Explain log"
                },
                "follow_up_queries": {
                    "type": "array",
                    "description": " Follow up Queries to be given as suggestion to users\n\nExample: - \"Explain following violation in whole namespace\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "follow_up_queries",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Follow up Queries",
                    "x-ves-example": "Explain following violation in whole namespace",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "gen_dashboard_filter": {
                    "description": "Exclusive with [explain_log generic_response site_analysis_response widget_response]\n Generate dashboard filter response",
                    "title": "gen_dashboard_filter",
                    "$ref": "#/definitions/gen_dashboard_filterGenDashboardFilterResponse",
                    "x-displayname": "Generate dashboard filter"
                },
                "generic_response": {
                    "description": "Exclusive with [explain_log gen_dashboard_filter site_analysis_response widget_response]\n Generic Response",
                    "title": "generic_response",
                    "$ref": "#/definitions/commonGenericResponse",
                    "x-displayname": "Generic Response"
                },
                "query_id": {
                    "type": "string",
                    "description": " Query Identifier\n\nExample: - \"07e03bc6-81d4-4c86-a865-67b5763fe294\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.pattern: ^([0-9a-f]{8}-){1}([0-9a-f]{4}-){3}([0-9a-f]{12})$\n",
                    "title": "query_id",
                    "x-displayname": "Query Id",
                    "x-ves-example": "07e03bc6-81d4-4c86-a865-67b5763fe294",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.pattern": "^([0-9a-f]{8}-){1}([0-9a-f]{4}-){3}([0-9a-f]{12})$"
                    }
                },
                "site_analysis_response": {
                    "description": "Exclusive with [explain_log gen_dashboard_filter generic_response widget_response]\n Site Analysis",
                    "title": "site_analysis",
                    "$ref": "#/definitions/site_analysisSiteAnalysisResponse",
                    "x-displayname": "Site analysis"
                },
                "widget_response": {
                    "description": "Exclusive with [explain_log gen_dashboard_filter generic_response site_analysis_response]\n Widget Response",
                    "title": "widget_response",
                    "$ref": "#/definitions/widgetWidgetResponse",
                    "x-displayname": "Generic Widget Response"
                }
            }
        },
        "ai_assistantNegativeFeedbackDetails": {
            "type": "object",
            "description": "Negative Feedback Details",
            "title": "NegativeFeedbackDetails",
            "x-displayname": "Negative Feedback Details",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.NegativeFeedbackDetails",
            "properties": {
                "remarks": {
                    "type": "array",
                    "description": "\n\nExample: - \"Inaccurate data\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.enum.defined_only: true\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "remarks",
                    "items": {
                        "$ref": "#/definitions/ai_assistantNegativeFeedbackType"
                    },
                    "x-displayname": "Feedback",
                    "x-ves-example": "Inaccurate data",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.enum.defined_only": "true",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "ai_assistantNegativeFeedbackType": {
            "type": "string",
            "description": "x-displayName \"Negative Feedback Type\"\nType of Negative Feedback\n\n - OTHER: x-displayName \"Other\"\nOther\n - INACCURATE_DATA: x-displayName \"Inaccurate data\"\nInaccurate data\n - IRRELEVANT_CONTENT: x-displayName \"Irrelevant content\"\nIrrelevant content\n - POOR_FORMAT: x-displayName \"Poor format\"\nPoor format\n - SLOW_RESPONSE: x-displayName \"Slow response\"\nSlow response",
            "title": "Negative Feedback Type",
            "enum": [
                "OTHER",
                "INACCURATE_DATA",
                "IRRELEVANT_CONTENT",
                "POOR_FORMAT",
                "SLOW_RESPONSE"
            ],
            "default": "OTHER",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.NegativeFeedbackType"
        },
        "ai_assistantcommonUnitType": {
            "type": "string",
            "description": "Unit Type defines the unit for each fields.\n\n - UNIT_TYPE_NONE: None\n\nNone type\n - GB: GB\n",
            "title": "UnitType",
            "enum": [
                "UNIT_TYPE_NONE",
                "GB"
            ],
            "default": "UNIT_TYPE_NONE",
            "x-displayname": "Unit Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.UnitType"
        },
        "ai_assistantexplain_log_recordAction": {
            "type": "string",
            "description": "Action taken for the request\n\n - ACTION_NONE: None\n\nNo action\n - ALLOW: Allow\n\nThe request was allowed to pass\n - BLOCK: Block\n\nThe request was blocked\n - REDIRECT: Redirect\n\nThe request was redirected",
            "title": "Action",
            "enum": [
                "ACTION_NONE",
                "ALLOW",
                "BLOCK",
                "REDIRECT"
            ],
            "default": "ACTION_NONE",
            "x-displayname": "Action",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.explain_log_record.Action"
        },
        "commonColourType": {
            "type": "string",
            "description": "Colour Type defines the colour of fields to be displayed.\n\n - COLOUR_TYPE_NONE: None\n\nNo colour\n - DANGER: danger\n\ncolour type red\n - INFO: info\n\ncolour type blue\n - WARNING: warning\n\ncolour type orange\n - AMBER: amber\n\ncolour type yellow\n - SUCCESS: success\n\ncolour type  green",
            "title": "ColourType",
            "enum": [
                "COLOUR_TYPE_NONE",
                "DANGER",
                "INFO",
                "WARNING",
                "AMBER",
                "SUCCESS"
            ],
            "default": "COLOUR_TYPE_NONE",
            "x-displayname": "Colour Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.ColourType"
        },
        "commonColumnType": {
            "type": "string",
            "description": "Column Type defines the data type for each column.\n\n - COLUMN_TYPE_NONE: None\n\n - STRING: string\n\n - INT: integer\n\n - FLOAT: float\n\n - BOOL: boolean\n",
            "title": "ColumnType",
            "enum": [
                "COLUMN_TYPE_NONE",
                "STRING",
                "INT",
                "FLOAT",
                "BOOL"
            ],
            "default": "COLUMN_TYPE_NONE",
            "x-displayname": "Column Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.ColumnType"
        },
        "commonDashboardLink": {
            "type": "object",
            "description": "Dashboard link will present common fields like type, namespace, object, dateFilter, logFilter",
            "title": "DashboardLink",
            "x-displayname": "Dashboard Link",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.DashboardLink",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key will present a placeholder in a text field to insert the link.\n For example: To view these events go to the ${{link:db_link}}.\n\nExample: - \"db_link\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "key",
                    "x-displayname": "Key",
                    "x-ves-example": "db_link",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "log_filters": {
                    "type": "array",
                    "description": " Logs filter",
                    "title": "log_filters",
                    "items": {
                        "$ref": "#/definitions/commonLogFilter"
                    },
                    "x-displayname": "Logs Filter"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace for current request\n\nExample: - \"system\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "system"
                },
                "object_name": {
                    "type": "string",
                    "description": " Object name such as LB, VH\n\nExample: - \"ves-io-http-loadbalancer-prod-nginx\"-",
                    "title": "object_name",
                    "x-displayname": "Object name",
                    "x-ves-example": "ves-io-http-loadbalancer-prod-nginx"
                },
                "time_range": {
                    "type": "string",
                    "description": " Time range filter\n\nExample: - \"604800\"-",
                    "title": "time_range",
                    "x-displayname": "Time Range",
                    "x-ves-example": "604800"
                },
                "title": {
                    "type": "string",
                    "description": " Title for the link\n\nExample: - \"Security Analytics lb1\"-",
                    "title": "title",
                    "x-displayname": "Title",
                    "x-ves-example": "Security Analytics lb1"
                },
                "type": {
                    "description": " Type of the link to be presented.\n SECURITY_ANALYTICS_EVENTS --\u003e /web/workspaces/web-app-and-api-protection/../dashboard/security-dashboard/../security_analytics/events\n REQUESTS_EVENTS --\u003e /web/workspaces/web-app-and-api-protection/../dashboard/security-dashboard/../security_monitoring/request\n SITES --\u003e /web/workspaces/multi-cloud-network-connect/overview/sites/dashboard\n CLOUD_CREDENTIALS --\u003e /web/workspaces/multi-cloud-network-connect/manage/site_management/cloud_sites/cloud_credential\n\nExample: - \"SECURITY_ANALYTICS_EVENTS\"-",
                    "title": "type",
                    "$ref": "#/definitions/commonDashboardLinkType",
                    "x-displayname": "Type",
                    "x-ves-example": "SECURITY_ANALYTICS_EVENTS"
                }
            }
        },
        "commonDashboardLinkType": {
            "type": "string",
            "description": "Link Type to be presented\n\n - SECURITY_ANALYTICS_EVENTS: SECURITY_ANALYTICS_EVENTS\n\nSecurity analytics dashboard: /web/workspaces/web-app-and-api-protection/../dashboard/security-dashboard/../security_analytics/events\n - REQUESTS_EVENTS: REQUESTS_EVENTS\n\nRequests dashboard: /web/workspaces/web-app-and-api-protection/../dashboard/security-dashboard/../security_monitoring/request\n - SITES: SITES\n\nSites dashboard: /web/workspaces/multi-cloud-network-connect/overview/sites/dashboard\n - CLOUD_CREDENTIALS: CLOUD_CREDENTIALS\n\nCLOUD_CREDENTIALS --\u003e /web/workspaces/multi-cloud-network-connect/manage/site_management/cloud_sites/cloud_credential\n - SITES_UBER: SITES_UBER\n\nSites dashboard: /web/workspaces/multi-cloud-network-connect/overview/sites/dashboard",
            "title": "LinkType",
            "enum": [
                "SECURITY_ANALYTICS_EVENTS",
                "REQUESTS_EVENTS",
                "SITES",
                "CLOUD_CREDENTIALS",
                "SITES_UBER"
            ],
            "default": "SECURITY_ANALYTICS_EVENTS",
            "x-displayname": "Link Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.DashboardLinkType"
        },
        "commonDisplay": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.Display",
            "properties": {
                "colour": {
                    "description": "\n\nExample: - \"Green\"-",
                    "title": "colour",
                    "$ref": "#/definitions/commonColourType",
                    "x-displayname": "colour",
                    "x-ves-example": "Green"
                },
                "display_type": {
                    "description": "\n\nExample: - \"Icon\"-",
                    "title": "Display Type",
                    "$ref": "#/definitions/commonDisplayType",
                    "x-displayname": "Display Type",
                    "x-ves-example": "Icon"
                },
                "formats": {
                    "type": "array",
                    "description": "\n\nExample: - \"Bold Italic\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "format",
                    "items": {
                        "$ref": "#/definitions/commonFormatType"
                    },
                    "x-displayname": "formats",
                    "x-ves-example": "Bold Italic",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "commonDisplayType": {
            "type": "string",
            "description": "Render Type defines the format to which data has to be rendered on UI.\n\n - DISPLAY_TYPE_NONE: None\n\nNone type\n - ICON: icon\n\nValue to be displayed as ICON",
            "title": "DisplayType",
            "enum": [
                "DISPLAY_TYPE_NONE",
                "ICON"
            ],
            "default": "DISPLAY_TYPE_NONE",
            "x-displayname": "DisplayType Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.DisplayType"
        },
        "commonFieldProperties": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.FieldProperties",
            "properties": {
                "data_type": {
                    "description": "\n\nExample: - \"Bool\"-",
                    "title": "Type",
                    "$ref": "#/definitions/commonColumnType",
                    "x-displayname": "type",
                    "x-ves-example": "Bool"
                },
                "display": {
                    "description": " Display details for the field",
                    "title": "Display",
                    "$ref": "#/definitions/commonDisplay",
                    "x-displayname": "display"
                },
                "name": {
                    "type": "string",
                    "description": "\n\nExample: - \"provider\"-",
                    "title": "Name",
                    "x-displayname": "name",
                    "x-ves-example": "provider"
                },
                "title": {
                    "type": "string",
                    "description": "\n\nExample: - \"Site Name\"-",
                    "title": "Title",
                    "x-displayname": "title",
                    "x-ves-example": "Site Name"
                },
                "unit": {
                    "description": "\n\nExample: - \"GB\"-",
                    "title": "Unit",
                    "$ref": "#/definitions/ai_assistantcommonUnitType",
                    "x-displayname": "unit",
                    "x-ves-example": "GB"
                }
            }
        },
        "commonFilterOperator": {
            "type": "string",
            "description": "Operator for query filter\n\n - IN: Filter Operator\n\nSpecifies that query result includes filter values\n - NOT_IN: Filter Operator\n\nSpecifies that query result excludes filter values",
            "title": "Filter Operator",
            "enum": [
                "IN",
                "NOT_IN"
            ],
            "default": "IN",
            "x-displayname": "Filter Operator",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.FilterOperator"
        },
        "commonFormatType": {
            "type": "string",
            "description": "Format Type defines the format type for each fields.\n\n - FORMAT_TYPE_NONE: None\n\nNo format\n - INLINE: Inline\n\nKey value to be displayed in inline format\n - BOLD: Bold\n\nValue to be displayed in bold format\n - REVERSE_KEY_VALUE_ORDER: ReverseKeyValueOrder\n\nKey value to be displayed in Reverse Key Value Order format",
            "title": "FormatType",
            "enum": [
                "FORMAT_TYPE_NONE",
                "INLINE",
                "BOLD",
                "REVERSE_KEY_VALUE_ORDER"
            ],
            "default": "FORMAT_TYPE_NONE",
            "x-displayname": "Format Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.FormatType"
        },
        "commonGenericLink": {
            "type": "object",
            "description": "Generic link can have external link with full url",
            "title": "GenericLink",
            "x-displayname": "Generic Link",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.GenericLink",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key will present a placeholder in a text field to insert the link.\n For example: To view these events go to the ${{link:db_link}}.\n\nExample: - \"db_link\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "key",
                    "x-displayname": "Key",
                    "x-ves-example": "db_link",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "title": {
                    "type": "string",
                    "description": " Title for the link\n\nExample: - \"Security Analytics lb1\"-",
                    "title": "title",
                    "x-displayname": "Title",
                    "x-ves-example": "Security Analytics lb1"
                },
                "url": {
                    "type": "string",
                    "description": " Full url\n\nExample: - \"https://datatracker.ietf.org/doc/html/rfc3986\"-",
                    "title": "url",
                    "x-displayname": "URL",
                    "x-ves-example": "https://datatracker.ietf.org/doc/html/rfc3986"
                }
            }
        },
        "commonGenericResponse": {
            "type": "object",
            "description": "Generic Response",
            "title": "Generic Response",
            "x-displayname": "Generic Response",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.GenericResponse",
            "properties": {
                "error": {
                    "description": " Error(if any) while processing the query",
                    "title": "error",
                    "$ref": "#/definitions/schemaErrorType",
                    "x-displayname": "Error"
                },
                "is_error": {
                    "type": "boolean",
                    "description": "\n\nExample: - \"true\"-",
                    "title": "is_error",
                    "format": "boolean",
                    "x-displayname": "is_error",
                    "x-ves-example": "true"
                },
                "summary": {
                    "type": "string",
                    "description": " \n\nExample: - \"Query not supported\"-",
                    "title": "Summary",
                    "x-displayname": "Summary",
                    "x-ves-example": "Query not supported"
                }
            }
        },
        "commonLink": {
            "type": "object",
            "description": "Link for a page",
            "title": "Link",
            "x-displayname": "Link",
            "x-ves-oneof-field-link_type": "[\"dashboard_link\",\"generic_link\"]",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.Link",
            "properties": {
                "dashboard_link": {
                    "description": "Exclusive with [generic_link]\n Dashboard link will present common dashboard fields like type, namespace, object, dateFilter, logFilter",
                    "title": "dashboard_link",
                    "$ref": "#/definitions/commonDashboardLink",
                    "x-displayname": "Dashboard Link"
                },
                "generic_link": {
                    "description": "Exclusive with [dashboard_link]\n Generic link can have external link with full url",
                    "title": "generic_link",
                    "$ref": "#/definitions/commonGenericLink",
                    "x-displayname": "Generic Link"
                }
            }
        },
        "commonLogFilter": {
            "type": "object",
            "description": "Log filter for filter query",
            "title": "LogFilter",
            "x-displayname": "Log Filter",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.common.LogFilter",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key to be presented in the filter\n\nExample: - \"attack_types.name\"-",
                    "title": "key",
                    "x-displayname": "Key",
                    "x-ves-example": "attack_types.name"
                },
                "op": {
                    "description": " Operator for query filter\n\nExample: - \"IN\"-",
                    "title": "op",
                    "$ref": "#/definitions/commonFilterOperator",
                    "x-displayname": "Operator",
                    "x-ves-example": "IN"
                },
                "values": {
                    "type": "array",
                    "description": " Values to be presented in the filter\n\nExample: - \"ATTACK_TYPE_CROSS_SITE_SCRIPTING\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Values",
                    "x-ves-example": "ATTACK_TYPE_CROSS_SITE_SCRIPTING",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "commonWidgetType": {
            "type": "string",
            "description": "Widget Type defines the data type for widget.\n\n - WIDGET_TYPE_NONE: None\n\nNone type\n - TWO_VALUE: two_value\n\nTwo Value type widget\n - DISTRIBUTION_CHART: distribution_chart\n\nDistribution Chart type widget\n - TABLE: table\n\nTable type widget\n - LIST: list\n\nList type widget\n - GRID: grid\n\nGrid type widget\n - PIE: pie\n\npie type widget",
            "title": "WidgetType",
            "enum": [
                "WIDGET_TYPE_NONE",
                "TWO_VALUE",
                "DISTRIBUTION_CHART",
                "TABLE",
                "LIST",
                "GRID",
                "PIE"
            ],
            "default": "WIDGET_TYPE_NONE",
            "x-displayname": "Widget Type",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.common.WidgetType"
        },
        "explain_log_recordAccuracy": {
            "type": "string",
            "description": "Specifies accuracy of the signature\n\n - ACCURACY_NONE: None\n\nNo accuracy\n - ACCURACY_LOW: Low\n\nSpecifies low accuracy of the signature\n - ACCURACY_MEDIUM: Medium\n\nSpecifies medium accuracy of the signature\n - ACCURACY_HIGH: High\n\nSpecifies high accuracy of the signature",
            "title": "Accuracy",
            "enum": [
                "ACCURACY_NONE",
                "ACCURACY_LOW",
                "ACCURACY_MEDIUM",
                "ACCURACY_HIGH"
            ],
            "default": "ACCURACY_NONE",
            "x-displayname": "Accuracy",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.explain_log_record.Accuracy"
        },
        "explain_log_recordBot": {
            "type": "object",
            "description": "Bot details",
            "title": "Bot",
            "x-displayname": "Bot",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.Bot",
            "properties": {
                "classification": {
                    "type": "string",
                    "description": " Bot classification\n\nExample: - \"suspicious\"-",
                    "title": "classification",
                    "x-displayname": "Classification",
                    "x-ves-example": "suspicious"
                },
                "name": {
                    "type": "string",
                    "description": " Bot name\n\nExample: - \"curl\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "curl"
                },
                "type": {
                    "type": "string",
                    "description": " Bot type\n\nExample: - \"HTTP Library\"-",
                    "title": "name",
                    "x-displayname": "Type",
                    "x-ves-example": "HTTP Library"
                }
            }
        },
        "explain_log_recordBotDefenseEventDetails": {
            "type": "object",
            "description": "Bot Defense security events details",
            "title": "BotDefenseEventDetails",
            "x-displayname": "Bot Defense Event Details",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.BotDefenseEventDetails",
            "properties": {
                "action": {
                    "description": " Event action\n\nExample: - \"Block\"-",
                    "title": "action",
                    "$ref": "#/definitions/ai_assistantexplain_log_recordAction",
                    "x-displayname": "Action",
                    "x-ves-example": "Block"
                },
                "automation_type": {
                    "type": "string",
                    "description": " Bot automation type\n\nExample: - \"Token Missing\"-",
                    "title": "automation_type",
                    "x-displayname": "Automation type",
                    "x-ves-example": "Token Missing"
                },
                "bot_type": {
                    "type": "string",
                    "description": " Bot type\n\nExample: - \"MALICIOUS\"-",
                    "title": "bot_type",
                    "x-displayname": "Bot type",
                    "x-ves-example": "MALICIOUS"
                },
                "method": {
                    "type": "string",
                    "description": " Method of the request\n\nExample: - \"GET\"-",
                    "title": "method",
                    "x-displayname": "Method",
                    "x-ves-example": "GET"
                },
                "request_path": {
                    "type": "string",
                    "description": " Request path\n\nExample: - \"/api/support/cases/case1\"-",
                    "title": "request_path",
                    "x-displayname": "Request Path",
                    "x-ves-example": "/api/support/cases/case1"
                }
            }
        },
        "explain_log_recordEnforcementMode": {
            "type": "string",
            "description": "Enforcement mode of WAF\n\n - ENFORCEMENT_NONE: None\n\nNo enforcement\n - MONITORING: Monitoring\n\nMonitoring mode of waf\n - BLOCKING: Blocking\n\nBlocking mode of waf",
            "title": "EnforcementMode",
            "enum": [
                "ENFORCEMENT_NONE",
                "MONITORING",
                "BLOCKING"
            ],
            "default": "ENFORCEMENT_NONE",
            "x-displayname": "Enforcement Mode",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.explain_log_record.EnforcementMode"
        },
        "explain_log_recordExplainLogRecordResponse": {
            "type": "object",
            "description": "Explain log response",
            "title": "ExplainLogRecordResponse",
            "x-displayname": "Explain Log Record Response",
            "x-ves-oneof-field-details": "[\"bot_defense_event_details\",\"request_details\",\"svc_policy_event_details\",\"waf_event_details\"]",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.ExplainLogRecordResponse",
            "properties": {
                "actions": {
                    "type": "string",
                    "description": " Follow-up actions\n\nExample: - \"If you think that this is a false positive you can create exclusion rule..\"-",
                    "title": "actions",
                    "x-displayname": "Actions",
                    "x-ves-example": "If you think that this is a false positive you can create exclusion rule.."
                },
                "analysis": {
                    "type": "string",
                    "description": " Log analysis\n\nExample: - \"The request was blocked because Null in request violation was detected\"-",
                    "title": "analysis",
                    "x-displayname": "Analysis",
                    "x-ves-example": "The request was blocked because Null in request violation was detected"
                },
                "bot_defense_event_details": {
                    "description": "Exclusive with [request_details svc_policy_event_details waf_event_details]\n Bot Defense event details",
                    "title": "BotDefenseEventDetails",
                    "$ref": "#/definitions/explain_log_recordBotDefenseEventDetails",
                    "x-displayname": "Bot Defense event details"
                },
                "request_details": {
                    "description": "Exclusive with [bot_defense_event_details svc_policy_event_details waf_event_details]\n Request details",
                    "title": "RequestDetails",
                    "$ref": "#/definitions/explain_log_recordRequestDetails",
                    "x-displayname": "Requets Details"
                },
                "summary": {
                    "type": "string",
                    "description": " Log summary\n\nExample: - \"Request Id 12345 refers to a WAF security event for an HTTP request that was blocked\"-",
                    "title": "summary",
                    "x-displayname": "Summary",
                    "x-ves-example": "Request Id 12345 refers to a WAF security event for an HTTP request that was blocked"
                },
                "svc_policy_event_details": {
                    "description": "Exclusive with [bot_defense_event_details request_details waf_event_details]\n Service Policy event details",
                    "title": "SvcPolicyEventDetails",
                    "$ref": "#/definitions/explain_log_recordSvcPolicyEventDetails",
                    "x-displayname": "Service Policy event details"
                },
                "waf_event_details": {
                    "description": "Exclusive with [bot_defense_event_details request_details svc_policy_event_details]\n WAF event details",
                    "title": "WAFEventDetails",
                    "$ref": "#/definitions/explain_log_recordWAFEventDetails",
                    "x-displayname": "WAF event details"
                }
            }
        },
        "explain_log_recordIPReputation": {
            "type": "string",
            "description": "Specifies IP risk/trustworthiness\n\n - IP_REPUTATION_NONE: None\n\nNo IP reputation\n - IP_REPUTATION_LOW: Low\n\nSpecifies low IP risk/trustworthiness\n - IP_REPUTATION_HIGH: High\n\nSpecifies high IP risk/trustworthiness",
            "title": "IPReputation",
            "enum": [
                "IP_REPUTATION_NONE",
                "IP_REPUTATION_LOW",
                "IP_REPUTATION_HIGH"
            ],
            "default": "IP_REPUTATION_NONE",
            "x-displayname": "IP Reputation",
            "x-ves-proto-enum": "ves.io.schema.ai_assistant.explain_log_record.IPReputation"
        },
        "explain_log_recordRequestDetails": {
            "type": "object",
            "description": "Request details",
            "title": "RequestDetails",
            "x-displayname": "Request Details",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.RequestDetails",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": " domain\n\nExample: - \"example.com\"-",
                    "title": "domain",
                    "x-displayname": "domain",
                    "x-ves-example": "example.com"
                },
                "rsp_code": {
                    "type": "integer",
                    "description": " rsp_code\n\nExample: - \"200\"-",
                    "title": "rsp_code",
                    "format": "int64",
                    "x-displayname": "Response Code",
                    "x-ves-example": "200"
                },
                "rsp_code_details": {
                    "type": "string",
                    "description": " rsp_code_details\n\nExample: - \"via upstream\"-",
                    "title": "rsp_code_details",
                    "x-displayname": "Response Code Details",
                    "x-ves-example": "via upstream"
                },
                "upstream_protocol_error_reason": {
                    "type": "string",
                    "description": " upstream_protocol_error_reason\n\nExample: - \"headers_count_exceeds_limit\"-",
                    "title": "upstream_protocol_error_reason",
                    "x-displayname": "Upstream Protocol Error Reason",
                    "x-ves-example": "headers_count_exceeds_limit"
                }
            }
        },
        "explain_log_recordSignature": {
            "type": "object",
            "description": "Signature details",
            "title": "Signature",
            "x-displayname": "Signature",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.Signature",
            "properties": {
                "accuracy": {
                    "description": " Accuracy of the signature\n\nExample: - \"Medium\"-",
                    "title": "accuracy",
                    "$ref": "#/definitions/explain_log_recordAccuracy",
                    "x-displayname": "Accuracy",
                    "x-ves-example": "Medium"
                },
                "attack_type": {
                    "type": "string",
                    "description": " Attack type of the signature\n\nExample: - \"Command Execution\"-",
                    "title": "attack_type",
                    "x-displayname": "Attack Type",
                    "x-ves-example": "Command Execution"
                },
                "context": {
                    "type": "string",
                    "description": " Context of the signature\n\nExample: - \"parameter\"-",
                    "title": "context",
                    "x-displayname": "Context",
                    "x-ves-example": "parameter"
                },
                "id": {
                    "type": "string",
                    "description": " Signature ID\n\nExample: - \"200013569\"-",
                    "title": "id",
                    "x-displayname": "Signature ID",
                    "x-ves-example": "200013569"
                },
                "matching_info": {
                    "type": "string",
                    "description": " Matching info\n\nExample: - \"Matched 7 chars on offset 6 against valueToken\"-",
                    "title": "matching_info",
                    "x-displayname": "Matching Info",
                    "x-ves-example": "Matched 7 chars on offset 6 against value: Token"
                },
                "name": {
                    "type": "string",
                    "description": " Signature name\n\nExample: - \"shell command processor\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "shell command processor"
                },
                "state": {
                    "type": "string",
                    "description": " State of the signature, can be enabled, suppressed and etc\n\nExample: - \"Enabled\"-",
                    "title": "state",
                    "x-displayname": "State",
                    "x-ves-example": "Enabled"
                }
            }
        },
        "explain_log_recordSvcPolicyEventDetails": {
            "type": "object",
            "description": "Service policy security events details",
            "title": "SvcPolicyEventDetails",
            "x-displayname": "Service Policy Event Details",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.SvcPolicyEventDetails",
            "properties": {
                "action": {
                    "description": " Event action\n\nExample: - \"Block\"-",
                    "title": "action",
                    "$ref": "#/definitions/ai_assistantexplain_log_recordAction",
                    "x-displayname": "Action",
                    "x-ves-example": "Block"
                },
                "ip_risk": {
                    "description": " IP risk\n\nExample: - \"HIGH\"-",
                    "title": "ip risk",
                    "$ref": "#/definitions/explain_log_recordIPReputation",
                    "x-displayname": "IP risk",
                    "x-ves-example": "HIGH"
                },
                "ip_threat_categories": {
                    "type": "array",
                    "description": " IP threat categories\n\nExample: - \"SPAM_SOURCES,PHISHING\"-",
                    "title": "ip threat categories",
                    "items": {
                        "$ref": "#/definitions/policyIPThreatCategory"
                    },
                    "x-displayname": "IP threat categories",
                    "x-ves-example": "SPAM_SOURCES,PHISHING"
                },
                "ip_trustworthiness": {
                    "description": " IP trustworthiness\n\nExample: - \"LOW\"-",
                    "title": "ip trustworthiness",
                    "$ref": "#/definitions/explain_log_recordIPReputation",
                    "x-displayname": "IP trustworthiness",
                    "x-ves-example": "LOW"
                },
                "policy": {
                    "type": "string",
                    "description": " Policy name\n\nExample: - \"policy-1\"-",
                    "title": "policy",
                    "x-displayname": "Policy",
                    "x-ves-example": "policy-1"
                },
                "policy_namespace": {
                    "type": "string",
                    "description": " Policy namespace\n\nExample: - \"data-path\"-",
                    "title": "policy namespace",
                    "x-displayname": "Policy namespace",
                    "x-ves-example": "data-path"
                },
                "policy_rule": {
                    "type": "string",
                    "description": " Policy rule name\n\nExample: - \"policy-rule-1\"-",
                    "title": "policy rule",
                    "x-displayname": "Policy rule",
                    "x-ves-example": "policy-rule-1"
                }
            }
        },
        "explain_log_recordThreatCampaign": {
            "type": "object",
            "description": "Threat campaign details",
            "title": "ThreatCampaign",
            "x-displayname": "Threat Campaign",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.ThreatCampaign",
            "properties": {
                "attack_type": {
                    "type": "string",
                    "description": " Attack type of threat campaign\n\nExample: - \"Command Execution\"-",
                    "title": "attack_type",
                    "x-displayname": "Attack Type",
                    "x-ves-example": "Command Execution"
                },
                "id": {
                    "type": "string",
                    "description": " ThreatCampaign ID\n\nExample: - \"cmpe1ab3d4feddb3c691bc68201d253be66\"-",
                    "title": "id",
                    "x-displayname": "ThreatCampaign ID",
                    "x-ves-example": "cmpe1ab3d4feddb3c691bc68201d253be66"
                },
                "name": {
                    "type": "string",
                    "description": " ThreatCampaign name\n\nExample: - \"Nette Framework Remote Code Execution - oshi\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "Nette Framework Remote Code Execution - oshi"
                }
            }
        },
        "explain_log_recordViolation": {
            "type": "object",
            "description": "Violation details",
            "title": "Violation",
            "x-displayname": "Violation",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.Violation",
            "properties": {
                "attack_type": {
                    "type": "string",
                    "description": " Attack type of the violation\n\nExample: - \"Command Execution\"-",
                    "title": "attack_type",
                    "x-displayname": "Attack Type",
                    "x-ves-example": "Command Execution"
                },
                "context": {
                    "type": "string",
                    "description": " Context of the violation\n\nExample: - \"parameter\"-",
                    "title": "context",
                    "x-displayname": "Context",
                    "x-ves-example": "parameter"
                },
                "matching_info": {
                    "type": "string",
                    "description": " Matching info\n\nExample: - \"File extension was dat\"-",
                    "title": "matching_info",
                    "x-displayname": "Matching Info",
                    "x-ves-example": "File extension was dat"
                },
                "name": {
                    "type": "string",
                    "description": " Violation name\n\nExample: - \"Illegal filetype\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "Illegal filetype"
                },
                "state": {
                    "type": "string",
                    "description": " State of the violation, can be enabled, suppressed and etc\n\nExample: - \"Enabled\"-",
                    "title": "state",
                    "x-displayname": "State",
                    "x-ves-example": "Enabled"
                }
            }
        },
        "explain_log_recordWAFEventDetails": {
            "type": "object",
            "description": "WAF security events details",
            "title": "WAFEventDetails",
            "x-displayname": "WAF Event Details",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.explain_log_record.WAFEventDetails",
            "properties": {
                "action": {
                    "description": " Event action\n\nExample: - \"Block\"-",
                    "title": "action",
                    "$ref": "#/definitions/ai_assistantexplain_log_recordAction",
                    "x-displayname": "Action",
                    "x-ves-example": "Block"
                },
                "app_firewall": {
                    "type": "string",
                    "description": " App Firewall name\n\nExample: - \"app-firewall\"-",
                    "title": "app_firewall",
                    "x-displayname": "App Firewall",
                    "x-ves-example": "app-firewall"
                },
                "bot": {
                    "description": " Bot that were detected in the request",
                    "title": "bots",
                    "$ref": "#/definitions/explain_log_recordBot",
                    "x-displayname": "Bot"
                },
                "enforcement_mode": {
                    "description": " Enforcement mode\n\nExample: - \"Monitoring\"-",
                    "title": "enforcement_mode",
                    "$ref": "#/definitions/explain_log_recordEnforcementMode",
                    "x-displayname": "Enforcement Mode",
                    "x-ves-example": "Monitoring"
                },
                "signatures": {
                    "type": "array",
                    "description": " The signatures that were detected in the request",
                    "title": "signatures",
                    "items": {
                        "$ref": "#/definitions/explain_log_recordSignature"
                    },
                    "x-displayname": "Signatures"
                },
                "threat_campaigns": {
                    "type": "array",
                    "description": " Threat campaigns that were detected in the request",
                    "title": "threat_campaigns",
                    "items": {
                        "$ref": "#/definitions/explain_log_recordThreatCampaign"
                    },
                    "x-displayname": "Threat Campaign"
                },
                "violations": {
                    "type": "array",
                    "description": " The violations that were detected in the request",
                    "title": "violations",
                    "items": {
                        "$ref": "#/definitions/explain_log_recordViolation"
                    },
                    "x-displayname": "Violations"
                }
            }
        },
        "gen_dashboard_filterGenDashboardFilterResponse": {
            "type": "object",
            "description": "Generate dashboard filter response",
            "title": "GenDashboardFilterResponse",
            "x-displayname": "Generate Dashboard Filter",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.gen_dashboard_filter.GenDashboardFilterResponse",
            "properties": {
                "actions": {
                    "type": "string",
                    "description": " Follow-up actions\n\nExample: - \"To view these events go to the ${{link:dashboard_link}} page\"-",
                    "title": "actions",
                    "x-displayname": "Actions",
                    "x-ves-example": "To view these events go to the ${{link:dashboard_link}} page"
                },
                "links": {
                    "type": "array",
                    "description": " Links that will be presented to the user",
                    "title": "links",
                    "items": {
                        "$ref": "#/definitions/commonLink"
                    },
                    "x-displayname": "Links"
                },
                "summary": {
                    "type": "string",
                    "description": " Events summary\n\nExample: - \"135 events matching your query were found\"-",
                    "title": "summary",
                    "x-displayname": "Summary",
                    "x-ves-example": "135 events matching your query were found"
                }
            }
        },
        "policyIPThreatCategory": {
            "type": "string",
            "description": "The IP threat categories to use when a policy based IP threat category is configured.\n\n - SPAM_SOURCES: SPAM_SOURCES\n\n - WINDOWS_EXPLOITS: WINDOWS_EXPLOITS\n\n - WEB_ATTACKS: WEB_ATTACKS\n\n - BOTNETS: BOTNETS\n\n - SCANNERS: SCANNERS\n\n - REPUTATION: REPUTATION\n\n - PHISHING: PHISHING\n\n - PROXY: PROXY\n\n - MOBILE_THREATS: MOBILE_THREATS\n\n - TOR_PROXY: TOR_PROXY\n\n - DENIAL_OF_SERVICE: DENIAL_OF_SERVICE\n\n - NETWORK: NETWORK\n",
            "title": "IP Threat Category",
            "enum": [
                "SPAM_SOURCES",
                "WINDOWS_EXPLOITS",
                "WEB_ATTACKS",
                "BOTNETS",
                "SCANNERS",
                "REPUTATION",
                "PHISHING",
                "PROXY",
                "MOBILE_THREATS",
                "TOR_PROXY",
                "DENIAL_OF_SERVICE",
                "NETWORK"
            ],
            "default": "SPAM_SOURCES",
            "x-displayname": "IP Threat Category",
            "x-ves-proto-enum": "ves.io.schema.policy.IPThreatCategory"
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaErrorCode": {
            "type": "string",
            "description": "Union of all possible error-codes from system\n\n - EOK: No error\n - EPERMS: Permissions error\n - EBADINPUT: Input is not correct\n - ENOTFOUND: Not found\n - EEXISTS: Already exists\n - EUNKNOWN: Unknown/catchall error\n - ESERIALIZE: Error in serializing/de-serializing\n - EINTERNAL: Server error\n - EPARTIAL: Partial error",
            "title": "ErrorCode",
            "enum": [
                "EOK",
                "EPERMS",
                "EBADINPUT",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN",
                "ESERIALIZE",
                "EINTERNAL",
                "EPARTIAL"
            ],
            "default": "EOK",
            "x-displayname": "Error Code",
            "x-ves-proto-enum": "ves.io.schema.ErrorCode"
        },
        "schemaErrorType": {
            "type": "object",
            "description": "Information about a error in API operation",
            "title": "ErrorType",
            "x-displayname": "Error Type",
            "x-ves-proto-message": "ves.io.schema.ErrorType",
            "properties": {
                "code": {
                    "description": " A simple general code by category",
                    "title": "code",
                    "$ref": "#/definitions/schemaErrorCode",
                    "x-displayname": "Code"
                },
                "error_obj": {
                    "description": " A structured error object for machine parsing",
                    "title": "error_obj",
                    "$ref": "#/definitions/protobufAny",
                    "x-displayname": "Error Object"
                },
                "message": {
                    "type": "string",
                    "description": " A human readable string of the error\n\nExample: - \"value\"-",
                    "title": "message",
                    "x-displayname": "Message",
                    "x-ves-example": "value"
                }
            }
        },
        "site_analysisAnalysisAndAction": {
            "type": "object",
            "description": "Analysis and Action",
            "title": "Analysis and Action",
            "x-displayname": "Analysis and Action",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.site_analysis.AnalysisAndAction",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "\n\nExample: - \"Retry provisioning the site\"-",
                    "title": "action",
                    "x-displayname": "Action",
                    "x-ves-example": "Retry provisioning the site"
                },
                "analysis": {
                    "type": "string",
                    "description": "\n\nExample: - \"siteA is in provisioning state due to connectivity issues\"-",
                    "title": "analysis",
                    "x-displayname": "Analysis",
                    "x-ves-example": "siteA is in provisioning state due to connectivity issues"
                }
            }
        },
        "site_analysisSiteAnalysisResponse": {
            "type": "object",
            "description": "Site analysis response",
            "title": "Site Analysis Response",
            "x-displayname": "Site Analysis Response",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.site_analysis.SiteAnalysisResponse",
            "properties": {
                "analysis_and_actions": {
                    "type": "array",
                    "description": " Site Status Analysis and Actions list\n\nExample: - \"The site failed because it was stuck in provisioning state. Retry provisioning the site\"-",
                    "title": "analysis and action list",
                    "items": {
                        "$ref": "#/definitions/site_analysisAnalysisAndAction"
                    },
                    "x-displayname": "Analysis and Action list",
                    "x-ves-example": "The site failed because it was stuck in provisioning state. Retry provisioning the site"
                },
                "external_link": {
                    "description": " External doc link, that will be presented to the user",
                    "title": "external doc link",
                    "$ref": "#/definitions/commonLink",
                    "x-displayname": "External Link"
                },
                "internal_link": {
                    "description": " Internal Link like dashboard link, that will be presented to the user",
                    "title": "internal link",
                    "$ref": "#/definitions/commonLink",
                    "x-displayname": "Internal Link"
                },
                "summary": {
                    "type": "string",
                    "description": "\n\nExample: - \"This site analysis response provides status of sites.\"-",
                    "title": "summary",
                    "x-displayname": "Summary",
                    "x-ves-example": "This site analysis response provides status of sites."
                }
            }
        },
        "widgetCell": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.widget.Cell",
            "properties": {
                "link": {
                    "description": " Link for the field that will be presented to the user",
                    "title": "Link",
                    "$ref": "#/definitions/commonLink",
                    "x-displayname": "link"
                },
                "value": {
                    "type": "string",
                    "description": "\n\nExample: - \"site1\"-",
                    "title": "Value",
                    "x-displayname": "value",
                    "x-ves-example": "site1"
                }
            }
        },
        "widgetRow": {
            "type": "object",
            "description": "Contains the value for each rows of table",
            "title": "Row",
            "x-displayname": "Table Rows",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.widget.Row",
            "properties": {
                "cells": {
                    "type": "array",
                    "description": "\n\nExample: - \"Site Name:\"site-1\"-",
                    "title": "Values",
                    "items": {
                        "$ref": "#/definitions/widgetCell"
                    },
                    "x-displayname": "Values",
                    "x-ves-example": "Site Name:\"site-1"
                }
            }
        },
        "widgetTable": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.widget.Table",
            "properties": {
                "field_properties": {
                    "type": "array",
                    "description": " Lists the name of the field \u0026 corresponding properties\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Field Properties\nx-displayName: \"Field Properties\"\nLists the name of the field \u0026 corresponding properties",
                    "items": {
                        "$ref": "#/definitions/commonFieldProperties"
                    },
                    "x-displayname": "Field Properties",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "rows": {
                    "type": "array",
                    "description": " List of table rows\n\nExample: - \"Entries for each rows\"-",
                    "title": "rows",
                    "items": {
                        "$ref": "#/definitions/widgetRow"
                    },
                    "x-displayname": "Row",
                    "x-ves-example": "Entries for each rows"
                },
                "widget_type": {
                    "description": " Type of widget\n\nExample: - \"Table, Grid\"-",
                    "title": "widget_type",
                    "$ref": "#/definitions/commonWidgetType",
                    "x-displayname": "widget_type",
                    "x-ves-example": "Table, Grid"
                }
            }
        },
        "widgetWidgetResponse": {
            "type": "object",
            "description": "Widget response",
            "title": "Widget Response",
            "x-displayname": "Widget Response",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.widget.WidgetResponse",
            "properties": {
                "item_links": {
                    "type": "array",
                    "description": " Links that will be presented to the user",
                    "title": "item_links",
                    "items": {
                        "$ref": "#/definitions/commonLink"
                    },
                    "x-displayname": "Links"
                },
                "items": {
                    "type": "array",
                    "description": " Response will have different types of widgets",
                    "title": "Items",
                    "items": {
                        "$ref": "#/definitions/widgetWidgetView"
                    },
                    "x-displayname": "Widget View "
                },
                "summary": {
                    "type": "string",
                    "description": "\n\nExample: - \"This is summary of widget response\"-",
                    "title": "summary",
                    "x-displayname": "Summary",
                    "x-ves-example": "This is summary of widget response"
                }
            }
        },
        "widgetWidgetView": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.ai_assistant.widget.WidgetView",
            "properties": {
                "item": {
                    "description": " List of table rows\n\nExample: - \"Entries for each rows \u0026 properties of table\"-",
                    "title": "table",
                    "$ref": "#/definitions/widgetTable",
                    "x-displayname": "table",
                    "x-ves-example": "Entries for each rows \u0026 properties of table"
                }
            }
        }
    },
    "x-displayname": "AI Assistant APIs",
    "x-ves-proto-file": "ves.io/schema/ai_assistant/public_customapi.proto"
}`

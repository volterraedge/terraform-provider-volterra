// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_addon_services.proto

package vesenv

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AddonServiceChoice enumerates all the well-known addon_service.Objects in a VES environment
type AddonServiceChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*AddonServiceChoice_F5XcBase
	//	*AddonServiceChoice_F5XcConsoleBasic
	//	*AddonServiceChoice_F5XcConsoleStandard
	//	*AddonServiceChoice_F5XcConsoleAdvanced
	//	*AddonServiceChoice_F5XcChildManagementStandard
	//	*AddonServiceChoice_F5XcSupportOperations
	//	*AddonServiceChoice_F5XcSupportManagementStandard
	//	*AddonServiceChoice_VesIoVolterraDefault
	//	*AddonServiceChoice_F5XcDelegatedAccessStandard
	//	*AddonServiceChoice_ShapeBot
	//	*AddonServiceChoice_ShapeRecognize
	//	*AddonServiceChoice_AidataBfdp
	//	*AddonServiceChoice_F5XcContentDeliveryNetworkStandard
	//	*AddonServiceChoice_NginxMgmtSuite
	//	*AddonServiceChoice_F5XcSyntheticMonitoringStandard
	//	*AddonServiceChoice_Safeap
	//	*AddonServiceChoice_ClientSideDefense
	//	*AddonServiceChoice_F5XcBotDefenseAdvanced
	//	*AddonServiceChoice_F5XcBotDefensePremium
	//	*AddonServiceChoice_F5XcBotDefenseBasic
	//	*AddonServiceChoice_F5XcBigIpApm
	//	*AddonServiceChoice_F5XcMobileIntegrator
	//	*AddonServiceChoice_F5XcFlowCollection
	//	*AddonServiceChoice_F5XcDataIntelligenceStandard
	//	*AddonServiceChoice_F5XcRoutedDdosBasic
	//	*AddonServiceChoice_F5XcWaapAdvanced
	//	*AddonServiceChoice_F5XcSecuremeshAdvanced
	//	*AddonServiceChoice_NginxOne
	//	*AddonServiceChoice_F5XcApplicationTrafficInsightBasic
	//	*AddonServiceChoice_F5XcSecuremeshStandard
	//	*AddonServiceChoice_F5XcWaapStandard
	//	*AddonServiceChoice_F5XcAppstackStandard
	//	*AddonServiceChoice_F5XcSiteManagementStandard
	//	*AddonServiceChoice_F5XcRoutedDdosStandard
	//	*AddonServiceChoice_F5XcDnsStandard
	//	*AddonServiceChoice_F5XcApplicationTrafficInsightStandard
	//	*AddonServiceChoice_F5XcBotDefenseStandard
	//	*AddonServiceChoice_F5XcWebAppScanningStandard
	//	*AddonServiceChoice_F5XcAiAssistantStandard
	//	*AddonServiceChoice_F5XcFlowAnomalyDetectionStandard
	//	*AddonServiceChoice_F5XcUniversalZtnaStandard
	//	*AddonServiceChoice_F5XcIpv6Standard
	//	*AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice
	//	*AddonServiceChoice_F5XcNone
	//	*AddonServiceChoice_F5XcScim
	//	*AddonServiceChoice_F5XcClearview
	//	*AddonServiceChoice_F5XcBigipUtilitiesStandard
	Choice isAddonServiceChoice_Choice `protobuf_oneof:"choice"`
}

func (m *AddonServiceChoice) Reset()      { *m = AddonServiceChoice{} }
func (*AddonServiceChoice) ProtoMessage() {}
func (*AddonServiceChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_24b1043c1548ccb0, []int{0}
}
func (m *AddonServiceChoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddonServiceChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddonServiceChoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddonServiceChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddonServiceChoice.Merge(m, src)
}
func (m *AddonServiceChoice) XXX_Size() int {
	return m.Size()
}
func (m *AddonServiceChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_AddonServiceChoice.DiscardUnknown(m)
}

var xxx_messageInfo_AddonServiceChoice proto.InternalMessageInfo

type isAddonServiceChoice_Choice interface {
	isAddonServiceChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AddonServiceChoice_F5XcBase struct {
	F5XcBase bool `protobuf:"varint,1,opt,name=f5xc_base,json=f5xcBase,proto3,oneof" json:"f5xc_base,omitempty"`
}
type AddonServiceChoice_F5XcConsoleBasic struct {
	F5XcConsoleBasic bool `protobuf:"varint,13,opt,name=f5xc_console_basic,json=f5xcConsoleBasic,proto3,oneof" json:"f5xc_console_basic,omitempty"`
}
type AddonServiceChoice_F5XcConsoleStandard struct {
	F5XcConsoleStandard bool `protobuf:"varint,14,opt,name=f5xc_console_standard,json=f5xcConsoleStandard,proto3,oneof" json:"f5xc_console_standard,omitempty"`
}
type AddonServiceChoice_F5XcConsoleAdvanced struct {
	F5XcConsoleAdvanced bool `protobuf:"varint,15,opt,name=f5xc_console_advanced,json=f5xcConsoleAdvanced,proto3,oneof" json:"f5xc_console_advanced,omitempty"`
}
type AddonServiceChoice_F5XcChildManagementStandard struct {
	F5XcChildManagementStandard bool `protobuf:"varint,135,opt,name=f5xc_child_management_standard,json=f5xcChildManagementStandard,proto3,oneof" json:"f5xc_child_management_standard,omitempty"`
}
type AddonServiceChoice_F5XcSupportOperations struct {
	F5XcSupportOperations bool `protobuf:"varint,136,opt,name=f5xc_support_operations,json=f5xcSupportOperations,proto3,oneof" json:"f5xc_support_operations,omitempty"`
}
type AddonServiceChoice_F5XcSupportManagementStandard struct {
	F5XcSupportManagementStandard bool `protobuf:"varint,5,opt,name=f5xc_support_management_standard,json=f5xcSupportManagementStandard,proto3,oneof" json:"f5xc_support_management_standard,omitempty"`
}
type AddonServiceChoice_VesIoVolterraDefault struct {
	VesIoVolterraDefault bool `protobuf:"varint,21,opt,name=ves_io_volterra_default,json=vesIoVolterraDefault,proto3,oneof" json:"ves_io_volterra_default,omitempty"`
}
type AddonServiceChoice_F5XcDelegatedAccessStandard struct {
	F5XcDelegatedAccessStandard bool `protobuf:"varint,22,opt,name=f5xc_delegated_access_standard,json=f5xcDelegatedAccessStandard,proto3,oneof" json:"f5xc_delegated_access_standard,omitempty"`
}
type AddonServiceChoice_ShapeBot struct {
	ShapeBot bool `protobuf:"varint,50,opt,name=shape_bot,json=shapeBot,proto3,oneof" json:"shape_bot,omitempty"`
}
type AddonServiceChoice_ShapeRecognize struct {
	ShapeRecognize bool `protobuf:"varint,51,opt,name=shape_recognize,json=shapeRecognize,proto3,oneof" json:"shape_recognize,omitempty"`
}
type AddonServiceChoice_AidataBfdp struct {
	AidataBfdp bool `protobuf:"varint,52,opt,name=aidata_bfdp,json=aidataBfdp,proto3,oneof" json:"aidata_bfdp,omitempty"`
}
type AddonServiceChoice_F5XcContentDeliveryNetworkStandard struct {
	F5XcContentDeliveryNetworkStandard bool `protobuf:"varint,139,opt,name=f5xc_content_delivery_network_standard,json=f5xcContentDeliveryNetworkStandard,proto3,oneof" json:"f5xc_content_delivery_network_standard,omitempty"`
}
type AddonServiceChoice_NginxMgmtSuite struct {
	NginxMgmtSuite bool `protobuf:"varint,54,opt,name=nginx_mgmt_suite,json=nginxMgmtSuite,proto3,oneof" json:"nginx_mgmt_suite,omitempty"`
}
type AddonServiceChoice_F5XcSyntheticMonitoringStandard struct {
	F5XcSyntheticMonitoringStandard bool `protobuf:"varint,142,opt,name=f5xc_synthetic_monitoring_standard,json=f5xcSyntheticMonitoringStandard,proto3,oneof" json:"f5xc_synthetic_monitoring_standard,omitempty"`
}
type AddonServiceChoice_Safeap struct {
	Safeap bool `protobuf:"varint,56,opt,name=safeap,proto3,oneof" json:"safeap,omitempty"`
}
type AddonServiceChoice_ClientSideDefense struct {
	ClientSideDefense bool `protobuf:"varint,58,opt,name=client_side_defense,json=clientSideDefense,proto3,oneof" json:"client_side_defense,omitempty"`
}
type AddonServiceChoice_F5XcBotDefenseAdvanced struct {
	F5XcBotDefenseAdvanced bool `protobuf:"varint,59,opt,name=f5xc_bot_defense_advanced,json=f5xcBotDefenseAdvanced,proto3,oneof" json:"f5xc_bot_defense_advanced,omitempty"`
}
type AddonServiceChoice_F5XcBotDefensePremium struct {
	F5XcBotDefensePremium bool `protobuf:"varint,60,opt,name=f5xc_bot_defense_premium,json=f5xcBotDefensePremium,proto3,oneof" json:"f5xc_bot_defense_premium,omitempty"`
}
type AddonServiceChoice_F5XcBotDefenseBasic struct {
	F5XcBotDefenseBasic bool `protobuf:"varint,61,opt,name=f5xc_bot_defense_basic,json=f5xcBotDefenseBasic,proto3,oneof" json:"f5xc_bot_defense_basic,omitempty"`
}
type AddonServiceChoice_F5XcBigIpApm struct {
	F5XcBigIpApm bool `protobuf:"varint,62,opt,name=f5xc_big_ip_apm,json=f5xcBigIpApm,proto3,oneof" json:"f5xc_big_ip_apm,omitempty"`
}
type AddonServiceChoice_F5XcMobileIntegrator struct {
	F5XcMobileIntegrator bool `protobuf:"varint,63,opt,name=f5xc_mobile_integrator,json=f5xcMobileIntegrator,proto3,oneof" json:"f5xc_mobile_integrator,omitempty"`
}
type AddonServiceChoice_F5XcFlowCollection struct {
	F5XcFlowCollection bool `protobuf:"varint,64,opt,name=f5xc_flow_collection,json=f5xcFlowCollection,proto3,oneof" json:"f5xc_flow_collection,omitempty"`
}
type AddonServiceChoice_F5XcDataIntelligenceStandard struct {
	F5XcDataIntelligenceStandard bool `protobuf:"varint,137,opt,name=f5xc_data_intelligence_standard,json=f5xcDataIntelligenceStandard,proto3,oneof" json:"f5xc_data_intelligence_standard,omitempty"`
}
type AddonServiceChoice_F5XcRoutedDdosBasic struct {
	F5XcRoutedDdosBasic bool `protobuf:"varint,106,opt,name=f5xc_routed_ddos_basic,json=f5xcRoutedDdosBasic,proto3,oneof" json:"f5xc_routed_ddos_basic,omitempty"`
}
type AddonServiceChoice_F5XcWaapAdvanced struct {
	F5XcWaapAdvanced bool `protobuf:"varint,111,opt,name=f5xc_waap_advanced,json=f5xcWaapAdvanced,proto3,oneof" json:"f5xc_waap_advanced,omitempty"`
}
type AddonServiceChoice_F5XcSecuremeshAdvanced struct {
	F5XcSecuremeshAdvanced bool `protobuf:"varint,115,opt,name=f5xc_securemesh_advanced,json=f5xcSecuremeshAdvanced,proto3,oneof" json:"f5xc_securemesh_advanced,omitempty"`
}
type AddonServiceChoice_NginxOne struct {
	NginxOne bool `protobuf:"varint,117,opt,name=nginx_one,json=nginxOne,proto3,oneof" json:"nginx_one,omitempty"`
}
type AddonServiceChoice_F5XcApplicationTrafficInsightBasic struct {
	F5XcApplicationTrafficInsightBasic bool `protobuf:"varint,118,opt,name=f5xc_application_traffic_insight_basic,json=f5xcApplicationTrafficInsightBasic,proto3,oneof" json:"f5xc_application_traffic_insight_basic,omitempty"`
}
type AddonServiceChoice_F5XcSecuremeshStandard struct {
	F5XcSecuremeshStandard bool `protobuf:"varint,120,opt,name=f5xc_securemesh_standard,json=f5xcSecuremeshStandard,proto3,oneof" json:"f5xc_securemesh_standard,omitempty"`
}
type AddonServiceChoice_F5XcWaapStandard struct {
	F5XcWaapStandard bool `protobuf:"varint,121,opt,name=f5xc_waap_standard,json=f5xcWaapStandard,proto3,oneof" json:"f5xc_waap_standard,omitempty"`
}
type AddonServiceChoice_F5XcAppstackStandard struct {
	F5XcAppstackStandard bool `protobuf:"varint,122,opt,name=f5xc_appstack_standard,json=f5xcAppstackStandard,proto3,oneof" json:"f5xc_appstack_standard,omitempty"`
}
type AddonServiceChoice_F5XcSiteManagementStandard struct {
	F5XcSiteManagementStandard bool `protobuf:"varint,123,opt,name=f5xc_site_management_standard,json=f5xcSiteManagementStandard,proto3,oneof" json:"f5xc_site_management_standard,omitempty"`
}
type AddonServiceChoice_F5XcRoutedDdosStandard struct {
	F5XcRoutedDdosStandard bool `protobuf:"varint,124,opt,name=f5xc_routed_ddos_standard,json=f5xcRoutedDdosStandard,proto3,oneof" json:"f5xc_routed_ddos_standard,omitempty"`
}
type AddonServiceChoice_F5XcDnsStandard struct {
	F5XcDnsStandard bool `protobuf:"varint,125,opt,name=f5xc_dns_standard,json=f5xcDnsStandard,proto3,oneof" json:"f5xc_dns_standard,omitempty"`
}
type AddonServiceChoice_F5XcApplicationTrafficInsightStandard struct {
	F5XcApplicationTrafficInsightStandard bool `protobuf:"varint,126,opt,name=f5xc_application_traffic_insight_standard,json=f5xcApplicationTrafficInsightStandard,proto3,oneof" json:"f5xc_application_traffic_insight_standard,omitempty"`
}
type AddonServiceChoice_F5XcBotDefenseStandard struct {
	F5XcBotDefenseStandard bool `protobuf:"varint,127,opt,name=f5xc_bot_defense_standard,json=f5xcBotDefenseStandard,proto3,oneof" json:"f5xc_bot_defense_standard,omitempty"`
}
type AddonServiceChoice_F5XcWebAppScanningStandard struct {
	F5XcWebAppScanningStandard bool `protobuf:"varint,128,opt,name=f5xc_web_app_scanning_standard,json=f5xcWebAppScanningStandard,proto3,oneof" json:"f5xc_web_app_scanning_standard,omitempty"`
}
type AddonServiceChoice_F5XcAiAssistantStandard struct {
	F5XcAiAssistantStandard bool `protobuf:"varint,129,opt,name=f5xc_ai_assistant_standard,json=f5xcAiAssistantStandard,proto3,oneof" json:"f5xc_ai_assistant_standard,omitempty"`
}
type AddonServiceChoice_F5XcFlowAnomalyDetectionStandard struct {
	F5XcFlowAnomalyDetectionStandard bool `protobuf:"varint,130,opt,name=f5xc_flow_anomaly_detection_standard,json=f5xcFlowAnomalyDetectionStandard,proto3,oneof" json:"f5xc_flow_anomaly_detection_standard,omitempty"`
}
type AddonServiceChoice_F5XcUniversalZtnaStandard struct {
	F5XcUniversalZtnaStandard bool `protobuf:"varint,131,opt,name=f5xc_universal_ztna_standard,json=f5xcUniversalZtnaStandard,proto3,oneof" json:"f5xc_universal_ztna_standard,omitempty"`
}
type AddonServiceChoice_F5XcIpv6Standard struct {
	F5XcIpv6Standard bool `protobuf:"varint,132,opt,name=f5xc_ipv6_standard,json=f5xcIpv6Standard,proto3,oneof" json:"f5xc_ipv6_standard,omitempty"`
}
type AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice struct {
	F5XcBotDefenseAdvancedSelfservice bool `protobuf:"varint,133,opt,name=f5xc_bot_defense_advanced_selfservice,json=f5xcBotDefenseAdvancedSelfservice,proto3,oneof" json:"f5xc_bot_defense_advanced_selfservice,omitempty"`
}
type AddonServiceChoice_F5XcNone struct {
	F5XcNone bool `protobuf:"varint,9999,opt,name=f5xc_none,json=f5xcNone,proto3,oneof" json:"f5xc_none,omitempty"`
}
type AddonServiceChoice_F5XcScim struct {
	F5XcScim bool `protobuf:"varint,134,opt,name=f5xc_scim,json=f5xcScim,proto3,oneof" json:"f5xc_scim,omitempty"`
}
type AddonServiceChoice_F5XcClearview struct {
	F5XcClearview bool `protobuf:"varint,138,opt,name=f5xc_clearview,json=f5xcClearview,proto3,oneof" json:"f5xc_clearview,omitempty"`
}
type AddonServiceChoice_F5XcBigipUtilitiesStandard struct {
	F5XcBigipUtilitiesStandard bool `protobuf:"varint,140,opt,name=f5xc_bigip_utilities_standard,json=f5xcBigipUtilitiesStandard,proto3,oneof" json:"f5xc_bigip_utilities_standard,omitempty"`
}

func (*AddonServiceChoice_F5XcBase) isAddonServiceChoice_Choice()                              {}
func (*AddonServiceChoice_F5XcConsoleBasic) isAddonServiceChoice_Choice()                      {}
func (*AddonServiceChoice_F5XcConsoleStandard) isAddonServiceChoice_Choice()                   {}
func (*AddonServiceChoice_F5XcConsoleAdvanced) isAddonServiceChoice_Choice()                   {}
func (*AddonServiceChoice_F5XcChildManagementStandard) isAddonServiceChoice_Choice()           {}
func (*AddonServiceChoice_F5XcSupportOperations) isAddonServiceChoice_Choice()                 {}
func (*AddonServiceChoice_F5XcSupportManagementStandard) isAddonServiceChoice_Choice()         {}
func (*AddonServiceChoice_VesIoVolterraDefault) isAddonServiceChoice_Choice()                  {}
func (*AddonServiceChoice_F5XcDelegatedAccessStandard) isAddonServiceChoice_Choice()           {}
func (*AddonServiceChoice_ShapeBot) isAddonServiceChoice_Choice()                              {}
func (*AddonServiceChoice_ShapeRecognize) isAddonServiceChoice_Choice()                        {}
func (*AddonServiceChoice_AidataBfdp) isAddonServiceChoice_Choice()                            {}
func (*AddonServiceChoice_F5XcContentDeliveryNetworkStandard) isAddonServiceChoice_Choice()    {}
func (*AddonServiceChoice_NginxMgmtSuite) isAddonServiceChoice_Choice()                        {}
func (*AddonServiceChoice_F5XcSyntheticMonitoringStandard) isAddonServiceChoice_Choice()       {}
func (*AddonServiceChoice_Safeap) isAddonServiceChoice_Choice()                                {}
func (*AddonServiceChoice_ClientSideDefense) isAddonServiceChoice_Choice()                     {}
func (*AddonServiceChoice_F5XcBotDefenseAdvanced) isAddonServiceChoice_Choice()                {}
func (*AddonServiceChoice_F5XcBotDefensePremium) isAddonServiceChoice_Choice()                 {}
func (*AddonServiceChoice_F5XcBotDefenseBasic) isAddonServiceChoice_Choice()                   {}
func (*AddonServiceChoice_F5XcBigIpApm) isAddonServiceChoice_Choice()                          {}
func (*AddonServiceChoice_F5XcMobileIntegrator) isAddonServiceChoice_Choice()                  {}
func (*AddonServiceChoice_F5XcFlowCollection) isAddonServiceChoice_Choice()                    {}
func (*AddonServiceChoice_F5XcDataIntelligenceStandard) isAddonServiceChoice_Choice()          {}
func (*AddonServiceChoice_F5XcRoutedDdosBasic) isAddonServiceChoice_Choice()                   {}
func (*AddonServiceChoice_F5XcWaapAdvanced) isAddonServiceChoice_Choice()                      {}
func (*AddonServiceChoice_F5XcSecuremeshAdvanced) isAddonServiceChoice_Choice()                {}
func (*AddonServiceChoice_NginxOne) isAddonServiceChoice_Choice()                              {}
func (*AddonServiceChoice_F5XcApplicationTrafficInsightBasic) isAddonServiceChoice_Choice()    {}
func (*AddonServiceChoice_F5XcSecuremeshStandard) isAddonServiceChoice_Choice()                {}
func (*AddonServiceChoice_F5XcWaapStandard) isAddonServiceChoice_Choice()                      {}
func (*AddonServiceChoice_F5XcAppstackStandard) isAddonServiceChoice_Choice()                  {}
func (*AddonServiceChoice_F5XcSiteManagementStandard) isAddonServiceChoice_Choice()            {}
func (*AddonServiceChoice_F5XcRoutedDdosStandard) isAddonServiceChoice_Choice()                {}
func (*AddonServiceChoice_F5XcDnsStandard) isAddonServiceChoice_Choice()                       {}
func (*AddonServiceChoice_F5XcApplicationTrafficInsightStandard) isAddonServiceChoice_Choice() {}
func (*AddonServiceChoice_F5XcBotDefenseStandard) isAddonServiceChoice_Choice()                {}
func (*AddonServiceChoice_F5XcWebAppScanningStandard) isAddonServiceChoice_Choice()            {}
func (*AddonServiceChoice_F5XcAiAssistantStandard) isAddonServiceChoice_Choice()               {}
func (*AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) isAddonServiceChoice_Choice()      {}
func (*AddonServiceChoice_F5XcUniversalZtnaStandard) isAddonServiceChoice_Choice()             {}
func (*AddonServiceChoice_F5XcIpv6Standard) isAddonServiceChoice_Choice()                      {}
func (*AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) isAddonServiceChoice_Choice()     {}
func (*AddonServiceChoice_F5XcNone) isAddonServiceChoice_Choice()                              {}
func (*AddonServiceChoice_F5XcScim) isAddonServiceChoice_Choice()                              {}
func (*AddonServiceChoice_F5XcClearview) isAddonServiceChoice_Choice()                         {}
func (*AddonServiceChoice_F5XcBigipUtilitiesStandard) isAddonServiceChoice_Choice()            {}

func (m *AddonServiceChoice) GetChoice() isAddonServiceChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *AddonServiceChoice) GetF5XcBase() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBase); ok {
		return x.F5XcBase
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcConsoleBasic() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcConsoleBasic); ok {
		return x.F5XcConsoleBasic
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcConsoleStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcConsoleStandard); ok {
		return x.F5XcConsoleStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcConsoleAdvanced() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcConsoleAdvanced); ok {
		return x.F5XcConsoleAdvanced
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcChildManagementStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcChildManagementStandard); ok {
		return x.F5XcChildManagementStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSupportOperations() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSupportOperations); ok {
		return x.F5XcSupportOperations
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSupportManagementStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSupportManagementStandard); ok {
		return x.F5XcSupportManagementStandard
	}
	return false
}

func (m *AddonServiceChoice) GetVesIoVolterraDefault() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_VesIoVolterraDefault); ok {
		return x.VesIoVolterraDefault
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcDelegatedAccessStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcDelegatedAccessStandard); ok {
		return x.F5XcDelegatedAccessStandard
	}
	return false
}

func (m *AddonServiceChoice) GetShapeBot() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ShapeBot); ok {
		return x.ShapeBot
	}
	return false
}

func (m *AddonServiceChoice) GetShapeRecognize() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ShapeRecognize); ok {
		return x.ShapeRecognize
	}
	return false
}

func (m *AddonServiceChoice) GetAidataBfdp() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_AidataBfdp); ok {
		return x.AidataBfdp
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcContentDeliveryNetworkStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcContentDeliveryNetworkStandard); ok {
		return x.F5XcContentDeliveryNetworkStandard
	}
	return false
}

func (m *AddonServiceChoice) GetNginxMgmtSuite() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_NginxMgmtSuite); ok {
		return x.NginxMgmtSuite
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSyntheticMonitoringStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSyntheticMonitoringStandard); ok {
		return x.F5XcSyntheticMonitoringStandard
	}
	return false
}

func (m *AddonServiceChoice) GetSafeap() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_Safeap); ok {
		return x.Safeap
	}
	return false
}

func (m *AddonServiceChoice) GetClientSideDefense() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ClientSideDefense); ok {
		return x.ClientSideDefense
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBotDefenseAdvanced() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBotDefenseAdvanced); ok {
		return x.F5XcBotDefenseAdvanced
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBotDefensePremium() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBotDefensePremium); ok {
		return x.F5XcBotDefensePremium
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBotDefenseBasic() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBotDefenseBasic); ok {
		return x.F5XcBotDefenseBasic
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBigIpApm() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBigIpApm); ok {
		return x.F5XcBigIpApm
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcMobileIntegrator() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcMobileIntegrator); ok {
		return x.F5XcMobileIntegrator
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcFlowCollection() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcFlowCollection); ok {
		return x.F5XcFlowCollection
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcDataIntelligenceStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcDataIntelligenceStandard); ok {
		return x.F5XcDataIntelligenceStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcRoutedDdosBasic() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcRoutedDdosBasic); ok {
		return x.F5XcRoutedDdosBasic
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcWaapAdvanced() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcWaapAdvanced); ok {
		return x.F5XcWaapAdvanced
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSecuremeshAdvanced() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSecuremeshAdvanced); ok {
		return x.F5XcSecuremeshAdvanced
	}
	return false
}

func (m *AddonServiceChoice) GetNginxOne() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_NginxOne); ok {
		return x.NginxOne
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcApplicationTrafficInsightBasic() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcApplicationTrafficInsightBasic); ok {
		return x.F5XcApplicationTrafficInsightBasic
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSecuremeshStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSecuremeshStandard); ok {
		return x.F5XcSecuremeshStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcWaapStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcWaapStandard); ok {
		return x.F5XcWaapStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcAppstackStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcAppstackStandard); ok {
		return x.F5XcAppstackStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcSiteManagementStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcSiteManagementStandard); ok {
		return x.F5XcSiteManagementStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcRoutedDdosStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcRoutedDdosStandard); ok {
		return x.F5XcRoutedDdosStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcDnsStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcDnsStandard); ok {
		return x.F5XcDnsStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcApplicationTrafficInsightStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcApplicationTrafficInsightStandard); ok {
		return x.F5XcApplicationTrafficInsightStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBotDefenseStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBotDefenseStandard); ok {
		return x.F5XcBotDefenseStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcWebAppScanningStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcWebAppScanningStandard); ok {
		return x.F5XcWebAppScanningStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcAiAssistantStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcAiAssistantStandard); ok {
		return x.F5XcAiAssistantStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcFlowAnomalyDetectionStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcFlowAnomalyDetectionStandard); ok {
		return x.F5XcFlowAnomalyDetectionStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcUniversalZtnaStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcUniversalZtnaStandard); ok {
		return x.F5XcUniversalZtnaStandard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcIpv6Standard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcIpv6Standard); ok {
		return x.F5XcIpv6Standard
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBotDefenseAdvancedSelfservice() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice); ok {
		return x.F5XcBotDefenseAdvancedSelfservice
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcNone() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcNone); ok {
		return x.F5XcNone
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcScim() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcScim); ok {
		return x.F5XcScim
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcClearview() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcClearview); ok {
		return x.F5XcClearview
	}
	return false
}

func (m *AddonServiceChoice) GetF5XcBigipUtilitiesStandard() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBigipUtilitiesStandard); ok {
		return x.F5XcBigipUtilitiesStandard
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddonServiceChoice) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddonServiceChoice_F5XcBase)(nil),
		(*AddonServiceChoice_F5XcConsoleBasic)(nil),
		(*AddonServiceChoice_F5XcConsoleStandard)(nil),
		(*AddonServiceChoice_F5XcConsoleAdvanced)(nil),
		(*AddonServiceChoice_F5XcChildManagementStandard)(nil),
		(*AddonServiceChoice_F5XcSupportOperations)(nil),
		(*AddonServiceChoice_F5XcSupportManagementStandard)(nil),
		(*AddonServiceChoice_VesIoVolterraDefault)(nil),
		(*AddonServiceChoice_F5XcDelegatedAccessStandard)(nil),
		(*AddonServiceChoice_ShapeBot)(nil),
		(*AddonServiceChoice_ShapeRecognize)(nil),
		(*AddonServiceChoice_AidataBfdp)(nil),
		(*AddonServiceChoice_F5XcContentDeliveryNetworkStandard)(nil),
		(*AddonServiceChoice_NginxMgmtSuite)(nil),
		(*AddonServiceChoice_F5XcSyntheticMonitoringStandard)(nil),
		(*AddonServiceChoice_Safeap)(nil),
		(*AddonServiceChoice_ClientSideDefense)(nil),
		(*AddonServiceChoice_F5XcBotDefenseAdvanced)(nil),
		(*AddonServiceChoice_F5XcBotDefensePremium)(nil),
		(*AddonServiceChoice_F5XcBotDefenseBasic)(nil),
		(*AddonServiceChoice_F5XcBigIpApm)(nil),
		(*AddonServiceChoice_F5XcMobileIntegrator)(nil),
		(*AddonServiceChoice_F5XcFlowCollection)(nil),
		(*AddonServiceChoice_F5XcDataIntelligenceStandard)(nil),
		(*AddonServiceChoice_F5XcRoutedDdosBasic)(nil),
		(*AddonServiceChoice_F5XcWaapAdvanced)(nil),
		(*AddonServiceChoice_F5XcSecuremeshAdvanced)(nil),
		(*AddonServiceChoice_NginxOne)(nil),
		(*AddonServiceChoice_F5XcApplicationTrafficInsightBasic)(nil),
		(*AddonServiceChoice_F5XcSecuremeshStandard)(nil),
		(*AddonServiceChoice_F5XcWaapStandard)(nil),
		(*AddonServiceChoice_F5XcAppstackStandard)(nil),
		(*AddonServiceChoice_F5XcSiteManagementStandard)(nil),
		(*AddonServiceChoice_F5XcRoutedDdosStandard)(nil),
		(*AddonServiceChoice_F5XcDnsStandard)(nil),
		(*AddonServiceChoice_F5XcApplicationTrafficInsightStandard)(nil),
		(*AddonServiceChoice_F5XcBotDefenseStandard)(nil),
		(*AddonServiceChoice_F5XcWebAppScanningStandard)(nil),
		(*AddonServiceChoice_F5XcAiAssistantStandard)(nil),
		(*AddonServiceChoice_F5XcFlowAnomalyDetectionStandard)(nil),
		(*AddonServiceChoice_F5XcUniversalZtnaStandard)(nil),
		(*AddonServiceChoice_F5XcIpv6Standard)(nil),
		(*AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice)(nil),
		(*AddonServiceChoice_F5XcNone)(nil),
		(*AddonServiceChoice_F5XcScim)(nil),
		(*AddonServiceChoice_F5XcClearview)(nil),
		(*AddonServiceChoice_F5XcBigipUtilitiesStandard)(nil),
	}
}

func init() {
	proto.RegisterType((*AddonServiceChoice)(nil), "ves.io.schema.vesenv.AddonServiceChoice")
}

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_addon_services.proto", fileDescriptor_24b1043c1548ccb0)
}

var fileDescriptor_24b1043c1548ccb0 = []byte{
	// 3892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x79, 0xcd, 0x8f, 0x1c, 0xc7,
	0x79, 0xfe, 0xce, 0x4f, 0x63, 0x6a, 0xd9, 0x94, 0xc4, 0x65, 0x8b, 0xa2, 0x5a, 0x94, 0xb5, 0x1a,
	0xeb, 0xb7, 0x52, 0xa4, 0x00, 0x2f, 0xd9, 0x1f, 0x55, 0xd5, 0x55, 0xb2, 0xec, 0x78, 0x97, 0x94,
	0xb4, 0xbb, 0x31, 0x29, 0x7a, 0x57, 0xb2, 0x0c, 0x05, 0xc9, 0xa0, 0x3e, 0x77, 0xdb, 0x9a, 0x99,
	0x1e, 0x4f, 0xf7, 0xee, 0x8a, 0xb4, 0x25, 0xcb, 0xf9, 0x74, 0x9c, 0x20, 0x0a, 0x0c, 0x27, 0x39,
	0x19, 0x46, 0x0e, 0x09, 0x12, 0x04, 0xc9, 0x21, 0x40, 0x4e, 0x73, 0x09, 0x36, 0x01, 0x92, 0x43,
	0x10, 0x08, 0x44, 0x0e, 0x3e, 0x46, 0xd4, 0x41, 0x3e, 0xfa, 0x4f, 0x08, 0xaa, 0xfa, 0x63, 0x9a,
	0xe2, 0x52, 0x0a, 0x72, 0x59, 0x2c, 0xea, 0x7d, 0xea, 0xad, 0xa7, 0xeb, 0xe3, 0x79, 0x9f, 0xaa,
	0xf1, 0xe0, 0x50, 0x17, 0x97, 0xb2, 0xfc, 0x72, 0x21, 0xf7, 0xf5, 0x98, 0x5f, 0x3e, 0xd4, 0x85,
	0x9e, 0x1c, 0x5e, 0xe6, 0xa3, 0xd1, 0x90, 0x2b, 0x95, 0x4f, 0x86, 0x85, 0x9e, 0x1d, 0x66, 0x52,
	0x17, 0x97, 0xa6, 0xb3, 0xbc, 0xcc, 0xfd, 0xf3, 0x15, 0xfc, 0x52, 0x05, 0xbf, 0x54, 0xc1, 0x2f,
	0x3e, 0x73, 0x62, 0x92, 0x7c, 0x5a, 0x66, 0xf9, 0xa4, 0xee, 0x79, 0x71, 0xf0, 0x29, 0x4c, 0xa6,
	0x8f, 0x86, 0x77, 0x21, 0x9e, 0xf9, 0xc9, 0x57, 0x3c, 0x7f, 0xdd, 0x0e, 0xba, 0x5b, 0x8d, 0x79,
	0x65, 0x3f, 0xcf, 0xa4, 0xf6, 0x6f, 0x79, 0xa7, 0x0d, 0x7e, 0x47, 0x0e, 0x05, 0x2f, 0x74, 0xd0,
	0x1b, 0xf4, 0x9e, 0x5f, 0xde, 0xf8, 0x8d, 0xe3, 0x79, 0xc0, 0xaa, 0x66, 0xb0, 0xcd, 0xfe, 0x1a,
	0x55, 0x51, 0x24, 0x15, 0xd6, 0x40, 0x18, 0x17, 0x80, 0x10, 0xd7, 0xc0, 0x59, 0x48, 0x21, 0xa6,
	0xc6, 0x10, 0x95, 0xa0, 0x48, 0x12, 0x74, 0xf1, 0x54, 0x71, 0xb3, 0x28, 0xf5, 0xf8, 0xf6, 0x3c,
	0xb8, 0xe8, 0xf5, 0xf5, 0xcd, 0x23, 0xee, 0xfb, 0xaf, 0xe0, 0x6f, 0x5d, 0x19, 0x6c, 0xf0, 0x42,
	0x0f, 0xea, 0x41, 0x8b, 0xcd, 0xa5, 0x9d, 0x65, 0x9b, 0xd8, 0x36, 0xfa, 0x3f, 0xed, 0x79, 0xbe,
	0x1b, 0x5c, 0xe6, 0x93, 0x22, 0x1f, 0x69, 0x4b, 0x22, 0x93, 0xc1, 0xc3, 0x8e, 0xc5, 0xf8, 0x78,
	0x1e, 0x6c, 0x54, 0x71, 0xa8, 0xe3, 0xe0, 0xe2, 0xfe, 0x9a, 0x10, 0x31, 0x11, 0x44, 0x09, 0x40,
	0xb1, 0x8a, 0x01, 0x19, 0x89, 0x80, 0x8a, 0x88, 0x02, 0x4f, 0xa5, 0xc0, 0x28, 0x4a, 0x62, 0xc1,
	0xf1, 0xc5, 0x53, 0xc5, 0x3e, 0x9f, 0x69, 0x75, 0x7b, 0x1e, 0xfc, 0xff, 0x9a, 0xce, 0x93, 0x8e,
	0xce, 0x95, 0x2a, 0x97, 0xa5, 0x95, 0xc9, 0x2e, 0xaf, 0x15, 0x3b, 0x54, 0x1d, 0x75, 0x41, 0xff,
	0x6f, 0x7b, 0xde, 0x63, 0x77, 0xf1, 0x2b, 0x4a, 0x3e, 0x51, 0x7c, 0xa6, 0x82, 0x47, 0x1c, 0xc5,
	0xe2, 0x78, 0x1e, 0xbc, 0x5c, 0x41, 0x5a, 0x8a, 0x0d, 0xc4, 0x5f, 0x93, 0x11, 0x41, 0x28, 0xd1,
	0x14, 0xd2, 0x24, 0xa1, 0x80, 0x4c, 0x42, 0x81, 0x71, 0x65, 0x80, 0xd1, 0x44, 0x11, 0x8e, 0x93,
	0x94, 0x8b, 0xb0, 0xc3, 0xf2, 0xb9, 0x9a, 0xe5, 0xea, 0x5d, 0x2c, 0x77, 0xeb, 0x74, 0x5d, 0xa2,
	0x8f, 0x76, 0x88, 0x36, 0xf1, 0x7b, 0xb9, 0x72, 0x75, 0xc8, 0x27, 0x52, 0xab, 0xe0, 0xec, 0x7d,
	0xb9, 0x36, 0x10, 0x7f, 0x4d, 0x0b, 0xa2, 0x13, 0x14, 0x09, 0xa0, 0x51, 0xa8, 0x01, 0x61, 0xa3,
	0x81, 0x0b, 0x2e, 0x21, 0x46, 0x2a, 0x24, 0x11, 0x4b, 0xe2, 0x90, 0xe9, 0xcf, 0xe5, 0xba, 0x5e,
	0xa7, 0xbb, 0x1f, 0xd7, 0x26, 0xee, 0xff, 0x6b, 0xcf, 0x5b, 0xad, 0xb8, 0xee, 0x67, 0x23, 0x35,
	0x1c, 0xf3, 0x09, 0xdf, 0xd3, 0x63, 0x3d, 0x29, 0x17, 0x13, 0xfc, 0x07, 0xd5, 0x56, 0xfc, 0xde,
	0xf1, 0x3c, 0xb8, 0x5e, 0x81, 0xc1, 0x81, 0x61, 0x01, 0xee, 0x4c, 0x35, 0x62, 0x48, 0xc9, 0x10,
	0x1b, 0x90, 0x71, 0x1c, 0x01, 0x32, 0x34, 0x06, 0x96, 0xe2, 0x08, 0x64, 0xc2, 0x10, 0x47, 0x34,
	0x15, 0x2c, 0xa4, 0x9d, 0xfd, 0xf9, 0x29, 0xfa, 0x36, 0xef, 0xe0, 0x5a, 0x9b, 0xb7, 0x9d, 0xf3,
	0xcd, 0xa5, 0x9d, 0x27, 0x1d, 0x7d, 0x0b, 0x58, 0xc4, 0xdb, 0x29, 0xff, 0xfb, 0x9e, 0xf7, 0xb8,
	0xfb, 0x8c, 0xe2, 0x60, 0x3a, 0xcd, 0x67, 0xe5, 0x30, 0x9f, 0xea, 0x19, 0x77, 0x67, 0x2e, 0xf8,
	0x61, 0xc5, 0x7f, 0x76, 0x3c, 0x0f, 0x6e, 0x78, 0x03, 0xc7, 0xbf, 0x46, 0xc1, 0x02, 0xd5, 0xf9,
	0x02, 0x8d, 0xb4, 0x50, 0x24, 0xe2, 0x60, 0x98, 0x8a, 0x00, 0xc5, 0x38, 0x01, 0x61, 0x22, 0x06,
	0x46, 0x91, 0xd0, 0xb0, 0x54, 0xb0, 0xe4, 0xae, 0x2f, 0x68, 0x4f, 0xd8, 0x6e, 0x95, 0x74, 0xf0,
	0x5a, 0x9b, 0x74, 0x73, 0x69, 0xc7, 0xad, 0x72, 0x1d, 0x59, 0x04, 0xfc, 0x79, 0xaf, 0x62, 0xd2,
	0xf2, 0x3d, 0x69, 0xe2, 0xbf, 0xe0, 0x78, 0x4f, 0x4f, 0xe0, 0x7d, 0xe2, 0xcc, 0x0b, 0x4a, 0x09,
	0xd2, 0x1c, 0x03, 0x25, 0x58, 0x02, 0xe2, 0x71, 0x04, 0x3c, 0x55, 0x1c, 0x64, 0x84, 0x23, 0xcc,
	0x88, 0x32, 0x42, 0xb3, 0x0e, 0xef, 0xa0, 0xe6, 0xbd, 0xb2, 0x35, 0x29, 0xf5, 0x6c, 0xc2, 0x47,
	0x83, 0x9a, 0xe6, 0xe6, 0xd2, 0xce, 0x53, 0x1d, 0xd6, 0x27, 0xcc, 0xf6, 0x5f, 0xf5, 0xbc, 0xc7,
	0x0f, 0x75, 0x31, 0xcc, 0xf2, 0xe1, 0x61, 0x3e, 0x2a, 0xf5, 0x6c, 0xc6, 0x87, 0x4a, 0x1b, 0x7e,
	0x30, 0x2a, 0x83, 0xc7, 0x1c, 0xe9, 0xd1, 0xf1, 0x3c, 0x78, 0xd5, 0x81, 0x20, 0xcb, 0xa1, 0x01,
	0x41, 0x0d, 0xf2, 0xd7, 0x52, 0x9e, 0x72, 0x25, 0x28, 0x06, 0x42, 0x44, 0x04, 0x48, 0x45, 0x09,
	0x08, 0x91, 0x72, 0x88, 0xa4, 0x4e, 0x29, 0x4b, 0x43, 0x4a, 0x48, 0xd8, 0xe1, 0xfa, 0x54, 0xcd,
	0xf5, 0x31, 0xb7, 0x4b, 0xae, 0x56, 0x59, 0xba, 0x7b, 0xdb, 0xaa, 0xf5, 0x56, 0xfe, 0xcd, 0x7a,
	0x9c, 0x1a, 0xe0, 0xff, 0x53, 0xb3, 0xb9, 0x95, 0x1e, 0xe9, 0x3d, 0x5e, 0x6a, 0x35, 0xe4, 0x52,
	0xea, 0xa2, 0x58, 0xcc, 0xf1, 0x05, 0x47, 0x77, 0xd2, 0xd9, 0xdb, 0x2d, 0x16, 0x2a, 0x6c, 0x67,
	0x86, 0x19, 0xd2, 0x92, 0x25, 0xa9, 0x81, 0x54, 0xa4, 0xf6, 0x68, 0x12, 0x03, 0x34, 0x11, 0x1a,
	0x58, 0xa4, 0xb4, 0x26, 0x1a, 0xa7, 0x9c, 0xa3, 0x93, 0x66, 0xf8, 0x6a, 0x93, 0x72, 0xb0, 0xee,
	0x52, 0x36, 0xbb, 0xb9, 0x6d, 0xaf, 0x9a, 0xdb, 0xf9, 0xfd, 0xb6, 0x77, 0xba, 0xd8, 0xe7, 0x53,
	0x3d, 0x14, 0x79, 0x19, 0xc4, 0x8e, 0xe1, 0xaf, 0x1f, 0xcf, 0x83, 0xa8, 0x6e, 0x06, 0x91, 0x97,
	0xfe, 0x5a, 0x18, 0x63, 0x2c, 0x90, 0x62, 0xc0, 0xa8, 0x60, 0x80, 0x62, 0x46, 0x81, 0x61, 0x94,
	0x42, 0x42, 0x48, 0x18, 0x63, 0x41, 0x85, 0xe0, 0xe2, 0xf6, 0x3c, 0xf0, 0xbd, 0x07, 0x0a, 0xad,
	0xfc, 0x33, 0x1b, 0x79, 0x69, 0x27, 0x4e, 0x4f, 0x0a, 0x6d, 0x85, 0xdf, 0x25, 0xda, 0xc8, 0x4b,
	0xff, 0xc7, 0x3d, 0xef, 0x6c, 0x35, 0xd8, 0x4c, 0xcb, 0x7c, 0x6f, 0x92, 0xdd, 0xd2, 0x41, 0xe2,
	0x86, 0xdc, 0x3b, 0x9e, 0x07, 0x69, 0x1d, 0x84, 0x36, 0xe8, 0xaf, 0x31, 0x29, 0x39, 0x35, 0x44,
	0x01, 0x31, 0x38, 0x01, 0x14, 0x21, 0x03, 0x8c, 0xc4, 0x1c, 0xb4, 0x88, 0x09, 0x96, 0x61, 0x18,
	0x9b, 0x98, 0xdc, 0x9e, 0x07, 0xcf, 0x7b, 0xa7, 0x17, 0x9d, 0x9e, 0x5c, 0x3f, 0x28, 0xf7, 0xf5,
	0xa4, 0xcc, 0xa4, 0x3b, 0x00, 0x03, 0xbb, 0xe7, 0x46, 0xa3, 0x6c, 0x4f, 0x4f, 0xa4, 0xa5, 0xf3,
	0x88, 0x1b, 0x64, 0xa7, 0x85, 0xdf, 0xf2, 0xce, 0xf0, 0x4c, 0xf1, 0x92, 0x0f, 0x85, 0x51, 0xd3,
	0x00, 0x39, 0x3e, 0x6f, 0x1e, 0xcf, 0x83, 0xa4, 0x09, 0x80, 0x0d, 0xf8, 0x6b, 0x5c, 0x31, 0x29,
	0x63, 0x94, 0x00, 0xd2, 0x58, 0x00, 0x8a, 0x78, 0x02, 0x34, 0x61, 0x31, 0x24, 0x8a, 0x8a, 0x58,
	0xa6, 0x42, 0x09, 0x89, 0x6e, 0xcf, 0x83, 0x2f, 0x7a, 0x7d, 0x87, 0x3f, 0xbf, 0x91, 0xed, 0x0d,
	0x5e, 0xc1, 0x03, 0x9b, 0x61, 0x30, 0x1d, 0xf1, 0xd2, 0xe4, 0xb3, 0xf1, 0xe6, 0xd2, 0x8e, 0x57,
	0x25, 0xdd, 0xb0, 0x98, 0x0f, 0x7b, 0xde, 0x73, 0x8d, 0x7a, 0x97, 0xf6, 0x3c, 0x2a, 0x3d, 0xca,
	0x0e, 0xf5, 0xec, 0xe6, 0x70, 0xa2, 0xcb, 0xa3, 0x7c, 0xf6, 0xf6, 0x62, 0xf3, 0xfc, 0x51, 0xa5,
	0x2c, 0x37, 0xdd, 0xee, 0x79, 0xae, 0xd1, 0x73, 0xdb, 0x09, 0x9a, 0x4e, 0x50, 0x77, 0xea, 0xec,
	0x22, 0x4c, 0x55, 0x22, 0x54, 0x9a, 0x80, 0x22, 0x48, 0x00, 0xa2, 0xc4, 0x80, 0x20, 0x92, 0x02,
	0x96, 0xc6, 0x68, 0xae, 0xc2, 0x48, 0x49, 0xe2, 0x4a, 0xe5, 0x59, 0xa9, 0x26, 0x32, 0x9f, 0x4c,
	0xb4, 0x2c, 0xf3, 0x59, 0x71, 0x28, 0xfd, 0x95, 0x2b, 0x57, 0xaf, 0x0f, 0xbe, 0x9e, 0x73, 0x25,
	0xf8, 0xc8, 0xca, 0xf7, 0x6c, 0x73, 0x69, 0xe7, 0x99, 0x5a, 0xd5, 0xed, 0xa8, 0x57, 0xeb, 0x41,
	0xaf, 0x57, 0x63, 0xb6, 0xfb, 0xe9, 0xc7, 0x3d, 0x6f, 0x65, 0xb2, 0x97, 0x4d, 0xde, 0x19, 0x8e,
	0xf7, 0xc6, 0xe5, 0xb0, 0x38, 0xc8, 0x4a, 0x1d, 0x10, 0xc7, 0xdd, 0x1c, 0xcf, 0x03, 0x5a, 0x47,
	0xc1, 0x46, 0xc1, 0x45, 0xfd, 0xb5, 0x30, 0x42, 0x61, 0x42, 0x38, 0x03, 0xac, 0x13, 0x02, 0x88,
	0x1a, 0x01, 0x22, 0x55, 0x11, 0x10, 0x1e, 0x8b, 0x38, 0x09, 0x09, 0x17, 0x38, 0x75, 0xfa, 0xfd,
	0xd0, 0x64, 0x5c, 0xb4, 0x2c, 0xfd, 0x0b, 0xd7, 0x5f, 0xdd, 0xba, 0xfe, 0xad, 0xbb, 0x24, 0xdc,
	0xe6, 0xb3, 0x6b, 0xec, 0xc6, 0xb8, 0xb6, 0x37, 0x2e, 0x5d, 0x8b, 0xff, 0x6f, 0x3d, 0xef, 0x99,
	0x4a, 0x02, 0x6f, 0x4e, 0xca, 0x7d, 0x5d, 0x66, 0x72, 0x38, 0xce, 0x27, 0x59, 0x99, 0xcf, 0xb2,
	0xc9, 0xde, 0x62, 0x8e, 0xff, 0xa4, 0x9a, 0xe3, 0xa3, 0xe3, 0x79, 0xb0, 0x5d, 0x75, 0x80, 0xb6,
	0x03, 0x2c, 0x3a, 0x74, 0x75, 0x30, 0x0a, 0x79, 0x9c, 0x62, 0x0d, 0x18, 0x09, 0x0c, 0x48, 0x0a,
	0x0c, 0x34, 0x66, 0x0c, 0x10, 0x4d, 0x64, 0x94, 0xd0, 0xd4, 0x28, 0x14, 0xdf, 0x9e, 0x07, 0xcf,
	0x7a, 0x67, 0x0f, 0x33, 0x3e, 0xe4, 0xd3, 0xac, 0xb1, 0x7e, 0xbe, 0xbf, 0xdb, 0x64, 0x1e, 0x5c,
	0xab, 0x32, 0xdb, 0xa3, 0xfa, 0xb4, 0x13, 0xc3, 0x26, 0x72, 0xad, 0x1d, 0xb2, 0x9d, 0x5e, 0xee,
	0x9d, 0x2a, 0xb8, 0xd1, 0x7c, 0x1a, 0x50, 0xc7, 0xf5, 0xd5, 0xe3, 0x79, 0x70, 0xa9, 0x69, 0xfb,
	0xdf, 0x9c, 0x17, 0xc6, 0x6e, 0xcf, 0x83, 0x73, 0x6d, 0x8f, 0x07, 0x77, 0xb9, 0xd1, 0x83, 0xf5,
	0x1b, 0x9b, 0x4b, 0x3b, 0x4d, 0xd3, 0xcf, 0x7a, 0xde, 0xa3, 0x72, 0x94, 0xb9, 0xf2, 0x90, 0x29,
	0x6d, 0xd5, 0xd6, 0x9e, 0xe4, 0xe0, 0xc5, 0xd6, 0x9f, 0x7d, 0xb9, 0x01, 0x80, 0x05, 0x40, 0x0d,
	0xf0, 0xd7, 0x48, 0x8a, 0x14, 0x96, 0x2c, 0x04, 0xc4, 0x99, 0xb1, 0x4a, 0x1b, 0x03, 0x57, 0x18,
	0x03, 0xe2, 0x21, 0x23, 0x9c, 0x73, 0x91, 0x10, 0x73, 0x7b, 0x1e, 0xfc, 0xea, 0xc9, 0xdd, 0x1f,
	0xbd, 0x52, 0x35, 0xee, 0x66, 0x4a, 0x77, 0xe4, 0xe3, 0x5c, 0x85, 0xb5, 0xad, 0x75, 0xa3, 0xff,
	0x97, 0x3d, 0xef, 0x89, 0xca, 0xbd, 0xe6, 0x65, 0x43, 0x6f, 0x61, 0x7c, 0xbe, 0xec, 0x78, 0xaa,
	0xe3, 0x79, 0xb0, 0x5e, 0xc1, 0xac, 0x86, 0x35, 0xa3, 0x74, 0xcc, 0x0f, 0x51, 0x1a, 0x13, 0x1d,
	0x12, 0x30, 0x69, 0xac, 0x01, 0x85, 0x2a, 0x04, 0x8e, 0x99, 0x04, 0xa3, 0x45, 0x64, 0x52, 0x1a,
	0xa7, 0x98, 0xc9, 0xdb, 0xf3, 0xe0, 0xc9, 0x4a, 0xd4, 0xce, 0x77, 0x44, 0xad, 0xb5, 0x3c, 0x9b,
	0x4b, 0x3b, 0x17, 0x9c, 0xad, 0xcd, 0xcb, 0x3a, 0xd4, 0x9a, 0x9d, 0x9f, 0xf6, 0xbc, 0xe0, 0x1e,
	0x8e, 0xd3, 0x99, 0x1e, 0x67, 0x07, 0xe3, 0xe0, 0x25, 0x47, 0x51, 0x1c, 0xcf, 0x83, 0xaf, 0x55,
	0xa8, 0xbb, 0x28, 0xd6, 0x28, 0x7f, 0x8d, 0xb1, 0x38, 0x4d, 0x29, 0x21, 0xc0, 0xb8, 0xb0, 0x55,
	0x56, 0x21, 0x10, 0xca, 0x24, 0x20, 0x12, 0x25, 0x89, 0x49, 0x10, 0x8f, 0x05, 0x71, 0xae, 0xc0,
	0x31, 0x7c, 0xb4, 0xcb, 0xf0, 0x46, 0x95, 0xa3, 0x71, 0x05, 0x0b, 0x82, 0x75, 0xc0, 0xff, 0xb3,
	0x9e, 0x77, 0xe1, 0x1e, 0x7e, 0x95, 0x11, 0xff, 0x8a, 0x63, 0xf7, 0x5b, 0xc7, 0xf3, 0xe0, 0xab,
	0x15, 0xe6, 0x2e, 0x76, 0xb5, 0x19, 0x97, 0x34, 0x4c, 0x75, 0x1c, 0x51, 0x20, 0x51, 0x12, 0x01,
	0x4a, 0x6c, 0x49, 0x48, 0x04, 0x87, 0x14, 0x53, 0xc6, 0x74, 0x48, 0x08, 0xc2, 0xda, 0xd5, 0x25,
	0xc7, 0xed, 0x5c, 0x97, 0x9b, 0x73, 0xd9, 0x8d, 0x49, 0x5c, 0x30, 0xab, 0xcc, 0xf7, 0x2d, 0xef,
	0x6c, 0x45, 0x2b, 0xdb, 0x1b, 0x66, 0xd3, 0x21, 0x9f, 0x8e, 0x83, 0xaf, 0x3a, 0x3e, 0xdf, 0xa8,
	0x4a, 0x44, 0xc5, 0x27, 0xdb, 0x83, 0x6c, 0x0a, 0x7c, 0x3a, 0xf6, 0xd7, 0xa4, 0x8c, 0x74, 0x14,
	0xf1, 0x18, 0xe2, 0x84, 0x28, 0xeb, 0xb7, 0x0d, 0x50, 0x84, 0x53, 0x40, 0x49, 0x62, 0xa2, 0x28,
	0x0e, 0x11, 0x12, 0xd4, 0xd5, 0xa6, 0x3e, 0x7f, 0x9b, 0xcf, 0x7c, 0x6f, 0x63, 0xeb, 0x55, 0xd8,
	0xba, 0x31, 0x58, 0xbf, 0x71, 0x6d, 0x73, 0x69, 0xe7, 0x21, 0x47, 0x21, 0xdb, 0xdb, 0x9a, 0xae,
	0x4f, 0xc7, 0xfe, 0x9f, 0x37, 0x73, 0x32, 0xce, 0x45, 0x36, 0xd2, 0xc3, 0x6c, 0x52, 0xea, 0xbd,
	0x19, 0x2f, 0xf3, 0x59, 0xf0, 0x6b, 0xf7, 0xcc, 0x49, 0x85, 0x81, 0x05, 0xc6, 0x5f, 0x8b, 0x52,
	0xac, 0x11, 0x55, 0x11, 0x08, 0x86, 0x11, 0x20, 0x9a, 0x62, 0x60, 0x82, 0x50, 0x30, 0x9a, 0xc6,
	0x9a, 0x08, 0xa5, 0x52, 0x16, 0x77, 0xe6, 0xe4, 0x9a, 0xcb, 0xe0, 0xea, 0x53, 0x95, 0xc1, 0x9a,
	0x0b, 0x9b, 0xbb, 0x0a, 0x2c, 0xda, 0xfd, 0x0f, 0x7a, 0x9e, 0x0b, 0x0c, 0xcd, 0x28, 0x3f, 0x1a,
	0xca, 0x7c, 0x34, 0xd2, 0xd2, 0xd6, 0xb6, 0xe0, 0x6b, 0xed, 0xcd, 0xed, 0xa5, 0x0a, 0x01, 0x16,
	0x01, 0x0b, 0x84, 0xbf, 0x16, 0x1b, 0x96, 0x44, 0x42, 0x51, 0x88, 0x89, 0x64, 0x10, 0x45, 0x5a,
	0x83, 0xd0, 0x98, 0x40, 0x18, 0xa3, 0x98, 0xcb, 0x28, 0x0e, 0xc3, 0xd0, 0x92, 0x7a, 0xbc, 0x9e,
	0x9f, 0xb3, 0xaf, 0x8c, 0xf2, 0xa3, 0xc1, 0x95, 0x36, 0xc1, 0xe6, 0xd2, 0x8e, 0xbb, 0x8c, 0xd9,
	0xe6, 0x45, 0xab, 0xff, 0x1f, 0x3d, 0xef, 0xe9, 0xca, 0xee, 0xd8, 0xca, 0x99, 0x75, 0x4a, 0xec,
	0x42, 0x4e, 0xff, 0xb0, 0x92, 0xd3, 0x1f, 0xf4, 0x9c, 0x41, 0x7b, 0xba, 0x72, 0x3c, 0xb6, 0x9e,
	0x76, 0xe1, 0xdd, 0x9b, 0x93, 0xc6, 0x09, 0x12, 0x91, 0x84, 0x54, 0x85, 0x1c, 0x10, 0x55, 0x09,
	0x50, 0x86, 0x13, 0x50, 0x38, 0xc5, 0x54, 0x72, 0x89, 0x63, 0x6c, 0x5d, 0x46, 0xec, 0x9d, 0x15,
	0xb3, 0xb1, 0x4d, 0xd4, 0x14, 0x3e, 0xff, 0xf3, 0x72, 0x6f, 0x2e, 0xed, 0x7c, 0xd1, 0x99, 0x20,
	0x5e, 0xf2, 0xae, 0x1d, 0x68, 0x65, 0xf5, 0x27, 0xcd, 0xca, 0xcf, 0xf2, 0x03, 0x6b, 0xdd, 0x94,
	0xca, 0x8b, 0xfa, 0x34, 0x7c, 0xdb, 0x7d, 0xc4, 0x6f, 0x76, 0x56, 0xbe, 0xc2, 0x80, 0xc5, 0x34,
	0xa7, 0x41, 0x47, 0x3c, 0x8a, 0x98, 0xa2, 0xa0, 0x85, 0x16, 0x80, 0x70, 0xc4, 0x80, 0x27, 0x94,
	0x80, 0x92, 0x54, 0x52, 0xcd, 0xe2, 0x04, 0xc9, 0xd4, 0x4d, 0xf2, 0xb2, 0xbd, 0x95, 0xeb, 0xb7,
	0xcb, 0xcc, 0x3f, 0xb3, 0xe3, 0xd2, 0x0c, 0xae, 0x5e, 0xcd, 0x77, 0x9b, 0xc3, 0x50, 0x35, 0x5d,
	0x55, 0x79, 0x51, 0x1d, 0x86, 0x7f, 0x68, 0x6e, 0xca, 0x47, 0x9c, 0x4f, 0x17, 0x0a, 0x97, 0x3b,
	0x4a, 0xef, 0x1d, 0xcf, 0x83, 0x17, 0xeb, 0x9b, 0xb2, 0x8d, 0x77, 0xa4, 0xcd, 0xa0, 0xd4, 0xa4,
	0x94, 0x69, 0xc0, 0x24, 0x8c, 0x00, 0x71, 0x43, 0x41, 0xe0, 0xd8, 0x00, 0x63, 0x31, 0xc1, 0x1a,
	0xf3, 0x30, 0x45, 0xd6, 0xaa, 0xbc, 0x54, 0xaf, 0x39, 0x7a, 0x53, 0x8b, 0xc1, 0xfa, 0x74, 0x3a,
	0x6a, 0x2c, 0x13, 0x9f, 0xa8, 0xc1, 0xfa, 0x8d, 0xad, 0xc1, 0x0d, 0x4b, 0xd6, 0x2d, 0xf8, 0xe0,
	0xf9, 0x37, 0xd7, 0xd7, 0x6f, 0xbc, 0x30, 0x88, 0xbb, 0xda, 0xe7, 0xae, 0xce, 0x6f, 0x72, 0x3e,
	0x6d, 0x55, 0xef, 0x67, 0x8d, 0xea, 0x15, 0x5a, 0x1e, 0xcc, 0xf4, 0x58, 0x17, 0xfb, 0x0b, 0xda,
	0x85, 0xa3, 0x2d, 0x3b, 0xaa, 0xb7, 0x40, 0x75, 0xc8, 0x87, 0x86, 0x51, 0xcc, 0x0d, 0x07, 0x8a,
	0x10, 0x03, 0x94, 0x4a, 0x02, 0x34, 0xe5, 0x18, 0xe2, 0x84, 0x19, 0xa4, 0x45, 0xac, 0x78, 0xaa,
	0x9d, 0x2e, 0x57, 0xe4, 0x1f, 0xdd, 0x75, 0x49, 0xae, 0xe9, 0x62, 0xff, 0x1e, 0x5d, 0xde, 0x6d,
	0xf3, 0xb7, 0x0c, 0xa7, 0xde, 0xe9, 0xca, 0x9e, 0xe4, 0x13, 0x1d, 0x1c, 0xb4, 0xca, 0x12, 0xd5,
	0xcd, 0x90, 0x4f, 0xb4, 0xbf, 0xa6, 0x71, 0x42, 0x44, 0x14, 0x13, 0x20, 0x69, 0x82, 0x01, 0x25,
	0x61, 0x02, 0x22, 0xe2, 0x06, 0x42, 0x8e, 0x92, 0x34, 0x8a, 0x8c, 0xd1, 0x32, 0x71, 0x07, 0xf9,
	0xcc, 0x24, 0x5a, 0xf8, 0x91, 0xd3, 0x95, 0x1f, 0x79, 0x6d, 0xe2, 0x5c, 0xaf, 0x4b, 0xf7, 0xda,
	0x44, 0xfb, 0xff, 0xd5, 0x98, 0x3c, 0xbe, 0x98, 0xe1, 0x61, 0x39, 0xe3, 0xc6, 0x64, 0x72, 0x98,
	0x4d, 0x8a, 0x6c, 0x6f, 0xbf, 0xac, 0xf7, 0xda, 0x61, 0xbb, 0xb0, 0x8d, 0xc7, 0xeb, 0xf4, 0x81,
	0xba, 0x0f, 0xd4, 0x7d, 0x9a, 0xbd, 0x17, 0x12, 0x45, 0x45, 0x82, 0x42, 0x08, 0x8d, 0xb1, 0xb5,
	0x36, 0x45, 0xee, 0x36, 0x01, 0x44, 0x10, 0x42, 0x43, 0x9e, 0xe8, 0x54, 0xe1, 0xca, 0x23, 0x2b,
	0x6d, 0xad, 0x07, 0x64, 0xca, 0x7f, 0xb2, 0xbb, 0xda, 0xaf, 0x57, 0x79, 0x07, 0x5b, 0x55, 0xde,
	0xc6, 0xe8, 0x75, 0x20, 0x35, 0xa2, 0x06, 0x54, 0x7b, 0xf3, 0xa4, 0xa5, 0x6e, 0x8f, 0xfe, 0x3b,
	0x9f, 0xb5, 0xd4, 0x9d, 0xeb, 0xaf, 0xd1, 0x4c, 0xc5, 0x48, 0x81, 0x46, 0x46, 0x00, 0x0a, 0xb5,
	0x04, 0x46, 0x49, 0x02, 0x0c, 0xc7, 0x4a, 0x23, 0xc4, 0x14, 0x4d, 0x92, 0xfb, 0x2c, 0x75, 0xe7,
	0xb6, 0xfe, 0xa9, 0xa5, 0x6e, 0x0f, 0xf5, 0xdd, 0xa7, 0xa7, 0xe5, 0x76, 0xf3, 0xe4, 0xd3, 0xb3,
	0x60, 0x45, 0x44, 0x92, 0x8a, 0xc8, 0x5e, 0x6e, 0x43, 0x4a, 0x01, 0x49, 0x2c, 0xad, 0x69, 0x16,
	0x10, 0x45, 0x28, 0x0e, 0x8d, 0xd2, 0x98, 0x46, 0xec, 0xff, 0x76, 0x7a, 0xa2, 0x2e, 0xed, 0xf6,
	0xf4, 0xb4, 0x84, 0xff, 0xa2, 0x51, 0x21, 0x3e, 0x9d, 0x16, 0x25, 0x97, 0x1d, 0xfb, 0x7f, 0xcb,
	0x91, 0x1e, 0x76, 0x54, 0xa8, 0xc1, 0x74, 0x88, 0xa7, 0xd2, 0x90, 0x94, 0x53, 0x06, 0x54, 0xa4,
	0xc4, 0x5e, 0xd3, 0x52, 0x10, 0xd8, 0x18, 0xd0, 0xa1, 0x44, 0xa1, 0x4a, 0xc3, 0x58, 0x61, 0xbb,
	0x13, 0x9e, 0xa8, 0x89, 0x9f, 0x5b, 0x9f, 0xda, 0xb1, 0xe5, 0xdb, 0x5d, 0x56, 0xe7, 0xeb, 0xa5,
	0x77, 0xb9, 0x5b, 0x66, 0xff, 0xd8, 0xf3, 0x9e, 0xaa, 0x16, 0x3b, 0x2b, 0xf5, 0x89, 0x0f, 0x08,
	0xdf, 0x6d, 0xdd, 0xe1, 0xcb, 0x15, 0x14, 0x2c, 0xf4, 0xe4, 0xd7, 0x83, 0x10, 0x4b, 0x19, 0x45,
	0x02, 0x03, 0x66, 0x52, 0x03, 0xd2, 0x32, 0x01, 0x26, 0x74, 0x0a, 0x89, 0x56, 0x42, 0x52, 0x89,
	0x44, 0x98, 0x5a, 0xe7, 0x35, 0xa8, 0x79, 0x06, 0xbb, 0x59, 0xa9, 0xef, 0xf3, 0x52, 0x73, 0xd1,
	0xad, 0x7d, 0x56, 0xea, 0x13, 0x9e, 0x0e, 0xfe, 0xba, 0xb1, 0x89, 0x5d, 0x51, 0x6f, 0x09, 0x7f,
	0xcf, 0x11, 0xce, 0x3a, 0x36, 0xb1, 0xab, 0xeb, 0x1d, 0xb2, 0xb1, 0x4c, 0x68, 0x42, 0x23, 0x10,
	0x3a, 0x31, 0x80, 0x0c, 0x53, 0x20, 0x44, 0xcc, 0x20, 0x14, 0x32, 0xa2, 0x98, 0x2a, 0x89, 0x99,
	0x76, 0x64, 0x17, 0xd2, 0x7e, 0xbe, 0x23, 0xed, 0xf7, 0x6c, 0xd4, 0x85, 0xc6, 0xb7, 0x44, 0xdf,
	0xf5, 0xce, 0x55, 0xb5, 0x74, 0xd2, 0xe1, 0xf7, 0xae, 0xe3, 0xf7, 0x9a, 0x7b, 0x94, 0x3d, 0x57,
	0xd5, 0xb7, 0xbb, 0x9e, 0x8e, 0x10, 0x22, 0x44, 0xc7, 0x4a, 0x82, 0x36, 0xdc, 0x00, 0x8a, 0x18,
	0x07, 0xaa, 0x39, 0xb3, 0x42, 0x15, 0x19, 0xc6, 0x70, 0x94, 0xb8, 0x92, 0xf3, 0x88, 0xf7, 0xa0,
	0xc8, 0xcc, 0x2c, 0x2f, 0x4a, 0xff, 0x81, 0xab, 0xd7, 0x6d, 0xa5, 0x71, 0x16, 0xea, 0xea, 0x64,
	0x31, 0xfc, 0x27, 0x3d, 0xef, 0x85, 0xcf, 0x15, 0xa8, 0x96, 0xd7, 0x7b, 0x8e, 0xd7, 0x8f, 0x6c,
	0x51, 0xff, 0x46, 0xd5, 0xef, 0x33, 0x45, 0x6a, 0x41, 0x38, 0x49, 0x71, 0x68, 0x04, 0x46, 0x20,
	0x13, 0x9e, 0x02, 0x92, 0x29, 0x03, 0x96, 0x6a, 0x03, 0x5c, 0x20, 0x13, 0xea, 0x24, 0x49, 0x12,
	0x11, 0xdd, 0x76, 0x4a, 0xbc, 0xd0, 0xa9, 0xb5, 0xcf, 0xd0, 0xa9, 0xee, 0xcc, 0x3e, 0xfb, 0x99,
	0x82, 0xd5, 0x7e, 0xe9, 0x89, 0x17, 0x87, 0xf6, 0xcb, 0xbe, 0xff, 0x99, 0x17, 0x87, 0xc5, 0x87,
	0xc4, 0x29, 0x51, 0x52, 0xc7, 0x0a, 0x10, 0xa3, 0x18, 0x10, 0x4e, 0x34, 0x30, 0x1d, 0x63, 0x40,
	0x9a, 0x93, 0x34, 0x45, 0x22, 0x26, 0x86, 0xdf, 0xe7, 0xe2, 0xf0, 0xe9, 0xcd, 0xb0, 0x70, 0xbf,
	0x2d, 0xc7, 0x7f, 0x69, 0x1e, 0x92, 0x8e, 0xb4, 0xb0, 0x2b, 0x32, 0x2c, 0x24, 0x9f, 0x4c, 0xee,
	0xba, 0xa7, 0xbe, 0xbf, 0x78, 0x25, 0x7d, 0xa5, 0x7e, 0x49, 0x3a, 0xd2, 0xc2, 0x2e, 0x03, 0x34,
	0xe0, 0xae, 0x2a, 0xe0, 0xd4, 0x50, 0x9a, 0x32, 0xe0, 0x31, 0x43, 0x80, 0x90, 0x34, 0x20, 0xa2,
	0xd0, 0x80, 0x89, 0x63, 0xa2, 0x88, 0x8e, 0x22, 0x4c, 0xac, 0x9c, 0x5d, 0xf2, 0xce, 0xed, 0xeb,
	0x9b, 0xfb, 0x56, 0x75, 0x16, 0x25, 0xed, 0x89, 0x5a, 0xdb, 0x06, 0xbb, 0x75, 0xde, 0x7b, 0xce,
	0xde, 0x9b, 0x5a, 0x58, 0x19, 0xa9, 0xc3, 0xdd, 0x77, 0xe9, 0x8b, 0xd5, 0x9e, 0xca, 0x86, 0xbc,
	0x28, 0x32, 0x4b, 0xa7, 0xb3, 0x89, 0x7e, 0xd0, 0x6b, 0x4f, 0xdf, 0x46, 0x05, 0x04, 0x9e, 0x41,
	0x0b, 0xec, 0x6e, 0x73, 0x82, 0x99, 0xa6, 0x28, 0x06, 0x66, 0x12, 0x09, 0x88, 0x92, 0x18, 0x44,
	0xa8, 0x38, 0x84, 0x21, 0xe7, 0x09, 0x23, 0x31, 0xe3, 0xa9, 0xb5, 0xf7, 0x4f, 0xdb, 0x1b, 0xed,
	0x3e, 0xbf, 0xc9, 0xfd, 0xc7, 0xd6, 0xb7, 0x06, 0xeb, 0x4d, 0xa2, 0x2e, 0x5d, 0xf7, 0x68, 0xbb,
	0x9e, 0xb5, 0xb1, 0x96, 0xeb, 0x7f, 0xf6, 0xbc, 0xb5, 0x85, 0xbb, 0xe6, 0x93, 0x7c, 0xcc, 0x47,
	0x37, 0x87, 0x4a, 0xd7, 0xe2, 0xbd, 0x60, 0xfd, 0xdb, 0x15, 0xeb, 0xef, 0x1e, 0xcf, 0x83, 0xaf,
	0x57, 0x5d, 0x2a, 0xbb, 0x5d, 0x77, 0x81, 0xb6, 0x4b, 0x87, 0x3f, 0x57, 0xc2, 0xd6, 0xb1, 0x08,
	0x74, 0xa8, 0x53, 0x40, 0x8a, 0x21, 0x10, 0x8c, 0x69, 0x10, 0x44, 0x87, 0x09, 0x46, 0x98, 0x46,
	0xd4, 0x1e, 0xd3, 0x5f, 0xa9, 0xb5, 0xee, 0x69, 0x67, 0xbf, 0xd7, 0xab, 0x84, 0x83, 0xab, 0x4d,
	0xc2, 0xee, 0x77, 0x0c, 0x1a, 0x3b, 0x5e, 0xa3, 0x5a, 0x50, 0x57, 0xf8, 0x9c, 0xdd, 0x1d, 0x1e,
	0x4c, 0xac, 0x3f, 0x2e, 0xf8, 0x68, 0x78, 0xab, 0x9c, 0xf0, 0xc5, 0x87, 0xfc, 0x4e, 0xaf, 0xbd,
	0x80, 0x5e, 0xad, 0xa0, 0xd0, 0x42, 0xc1, 0x42, 0x3b, 0x1f, 0x60, 0xd2, 0x38, 0x8e, 0x38, 0x61,
	0x10, 0x52, 0xac, 0x01, 0x27, 0xc2, 0xde, 0xd8, 0x11, 0x03, 0x86, 0x99, 0x92, 0x88, 0x4a, 0x42,
	0x62, 0x5b, 0xa3, 0x2f, 0xd4, 0x1f, 0xf0, 0xc8, 0x1b, 0x4d, 0xa2, 0xc1, 0x5b, 0xaf, 0x5f, 0x5f,
	0xdf, 0x5c, 0xda, 0x71, 0x47, 0xa9, 0x6d, 0x7d, 0xab, 0x9c, 0xf0, 0x96, 0xe8, 0x0f, 0x9b, 0x0a,
	0x9d, 0x4d, 0x0f, 0xc9, 0x82, 0xde, 0xef, 0xf6, 0xda, 0x47, 0xb8, 0xa6, 0x44, 0x5b, 0x40, 0x57,
	0x94, 0x45, 0xa2, 0x0c, 0x0e, 0x63, 0x10, 0xca, 0x89, 0x5f, 0xac, 0x81, 0x49, 0x49, 0x81, 0xf2,
	0x38, 0x4e, 0x62, 0x1a, 0x8b, 0x28, 0xb2, 0x95, 0xee, 0xb1, 0x9a, 0xd4, 0xc3, 0x5b, 0x37, 0x0e,
	0xc9, 0x3d, 0xb5, 0x77, 0x6b, 0x7a, 0x48, 0x5a, 0x2a, 0xb7, 0x7b, 0xde, 0xb3, 0xf7, 0x7d, 0x53,
	0x18, 0x16, 0x7a, 0x64, 0xea, 0x97, 0x9b, 0xe0, 0xf7, 0x2a, 0x76, 0xef, 0x1e, 0xcf, 0x83, 0x6b,
	0x55, 0x9f, 0x13, 0x1f, 0x18, 0xa0, 0xd3, 0xc7, 0x5f, 0x63, 0x28, 0xa6, 0xc4, 0x9e, 0xbf, 0x24,
	0xe4, 0x56, 0x29, 0x34, 0x01, 0x16, 0x51, 0x01, 0x29, 0x33, 0x9c, 0x89, 0xc8, 0x24, 0x4c, 0x45,
	0xce, 0xa4, 0x39, 0xcd, 0xf8, 0xd2, 0x49, 0x8f, 0x0d, 0x83, 0x5d, 0x3d, 0x32, 0x50, 0x3f, 0x44,
	0x6f, 0x2e, 0xed, 0x7c, 0xe9, 0xe4, 0x97, 0x87, 0xdd, 0xce, 0xb0, 0xba, 0xfe, 0x95, 0x6f, 0x62,
	0xcd, 0xee, 0x07, 0xd7, 0x1d, 0xef, 0x97, 0x2b, 0xb7, 0xeb, 0x78, 0x4f, 0x9c, 0xdb, 0x0d, 0x93,
	0x98, 0x31, 0x95, 0xa6, 0x10, 0x1b, 0x62, 0xf5, 0x0c, 0x11, 0xe0, 0x8a, 0xc7, 0xa0, 0x04, 0x56,
	0x11, 0x8a, 0x25, 0x4d, 0x9d, 0x30, 0x3f, 0xe4, 0xf5, 0x1d, 0xde, 0xfd, 0x6d, 0x7e, 0xd0, 0xbb,
	0x6e, 0x5b, 0xbe, 0x5f, 0x0f, 0x53, 0xc8, 0x6c, 0x1c, 0xfc, 0x7e, 0xaf, 0xb5, 0x2a, 0xcd, 0x30,
	0xb6, 0xdd, 0x5f, 0xc3, 0x42, 0x45, 0x52, 0x6b, 0x7b, 0x47, 0x52, 0x76, 0x0a, 0xa4, 0x04, 0xc1,
	0x28, 0x05, 0x1d, 0x0a, 0x1d, 0x1b, 0x81, 0x55, 0x2c, 0x75, 0xf7, 0x57, 0x9a, 0x37, 0x0a, 0x3d,
	0xbb, 0xbc, 0x37, 0xcb, 0x0f, 0xa6, 0x83, 0xe9, 0x2c, 0x3f, 0xcc, 0x8a, 0x2c, 0x77, 0x0a, 0xf4,
	0xfc, 0xee, 0x95, 0xad, 0x6b, 0x2f, 0x34, 0x04, 0x76, 0x6d, 0xee, 0xf7, 0xbc, 0x47, 0xaa, 0x67,
	0xd4, 0x91, 0xe6, 0xb3, 0xc3, 0x4c, 0x1f, 0x05, 0x3f, 0xaa, 0x58, 0xbc, 0x7e, 0x3c, 0x0f, 0x48,
	0x15, 0x84, 0x36, 0xe8, 0xaf, 0x85, 0x8a, 0x27, 0xa1, 0x56, 0x06, 0x0c, 0x8a, 0x30, 0x20, 0x82,
	0x42, 0x10, 0x11, 0x53, 0x10, 0x21, 0x89, 0x64, 0x2a, 0x68, 0x14, 0xbb, 0xd5, 0xb8, 0xe0, 0x9d,
	0x5e, 0x74, 0x3a, 0x7d, 0xc5, 0xfe, 0xfb, 0xcd, 0x4c, 0x1f, 0x6d, 0x2e, 0xed, 0x3c, 0xec, 0x5e,
	0x42, 0xdb, 0xd8, 0xdf, 0x35, 0xf6, 0x48, 0x64, 0x7b, 0xd9, 0x74, 0x78, 0x50, 0x66, 0xa3, 0xac,
	0xcc, 0x74, 0xa7, 0x9a, 0xff, 0x71, 0xc5, 0x47, 0x2f, 0xfc, 0xd1, 0x7d, 0xb1, 0xfe, 0x9a, 0x48,
	0x51, 0xa2, 0x30, 0xb5, 0x46, 0x83, 0x68, 0x40, 0x84, 0x27, 0x20, 0x64, 0x9a, 0x82, 0x8c, 0x91,
	0x34, 0x1c, 0xf1, 0xd4, 0x48, 0xde, 0x7d, 0xf3, 0xaf, 0x9f, 0x34, 0xde, 0x68, 0x52, 0x35, 0xda,
	0xbc, 0x61, 0x47, 0x68, 0x5b, 0x9b, 0xad, 0xbe, 0x71, 0xde, 0x3b, 0x25, 0xab, 0x5f, 0x81, 0xbd,
	0x7f, 0x9e, 0xf7, 0x3e, 0xb8, 0xfe, 0xe1, 0xbc, 0xf7, 0xc9, 0x83, 0xdb, 0xfd, 0xe5, 0xff, 0xb7,
	0xf2, 0xc0, 0x76, 0x7f, 0xf9, 0x81, 0x95, 0xfe, 0x76, 0x7f, 0xb9, 0xbf, 0xf2, 0x85, 0xed, 0xfe,
	0xb2, 0xb7, 0x72, 0x66, 0xbb, 0xbf, 0x7c, 0x66, 0xe5, 0xa1, 0xed, 0xfe, 0xf2, 0x43, 0x2b, 0x0f,
	0x6f, 0xf7, 0x97, 0x1f, 0x5f, 0x09, 0xb6, 0xfb, 0xcb, 0x78, 0x85, 0x6c, 0xf7, 0x97, 0xd3, 0x15,
	0xba, 0xdd, 0x5f, 0x66, 0x2b, 0x2f, 0x6e, 0xf7, 0x97, 0xd7, 0x57, 0x36, 0xb6, 0xfb, 0xcb, 0x93,
	0x95, 0x7c, 0xbb, 0xbf, 0x3c, 0x5d, 0xf9, 0xce, 0x76, 0x7f, 0xf9, 0x3b, 0x2b, 0xb3, 0xed, 0xfe,
	0xf2, 0x6c, 0xa5, 0xd8, 0xee, 0x2f, 0x97, 0x2b, 0x07, 0xdb, 0xfd, 0xe5, 0xa3, 0x95, 0x77, 0xb6,
	0x4f, 0x2d, 0x7f, 0xf2, 0xe0, 0xca, 0x2f, 0x1e, 0xdc, 0x78, 0xbf, 0xf7, 0xe1, 0x47, 0xab, 0x4b,
	0x3f, 0xff, 0x68, 0x75, 0xe9, 0x97, 0x1f, 0xad, 0xf6, 0xde, 0xbf, 0xb3, 0xda, 0xfb, 0x9b, 0x3b,
	0xab, 0xbd, 0x7f, 0xbf, 0xb3, 0xda, 0xfb, 0xf0, 0xce, 0x6a, 0xef, 0xbf, 0xef, 0xac, 0xf6, 0x7e,
	0x71, 0x67, 0x75, 0xe9, 0x97, 0x77, 0x56, 0x7b, 0x7f, 0xfa, 0xf1, 0xea, 0xd2, 0x87, 0x1f, 0xaf,
	0x2e, 0xfd, 0xfc, 0xe3, 0xd5, 0xa5, 0xb7, 0xb6, 0xf7, 0xf2, 0xe9, 0xdb, 0x7b, 0x97, 0x9a, 0x1f,
	0x79, 0x2e, 0x1d, 0x14, 0x97, 0xdd, 0x3f, 0x26, 0x9f, 0x8d, 0xc1, 0xed, 0x12, 0xa5, 0x67, 0xed,
	0x6f, 0x40, 0x97, 0xa7, 0x62, 0x2f, 0xbf, 0xac, 0xdf, 0x29, 0xeb, 0x9f, 0xc7, 0xef, 0xfa, 0x25,
	0x5d, 0x9c, 0x72, 0x3f, 0x90, 0x27, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xb0, 0x5f, 0x90,
	0xad, 0x1f, 0x00, 0x00,
}

func (this *AddonServiceChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice)
	if !ok {
		that2, ok := that.(AddonServiceChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBase) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBase)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBase)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBase != that1.F5XcBase {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcConsoleBasic) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcConsoleBasic)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcConsoleBasic)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcConsoleBasic != that1.F5XcConsoleBasic {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcConsoleStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcConsoleStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcConsoleStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcConsoleStandard != that1.F5XcConsoleStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcConsoleAdvanced) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcConsoleAdvanced)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcConsoleAdvanced)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcConsoleAdvanced != that1.F5XcConsoleAdvanced {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcChildManagementStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcChildManagementStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcChildManagementStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcChildManagementStandard != that1.F5XcChildManagementStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSupportOperations) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSupportOperations)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSupportOperations)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSupportOperations != that1.F5XcSupportOperations {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSupportManagementStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSupportManagementStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSupportManagementStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSupportManagementStandard != that1.F5XcSupportManagementStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_VesIoVolterraDefault) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_VesIoVolterraDefault)
	if !ok {
		that2, ok := that.(AddonServiceChoice_VesIoVolterraDefault)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVolterraDefault != that1.VesIoVolterraDefault {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcDelegatedAccessStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcDelegatedAccessStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcDelegatedAccessStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcDelegatedAccessStandard != that1.F5XcDelegatedAccessStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ShapeBot) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ShapeBot)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ShapeBot)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ShapeBot != that1.ShapeBot {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ShapeRecognize) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ShapeRecognize)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ShapeRecognize)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ShapeRecognize != that1.ShapeRecognize {
		return false
	}
	return true
}
func (this *AddonServiceChoice_AidataBfdp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_AidataBfdp)
	if !ok {
		that2, ok := that.(AddonServiceChoice_AidataBfdp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AidataBfdp != that1.AidataBfdp {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcContentDeliveryNetworkStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcContentDeliveryNetworkStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcContentDeliveryNetworkStandard != that1.F5XcContentDeliveryNetworkStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_NginxMgmtSuite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_NginxMgmtSuite)
	if !ok {
		that2, ok := that.(AddonServiceChoice_NginxMgmtSuite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NginxMgmtSuite != that1.NginxMgmtSuite {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSyntheticMonitoringStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSyntheticMonitoringStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSyntheticMonitoringStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSyntheticMonitoringStandard != that1.F5XcSyntheticMonitoringStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_Safeap) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_Safeap)
	if !ok {
		that2, ok := that.(AddonServiceChoice_Safeap)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Safeap != that1.Safeap {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ClientSideDefense) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ClientSideDefense)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ClientSideDefense)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientSideDefense != that1.ClientSideDefense {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvanced) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBotDefenseAdvanced)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBotDefenseAdvanced)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBotDefenseAdvanced != that1.F5XcBotDefenseAdvanced {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBotDefensePremium) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBotDefensePremium)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBotDefensePremium)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBotDefensePremium != that1.F5XcBotDefensePremium {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBotDefenseBasic) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBotDefenseBasic)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBotDefenseBasic)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBotDefenseBasic != that1.F5XcBotDefenseBasic {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBigIpApm) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBigIpApm)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBigIpApm)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBigIpApm != that1.F5XcBigIpApm {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcMobileIntegrator) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcMobileIntegrator)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcMobileIntegrator)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcMobileIntegrator != that1.F5XcMobileIntegrator {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcFlowCollection) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcFlowCollection)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcFlowCollection)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcFlowCollection != that1.F5XcFlowCollection {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcDataIntelligenceStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcDataIntelligenceStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcDataIntelligenceStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcDataIntelligenceStandard != that1.F5XcDataIntelligenceStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcRoutedDdosBasic) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcRoutedDdosBasic)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcRoutedDdosBasic)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcRoutedDdosBasic != that1.F5XcRoutedDdosBasic {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcWaapAdvanced) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcWaapAdvanced)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcWaapAdvanced)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcWaapAdvanced != that1.F5XcWaapAdvanced {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSecuremeshAdvanced) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSecuremeshAdvanced)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSecuremeshAdvanced)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSecuremeshAdvanced != that1.F5XcSecuremeshAdvanced {
		return false
	}
	return true
}
func (this *AddonServiceChoice_NginxOne) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_NginxOne)
	if !ok {
		that2, ok := that.(AddonServiceChoice_NginxOne)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NginxOne != that1.NginxOne {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcApplicationTrafficInsightBasic)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcApplicationTrafficInsightBasic)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcApplicationTrafficInsightBasic != that1.F5XcApplicationTrafficInsightBasic {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSecuremeshStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSecuremeshStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSecuremeshStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSecuremeshStandard != that1.F5XcSecuremeshStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcWaapStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcWaapStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcWaapStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcWaapStandard != that1.F5XcWaapStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcAppstackStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcAppstackStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcAppstackStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcAppstackStandard != that1.F5XcAppstackStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcSiteManagementStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcSiteManagementStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcSiteManagementStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcSiteManagementStandard != that1.F5XcSiteManagementStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcRoutedDdosStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcRoutedDdosStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcRoutedDdosStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcRoutedDdosStandard != that1.F5XcRoutedDdosStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcDnsStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcDnsStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcDnsStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcDnsStandard != that1.F5XcDnsStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcApplicationTrafficInsightStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcApplicationTrafficInsightStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcApplicationTrafficInsightStandard != that1.F5XcApplicationTrafficInsightStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBotDefenseStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBotDefenseStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBotDefenseStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBotDefenseStandard != that1.F5XcBotDefenseStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcWebAppScanningStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcWebAppScanningStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcWebAppScanningStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcWebAppScanningStandard != that1.F5XcWebAppScanningStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcAiAssistantStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcAiAssistantStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcAiAssistantStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcAiAssistantStandard != that1.F5XcAiAssistantStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcFlowAnomalyDetectionStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcFlowAnomalyDetectionStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcFlowAnomalyDetectionStandard != that1.F5XcFlowAnomalyDetectionStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcUniversalZtnaStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcUniversalZtnaStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcUniversalZtnaStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcUniversalZtnaStandard != that1.F5XcUniversalZtnaStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcIpv6Standard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcIpv6Standard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcIpv6Standard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcIpv6Standard != that1.F5XcIpv6Standard {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBotDefenseAdvancedSelfservice != that1.F5XcBotDefenseAdvancedSelfservice {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcNone) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcNone)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcNone)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcNone != that1.F5XcNone {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcScim) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcScim)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcScim)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcScim != that1.F5XcScim {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcClearview) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcClearview)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcClearview)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcClearview != that1.F5XcClearview {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBigipUtilitiesStandard) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBigipUtilitiesStandard)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBigipUtilitiesStandard)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBigipUtilitiesStandard != that1.F5XcBigipUtilitiesStandard {
		return false
	}
	return true
}
func (this *AddonServiceChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 51)
	s = append(s, "&vesenv.AddonServiceChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddonServiceChoice_F5XcBase) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBase{` +
		`F5XcBase:` + fmt.Sprintf("%#v", this.F5XcBase) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleBasic) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcConsoleBasic{` +
		`F5XcConsoleBasic:` + fmt.Sprintf("%#v", this.F5XcConsoleBasic) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcConsoleStandard{` +
		`F5XcConsoleStandard:` + fmt.Sprintf("%#v", this.F5XcConsoleStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleAdvanced) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcConsoleAdvanced{` +
		`F5XcConsoleAdvanced:` + fmt.Sprintf("%#v", this.F5XcConsoleAdvanced) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcChildManagementStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcChildManagementStandard{` +
		`F5XcChildManagementStandard:` + fmt.Sprintf("%#v", this.F5XcChildManagementStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSupportOperations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSupportOperations{` +
		`F5XcSupportOperations:` + fmt.Sprintf("%#v", this.F5XcSupportOperations) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSupportManagementStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSupportManagementStandard{` +
		`F5XcSupportManagementStandard:` + fmt.Sprintf("%#v", this.F5XcSupportManagementStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_VesIoVolterraDefault) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_VesIoVolterraDefault{` +
		`VesIoVolterraDefault:` + fmt.Sprintf("%#v", this.VesIoVolterraDefault) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcDelegatedAccessStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcDelegatedAccessStandard{` +
		`F5XcDelegatedAccessStandard:` + fmt.Sprintf("%#v", this.F5XcDelegatedAccessStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ShapeBot) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ShapeBot{` +
		`ShapeBot:` + fmt.Sprintf("%#v", this.ShapeBot) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ShapeRecognize) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ShapeRecognize{` +
		`ShapeRecognize:` + fmt.Sprintf("%#v", this.ShapeRecognize) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_AidataBfdp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_AidataBfdp{` +
		`AidataBfdp:` + fmt.Sprintf("%#v", this.AidataBfdp) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcContentDeliveryNetworkStandard{` +
		`F5XcContentDeliveryNetworkStandard:` + fmt.Sprintf("%#v", this.F5XcContentDeliveryNetworkStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_NginxMgmtSuite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_NginxMgmtSuite{` +
		`NginxMgmtSuite:` + fmt.Sprintf("%#v", this.NginxMgmtSuite) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSyntheticMonitoringStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSyntheticMonitoringStandard{` +
		`F5XcSyntheticMonitoringStandard:` + fmt.Sprintf("%#v", this.F5XcSyntheticMonitoringStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_Safeap) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_Safeap{` +
		`Safeap:` + fmt.Sprintf("%#v", this.Safeap) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ClientSideDefense) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ClientSideDefense{` +
		`ClientSideDefense:` + fmt.Sprintf("%#v", this.ClientSideDefense) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvanced) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBotDefenseAdvanced{` +
		`F5XcBotDefenseAdvanced:` + fmt.Sprintf("%#v", this.F5XcBotDefenseAdvanced) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefensePremium) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBotDefensePremium{` +
		`F5XcBotDefensePremium:` + fmt.Sprintf("%#v", this.F5XcBotDefensePremium) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseBasic) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBotDefenseBasic{` +
		`F5XcBotDefenseBasic:` + fmt.Sprintf("%#v", this.F5XcBotDefenseBasic) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBigIpApm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBigIpApm{` +
		`F5XcBigIpApm:` + fmt.Sprintf("%#v", this.F5XcBigIpApm) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcMobileIntegrator) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcMobileIntegrator{` +
		`F5XcMobileIntegrator:` + fmt.Sprintf("%#v", this.F5XcMobileIntegrator) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcFlowCollection) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcFlowCollection{` +
		`F5XcFlowCollection:` + fmt.Sprintf("%#v", this.F5XcFlowCollection) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcDataIntelligenceStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcDataIntelligenceStandard{` +
		`F5XcDataIntelligenceStandard:` + fmt.Sprintf("%#v", this.F5XcDataIntelligenceStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcRoutedDdosBasic) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcRoutedDdosBasic{` +
		`F5XcRoutedDdosBasic:` + fmt.Sprintf("%#v", this.F5XcRoutedDdosBasic) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcWaapAdvanced) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcWaapAdvanced{` +
		`F5XcWaapAdvanced:` + fmt.Sprintf("%#v", this.F5XcWaapAdvanced) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSecuremeshAdvanced) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSecuremeshAdvanced{` +
		`F5XcSecuremeshAdvanced:` + fmt.Sprintf("%#v", this.F5XcSecuremeshAdvanced) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_NginxOne) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_NginxOne{` +
		`NginxOne:` + fmt.Sprintf("%#v", this.NginxOne) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcApplicationTrafficInsightBasic{` +
		`F5XcApplicationTrafficInsightBasic:` + fmt.Sprintf("%#v", this.F5XcApplicationTrafficInsightBasic) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSecuremeshStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSecuremeshStandard{` +
		`F5XcSecuremeshStandard:` + fmt.Sprintf("%#v", this.F5XcSecuremeshStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcWaapStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcWaapStandard{` +
		`F5XcWaapStandard:` + fmt.Sprintf("%#v", this.F5XcWaapStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcAppstackStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcAppstackStandard{` +
		`F5XcAppstackStandard:` + fmt.Sprintf("%#v", this.F5XcAppstackStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcSiteManagementStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcSiteManagementStandard{` +
		`F5XcSiteManagementStandard:` + fmt.Sprintf("%#v", this.F5XcSiteManagementStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcRoutedDdosStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcRoutedDdosStandard{` +
		`F5XcRoutedDdosStandard:` + fmt.Sprintf("%#v", this.F5XcRoutedDdosStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcDnsStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcDnsStandard{` +
		`F5XcDnsStandard:` + fmt.Sprintf("%#v", this.F5XcDnsStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcApplicationTrafficInsightStandard{` +
		`F5XcApplicationTrafficInsightStandard:` + fmt.Sprintf("%#v", this.F5XcApplicationTrafficInsightStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBotDefenseStandard{` +
		`F5XcBotDefenseStandard:` + fmt.Sprintf("%#v", this.F5XcBotDefenseStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcWebAppScanningStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcWebAppScanningStandard{` +
		`F5XcWebAppScanningStandard:` + fmt.Sprintf("%#v", this.F5XcWebAppScanningStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcAiAssistantStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcAiAssistantStandard{` +
		`F5XcAiAssistantStandard:` + fmt.Sprintf("%#v", this.F5XcAiAssistantStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcFlowAnomalyDetectionStandard{` +
		`F5XcFlowAnomalyDetectionStandard:` + fmt.Sprintf("%#v", this.F5XcFlowAnomalyDetectionStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcUniversalZtnaStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcUniversalZtnaStandard{` +
		`F5XcUniversalZtnaStandard:` + fmt.Sprintf("%#v", this.F5XcUniversalZtnaStandard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcIpv6Standard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcIpv6Standard{` +
		`F5XcIpv6Standard:` + fmt.Sprintf("%#v", this.F5XcIpv6Standard) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice{` +
		`F5XcBotDefenseAdvancedSelfservice:` + fmt.Sprintf("%#v", this.F5XcBotDefenseAdvancedSelfservice) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcNone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcNone{` +
		`F5XcNone:` + fmt.Sprintf("%#v", this.F5XcNone) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcScim) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcScim{` +
		`F5XcScim:` + fmt.Sprintf("%#v", this.F5XcScim) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcClearview) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcClearview{` +
		`F5XcClearview:` + fmt.Sprintf("%#v", this.F5XcClearview) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_F5XcBigipUtilitiesStandard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBigipUtilitiesStandard{` +
		`F5XcBigipUtilitiesStandard:` + fmt.Sprintf("%#v", this.F5XcBigipUtilitiesStandard) + `}`}, ", ")
	return s
}
func valueToGoStringAllAddonServices(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *AddonServiceChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddonServiceChoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		{
			size := m.Choice.Size()
			i -= size
			if _, err := m.Choice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *AddonServiceChoice_F5XcBase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBase {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSupportManagementStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSupportManagementStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSupportManagementStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcConsoleBasic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcConsoleBasic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcConsoleBasic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x68
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcConsoleStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcConsoleStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcConsoleStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x70
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcConsoleAdvanced) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcConsoleAdvanced) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcConsoleAdvanced {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x78
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_VesIoVolterraDefault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_VesIoVolterraDefault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVolterraDefault {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcDelegatedAccessStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcDelegatedAccessStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcDelegatedAccessStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ShapeBot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ShapeBot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ShapeBot {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ShapeRecognize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ShapeRecognize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ShapeRecognize {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_AidataBfdp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_AidataBfdp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.AidataBfdp {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_NginxMgmtSuite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_NginxMgmtSuite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.NginxMgmtSuite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_Safeap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_Safeap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Safeap {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ClientSideDefense) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ClientSideDefense) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ClientSideDefense {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBotDefenseAdvanced) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBotDefenseAdvanced) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBotDefenseAdvanced {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBotDefensePremium) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBotDefensePremium) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBotDefensePremium {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBotDefenseBasic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBotDefenseBasic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBotDefenseBasic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBigIpApm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBigIpApm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBigIpApm {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcMobileIntegrator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcMobileIntegrator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcMobileIntegrator {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcFlowCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcFlowCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcFlowCollection {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcRoutedDdosBasic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcRoutedDdosBasic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcRoutedDdosBasic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcWaapAdvanced) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcWaapAdvanced) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcWaapAdvanced {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSecuremeshAdvanced) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSecuremeshAdvanced) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSecuremeshAdvanced {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_NginxOne) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_NginxOne) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.NginxOne {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcApplicationTrafficInsightBasic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSecuremeshStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSecuremeshStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSecuremeshStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcWaapStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcWaapStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcWaapStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcAppstackStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcAppstackStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcAppstackStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSiteManagementStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSiteManagementStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSiteManagementStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcRoutedDdosStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcRoutedDdosStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcRoutedDdosStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcDnsStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcDnsStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcDnsStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcApplicationTrafficInsightStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBotDefenseStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBotDefenseStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBotDefenseStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x7
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcWebAppScanningStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcWebAppScanningStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcWebAppScanningStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcAiAssistantStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcAiAssistantStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcAiAssistantStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcFlowAnomalyDetectionStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcUniversalZtnaStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcUniversalZtnaStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcUniversalZtnaStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcIpv6Standard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcIpv6Standard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcIpv6Standard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBotDefenseAdvancedSelfservice {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcScim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcScim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcScim {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcChildManagementStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcChildManagementStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcChildManagementStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSupportOperations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSupportOperations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSupportOperations {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcDataIntelligenceStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcDataIntelligenceStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcDataIntelligenceStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcClearview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcClearview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcClearview {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcContentDeliveryNetworkStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcBigipUtilitiesStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBigipUtilitiesStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBigipUtilitiesStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcSyntheticMonitoringStandard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcSyntheticMonitoringStandard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcSyntheticMonitoringStandard {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_F5XcNone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcNone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcNone {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xf0
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func encodeVarintAllAddonServices(dAtA []byte, offset int, v uint64) int {
	offset -= sovAllAddonServices(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AddonServiceChoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *AddonServiceChoice_F5XcBase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_F5XcSupportManagementStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_F5XcConsoleBasic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_F5XcConsoleStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_F5XcConsoleAdvanced) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_VesIoVolterraDefault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcDelegatedAccessStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ShapeBot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ShapeRecognize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_AidataBfdp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_NginxMgmtSuite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_Safeap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ClientSideDefense) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBotDefenseAdvanced) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBotDefensePremium) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBotDefenseBasic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBigIpApm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcMobileIntegrator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcFlowCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcRoutedDdosBasic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcWaapAdvanced) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcSecuremeshAdvanced) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_NginxOne) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcSecuremeshStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcWaapStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcAppstackStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcSiteManagementStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcRoutedDdosStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcDnsStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBotDefenseStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcWebAppScanningStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcAiAssistantStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcUniversalZtnaStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcIpv6Standard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcScim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcChildManagementStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcSupportOperations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcDataIntelligenceStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcClearview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcBigipUtilitiesStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcSyntheticMonitoringStandard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_F5XcNone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 4
	return n
}

func sovAllAddonServices(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAllAddonServices(x uint64) (n int) {
	return sovAllAddonServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *AddonServiceChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBase) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBase{`,
		`F5XcBase:` + fmt.Sprintf("%v", this.F5XcBase) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSupportManagementStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSupportManagementStandard{`,
		`F5XcSupportManagementStandard:` + fmt.Sprintf("%v", this.F5XcSupportManagementStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleBasic) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcConsoleBasic{`,
		`F5XcConsoleBasic:` + fmt.Sprintf("%v", this.F5XcConsoleBasic) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcConsoleStandard{`,
		`F5XcConsoleStandard:` + fmt.Sprintf("%v", this.F5XcConsoleStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcConsoleAdvanced) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcConsoleAdvanced{`,
		`F5XcConsoleAdvanced:` + fmt.Sprintf("%v", this.F5XcConsoleAdvanced) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_VesIoVolterraDefault) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_VesIoVolterraDefault{`,
		`VesIoVolterraDefault:` + fmt.Sprintf("%v", this.VesIoVolterraDefault) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcDelegatedAccessStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcDelegatedAccessStandard{`,
		`F5XcDelegatedAccessStandard:` + fmt.Sprintf("%v", this.F5XcDelegatedAccessStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ShapeBot) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ShapeBot{`,
		`ShapeBot:` + fmt.Sprintf("%v", this.ShapeBot) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ShapeRecognize) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ShapeRecognize{`,
		`ShapeRecognize:` + fmt.Sprintf("%v", this.ShapeRecognize) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_AidataBfdp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_AidataBfdp{`,
		`AidataBfdp:` + fmt.Sprintf("%v", this.AidataBfdp) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_NginxMgmtSuite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_NginxMgmtSuite{`,
		`NginxMgmtSuite:` + fmt.Sprintf("%v", this.NginxMgmtSuite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_Safeap) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_Safeap{`,
		`Safeap:` + fmt.Sprintf("%v", this.Safeap) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ClientSideDefense) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ClientSideDefense{`,
		`ClientSideDefense:` + fmt.Sprintf("%v", this.ClientSideDefense) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvanced) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBotDefenseAdvanced{`,
		`F5XcBotDefenseAdvanced:` + fmt.Sprintf("%v", this.F5XcBotDefenseAdvanced) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefensePremium) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBotDefensePremium{`,
		`F5XcBotDefensePremium:` + fmt.Sprintf("%v", this.F5XcBotDefensePremium) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseBasic) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBotDefenseBasic{`,
		`F5XcBotDefenseBasic:` + fmt.Sprintf("%v", this.F5XcBotDefenseBasic) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBigIpApm) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBigIpApm{`,
		`F5XcBigIpApm:` + fmt.Sprintf("%v", this.F5XcBigIpApm) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcMobileIntegrator) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcMobileIntegrator{`,
		`F5XcMobileIntegrator:` + fmt.Sprintf("%v", this.F5XcMobileIntegrator) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcFlowCollection) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcFlowCollection{`,
		`F5XcFlowCollection:` + fmt.Sprintf("%v", this.F5XcFlowCollection) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcRoutedDdosBasic) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcRoutedDdosBasic{`,
		`F5XcRoutedDdosBasic:` + fmt.Sprintf("%v", this.F5XcRoutedDdosBasic) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcWaapAdvanced) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcWaapAdvanced{`,
		`F5XcWaapAdvanced:` + fmt.Sprintf("%v", this.F5XcWaapAdvanced) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSecuremeshAdvanced) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSecuremeshAdvanced{`,
		`F5XcSecuremeshAdvanced:` + fmt.Sprintf("%v", this.F5XcSecuremeshAdvanced) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_NginxOne) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_NginxOne{`,
		`NginxOne:` + fmt.Sprintf("%v", this.NginxOne) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightBasic) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcApplicationTrafficInsightBasic{`,
		`F5XcApplicationTrafficInsightBasic:` + fmt.Sprintf("%v", this.F5XcApplicationTrafficInsightBasic) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSecuremeshStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSecuremeshStandard{`,
		`F5XcSecuremeshStandard:` + fmt.Sprintf("%v", this.F5XcSecuremeshStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcWaapStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcWaapStandard{`,
		`F5XcWaapStandard:` + fmt.Sprintf("%v", this.F5XcWaapStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcAppstackStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcAppstackStandard{`,
		`F5XcAppstackStandard:` + fmt.Sprintf("%v", this.F5XcAppstackStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSiteManagementStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSiteManagementStandard{`,
		`F5XcSiteManagementStandard:` + fmt.Sprintf("%v", this.F5XcSiteManagementStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcRoutedDdosStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcRoutedDdosStandard{`,
		`F5XcRoutedDdosStandard:` + fmt.Sprintf("%v", this.F5XcRoutedDdosStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcDnsStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcDnsStandard{`,
		`F5XcDnsStandard:` + fmt.Sprintf("%v", this.F5XcDnsStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcApplicationTrafficInsightStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcApplicationTrafficInsightStandard{`,
		`F5XcApplicationTrafficInsightStandard:` + fmt.Sprintf("%v", this.F5XcApplicationTrafficInsightStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBotDefenseStandard{`,
		`F5XcBotDefenseStandard:` + fmt.Sprintf("%v", this.F5XcBotDefenseStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcWebAppScanningStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcWebAppScanningStandard{`,
		`F5XcWebAppScanningStandard:` + fmt.Sprintf("%v", this.F5XcWebAppScanningStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcAiAssistantStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcAiAssistantStandard{`,
		`F5XcAiAssistantStandard:` + fmt.Sprintf("%v", this.F5XcAiAssistantStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcFlowAnomalyDetectionStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcFlowAnomalyDetectionStandard{`,
		`F5XcFlowAnomalyDetectionStandard:` + fmt.Sprintf("%v", this.F5XcFlowAnomalyDetectionStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcUniversalZtnaStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcUniversalZtnaStandard{`,
		`F5XcUniversalZtnaStandard:` + fmt.Sprintf("%v", this.F5XcUniversalZtnaStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcIpv6Standard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcIpv6Standard{`,
		`F5XcIpv6Standard:` + fmt.Sprintf("%v", this.F5XcIpv6Standard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice{`,
		`F5XcBotDefenseAdvancedSelfservice:` + fmt.Sprintf("%v", this.F5XcBotDefenseAdvancedSelfservice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcScim) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcScim{`,
		`F5XcScim:` + fmt.Sprintf("%v", this.F5XcScim) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcChildManagementStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcChildManagementStandard{`,
		`F5XcChildManagementStandard:` + fmt.Sprintf("%v", this.F5XcChildManagementStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSupportOperations) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSupportOperations{`,
		`F5XcSupportOperations:` + fmt.Sprintf("%v", this.F5XcSupportOperations) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcDataIntelligenceStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcDataIntelligenceStandard{`,
		`F5XcDataIntelligenceStandard:` + fmt.Sprintf("%v", this.F5XcDataIntelligenceStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcClearview) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcClearview{`,
		`F5XcClearview:` + fmt.Sprintf("%v", this.F5XcClearview) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcContentDeliveryNetworkStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcContentDeliveryNetworkStandard{`,
		`F5XcContentDeliveryNetworkStandard:` + fmt.Sprintf("%v", this.F5XcContentDeliveryNetworkStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBigipUtilitiesStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBigipUtilitiesStandard{`,
		`F5XcBigipUtilitiesStandard:` + fmt.Sprintf("%v", this.F5XcBigipUtilitiesStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcSyntheticMonitoringStandard) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcSyntheticMonitoringStandard{`,
		`F5XcSyntheticMonitoringStandard:` + fmt.Sprintf("%v", this.F5XcSyntheticMonitoringStandard) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcNone) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcNone{`,
		`F5XcNone:` + fmt.Sprintf("%v", this.F5XcNone) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllAddonServices(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AddonServiceChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllAddonServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddonServiceChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddonServiceChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBase", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBase{b}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSupportManagementStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSupportManagementStandard{b}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcConsoleBasic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcConsoleBasic{b}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcConsoleStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcConsoleStandard{b}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcConsoleAdvanced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcConsoleAdvanced{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVolterraDefault", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_VesIoVolterraDefault{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcDelegatedAccessStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcDelegatedAccessStandard{b}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShapeBot", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ShapeBot{b}
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShapeRecognize", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ShapeRecognize{b}
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AidataBfdp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_AidataBfdp{b}
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NginxMgmtSuite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_NginxMgmtSuite{b}
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Safeap", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_Safeap{b}
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSideDefense", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ClientSideDefense{b}
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBotDefenseAdvanced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBotDefenseAdvanced{b}
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBotDefensePremium", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBotDefensePremium{b}
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBotDefenseBasic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBotDefenseBasic{b}
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBigIpApm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBigIpApm{b}
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcMobileIntegrator", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcMobileIntegrator{b}
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcFlowCollection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcFlowCollection{b}
		case 106:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcRoutedDdosBasic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcRoutedDdosBasic{b}
		case 111:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcWaapAdvanced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcWaapAdvanced{b}
		case 115:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSecuremeshAdvanced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSecuremeshAdvanced{b}
		case 117:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NginxOne", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_NginxOne{b}
		case 118:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcApplicationTrafficInsightBasic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcApplicationTrafficInsightBasic{b}
		case 120:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSecuremeshStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSecuremeshStandard{b}
		case 121:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcWaapStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcWaapStandard{b}
		case 122:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcAppstackStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcAppstackStandard{b}
		case 123:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSiteManagementStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSiteManagementStandard{b}
		case 124:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcRoutedDdosStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcRoutedDdosStandard{b}
		case 125:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcDnsStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcDnsStandard{b}
		case 126:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcApplicationTrafficInsightStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcApplicationTrafficInsightStandard{b}
		case 127:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBotDefenseStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBotDefenseStandard{b}
		case 128:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcWebAppScanningStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcWebAppScanningStandard{b}
		case 129:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcAiAssistantStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcAiAssistantStandard{b}
		case 130:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcFlowAnomalyDetectionStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcFlowAnomalyDetectionStandard{b}
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcUniversalZtnaStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcUniversalZtnaStandard{b}
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcIpv6Standard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcIpv6Standard{b}
		case 133:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBotDefenseAdvancedSelfservice", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBotDefenseAdvancedSelfservice{b}
		case 134:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcScim", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcScim{b}
		case 135:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcChildManagementStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcChildManagementStandard{b}
		case 136:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSupportOperations", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSupportOperations{b}
		case 137:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcDataIntelligenceStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcDataIntelligenceStandard{b}
		case 138:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcClearview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcClearview{b}
		case 139:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcContentDeliveryNetworkStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcContentDeliveryNetworkStandard{b}
		case 140:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBigipUtilitiesStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBigipUtilitiesStandard{b}
		case 142:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcSyntheticMonitoringStandard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcSyntheticMonitoringStandard{b}
		case 9999:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcNone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcNone{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllAddonServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllAddonServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAllAddonServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllAddonServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllAddonServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAllAddonServices
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAllAddonServices
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAllAddonServices
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAllAddonServices        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllAddonServices          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAllAddonServices = fmt.Errorf("proto: unexpected end of group")
)

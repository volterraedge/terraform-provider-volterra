// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package vesenv

import (
	"context"
	"fmt"
	"strings"

	"github.com/gogo/protobuf/proto"

	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
)

var (
	// dummy imports in case file has no message with Refs
	_ db.Interface
	_ = errors.Wrap
	_ = strings.Split
)

// augmented methods on protoc/std generated struct

func (m *APIGroupChoice) ToJSON() (string, error) {
	return codec.ToJSON(m)
}

func (m *APIGroupChoice) ToYAML() (string, error) {
	return codec.ToYAML(m)
}

func (m *APIGroupChoice) DeepCopy() *APIGroupChoice {
	if m == nil {
		return nil
	}
	ser, err := m.Marshal()
	if err != nil {
		return nil
	}
	c := &APIGroupChoice{}
	err = c.Unmarshal(ser)
	if err != nil {
		return nil
	}
	return c
}

func (m *APIGroupChoice) DeepCopyProto() proto.Message {
	if m == nil {
		return nil
	}
	return m.DeepCopy()
}

func (m *APIGroupChoice) Validate(ctx context.Context, opts ...db.ValidateOpt) error {
	return APIGroupChoiceValidator().Validate(ctx, m, opts...)
}

type ValidateAPIGroupChoice struct {
	FldValidators map[string]db.ValidatorFunc
}

func (v *ValidateAPIGroupChoice) Validate(ctx context.Context, pm interface{}, opts ...db.ValidateOpt) error {
	m, ok := pm.(*APIGroupChoice)
	if !ok {
		switch t := pm.(type) {
		case nil:
			return nil
		default:
			return fmt.Errorf("Expected type *APIGroupChoice got type %s", t)
		}
	}
	if m == nil {
		return nil
	}

	switch m.GetChoice().(type) {
	case *APIGroupChoice_InfrastructureDemoAccessRead:
		if fv, exists := v.FldValidators["choice.infrastructure_demo_access_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_InfrastructureDemoAccessRead).InfrastructureDemoAccessRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("infrastructure_demo_access_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoBillingRead:
		if fv, exists := v.FldValidators["choice.ves_io_billing_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoBillingRead).VesIoBillingRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_billing_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoBillingWrite:
		if fv, exists := v.FldValidators["choice.ves_io_billing_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoBillingWrite).VesIoBillingWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_billing_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoGeneralRead:
		if fv, exists := v.FldValidators["choice.ves_io_general_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoGeneralRead).VesIoGeneralRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_general_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoGeneralWrite:
		if fv, exists := v.FldValidators["choice.ves_io_general_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoGeneralWrite).VesIoGeneralWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_general_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoIaasCaasRead:
		if fv, exists := v.FldValidators["choice.ves_io_iaas_caas_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasRead).VesIoIaasCaasRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_iaas_caas_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoIaasCaasWrite:
		if fv, exists := v.FldValidators["choice.ves_io_iaas_caas_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasWrite).VesIoIaasCaasWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_iaas_caas_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInfraMonitorRead:
		if fv, exists := v.FldValidators["choice.ves_io_infra_monitor_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorRead).VesIoInfraMonitorRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_infra_monitor_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInfraMonitorWrite:
		if fv, exists := v.FldValidators["choice.ves_io_infra_monitor_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorWrite).VesIoInfraMonitorWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_infra_monitor_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInfrastructureRead:
		if fv, exists := v.FldValidators["choice.ves_io_infrastructure_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureRead).VesIoInfrastructureRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_infrastructure_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInfrastructureWrite:
		if fv, exists := v.FldValidators["choice.ves_io_infrastructure_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureWrite).VesIoInfrastructureWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_infrastructure_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInternalRead:
		if fv, exists := v.FldValidators["choice.ves_io_internal_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInternalRead).VesIoInternalRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_internal_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoInternalWrite:
		if fv, exists := v.FldValidators["choice.ves_io_internal_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoInternalWrite).VesIoInternalWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_internal_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoK8SRead:
		if fv, exists := v.FldValidators["choice.ves_io_k8s_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoK8SRead).VesIoK8SRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_k8s_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoK8SWrite:
		if fv, exists := v.FldValidators["choice.ves_io_k8s_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoK8SWrite).VesIoK8SWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_k8s_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoLabelsRead:
		if fv, exists := v.FldValidators["choice.ves_io_labels_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoLabelsRead).VesIoLabelsRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_labels_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoLabelsWrite:
		if fv, exists := v.FldValidators["choice.ves_io_labels_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoLabelsWrite).VesIoLabelsWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_labels_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoLocalK8SWrite:
		if fv, exists := v.FldValidators["choice.ves_io_local_k8s_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoLocalK8SWrite).VesIoLocalK8SWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_local_k8s_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoMonitorRead:
		if fv, exists := v.FldValidators["choice.ves_io_monitor_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoMonitorRead).VesIoMonitorRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_monitor_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoMonitorWrite:
		if fv, exists := v.FldValidators["choice.ves_io_monitor_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoMonitorWrite).VesIoMonitorWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_monitor_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoNetworkRead:
		if fv, exists := v.FldValidators["choice.ves_io_network_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoNetworkRead).VesIoNetworkRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_network_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoNetworkWrite:
		if fv, exists := v.FldValidators["choice.ves_io_network_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoNetworkWrite).VesIoNetworkWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_network_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyMonitorRead:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_monitor_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorRead).VesIoProxyMonitorRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_monitor_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyMonitorWrite:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_monitor_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorWrite).VesIoProxyMonitorWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_monitor_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyRead:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyRead).VesIoProxyRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxySecurityRead:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_security_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityRead).VesIoProxySecurityRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_security_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxySecurityWrite:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_security_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityWrite).VesIoProxySecurityWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_security_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyWafRead:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_waf_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyWafRead).VesIoProxyWafRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_waf_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyWafWrite:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_waf_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyWafWrite).VesIoProxyWafWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_waf_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoProxyWrite:
		if fv, exists := v.FldValidators["choice.ves_io_proxy_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoProxyWrite).VesIoProxyWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_proxy_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoSecretsRead:
		if fv, exists := v.FldValidators["choice.ves_io_secrets_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoSecretsRead).VesIoSecretsRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_secrets_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoSecretsWrite:
		if fv, exists := v.FldValidators["choice.ves_io_secrets_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoSecretsWrite).VesIoSecretsWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_secrets_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoUamAdminRead:
		if fv, exists := v.FldValidators["choice.ves_io_uam_admin_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoUamAdminRead).VesIoUamAdminRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_uam_admin_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoUamAdminWrite:
		if fv, exists := v.FldValidators["choice.ves_io_uam_admin_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoUamAdminWrite).VesIoUamAdminWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_uam_admin_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoUamRead:
		if fv, exists := v.FldValidators["choice.ves_io_uam_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoUamRead).VesIoUamRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_uam_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoUamWrite:
		if fv, exists := v.FldValidators["choice.ves_io_uam_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoUamWrite).VesIoUamWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_uam_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoVirtualSitesRead:
		if fv, exists := v.FldValidators["choice.ves_io_virtual_sites_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesRead).VesIoVirtualSitesRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_virtual_sites_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoVirtualSitesWrite:
		if fv, exists := v.FldValidators["choice.ves_io_virtual_sites_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesWrite).VesIoVirtualSitesWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_virtual_sites_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoVoltShareRead:
		if fv, exists := v.FldValidators["choice.ves_io_volt_share_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoVoltShareRead).VesIoVoltShareRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_volt_share_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoVoltShareWrite:
		if fv, exists := v.FldValidators["choice.ves_io_volt_share_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoVoltShareWrite).VesIoVoltShareWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_volt_share_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoWebAccessRead:
		if fv, exists := v.FldValidators["choice.ves_io_web_access_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoWebAccessRead).VesIoWebAccessRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_web_access_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoWebAccessWrite:
		if fv, exists := v.FldValidators["choice.ves_io_web_access_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoWebAccessWrite).VesIoWebAccessWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_web_access_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoTenantOwnerRead:
		if fv, exists := v.FldValidators["choice.ves_io_tenant_owner_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoTenantOwnerRead).VesIoTenantOwnerRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_tenant_owner_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoTenantOwnerWrite:
		if fv, exists := v.FldValidators["choice.ves_io_tenant_owner_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoTenantOwnerWrite).VesIoTenantOwnerWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_tenant_owner_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoStoredObjectRead:
		if fv, exists := v.FldValidators["choice.ves_io_stored_object_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoStoredObjectRead).VesIoStoredObjectRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_stored_object_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoStoredObjectWrite:
		if fv, exists := v.FldValidators["choice.ves_io_stored_object_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoStoredObjectWrite).VesIoStoredObjectWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_stored_object_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeBotRead:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_bot_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotRead).VoltconsoleShapeBotRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_bot_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeBotWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_bot_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotWrite).VoltconsoleShapeBotWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_bot_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeBotAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_bot_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotAdmin).VoltconsoleShapeBotAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_bot_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_bot_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt).VoltconsoleShapeBotSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_bot_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeRecognizeRead:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_recognize_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeRead).VoltconsoleShapeRecognizeRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_recognize_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeRecognizeWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_recognize_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeWrite).VoltconsoleShapeRecognizeWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_recognize_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeRecognizeAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_recognize_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeAdmin).VoltconsoleShapeRecognizeAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_recognize_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_shape_recognize_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt).VoltconsoleShapeRecognizeSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_shape_recognize_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleAidataBfdpRead:
		if fv, exists := v.FldValidators["choice.voltconsole_aidata_bfdp_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpRead).VoltconsoleAidataBfdpRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_aidata_bfdp_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleAidataBfdpWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_aidata_bfdp_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpWrite).VoltconsoleAidataBfdpWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_aidata_bfdp_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleAidataBfdpAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_aidata_bfdp_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpAdmin).VoltconsoleAidataBfdpAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_aidata_bfdp_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_aidata_bfdp_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt).VoltconsoleAidataBfdpSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_aidata_bfdp_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSyntheticMonitorRead:
		if fv, exists := v.FldValidators["choice.voltconsole_synthetic_monitor_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorRead).VoltconsoleSyntheticMonitorRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_synthetic_monitor_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSyntheticMonitorWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_synthetic_monitor_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorWrite).VoltconsoleSyntheticMonitorWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_synthetic_monitor_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSyntheticMonitorAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_synthetic_monitor_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorAdmin).VoltconsoleSyntheticMonitorAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_synthetic_monitor_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSyntheticMonitorSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_synthetic_monitor_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorSubscriptionMgmt).VoltconsoleSyntheticMonitorSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_synthetic_monitor_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead:
		if fv, exists := v.FldValidators["choice.voltconsole_nginx_mgmt_suite_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead).VoltconsoleNginxMgmtSuiteRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_nginx_mgmt_suite_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_nginx_mgmt_suite_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite).VoltconsoleNginxMgmtSuiteWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_nginx_mgmt_suite_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_nginx_mgmt_suite_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin).VoltconsoleNginxMgmtSuiteAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_nginx_mgmt_suite_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_nginx_mgmt_suite_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt).VoltconsoleNginxMgmtSuiteSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_nginx_mgmt_suite_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleNginxMgmtSuiteApplication:
		if fv, exists := v.FldValidators["choice.voltconsole_nginx_mgmt_suite_application"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteApplication).VoltconsoleNginxMgmtSuiteApplication
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_nginx_mgmt_suite_application"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleCdnRead:
		if fv, exists := v.FldValidators["choice.voltconsole_cdn_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnRead).VoltconsoleCdnRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_cdn_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleCdnWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_cdn_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnWrite).VoltconsoleCdnWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_cdn_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleCdnAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_cdn_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnAdmin).VoltconsoleCdnAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_cdn_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_cdn_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt).VoltconsoleCdnSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_cdn_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSafeapRead:
		if fv, exists := v.FldValidators["choice.voltconsole_safeap_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSafeapRead).VoltconsoleSafeapRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_safeap_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSafeapWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_safeap_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSafeapWrite).VoltconsoleSafeapWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_safeap_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSafeapAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_safeap_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSafeapAdmin).VoltconsoleSafeapAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_safeap_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleSafeapSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_safeap_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleSafeapSubscriptionMgmt).VoltconsoleSafeapSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_safeap_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDefaultAccess:
		if fv, exists := v.FldValidators["choice.f5xc_default_access"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDefaultAccess).F5XcDefaultAccess
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_default_access"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBase:
		if fv, exists := v.FldValidators["choice.f5xc_base"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBase).F5XcBase
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_base"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBilling:
		if fv, exists := v.FldValidators["choice.f5xc_billing"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBilling).F5XcBilling
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_billing"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuditLogsAlerts:
		if fv, exists := v.FldValidators["choice.f5xc_audit_logs_alerts"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuditLogsAlerts).F5XcAuditLogsAlerts
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_audit_logs_alerts"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleClientSideDefenseRead:
		if fv, exists := v.FldValidators["choice.voltconsole_client_side_defense_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleClientSideDefenseRead).VoltconsoleClientSideDefenseRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_client_side_defense_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleClientSideDefenseWrite:
		if fv, exists := v.FldValidators["choice.voltconsole_client_side_defense_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleClientSideDefenseWrite).VoltconsoleClientSideDefenseWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_client_side_defense_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleClientSideDefenseAdmin:
		if fv, exists := v.FldValidators["choice.voltconsole_client_side_defense_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleClientSideDefenseAdmin).VoltconsoleClientSideDefenseAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_client_side_defense_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VoltconsoleClientSideDefenseSubscriptionMgmt:
		if fv, exists := v.FldValidators["choice.voltconsole_client_side_defense_subscription_mgmt"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VoltconsoleClientSideDefenseSubscriptionMgmt).VoltconsoleClientSideDefenseSubscriptionMgmt
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("voltconsole_client_side_defense_subscription_mgmt"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedMonitor).F5XcBotDefenseAdvancedMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedUser:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedUser).F5XcBotDefenseAdvancedUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedAdmin).F5XcBotDefenseAdvancedAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefensePremiumMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_premium_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefensePremiumMonitor).F5XcBotDefensePremiumMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_premium_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefensePremiumUser:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_premium_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefensePremiumUser).F5XcBotDefensePremiumUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_premium_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefensePremiumAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_premium_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefensePremiumAdmin).F5XcBotDefensePremiumAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_premium_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoReportRead:
		if fv, exists := v.FldValidators["choice.ves_io_report_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoReportRead).VesIoReportRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_report_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoReportWrite:
		if fv, exists := v.FldValidators["choice.ves_io_report_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoReportWrite).VesIoReportWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_report_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoLocalK8SKubeconfig:
		if fv, exists := v.FldValidators["choice.ves_io_local_k8s_kubeconfig"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoLocalK8SKubeconfig).VesIoLocalK8SKubeconfig
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_local_k8s_kubeconfig"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_VesIoGlobalK8SKubeconfig:
		if fv, exists := v.FldValidators["choice.ves_io_global_k8s_kubeconfig"]; exists {
			val := m.GetChoice().(*APIGroupChoice_VesIoGlobalK8SKubeconfig).VesIoGlobalK8SKubeconfig
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("ves_io_global_k8s_kubeconfig"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseBasicMonitor).F5XcBotDefenseBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseBasicUser).F5XcBotDefenseBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseBasicAdmin).F5XcBotDefenseBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBigIpApmMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_big_ip_apm_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBigIpApmMonitor).F5XcBigIpApmMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_big_ip_apm_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBigIpApmUser:
		if fv, exists := v.FldValidators["choice.f5xc_big_ip_apm_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBigIpApmUser).F5XcBigIpApmUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_big_ip_apm_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBigIpApmAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_big_ip_apm_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBigIpApmAdmin).F5XcBigIpApmAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_big_ip_apm_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcMobileIntegratorMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_mobile_integrator_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcMobileIntegratorMonitor).F5XcMobileIntegratorMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_mobile_integrator_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcMobileIntegratorUser:
		if fv, exists := v.FldValidators["choice.f5xc_mobile_integrator_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcMobileIntegratorUser).F5XcMobileIntegratorUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_mobile_integrator_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcMobileIntegratorAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_mobile_integrator_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcMobileIntegratorAdmin).F5XcMobileIntegratorAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_mobile_integrator_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcFlowCollectionMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_flow_collection_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcFlowCollectionMonitor).F5XcFlowCollectionMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_flow_collection_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcInternal:
		if fv, exists := v.FldValidators["choice.f5xc_internal"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcInternal).F5XcInternal
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_internal"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcScimMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_scim_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcScimMonitor).F5XcScimMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_scim_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcScimUser:
		if fv, exists := v.FldValidators["choice.f5xc_scim_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcScimUser).F5XcScimUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_scim_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcScimAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_scim_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcScimAdmin).F5XcScimAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_scim_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcGlobalLogReceiverMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_global_log_receiver_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcGlobalLogReceiverMonitor).F5XcGlobalLogReceiverMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_global_log_receiver_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcGlobalLogReceiverUser:
		if fv, exists := v.FldValidators["choice.f5xc_global_log_receiver_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcGlobalLogReceiverUser).F5XcGlobalLogReceiverUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_global_log_receiver_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcGlobalLogReceiverAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_global_log_receiver_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcGlobalLogReceiverAdmin).F5XcGlobalLogReceiverAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_global_log_receiver_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuditLogsAlertsMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_audit_logs_alerts_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuditLogsAlertsMonitor).F5XcAuditLogsAlertsMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_audit_logs_alerts_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuditLogsAlertsUser:
		if fv, exists := v.FldValidators["choice.f5xc_audit_logs_alerts_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuditLogsAlertsUser).F5XcAuditLogsAlertsUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_audit_logs_alerts_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuditLogsAlertsAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_audit_logs_alerts_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuditLogsAlertsAdmin).F5XcAuditLogsAlertsAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_audit_logs_alerts_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcScimClient:
		if fv, exists := v.FldValidators["choice.f5xc_scim_client"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcScimClient).F5XcScimClient
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_scim_client"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_console_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleBasicMonitor).F5XcConsoleBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_console_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleBasicUser).F5XcConsoleBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_console_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleBasicAdmin).F5XcConsoleBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_console_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleStandardMonitor).F5XcConsoleStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_console_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleStandardUser).F5XcConsoleStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_console_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleStandardAdmin).F5XcConsoleStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleAdvancedMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_console_advanced_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleAdvancedMonitor).F5XcConsoleAdvancedMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_advanced_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleAdvancedUser:
		if fv, exists := v.FldValidators["choice.f5xc_console_advanced_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleAdvancedUser).F5XcConsoleAdvancedUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_advanced_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcConsoleAdvancedAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_console_advanced_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcConsoleAdvancedAdmin).F5XcConsoleAdvancedAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_console_advanced_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportManagementStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_support_management_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportManagementStandardMonitor).F5XcSupportManagementStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_management_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportManagementStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_support_management_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportManagementStandardUser).F5XcSupportManagementStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_management_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportManagementStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_support_management_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportManagementStandardAdmin).F5XcSupportManagementStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_management_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosBasicMonitor).F5XcRoutedDdosBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosBasicUser).F5XcRoutedDdosBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosBasicAdmin).F5XcRoutedDdosBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseBasicMonitor).F5XcClientSideDefenseBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseBasicUser).F5XcClientSideDefenseBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseBasicAdmin).F5XcClientSideDefenseBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcCdnBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_cdn_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcCdnBasicMonitor).F5XcCdnBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_cdn_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcCdnBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_cdn_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcCdnBasicUser).F5XcCdnBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_cdn_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcCdnBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_cdn_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcCdnBasicAdmin).F5XcCdnBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_cdn_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_waap_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapBasicMonitor).F5XcWaapBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_waap_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapBasicUser).F5XcWaapBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_waap_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapBasicAdmin).F5XcWaapBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapAdvancedMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_waap_advanced_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapAdvancedMonitor).F5XcWaapAdvancedMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_advanced_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapAdvancedUser:
		if fv, exists := v.FldValidators["choice.f5xc_waap_advanced_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapAdvancedUser).F5XcWaapAdvancedUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_advanced_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapAdvancedAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_waap_advanced_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapAdvancedAdmin).F5XcWaapAdvancedAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_advanced_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementBasicMonitor).F5XcSiteManagementBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementBasicUser).F5XcSiteManagementBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementBasicAdmin).F5XcSiteManagementBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionBasicMonitor).F5XcAccountProtectionBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionBasicUser).F5XcAccountProtectionBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionBasicAdmin).F5XcAccountProtectionBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringBasicMonitor).F5XcSyntheticMonitoringBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringBasicUser).F5XcSyntheticMonitoringBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringBasicAdmin).F5XcSyntheticMonitoringBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementSupportAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_support_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementSupportAdmin).F5XcChildManagementSupportAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_support_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementSupportUser:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_support_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementSupportUser).F5XcChildManagementSupportUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_support_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementSupportMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_support_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementSupportMonitor).F5XcChildManagementSupportMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_support_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshBasicMonitor).F5XcSecuremeshBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshBasicUser).F5XcSecuremeshBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshBasicAdmin).F5XcSecuremeshBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshAdvancedMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_advanced_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshAdvancedMonitor).F5XcSecuremeshAdvancedMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_advanced_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshAdvancedUser:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_advanced_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshAdvancedUser).F5XcSecuremeshAdvancedUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_advanced_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshAdvancedAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_advanced_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshAdvancedAdmin).F5XcSecuremeshAdvancedAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_advanced_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackBasicMonitor).F5XcAppstackBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackBasicUser).F5XcAppstackBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackBasicAdmin).F5XcAppstackBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxMgmtSuiteBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_mgmt_suite_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxMgmtSuiteBasicMonitor).F5XcNginxMgmtSuiteBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_mgmt_suite_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxMgmtSuiteBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_mgmt_suite_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxMgmtSuiteBasicUser).F5XcNginxMgmtSuiteBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_mgmt_suite_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxMgmtSuiteBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_mgmt_suite_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxMgmtSuiteBasicAdmin).F5XcNginxMgmtSuiteBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_mgmt_suite_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightBasicMonitor).F5XcApplicationTrafficInsightBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightBasicUser).F5XcApplicationTrafficInsightBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightBasicAdmin).F5XcApplicationTrafficInsightBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceBasicMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_basic_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceBasicMonitor).F5XcAuthenticationIntelligenceBasicMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_basic_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceBasicUser:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_basic_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceBasicUser).F5XcAuthenticationIntelligenceBasicUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_basic_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceBasicAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_basic_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceBasicAdmin).F5XcAuthenticationIntelligenceBasicAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_basic_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxOneApplicationRead:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_one_application_read"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxOneApplicationRead).F5XcNginxOneApplicationRead
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_one_application_read"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxOneApplicationWrite:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_one_application_write"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxOneApplicationWrite).F5XcNginxOneApplicationWrite
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_one_application_write"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClearviewMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_clearview_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClearviewMonitor).F5XcClearviewMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_clearview_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClearviewUser:
		if fv, exists := v.FldValidators["choice.f5xc_clearview_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClearviewUser).F5XcClearviewUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_clearview_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClearviewAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_clearview_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClearviewAdmin).F5XcClearviewAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_clearview_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshStandardMonitor).F5XcSecuremeshStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshStandardUser).F5XcSecuremeshStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSecuremeshStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_securemesh_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSecuremeshStandardAdmin).F5XcSecuremeshStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_securemesh_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackStandardMonitor).F5XcAppstackStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackStandardUser).F5XcAppstackStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAppstackStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_appstack_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAppstackStandardAdmin).F5XcAppstackStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_appstack_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_waap_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapStandardMonitor).F5XcWaapStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_waap_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapStandardUser).F5XcWaapStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWaapStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_waap_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWaapStandardAdmin).F5XcWaapStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_waap_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementStandardMonitor).F5XcSiteManagementStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementStandardUser).F5XcSiteManagementStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSiteManagementStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_site_management_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSiteManagementStandardAdmin).F5XcSiteManagementStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_site_management_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosStandardMonitor).F5XcRoutedDdosStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosStandardUser).F5XcRoutedDdosStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcRoutedDdosStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_routed_ddos_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcRoutedDdosStandardAdmin).F5XcRoutedDdosStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_routed_ddos_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDnsStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_dns_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDnsStandardMonitor).F5XcDnsStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_dns_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDnsStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_dns_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDnsStandardUser).F5XcDnsStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_dns_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDnsStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_dns_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDnsStandardAdmin).F5XcDnsStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_dns_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightStandardMonitor).F5XcApplicationTrafficInsightStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightStandardUser).F5XcApplicationTrafficInsightStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcApplicationTrafficInsightStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_application_traffic_insight_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcApplicationTrafficInsightStandardAdmin).F5XcApplicationTrafficInsightStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_application_traffic_insight_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcContentDeliveryNetworkStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_content_delivery_network_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcContentDeliveryNetworkStandardMonitor).F5XcContentDeliveryNetworkStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_content_delivery_network_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcContentDeliveryNetworkStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_content_delivery_network_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcContentDeliveryNetworkStandardUser).F5XcContentDeliveryNetworkStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_content_delivery_network_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcContentDeliveryNetworkStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_content_delivery_network_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcContentDeliveryNetworkStandardAdmin).F5XcContentDeliveryNetworkStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_content_delivery_network_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseStandardMonitor).F5XcClientSideDefenseStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseStandardUser).F5XcClientSideDefenseStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcClientSideDefenseStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_client_side_defense_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcClientSideDefenseStandardAdmin).F5XcClientSideDefenseStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_client_side_defense_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringStandardMonitor).F5XcSyntheticMonitoringStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringStandardUser).F5XcSyntheticMonitoringStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSyntheticMonitoringStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_synthetic_monitoring_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSyntheticMonitoringStandardAdmin).F5XcSyntheticMonitoringStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_synthetic_monitoring_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceStandardMonitor).F5XcAuthenticationIntelligenceStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceStandardUser).F5XcAuthenticationIntelligenceStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAuthenticationIntelligenceStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_authentication_intelligence_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAuthenticationIntelligenceStandardAdmin).F5XcAuthenticationIntelligenceStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_authentication_intelligence_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionStandardMonitor).F5XcAccountProtectionStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionStandardUser).F5XcAccountProtectionStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAccountProtectionStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_account_protection_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAccountProtectionStandardAdmin).F5XcAccountProtectionStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_account_protection_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDelegatedAccessStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_delegated_access_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDelegatedAccessStandardMonitor).F5XcDelegatedAccessStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_delegated_access_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDelegatedAccessStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_delegated_access_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDelegatedAccessStandardUser).F5XcDelegatedAccessStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_delegated_access_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDelegatedAccessStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_delegated_access_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDelegatedAccessStandardAdmin).F5XcDelegatedAccessStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_delegated_access_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseStandardMonitor).F5XcBotDefenseStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseStandardUser).F5XcBotDefenseStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseStandardAdmin).F5XcBotDefenseStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWebAppScanningStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_web_app_scanning_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWebAppScanningStandardMonitor).F5XcWebAppScanningStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_web_app_scanning_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWebAppScanningStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_web_app_scanning_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWebAppScanningStandardUser).F5XcWebAppScanningStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_web_app_scanning_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcWebAppScanningStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_web_app_scanning_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcWebAppScanningStandardAdmin).F5XcWebAppScanningStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_web_app_scanning_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcAiAssistantStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_ai_assistant_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcAiAssistantStandardMonitor).F5XcAiAssistantStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_ai_assistant_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcNginxOneMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_nginx_one_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcNginxOneMonitor).F5XcNginxOneMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_nginx_one_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcFlowAnomalyDetectionStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_flow_anomaly_detection_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcFlowAnomalyDetectionStandardMonitor).F5XcFlowAnomalyDetectionStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_flow_anomaly_detection_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcUniversalZtnaStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_universal_ztna_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcUniversalZtnaStandardMonitor).F5XcUniversalZtnaStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_universal_ztna_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcUniversalZtnaStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_universal_ztna_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcUniversalZtnaStandardUser).F5XcUniversalZtnaStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_universal_ztna_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcUniversalZtnaStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_universal_ztna_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcUniversalZtnaStandardAdmin).F5XcUniversalZtnaStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_universal_ztna_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_selfservice_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceMonitor).F5XcBotDefenseAdvancedSelfserviceMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_selfservice_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceUser:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_selfservice_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceUser).F5XcBotDefenseAdvancedSelfserviceUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_selfservice_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_bot_defense_advanced_selfservice_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcBotDefenseAdvancedSelfserviceAdmin).F5XcBotDefenseAdvancedSelfserviceAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_bot_defense_advanced_selfservice_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcGiaUser:
		if fv, exists := v.FldValidators["choice.f5xc_gia_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcGiaUser).F5XcGiaUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_gia_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportOperationsStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_support_operations_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportOperationsStandardMonitor).F5XcSupportOperationsStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_operations_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportOperationsStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_support_operations_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportOperationsStandardUser).F5XcSupportOperationsStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_operations_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcSupportOperationsStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_support_operations_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcSupportOperationsStandardAdmin).F5XcSupportOperationsStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_support_operations_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementStandardAdmin).F5XcChildManagementStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementStandardUser).F5XcChildManagementStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcChildManagementStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_child_management_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcChildManagementStandardMonitor).F5XcChildManagementStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_child_management_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDataIntelligenceStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_data_intelligence_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDataIntelligenceStandardMonitor).F5XcDataIntelligenceStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_data_intelligence_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDataIntelligenceStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_data_intelligence_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDataIntelligenceStandardUser).F5XcDataIntelligenceStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_data_intelligence_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDataIntelligenceStandardAdmin:
		if fv, exists := v.FldValidators["choice.f5xc_data_intelligence_standard_admin"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDataIntelligenceStandardAdmin).F5XcDataIntelligenceStandardAdmin
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_data_intelligence_standard_admin"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDataPrivacyStandardMonitor:
		if fv, exists := v.FldValidators["choice.f5xc_data_privacy_standard_monitor"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDataPrivacyStandardMonitor).F5XcDataPrivacyStandardMonitor
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_data_privacy_standard_monitor"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}
	case *APIGroupChoice_F5XcDataPrivacyStandardUser:
		if fv, exists := v.FldValidators["choice.f5xc_data_privacy_standard_user"]; exists {
			val := m.GetChoice().(*APIGroupChoice_F5XcDataPrivacyStandardUser).F5XcDataPrivacyStandardUser
			vOpts := append(opts,
				db.WithValidateField("choice"),
				db.WithValidateField("f5xc_data_privacy_standard_user"),
			)
			if err := fv(ctx, val, vOpts...); err != nil {
				return err
			}
		}

	}

	return nil
}

// Well-known symbol for default validator implementation
var DefaultAPIGroupChoiceValidator = func() *ValidateAPIGroupChoice {
	v := &ValidateAPIGroupChoice{FldValidators: map[string]db.ValidatorFunc{}}

	return v
}()

func APIGroupChoiceValidator() db.Validator {
	return DefaultAPIGroupChoiceValidator
}

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_services.proto

package vesenv

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ServiceChoice enumerates all the service-framework based services in a VES environment
type ServiceChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*ServiceChoice_Akar
	//	*ServiceChoice_AkarReadonly
	//	*ServiceChoice_AkarDnsdomain
	//	*ServiceChoice_Ares
	//	*ServiceChoice_Aspen
	//	*ServiceChoice_Asterix
	//	*ServiceChoice_Athena
	//	*ServiceChoice_Automatix
	//	*ServiceChoice_Barracute
	//	*ServiceChoice_Bdbewaf
	//	*ServiceChoice_Bfdp
	//	*ServiceChoice_Bifrost
	//	*ServiceChoice_Blindfold
	//	*ServiceChoice_Bolt
	//	*ServiceChoice_Brmalerts
	//	*ServiceChoice_Cdnconnectorsvc
	//	*ServiceChoice_Charmander
	//	*ServiceChoice_Charmandercar
	//	*ServiceChoice_ClientSideDefense
	//	*ServiceChoice_Conprof
	//	*ServiceChoice_Discovery
	//	*ServiceChoice_Doscontroller
	//	*ServiceChoice_Drogon
	//	*ServiceChoice_Dymo
	//	*ServiceChoice_Eywa
	//	*ServiceChoice_EywaReadonly
	//	*ServiceChoice_Eywaprime
	//	*ServiceChoice_EywaprimeReadonly
	//	*ServiceChoice_Ganges
	//	*ServiceChoice_Griffin
	//	*ServiceChoice_Hellas
	//	*ServiceChoice_Iapetus
	//	*ServiceChoice_Identityauthority
	//	*ServiceChoice_Ipp
	//	*ServiceChoice_Ippdev
	//	*ServiceChoice_Ippprom
	//	*ServiceChoice_Josef
	//	*ServiceChoice_Kcdmux
	//	*ServiceChoice_KcdmuxReadonly
	//	*ServiceChoice_Keypr
	//	*ServiceChoice_LilacEdge
	//	*ServiceChoice_Mars
	//	*ServiceChoice_Maurice
	//	*ServiceChoice_Minerva
	//	*ServiceChoice_Nfvsvc
	//	*ServiceChoice_Nmsconnector
	//	*ServiceChoice_Nmsproxy
	//	*ServiceChoice_Obelix
	//	*ServiceChoice_Ocspmule
	//	*ServiceChoice_Olympus
	//	*ServiceChoice_Opera
	//	*ServiceChoice_Phobos
	//	*ServiceChoice_Pikachu
	//	*ServiceChoice_Piku
	//	*ServiceChoice_Pkifactory
	//	*ServiceChoice_Pluto
	//	*ServiceChoice_Ponos
	//	*ServiceChoice_Prism
	//	*ServiceChoice_Prismprime
	//	*ServiceChoice_Prometheus
	//	*ServiceChoice_Protekti
	//	*ServiceChoice_Rakar
	//	*ServiceChoice_Ratchet
	//	*ServiceChoice_Rolex
	//	*ServiceChoice_Sahaya
	//	*ServiceChoice_Scim
	//	*ServiceChoice_Sed
	//	*ServiceChoice_Sentinel
	//	*ServiceChoice_Spectrum
	//	*ServiceChoice_SiteConsole
	//	*ServiceChoice_Streak
	//	*ServiceChoice_Tpmauthority
	//	*ServiceChoice_Trafficactioner
	//	*ServiceChoice_Vega
	//	*ServiceChoice_Ver
	//	*ServiceChoice_ViaApiService
	//	*ServiceChoice_Viaconnector
	//	*ServiceChoice_Voucher
	//	*ServiceChoice_Vpm
	//	*ServiceChoice_Vulpix
	//	*ServiceChoice_Warden
	//	*ServiceChoice_Wingman
	//	*ServiceChoice_Lucario
	//	*ServiceChoice_Clearview
	//	*ServiceChoice_Bigipconnector
	//	*ServiceChoice_Gia
	//	*ServiceChoice_Wibadapter
	Choice isServiceChoice_Choice `protobuf_oneof:"choice"`
}

func (m *ServiceChoice) Reset()      { *m = ServiceChoice{} }
func (*ServiceChoice) ProtoMessage() {}
func (*ServiceChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_30eccf2b87cfc541, []int{0}
}
func (m *ServiceChoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceChoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServiceChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceChoice.Merge(m, src)
}
func (m *ServiceChoice) XXX_Size() int {
	return m.Size()
}
func (m *ServiceChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceChoice.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceChoice proto.InternalMessageInfo

type isServiceChoice_Choice interface {
	isServiceChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type ServiceChoice_Akar struct {
	Akar bool `protobuf:"varint,1,opt,name=akar,proto3,oneof" json:"akar,omitempty"`
}
type ServiceChoice_AkarReadonly struct {
	AkarReadonly bool `protobuf:"varint,40,opt,name=akar_readonly,json=akarReadonly,proto3,oneof" json:"akar_readonly,omitempty"`
}
type ServiceChoice_AkarDnsdomain struct {
	AkarDnsdomain bool `protobuf:"varint,41,opt,name=akar_dnsdomain,json=akarDnsdomain,proto3,oneof" json:"akar_dnsdomain,omitempty"`
}
type ServiceChoice_Ares struct {
	Ares bool `protobuf:"varint,2,opt,name=ares,proto3,oneof" json:"ares,omitempty"`
}
type ServiceChoice_Aspen struct {
	Aspen bool `protobuf:"varint,42,opt,name=aspen,proto3,oneof" json:"aspen,omitempty"`
}
type ServiceChoice_Asterix struct {
	Asterix bool `protobuf:"varint,4,opt,name=asterix,proto3,oneof" json:"asterix,omitempty"`
}
type ServiceChoice_Athena struct {
	Athena bool `protobuf:"varint,6,opt,name=athena,proto3,oneof" json:"athena,omitempty"`
}
type ServiceChoice_Automatix struct {
	Automatix bool `protobuf:"varint,7,opt,name=automatix,proto3,oneof" json:"automatix,omitempty"`
}
type ServiceChoice_Barracute struct {
	Barracute bool `protobuf:"varint,8,opt,name=barracute,proto3,oneof" json:"barracute,omitempty"`
}
type ServiceChoice_Bdbewaf struct {
	Bdbewaf bool `protobuf:"varint,44,opt,name=bdbewaf,proto3,oneof" json:"bdbewaf,omitempty"`
}
type ServiceChoice_Bfdp struct {
	Bfdp bool `protobuf:"varint,45,opt,name=bfdp,proto3,oneof" json:"bfdp,omitempty"`
}
type ServiceChoice_Bifrost struct {
	Bifrost bool `protobuf:"varint,46,opt,name=bifrost,proto3,oneof" json:"bifrost,omitempty"`
}
type ServiceChoice_Blindfold struct {
	Blindfold bool `protobuf:"varint,9,opt,name=blindfold,proto3,oneof" json:"blindfold,omitempty"`
}
type ServiceChoice_Bolt struct {
	Bolt bool `protobuf:"varint,10,opt,name=bolt,proto3,oneof" json:"bolt,omitempty"`
}
type ServiceChoice_Brmalerts struct {
	Brmalerts bool `protobuf:"varint,47,opt,name=brmalerts,proto3,oneof" json:"brmalerts,omitempty"`
}
type ServiceChoice_Cdnconnectorsvc struct {
	Cdnconnectorsvc bool `protobuf:"varint,48,opt,name=cdnconnectorsvc,proto3,oneof" json:"cdnconnectorsvc,omitempty"`
}
type ServiceChoice_Charmander struct {
	Charmander bool `protobuf:"varint,11,opt,name=charmander,proto3,oneof" json:"charmander,omitempty"`
}
type ServiceChoice_Charmandercar struct {
	Charmandercar bool `protobuf:"varint,12,opt,name=charmandercar,proto3,oneof" json:"charmandercar,omitempty"`
}
type ServiceChoice_ClientSideDefense struct {
	ClientSideDefense bool `protobuf:"varint,49,opt,name=client_side_defense,json=clientSideDefense,proto3,oneof" json:"client_side_defense,omitempty"`
}
type ServiceChoice_Conprof struct {
	Conprof bool `protobuf:"varint,92,opt,name=conprof,proto3,oneof" json:"conprof,omitempty"`
}
type ServiceChoice_Discovery struct {
	Discovery bool `protobuf:"varint,103,opt,name=discovery,proto3,oneof" json:"discovery,omitempty"`
}
type ServiceChoice_Doscontroller struct {
	Doscontroller bool `protobuf:"varint,50,opt,name=doscontroller,proto3,oneof" json:"doscontroller,omitempty"`
}
type ServiceChoice_Drogon struct {
	Drogon bool `protobuf:"varint,13,opt,name=drogon,proto3,oneof" json:"drogon,omitempty"`
}
type ServiceChoice_Dymo struct {
	Dymo bool `protobuf:"varint,91,opt,name=dymo,proto3,oneof" json:"dymo,omitempty"`
}
type ServiceChoice_Eywa struct {
	Eywa bool `protobuf:"varint,14,opt,name=eywa,proto3,oneof" json:"eywa,omitempty"`
}
type ServiceChoice_EywaReadonly struct {
	EywaReadonly bool `protobuf:"varint,51,opt,name=eywa_readonly,json=eywaReadonly,proto3,oneof" json:"eywa_readonly,omitempty"`
}
type ServiceChoice_Eywaprime struct {
	Eywaprime bool `protobuf:"varint,52,opt,name=eywaprime,proto3,oneof" json:"eywaprime,omitempty"`
}
type ServiceChoice_EywaprimeReadonly struct {
	EywaprimeReadonly bool `protobuf:"varint,53,opt,name=eywaprime_readonly,json=eywaprimeReadonly,proto3,oneof" json:"eywaprime_readonly,omitempty"`
}
type ServiceChoice_Ganges struct {
	Ganges bool `protobuf:"varint,54,opt,name=ganges,proto3,oneof" json:"ganges,omitempty"`
}
type ServiceChoice_Griffin struct {
	Griffin bool `protobuf:"varint,15,opt,name=griffin,proto3,oneof" json:"griffin,omitempty"`
}
type ServiceChoice_Hellas struct {
	Hellas bool `protobuf:"varint,33,opt,name=hellas,proto3,oneof" json:"hellas,omitempty"`
}
type ServiceChoice_Iapetus struct {
	Iapetus bool `protobuf:"varint,55,opt,name=iapetus,proto3,oneof" json:"iapetus,omitempty"`
}
type ServiceChoice_Identityauthority struct {
	Identityauthority bool `protobuf:"varint,16,opt,name=identityauthority,proto3,oneof" json:"identityauthority,omitempty"`
}
type ServiceChoice_Ipp struct {
	Ipp bool `protobuf:"varint,56,opt,name=ipp,proto3,oneof" json:"ipp,omitempty"`
}
type ServiceChoice_Ippdev struct {
	Ippdev bool `protobuf:"varint,59,opt,name=ippdev,proto3,oneof" json:"ippdev,omitempty"`
}
type ServiceChoice_Ippprom struct {
	Ippprom bool `protobuf:"varint,62,opt,name=ippprom,proto3,oneof" json:"ippprom,omitempty"`
}
type ServiceChoice_Josef struct {
	Josef bool `protobuf:"varint,65,opt,name=josef,proto3,oneof" json:"josef,omitempty"`
}
type ServiceChoice_Kcdmux struct {
	Kcdmux bool `protobuf:"varint,66,opt,name=kcdmux,proto3,oneof" json:"kcdmux,omitempty"`
}
type ServiceChoice_KcdmuxReadonly struct {
	KcdmuxReadonly bool `protobuf:"varint,67,opt,name=kcdmux_readonly,json=kcdmuxReadonly,proto3,oneof" json:"kcdmux_readonly,omitempty"`
}
type ServiceChoice_Keypr struct {
	Keypr bool `protobuf:"varint,17,opt,name=keypr,proto3,oneof" json:"keypr,omitempty"`
}
type ServiceChoice_LilacEdge struct {
	LilacEdge bool `protobuf:"varint,36,opt,name=lilac_edge,json=lilacEdge,proto3,oneof" json:"lilac_edge,omitempty"`
}
type ServiceChoice_Mars struct {
	Mars bool `protobuf:"varint,68,opt,name=mars,proto3,oneof" json:"mars,omitempty"`
}
type ServiceChoice_Maurice struct {
	Maurice bool `protobuf:"varint,18,opt,name=maurice,proto3,oneof" json:"maurice,omitempty"`
}
type ServiceChoice_Minerva struct {
	Minerva bool `protobuf:"varint,69,opt,name=minerva,proto3,oneof" json:"minerva,omitempty"`
}
type ServiceChoice_Nfvsvc struct {
	Nfvsvc bool `protobuf:"varint,34,opt,name=nfvsvc,proto3,oneof" json:"nfvsvc,omitempty"`
}
type ServiceChoice_Nmsconnector struct {
	Nmsconnector bool `protobuf:"varint,70,opt,name=nmsconnector,proto3,oneof" json:"nmsconnector,omitempty"`
}
type ServiceChoice_Nmsproxy struct {
	Nmsproxy bool `protobuf:"varint,71,opt,name=nmsproxy,proto3,oneof" json:"nmsproxy,omitempty"`
}
type ServiceChoice_Obelix struct {
	Obelix bool `protobuf:"varint,19,opt,name=obelix,proto3,oneof" json:"obelix,omitempty"`
}
type ServiceChoice_Ocspmule struct {
	Ocspmule bool `protobuf:"varint,20,opt,name=ocspmule,proto3,oneof" json:"ocspmule,omitempty"`
}
type ServiceChoice_Olympus struct {
	Olympus bool `protobuf:"varint,72,opt,name=olympus,proto3,oneof" json:"olympus,omitempty"`
}
type ServiceChoice_Opera struct {
	Opera bool `protobuf:"varint,21,opt,name=opera,proto3,oneof" json:"opera,omitempty"`
}
type ServiceChoice_Phobos struct {
	Phobos bool `protobuf:"varint,73,opt,name=phobos,proto3,oneof" json:"phobos,omitempty"`
}
type ServiceChoice_Pikachu struct {
	Pikachu bool `protobuf:"varint,22,opt,name=pikachu,proto3,oneof" json:"pikachu,omitempty"`
}
type ServiceChoice_Piku struct {
	Piku bool `protobuf:"varint,74,opt,name=piku,proto3,oneof" json:"piku,omitempty"`
}
type ServiceChoice_Pkifactory struct {
	Pkifactory bool `protobuf:"varint,23,opt,name=pkifactory,proto3,oneof" json:"pkifactory,omitempty"`
}
type ServiceChoice_Pluto struct {
	Pluto bool `protobuf:"varint,75,opt,name=pluto,proto3,oneof" json:"pluto,omitempty"`
}
type ServiceChoice_Ponos struct {
	Ponos bool `protobuf:"varint,76,opt,name=ponos,proto3,oneof" json:"ponos,omitempty"`
}
type ServiceChoice_Prism struct {
	Prism bool `protobuf:"varint,77,opt,name=prism,proto3,oneof" json:"prism,omitempty"`
}
type ServiceChoice_Prismprime struct {
	Prismprime bool `protobuf:"varint,78,opt,name=prismprime,proto3,oneof" json:"prismprime,omitempty"`
}
type ServiceChoice_Prometheus struct {
	Prometheus bool `protobuf:"varint,88,opt,name=prometheus,proto3,oneof" json:"prometheus,omitempty"`
}
type ServiceChoice_Protekti struct {
	Protekti bool `protobuf:"varint,79,opt,name=protekti,proto3,oneof" json:"protekti,omitempty"`
}
type ServiceChoice_Rakar struct {
	Rakar bool `protobuf:"varint,24,opt,name=rakar,proto3,oneof" json:"rakar,omitempty"`
}
type ServiceChoice_Ratchet struct {
	Ratchet bool `protobuf:"varint,93,opt,name=ratchet,proto3,oneof" json:"ratchet,omitempty"`
}
type ServiceChoice_Rolex struct {
	Rolex bool `protobuf:"varint,80,opt,name=rolex,proto3,oneof" json:"rolex,omitempty"`
}
type ServiceChoice_Sahaya struct {
	Sahaya bool `protobuf:"varint,94,opt,name=sahaya,proto3,oneof" json:"sahaya,omitempty"`
}
type ServiceChoice_Scim struct {
	Scim bool `protobuf:"varint,35,opt,name=scim,proto3,oneof" json:"scim,omitempty"`
}
type ServiceChoice_Sed struct {
	Sed bool `protobuf:"varint,81,opt,name=sed,proto3,oneof" json:"sed,omitempty"`
}
type ServiceChoice_Sentinel struct {
	Sentinel bool `protobuf:"varint,82,opt,name=sentinel,proto3,oneof" json:"sentinel,omitempty"`
}
type ServiceChoice_Spectrum struct {
	Spectrum bool `protobuf:"varint,83,opt,name=spectrum,proto3,oneof" json:"spectrum,omitempty"`
}
type ServiceChoice_SiteConsole struct {
	SiteConsole bool `protobuf:"varint,25,opt,name=site_console,json=siteConsole,proto3,oneof" json:"site_console,omitempty"`
}
type ServiceChoice_Streak struct {
	Streak bool `protobuf:"varint,84,opt,name=streak,proto3,oneof" json:"streak,omitempty"`
}
type ServiceChoice_Tpmauthority struct {
	Tpmauthority bool `protobuf:"varint,87,opt,name=tpmauthority,proto3,oneof" json:"tpmauthority,omitempty"`
}
type ServiceChoice_Trafficactioner struct {
	Trafficactioner bool `protobuf:"varint,85,opt,name=trafficactioner,proto3,oneof" json:"trafficactioner,omitempty"`
}
type ServiceChoice_Vega struct {
	Vega bool `protobuf:"varint,26,opt,name=vega,proto3,oneof" json:"vega,omitempty"`
}
type ServiceChoice_Ver struct {
	Ver bool `protobuf:"varint,86,opt,name=ver,proto3,oneof" json:"ver,omitempty"`
}
type ServiceChoice_ViaApiService struct {
	ViaApiService bool `protobuf:"varint,89,opt,name=via_api_service,json=viaApiService,proto3,oneof" json:"via_api_service,omitempty"`
}
type ServiceChoice_Viaconnector struct {
	Viaconnector bool `protobuf:"varint,90,opt,name=viaconnector,proto3,oneof" json:"viaconnector,omitempty"`
}
type ServiceChoice_Voucher struct {
	Voucher bool `protobuf:"varint,27,opt,name=voucher,proto3,oneof" json:"voucher,omitempty"`
}
type ServiceChoice_Vpm struct {
	Vpm bool `protobuf:"varint,28,opt,name=vpm,proto3,oneof" json:"vpm,omitempty"`
}
type ServiceChoice_Vulpix struct {
	Vulpix bool `protobuf:"varint,29,opt,name=vulpix,proto3,oneof" json:"vulpix,omitempty"`
}
type ServiceChoice_Warden struct {
	Warden bool `protobuf:"varint,30,opt,name=warden,proto3,oneof" json:"warden,omitempty"`
}
type ServiceChoice_Wingman struct {
	Wingman bool `protobuf:"varint,31,opt,name=wingman,proto3,oneof" json:"wingman,omitempty"`
}
type ServiceChoice_Lucario struct {
	Lucario bool `protobuf:"varint,32,opt,name=lucario,proto3,oneof" json:"lucario,omitempty"`
}
type ServiceChoice_Clearview struct {
	Clearview bool `protobuf:"varint,100,opt,name=clearview,proto3,oneof" json:"clearview,omitempty"`
}
type ServiceChoice_Bigipconnector struct {
	Bigipconnector bool `protobuf:"varint,101,opt,name=bigipconnector,proto3,oneof" json:"bigipconnector,omitempty"`
}
type ServiceChoice_Gia struct {
	Gia bool `protobuf:"varint,102,opt,name=gia,proto3,oneof" json:"gia,omitempty"`
}
type ServiceChoice_Wibadapter struct {
	Wibadapter bool `protobuf:"varint,104,opt,name=wibadapter,proto3,oneof" json:"wibadapter,omitempty"`
}

func (*ServiceChoice_Akar) isServiceChoice_Choice()              {}
func (*ServiceChoice_AkarReadonly) isServiceChoice_Choice()      {}
func (*ServiceChoice_AkarDnsdomain) isServiceChoice_Choice()     {}
func (*ServiceChoice_Ares) isServiceChoice_Choice()              {}
func (*ServiceChoice_Aspen) isServiceChoice_Choice()             {}
func (*ServiceChoice_Asterix) isServiceChoice_Choice()           {}
func (*ServiceChoice_Athena) isServiceChoice_Choice()            {}
func (*ServiceChoice_Automatix) isServiceChoice_Choice()         {}
func (*ServiceChoice_Barracute) isServiceChoice_Choice()         {}
func (*ServiceChoice_Bdbewaf) isServiceChoice_Choice()           {}
func (*ServiceChoice_Bfdp) isServiceChoice_Choice()              {}
func (*ServiceChoice_Bifrost) isServiceChoice_Choice()           {}
func (*ServiceChoice_Blindfold) isServiceChoice_Choice()         {}
func (*ServiceChoice_Bolt) isServiceChoice_Choice()              {}
func (*ServiceChoice_Brmalerts) isServiceChoice_Choice()         {}
func (*ServiceChoice_Cdnconnectorsvc) isServiceChoice_Choice()   {}
func (*ServiceChoice_Charmander) isServiceChoice_Choice()        {}
func (*ServiceChoice_Charmandercar) isServiceChoice_Choice()     {}
func (*ServiceChoice_ClientSideDefense) isServiceChoice_Choice() {}
func (*ServiceChoice_Conprof) isServiceChoice_Choice()           {}
func (*ServiceChoice_Discovery) isServiceChoice_Choice()         {}
func (*ServiceChoice_Doscontroller) isServiceChoice_Choice()     {}
func (*ServiceChoice_Drogon) isServiceChoice_Choice()            {}
func (*ServiceChoice_Dymo) isServiceChoice_Choice()              {}
func (*ServiceChoice_Eywa) isServiceChoice_Choice()              {}
func (*ServiceChoice_EywaReadonly) isServiceChoice_Choice()      {}
func (*ServiceChoice_Eywaprime) isServiceChoice_Choice()         {}
func (*ServiceChoice_EywaprimeReadonly) isServiceChoice_Choice() {}
func (*ServiceChoice_Ganges) isServiceChoice_Choice()            {}
func (*ServiceChoice_Griffin) isServiceChoice_Choice()           {}
func (*ServiceChoice_Hellas) isServiceChoice_Choice()            {}
func (*ServiceChoice_Iapetus) isServiceChoice_Choice()           {}
func (*ServiceChoice_Identityauthority) isServiceChoice_Choice() {}
func (*ServiceChoice_Ipp) isServiceChoice_Choice()               {}
func (*ServiceChoice_Ippdev) isServiceChoice_Choice()            {}
func (*ServiceChoice_Ippprom) isServiceChoice_Choice()           {}
func (*ServiceChoice_Josef) isServiceChoice_Choice()             {}
func (*ServiceChoice_Kcdmux) isServiceChoice_Choice()            {}
func (*ServiceChoice_KcdmuxReadonly) isServiceChoice_Choice()    {}
func (*ServiceChoice_Keypr) isServiceChoice_Choice()             {}
func (*ServiceChoice_LilacEdge) isServiceChoice_Choice()         {}
func (*ServiceChoice_Mars) isServiceChoice_Choice()              {}
func (*ServiceChoice_Maurice) isServiceChoice_Choice()           {}
func (*ServiceChoice_Minerva) isServiceChoice_Choice()           {}
func (*ServiceChoice_Nfvsvc) isServiceChoice_Choice()            {}
func (*ServiceChoice_Nmsconnector) isServiceChoice_Choice()      {}
func (*ServiceChoice_Nmsproxy) isServiceChoice_Choice()          {}
func (*ServiceChoice_Obelix) isServiceChoice_Choice()            {}
func (*ServiceChoice_Ocspmule) isServiceChoice_Choice()          {}
func (*ServiceChoice_Olympus) isServiceChoice_Choice()           {}
func (*ServiceChoice_Opera) isServiceChoice_Choice()             {}
func (*ServiceChoice_Phobos) isServiceChoice_Choice()            {}
func (*ServiceChoice_Pikachu) isServiceChoice_Choice()           {}
func (*ServiceChoice_Piku) isServiceChoice_Choice()              {}
func (*ServiceChoice_Pkifactory) isServiceChoice_Choice()        {}
func (*ServiceChoice_Pluto) isServiceChoice_Choice()             {}
func (*ServiceChoice_Ponos) isServiceChoice_Choice()             {}
func (*ServiceChoice_Prism) isServiceChoice_Choice()             {}
func (*ServiceChoice_Prismprime) isServiceChoice_Choice()        {}
func (*ServiceChoice_Prometheus) isServiceChoice_Choice()        {}
func (*ServiceChoice_Protekti) isServiceChoice_Choice()          {}
func (*ServiceChoice_Rakar) isServiceChoice_Choice()             {}
func (*ServiceChoice_Ratchet) isServiceChoice_Choice()           {}
func (*ServiceChoice_Rolex) isServiceChoice_Choice()             {}
func (*ServiceChoice_Sahaya) isServiceChoice_Choice()            {}
func (*ServiceChoice_Scim) isServiceChoice_Choice()              {}
func (*ServiceChoice_Sed) isServiceChoice_Choice()               {}
func (*ServiceChoice_Sentinel) isServiceChoice_Choice()          {}
func (*ServiceChoice_Spectrum) isServiceChoice_Choice()          {}
func (*ServiceChoice_SiteConsole) isServiceChoice_Choice()       {}
func (*ServiceChoice_Streak) isServiceChoice_Choice()            {}
func (*ServiceChoice_Tpmauthority) isServiceChoice_Choice()      {}
func (*ServiceChoice_Trafficactioner) isServiceChoice_Choice()   {}
func (*ServiceChoice_Vega) isServiceChoice_Choice()              {}
func (*ServiceChoice_Ver) isServiceChoice_Choice()               {}
func (*ServiceChoice_ViaApiService) isServiceChoice_Choice()     {}
func (*ServiceChoice_Viaconnector) isServiceChoice_Choice()      {}
func (*ServiceChoice_Voucher) isServiceChoice_Choice()           {}
func (*ServiceChoice_Vpm) isServiceChoice_Choice()               {}
func (*ServiceChoice_Vulpix) isServiceChoice_Choice()            {}
func (*ServiceChoice_Warden) isServiceChoice_Choice()            {}
func (*ServiceChoice_Wingman) isServiceChoice_Choice()           {}
func (*ServiceChoice_Lucario) isServiceChoice_Choice()           {}
func (*ServiceChoice_Clearview) isServiceChoice_Choice()         {}
func (*ServiceChoice_Bigipconnector) isServiceChoice_Choice()    {}
func (*ServiceChoice_Gia) isServiceChoice_Choice()               {}
func (*ServiceChoice_Wibadapter) isServiceChoice_Choice()        {}

func (m *ServiceChoice) GetChoice() isServiceChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *ServiceChoice) GetAkar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Akar); ok {
		return x.Akar
	}
	return false
}

func (m *ServiceChoice) GetAkarReadonly() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_AkarReadonly); ok {
		return x.AkarReadonly
	}
	return false
}

func (m *ServiceChoice) GetAkarDnsdomain() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_AkarDnsdomain); ok {
		return x.AkarDnsdomain
	}
	return false
}

func (m *ServiceChoice) GetAres() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ares); ok {
		return x.Ares
	}
	return false
}

func (m *ServiceChoice) GetAspen() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Aspen); ok {
		return x.Aspen
	}
	return false
}

func (m *ServiceChoice) GetAsterix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Asterix); ok {
		return x.Asterix
	}
	return false
}

func (m *ServiceChoice) GetAthena() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Athena); ok {
		return x.Athena
	}
	return false
}

func (m *ServiceChoice) GetAutomatix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Automatix); ok {
		return x.Automatix
	}
	return false
}

func (m *ServiceChoice) GetBarracute() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Barracute); ok {
		return x.Barracute
	}
	return false
}

func (m *ServiceChoice) GetBdbewaf() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bdbewaf); ok {
		return x.Bdbewaf
	}
	return false
}

func (m *ServiceChoice) GetBfdp() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bfdp); ok {
		return x.Bfdp
	}
	return false
}

func (m *ServiceChoice) GetBifrost() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bifrost); ok {
		return x.Bifrost
	}
	return false
}

func (m *ServiceChoice) GetBlindfold() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Blindfold); ok {
		return x.Blindfold
	}
	return false
}

func (m *ServiceChoice) GetBolt() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bolt); ok {
		return x.Bolt
	}
	return false
}

func (m *ServiceChoice) GetBrmalerts() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Brmalerts); ok {
		return x.Brmalerts
	}
	return false
}

func (m *ServiceChoice) GetCdnconnectorsvc() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Cdnconnectorsvc); ok {
		return x.Cdnconnectorsvc
	}
	return false
}

func (m *ServiceChoice) GetCharmander() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Charmander); ok {
		return x.Charmander
	}
	return false
}

func (m *ServiceChoice) GetCharmandercar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Charmandercar); ok {
		return x.Charmandercar
	}
	return false
}

func (m *ServiceChoice) GetClientSideDefense() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_ClientSideDefense); ok {
		return x.ClientSideDefense
	}
	return false
}

func (m *ServiceChoice) GetConprof() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Conprof); ok {
		return x.Conprof
	}
	return false
}

func (m *ServiceChoice) GetDiscovery() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Discovery); ok {
		return x.Discovery
	}
	return false
}

func (m *ServiceChoice) GetDoscontroller() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Doscontroller); ok {
		return x.Doscontroller
	}
	return false
}

func (m *ServiceChoice) GetDrogon() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Drogon); ok {
		return x.Drogon
	}
	return false
}

func (m *ServiceChoice) GetDymo() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Dymo); ok {
		return x.Dymo
	}
	return false
}

func (m *ServiceChoice) GetEywa() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Eywa); ok {
		return x.Eywa
	}
	return false
}

func (m *ServiceChoice) GetEywaReadonly() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_EywaReadonly); ok {
		return x.EywaReadonly
	}
	return false
}

func (m *ServiceChoice) GetEywaprime() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Eywaprime); ok {
		return x.Eywaprime
	}
	return false
}

func (m *ServiceChoice) GetEywaprimeReadonly() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_EywaprimeReadonly); ok {
		return x.EywaprimeReadonly
	}
	return false
}

func (m *ServiceChoice) GetGanges() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ganges); ok {
		return x.Ganges
	}
	return false
}

func (m *ServiceChoice) GetGriffin() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Griffin); ok {
		return x.Griffin
	}
	return false
}

func (m *ServiceChoice) GetHellas() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Hellas); ok {
		return x.Hellas
	}
	return false
}

func (m *ServiceChoice) GetIapetus() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Iapetus); ok {
		return x.Iapetus
	}
	return false
}

func (m *ServiceChoice) GetIdentityauthority() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Identityauthority); ok {
		return x.Identityauthority
	}
	return false
}

func (m *ServiceChoice) GetIpp() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ipp); ok {
		return x.Ipp
	}
	return false
}

func (m *ServiceChoice) GetIppdev() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ippdev); ok {
		return x.Ippdev
	}
	return false
}

func (m *ServiceChoice) GetIppprom() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ippprom); ok {
		return x.Ippprom
	}
	return false
}

func (m *ServiceChoice) GetJosef() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Josef); ok {
		return x.Josef
	}
	return false
}

func (m *ServiceChoice) GetKcdmux() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Kcdmux); ok {
		return x.Kcdmux
	}
	return false
}

func (m *ServiceChoice) GetKcdmuxReadonly() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_KcdmuxReadonly); ok {
		return x.KcdmuxReadonly
	}
	return false
}

func (m *ServiceChoice) GetKeypr() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Keypr); ok {
		return x.Keypr
	}
	return false
}

func (m *ServiceChoice) GetLilacEdge() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_LilacEdge); ok {
		return x.LilacEdge
	}
	return false
}

func (m *ServiceChoice) GetMars() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Mars); ok {
		return x.Mars
	}
	return false
}

func (m *ServiceChoice) GetMaurice() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Maurice); ok {
		return x.Maurice
	}
	return false
}

func (m *ServiceChoice) GetMinerva() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Minerva); ok {
		return x.Minerva
	}
	return false
}

func (m *ServiceChoice) GetNfvsvc() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Nfvsvc); ok {
		return x.Nfvsvc
	}
	return false
}

func (m *ServiceChoice) GetNmsconnector() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Nmsconnector); ok {
		return x.Nmsconnector
	}
	return false
}

func (m *ServiceChoice) GetNmsproxy() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Nmsproxy); ok {
		return x.Nmsproxy
	}
	return false
}

func (m *ServiceChoice) GetObelix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Obelix); ok {
		return x.Obelix
	}
	return false
}

func (m *ServiceChoice) GetOcspmule() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ocspmule); ok {
		return x.Ocspmule
	}
	return false
}

func (m *ServiceChoice) GetOlympus() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Olympus); ok {
		return x.Olympus
	}
	return false
}

func (m *ServiceChoice) GetOpera() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Opera); ok {
		return x.Opera
	}
	return false
}

func (m *ServiceChoice) GetPhobos() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Phobos); ok {
		return x.Phobos
	}
	return false
}

func (m *ServiceChoice) GetPikachu() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Pikachu); ok {
		return x.Pikachu
	}
	return false
}

func (m *ServiceChoice) GetPiku() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Piku); ok {
		return x.Piku
	}
	return false
}

func (m *ServiceChoice) GetPkifactory() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Pkifactory); ok {
		return x.Pkifactory
	}
	return false
}

func (m *ServiceChoice) GetPluto() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Pluto); ok {
		return x.Pluto
	}
	return false
}

func (m *ServiceChoice) GetPonos() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ponos); ok {
		return x.Ponos
	}
	return false
}

func (m *ServiceChoice) GetPrism() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Prism); ok {
		return x.Prism
	}
	return false
}

func (m *ServiceChoice) GetPrismprime() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Prismprime); ok {
		return x.Prismprime
	}
	return false
}

func (m *ServiceChoice) GetPrometheus() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Prometheus); ok {
		return x.Prometheus
	}
	return false
}

func (m *ServiceChoice) GetProtekti() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Protekti); ok {
		return x.Protekti
	}
	return false
}

func (m *ServiceChoice) GetRakar() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Rakar); ok {
		return x.Rakar
	}
	return false
}

func (m *ServiceChoice) GetRatchet() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ratchet); ok {
		return x.Ratchet
	}
	return false
}

func (m *ServiceChoice) GetRolex() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Rolex); ok {
		return x.Rolex
	}
	return false
}

func (m *ServiceChoice) GetSahaya() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Sahaya); ok {
		return x.Sahaya
	}
	return false
}

func (m *ServiceChoice) GetScim() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Scim); ok {
		return x.Scim
	}
	return false
}

func (m *ServiceChoice) GetSed() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Sed); ok {
		return x.Sed
	}
	return false
}

func (m *ServiceChoice) GetSentinel() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Sentinel); ok {
		return x.Sentinel
	}
	return false
}

func (m *ServiceChoice) GetSpectrum() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Spectrum); ok {
		return x.Spectrum
	}
	return false
}

func (m *ServiceChoice) GetSiteConsole() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_SiteConsole); ok {
		return x.SiteConsole
	}
	return false
}

func (m *ServiceChoice) GetStreak() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Streak); ok {
		return x.Streak
	}
	return false
}

func (m *ServiceChoice) GetTpmauthority() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Tpmauthority); ok {
		return x.Tpmauthority
	}
	return false
}

func (m *ServiceChoice) GetTrafficactioner() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Trafficactioner); ok {
		return x.Trafficactioner
	}
	return false
}

func (m *ServiceChoice) GetVega() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vega); ok {
		return x.Vega
	}
	return false
}

func (m *ServiceChoice) GetVer() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Ver); ok {
		return x.Ver
	}
	return false
}

func (m *ServiceChoice) GetViaApiService() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_ViaApiService); ok {
		return x.ViaApiService
	}
	return false
}

func (m *ServiceChoice) GetViaconnector() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Viaconnector); ok {
		return x.Viaconnector
	}
	return false
}

func (m *ServiceChoice) GetVoucher() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Voucher); ok {
		return x.Voucher
	}
	return false
}

func (m *ServiceChoice) GetVpm() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vpm); ok {
		return x.Vpm
	}
	return false
}

func (m *ServiceChoice) GetVulpix() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Vulpix); ok {
		return x.Vulpix
	}
	return false
}

func (m *ServiceChoice) GetWarden() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Warden); ok {
		return x.Warden
	}
	return false
}

func (m *ServiceChoice) GetWingman() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Wingman); ok {
		return x.Wingman
	}
	return false
}

func (m *ServiceChoice) GetLucario() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Lucario); ok {
		return x.Lucario
	}
	return false
}

func (m *ServiceChoice) GetClearview() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Clearview); ok {
		return x.Clearview
	}
	return false
}

func (m *ServiceChoice) GetBigipconnector() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Bigipconnector); ok {
		return x.Bigipconnector
	}
	return false
}

func (m *ServiceChoice) GetGia() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Gia); ok {
		return x.Gia
	}
	return false
}

func (m *ServiceChoice) GetWibadapter() bool {
	if x, ok := m.GetChoice().(*ServiceChoice_Wibadapter); ok {
		return x.Wibadapter
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServiceChoice) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServiceChoice_Akar)(nil),
		(*ServiceChoice_AkarReadonly)(nil),
		(*ServiceChoice_AkarDnsdomain)(nil),
		(*ServiceChoice_Ares)(nil),
		(*ServiceChoice_Aspen)(nil),
		(*ServiceChoice_Asterix)(nil),
		(*ServiceChoice_Athena)(nil),
		(*ServiceChoice_Automatix)(nil),
		(*ServiceChoice_Barracute)(nil),
		(*ServiceChoice_Bdbewaf)(nil),
		(*ServiceChoice_Bfdp)(nil),
		(*ServiceChoice_Bifrost)(nil),
		(*ServiceChoice_Blindfold)(nil),
		(*ServiceChoice_Bolt)(nil),
		(*ServiceChoice_Brmalerts)(nil),
		(*ServiceChoice_Cdnconnectorsvc)(nil),
		(*ServiceChoice_Charmander)(nil),
		(*ServiceChoice_Charmandercar)(nil),
		(*ServiceChoice_ClientSideDefense)(nil),
		(*ServiceChoice_Conprof)(nil),
		(*ServiceChoice_Discovery)(nil),
		(*ServiceChoice_Doscontroller)(nil),
		(*ServiceChoice_Drogon)(nil),
		(*ServiceChoice_Dymo)(nil),
		(*ServiceChoice_Eywa)(nil),
		(*ServiceChoice_EywaReadonly)(nil),
		(*ServiceChoice_Eywaprime)(nil),
		(*ServiceChoice_EywaprimeReadonly)(nil),
		(*ServiceChoice_Ganges)(nil),
		(*ServiceChoice_Griffin)(nil),
		(*ServiceChoice_Hellas)(nil),
		(*ServiceChoice_Iapetus)(nil),
		(*ServiceChoice_Identityauthority)(nil),
		(*ServiceChoice_Ipp)(nil),
		(*ServiceChoice_Ippdev)(nil),
		(*ServiceChoice_Ippprom)(nil),
		(*ServiceChoice_Josef)(nil),
		(*ServiceChoice_Kcdmux)(nil),
		(*ServiceChoice_KcdmuxReadonly)(nil),
		(*ServiceChoice_Keypr)(nil),
		(*ServiceChoice_LilacEdge)(nil),
		(*ServiceChoice_Mars)(nil),
		(*ServiceChoice_Maurice)(nil),
		(*ServiceChoice_Minerva)(nil),
		(*ServiceChoice_Nfvsvc)(nil),
		(*ServiceChoice_Nmsconnector)(nil),
		(*ServiceChoice_Nmsproxy)(nil),
		(*ServiceChoice_Obelix)(nil),
		(*ServiceChoice_Ocspmule)(nil),
		(*ServiceChoice_Olympus)(nil),
		(*ServiceChoice_Opera)(nil),
		(*ServiceChoice_Phobos)(nil),
		(*ServiceChoice_Pikachu)(nil),
		(*ServiceChoice_Piku)(nil),
		(*ServiceChoice_Pkifactory)(nil),
		(*ServiceChoice_Pluto)(nil),
		(*ServiceChoice_Ponos)(nil),
		(*ServiceChoice_Prism)(nil),
		(*ServiceChoice_Prismprime)(nil),
		(*ServiceChoice_Prometheus)(nil),
		(*ServiceChoice_Protekti)(nil),
		(*ServiceChoice_Rakar)(nil),
		(*ServiceChoice_Ratchet)(nil),
		(*ServiceChoice_Rolex)(nil),
		(*ServiceChoice_Sahaya)(nil),
		(*ServiceChoice_Scim)(nil),
		(*ServiceChoice_Sed)(nil),
		(*ServiceChoice_Sentinel)(nil),
		(*ServiceChoice_Spectrum)(nil),
		(*ServiceChoice_SiteConsole)(nil),
		(*ServiceChoice_Streak)(nil),
		(*ServiceChoice_Tpmauthority)(nil),
		(*ServiceChoice_Trafficactioner)(nil),
		(*ServiceChoice_Vega)(nil),
		(*ServiceChoice_Ver)(nil),
		(*ServiceChoice_ViaApiService)(nil),
		(*ServiceChoice_Viaconnector)(nil),
		(*ServiceChoice_Voucher)(nil),
		(*ServiceChoice_Vpm)(nil),
		(*ServiceChoice_Vulpix)(nil),
		(*ServiceChoice_Warden)(nil),
		(*ServiceChoice_Wingman)(nil),
		(*ServiceChoice_Lucario)(nil),
		(*ServiceChoice_Clearview)(nil),
		(*ServiceChoice_Bigipconnector)(nil),
		(*ServiceChoice_Gia)(nil),
		(*ServiceChoice_Wibadapter)(nil),
	}
}

func init() {
	proto.RegisterType((*ServiceChoice)(nil), "ves.io.schema.vesenv.ServiceChoice")
}

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_services.proto", fileDescriptor_30eccf2b87cfc541)
}

var fileDescriptor_30eccf2b87cfc541 = []byte{
	// 3781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x59, 0xcb, 0x73, 0x1c, 0x37,
	0x7a, 0x9f, 0xb1, 0x28, 0x52, 0x82, 0xf5, 0xb0, 0xe9, 0xc7, 0xc2, 0xb2, 0x4d, 0xc3, 0xf2, 0xee,
	0x4a, 0xb2, 0x45, 0x72, 0x6d, 0xad, 0xfc, 0xcc, 0x6a, 0x35, 0x9c, 0x19, 0x3e, 0x24, 0x91, 0x9a,
	0x9d, 0xa1, 0x5e, 0x76, 0xd6, 0x0a, 0xa6, 0x1b, 0x33, 0x03, 0xb1, 0x1b, 0xe8, 0x00, 0xe8, 0x21,
	0x47, 0xe5, 0x4a, 0x6d, 0xe5, 0x96, 0xaa, 0x1c, 0x72, 0x4b, 0x55, 0x0e, 0x49, 0x8e, 0xf9, 0x1b,
	0xba, 0xff, 0x81, 0x1c, 0x7d, 0x49, 0xd5, 0x1e, 0x63, 0xf9, 0x92, 0xa3, 0xff, 0x84, 0x14, 0x3e,
	0xf4, 0x03, 0x43, 0x3a, 0x55, 0xd9, 0xd3, 0x4c, 0xff, 0xf0, 0xe1, 0xf7, 0xa1, 0x81, 0xef, 0x85,
	0xaf, 0xd1, 0x95, 0x29, 0xd3, 0x6b, 0x5c, 0xae, 0xeb, 0x60, 0xc2, 0x62, 0xba, 0x3e, 0x65, 0x9a,
	0x89, 0xe9, 0x3a, 0x8d, 0xa2, 0xa7, 0x9a, 0xa9, 0x29, 0x0f, 0x98, 0x5e, 0x4b, 0x94, 0x34, 0x72,
	0xf9, 0x75, 0x27, 0xb8, 0xe6, 0x04, 0xd7, 0x9c, 0xe0, 0xa5, 0xcb, 0x3f, 0x3b, 0x5d, 0x26, 0x86,
	0x4b, 0x51, 0xcc, 0xbc, 0xfc, 0x5f, 0xb7, 0xd0, 0xf9, 0x81, 0x23, 0x6b, 0x4f, 0x24, 0x0f, 0xd8,
	0xf2, 0xd7, 0x68, 0x81, 0x1e, 0x50, 0x85, 0x9b, 0xa4, 0x79, 0xf5, 0xcc, 0x46, 0x27, 0xcb, 0xf1,
	0x6d, 0x87, 0x2c, 0xbf, 0xb4, 0xd5, 0xbe, 0xf4, 0xdb, 0x56, 0x6f, 0x87, 0x58, 0xed, 0x4c, 0x91,
	0x91, 0x54, 0x24, 0x51, 0xf2, 0x68, 0x46, 0xa8, 0x08, 0x89, 0x34, 0x13, 0xa6, 0x48, 0x20, 0xc5,
	0x88, 0x8f, 0x53, 0x45, 0xad, 0x12, 0x22, 0x87, 0xcf, 0x58, 0x60, 0xf4, 0x76, 0xa3, 0xef, 0x18,
	0x9e, 0xa0, 0xf3, 0xf6, 0xf7, 0xa9, 0x62, 0x34, 0x94, 0x22, 0x9a, 0xe1, 0xab, 0xa0, 0xe4, 0x93,
	0x2c, 0xc7, 0x6b, 0xc7, 0x86, 0x40, 0xdb, 0x5b, 0xf6, 0x69, 0xd5, 0x3e, 0x12, 0xc5, 0x92, 0x88,
	0x07, 0x94, 0xc8, 0x11, 0xb1, 0x72, 0xdb, 0x8d, 0xfe, 0x39, 0xfb, 0xdb, 0x2f, 0xc5, 0xfb, 0xe8,
	0x02, 0xcc, 0x0f, 0x85, 0x0e, 0x65, 0x4c, 0xb9, 0xc0, 0xd7, 0x80, 0xfb, 0x5a, 0x96, 0xe3, 0x5f,
	0x1d, 0x1f, 0x03, 0xf2, 0x8b, 0x16, 0x23, 0x9d, 0xbd, 0x01, 0x71, 0xe0, 0x76, 0xa3, 0x0f, 0x4b,
	0xe8, 0x54, 0x52, 0xfb, 0x68, 0x81, 0x2a, 0xa6, 0xf1, 0x4b, 0xc0, 0x74, 0x2b, 0xcb, 0xf1, 0x97,
	0x0e, 0x59, 0x7e, 0xa9, 0xdf, 0xbd, 0xb4, 0xd6, 0x22, 0x4a, 0xa6, 0x86, 0x8b, 0x31, 0x29, 0x8e,
	0x83, 0x30, 0x31, 0xe6, 0x82, 0xc1, 0xc6, 0xb0, 0xa3, 0x60, 0x42, 0xed, 0xe3, 0x18, 0xa4, 0x98,
	0xdb, 0x04, 0x3b, 0xb7, 0x8f, 0x4e, 0x53, 0x9d, 0x30, 0x81, 0x3f, 0x04, 0xda, 0x2f, 0xb3, 0x1c,
	0x7f, 0x5a, 0x40, 0x96, 0x77, 0xf9, 0xa5, 0x76, 0xf7, 0xd2, 0xaf, 0x5a, 0x09, 0x27, 0x83, 0x84,
	0x05, 0x7c, 0xc4, 0x03, 0xb7, 0x97, 0x5d, 0x31, 0x92, 0x2a, 0x60, 0x31, 0x13, 0xa6, 0xd4, 0xb7,
	0xdd, 0xe8, 0x17, 0xf3, 0xb6, 0xd0, 0x12, 0xd5, 0x86, 0x29, 0x7e, 0x84, 0x17, 0x80, 0xf5, 0xa3,
	0x2c, 0xc7, 0x57, 0x2a, 0x10, 0xde, 0x17, 0x77, 0xa8, 0xa1, 0xe4, 0x1e, 0xa3, 0x4a, 0xd8, 0x55,
	0xd5, 0x07, 0xb9, 0xdd, 0xe8, 0x57, 0x82, 0x77, 0xd1, 0x22, 0x35, 0x13, 0x26, 0x28, 0x5e, 0x04,
	0x9e, 0x8f, 0xb3, 0x1c, 0xaf, 0x96, 0x18, 0xd0, 0xbc, 0xd7, 0x8a, 0x98, 0x32, 0x64, 0x97, 0x0a,
	0x3a, 0xae, 0x0e, 0xdc, 0xfe, 0x18, 0x25, 0xa3, 0x08, 0xd8, 0x4a, 0xf1, 0xdb, 0xe8, 0x2c, 0x4d,
	0x8d, 0x8c, 0xa9, 0xe1, 0x47, 0x78, 0x09, 0xf8, 0x48, 0x96, 0xe3, 0x77, 0x3c, 0x18, 0x28, 0x5f,
	0x7e, 0xd4, 0xda, 0x2c, 0x09, 0xb7, 0x1b, 0x7d, 0x6f, 0x74, 0x86, 0xce, 0x0e, 0xa9, 0x52, 0x34,
	0x48, 0x0d, 0xc3, 0x67, 0x80, 0xe1, 0x49, 0x96, 0xe3, 0x07, 0x1e, 0x0c, 0x0c, 0x9d, 0x3b, 0x72,
	0x68, 0x6d, 0x31, 0x60, 0x5a, 0x83, 0x35, 0x0a, 0xa9, 0x62, 0x1a, 0xf1, 0xe7, 0x8c, 0x18, 0x26,
	0xa8, 0x30, 0x24, 0xd5, 0x74, 0xcc, 0x48, 0x68, 0xb7, 0xc0, 0x8e, 0x53, 0x12, 0x52, 0x16, 0x4b,
	0x41, 0x8c, 0x74, 0xbb, 0x40, 0xb8, 0xb1, 0xaa, 0x6b, 0xda, 0x7f, 0x69, 0xa2, 0xa5, 0x61, 0x38,
	0x64, 0x87, 0x74, 0x84, 0xaf, 0x83, 0xe6, 0xbf, 0xcb, 0x72, 0xfc, 0xbc, 0x02, 0xad, 0x5e, 0x7b,
	0x56, 0x60, 0x0b, 0xc1, 0xa3, 0x56, 0xab, 0xf7, 0x25, 0xd9, 0xdb, 0xda, 0xd9, 0x7b, 0x4c, 0x5a,
	0x49, 0x42, 0x7a, 0x4a, 0x1a, 0x16, 0x18, 0x72, 0x75, 0xf3, 0x26, 0xd9, 0xd8, 0xd9, 0x5a, 0xdd,
	0xe9, 0x91, 0x47, 0xad, 0xcd, 0x6b, 0xbe, 0x85, 0x50, 0x41, 0xa3, 0xd9, 0x73, 0x7b, 0x14, 0x46,
	0xd1, 0xd1, 0x88, 0x07, 0xb0, 0xb0, 0x98, 0x9a, 0x60, 0x62, 0x41, 0x6a, 0x0c, 0x0d, 0x0e, 0x88,
	0xe6, 0x63, 0x41, 0x4d, 0xaa, 0xc0, 0x80, 0x2a, 0xdd, 0xd7, 0xd0, 0xc2, 0x70, 0x14, 0x26, 0x78,
	0x15, 0x16, 0xf6, 0x5a, 0x96, 0xe3, 0x8b, 0x0e, 0x81, 0xdd, 0x38, 0xb5, 0xbf, 0xd1, 0xb1, 0xe6,
	0x06, 0xc0, 0x63, 0xb4, 0x34, 0xe4, 0x23, 0x25, 0xb5, 0xc1, 0x6b, 0x20, 0xfd, 0x57, 0x59, 0x8e,
	0x3f, 0xaf, 0x40, 0x98, 0x70, 0xad, 0x45, 0x86, 0x8a, 0x87, 0x63, 0x46, 0x46, 0x4a, 0xc6, 0x64,
	0x2a, 0x23, 0xc3, 0x94, 0xa2, 0x84, 0x26, 0x5c, 0x13, 0x2e, 0x8c, 0x04, 0x37, 0xb1, 0x4f, 0xb0,
	0x88, 0x62, 0xa6, 0x3d, 0x85, 0x88, 0x8b, 0x70, 0x24, 0xa3, 0x10, 0x9f, 0x05, 0xee, 0x9b, 0x59,
	0x8e, 0x3f, 0xf6, 0x60, 0x60, 0x27, 0x03, 0x16, 0x28, 0x66, 0xca, 0x3d, 0xb1, 0xc6, 0x6c, 0xdf,
	0xd4, 0x1d, 0xb8, 0xb5, 0x67, 0xd8, 0xf8, 0x6a, 0xca, 0x4d, 0xb4, 0x30, 0x94, 0x91, 0xc1, 0x08,
	0x18, 0xdf, 0xcb, 0x72, 0xfc, 0xb6, 0x43, 0x9c, 0xd7, 0x82, 0x15, 0x5b, 0xe3, 0x1d, 0x94, 0xc6,
	0xeb, 0x06, 0x9f, 0xa1, 0xb3, 0x43, 0x7b, 0xe6, 0x4c, 0x19, 0x8d, 0xd7, 0x61, 0xee, 0x9d, 0x2c,
	0xc7, 0x9b, 0x1e, 0x0c, 0x04, 0x37, 0xdb, 0xa9, 0x36, 0x32, 0x66, 0x8a, 0x6c, 0xd2, 0x00, 0x1c,
	0x01, 0xc6, 0x6c, 0x60, 0xd9, 0xe8, 0xef, 0x5a, 0x23, 0x0a, 0xd3, 0xc0, 0x3e, 0x0b, 0xf2, 0xb8,
	0x4d, 0x92, 0x88, 0x9a, 0x91, 0x54, 0x31, 0x2c, 0xb1, 0xe2, 0x49, 0xd0, 0xc5, 0x20, 0x14, 0x81,
	0x14, 0x82, 0x05, 0x46, 0x2a, 0x3d, 0x0d, 0xf0, 0x6f, 0xbc, 0x70, 0x79, 0x7c, 0xd0, 0xed, 0x71,
	0xbb, 0x44, 0x48, 0x11, 0x70, 0xc1, 0x0a, 0xda, 0x9d, 0x3d, 0xab, 0xf3, 0x19, 0x18, 0x4b, 0xc4,
	0x23, 0x1a, 0x5c, 0xdb, 0x6e, 0xf4, 0x4f, 0x30, 0x6c, 0x22, 0x14, 0x4c, 0xa8, 0x8a, 0xa9, 0x08,
	0x99, 0xc2, 0x2f, 0x83, 0xb2, 0x5f, 0x66, 0x39, 0x26, 0x3e, 0x0e, 0x7a, 0x2e, 0x0c, 0xfa, 0x5d,
	0xbb, 0xd5, 0x63, 0x45, 0xe3, 0x18, 0xf6, 0xc7, 0x97, 0x18, 0xa2, 0xf3, 0xf5, 0x53, 0x40, 0x15,
	0x3e, 0xe7, 0x05, 0xa1, 0xf9, 0x21, 0x60, 0x7b, 0xdf, 0xb2, 0xb5, 0x7d, 0x98, 0x68, 0x1e, 0x32,
	0xf8, 0xad, 0x82, 0xd0, 0xb1, 0x79, 0xff, 0xda, 0x44, 0xaf, 0x05, 0x11, 0x67, 0xc2, 0x3c, 0xb5,
	0xb2, 0x4f, 0x43, 0x36, 0x62, 0x42, 0x33, 0xfc, 0x31, 0xa8, 0x8a, 0xb2, 0x1c, 0x4f, 0x7e, 0x56,
	0x00, 0x14, 0xee, 0xf6, 0x20, 0xa3, 0x94, 0x11, 0x95, 0x46, 0x91, 0x3c, 0xb4, 0xa7, 0xf4, 0x50,
	0x46, 0xa6, 0x2d, 0x85, 0x96, 0x11, 0xb3, 0x3e, 0x4b, 0x03, 0x70, 0xf5, 0xc1, 0x84, 0x26, 0xec,
	0x8a, 0x26, 0x8e, 0x6d, 0xd5, 0xb2, 0x91, 0x82, 0xcd, 0xda, 0x88, 0x35, 0xd7, 0x57, 0xdd, 0xd8,
	0x80, 0x87, 0xac, 0x53, 0xe8, 0x99, 0xa1, 0xa5, 0x40, 0x8a, 0x44, 0xc9, 0x11, 0xfe, 0x6b, 0x58,
	0xd3, 0x1f, 0xb3, 0x1c, 0x3f, 0xa9, 0x40, 0xe7, 0xd9, 0xfd, 0xee, 0xa5, 0xcd, 0xb6, 0x14, 0x86,
	0x8b, 0x54, 0xa6, 0xda, 0x9e, 0xd1, 0x88, 0x47, 0x76, 0x25, 0x90, 0xf6, 0x98, 0xb2, 0x56, 0x41,
	0x85, 0x5d, 0xa2, 0xf5, 0x63, 0xcd, 0xc1, 0x82, 0xda, 0xbd, 0x07, 0xd7, 0x49, 0xcc, 0x62, 0xa9,
	0x66, 0x44, 0xda, 0x1c, 0x69, 0x78, 0x6c, 0x77, 0xa8, 0xa2, 0x7e, 0x86, 0xce, 0x86, 0x5c, 0x07,
	0x76, 0x6c, 0x86, 0xc7, 0xbe, 0x95, 0x56, 0xb0, 0xb3, 0xd2, 0xd2, 0x46, 0x02, 0x6a, 0x03, 0xb3,
	0x0d, 0x12, 0xd2, 0x6e, 0x06, 0x29, 0xc5, 0x58, 0x58, 0xee, 0x91, 0x26, 0x87, 0x52, 0x1d, 0x8c,
	0x22, 0x79, 0x68, 0x5f, 0xd7, 0xe3, 0xf9, 0xb7, 0x26, 0x3a, 0x1f, 0x4a, 0x5d, 0x87, 0x66, 0xfc,
	0x09, 0x28, 0x3c, 0xcc, 0x72, 0xac, 0x8f, 0x0d, 0x81, 0xd2, 0x6f, 0x7d, 0xc3, 0xa4, 0xe3, 0xb1,
	0x62, 0x63, 0x0a, 0xf9, 0xad, 0xd3, 0x91, 0x03, 0xa2, 0x59, 0x90, 0x2a, 0x6e, 0x66, 0x84, 0x4d,
	0x99, 0x30, 0x2e, 0xcc, 0x8e, 0x99, 0x60, 0xca, 0xc9, 0x94, 0x41, 0x3b, 0x70, 0xd2, 0x31, 0x37,
	0x7c, 0xec, 0x32, 0x57, 0x22, 0x23, 0x1e, 0x70, 0x08, 0x60, 0xc7, 0x94, 0x32, 0xb4, 0x18, 0x2a,
	0x39, 0x96, 0x02, 0x9f, 0x87, 0x95, 0xdd, 0xcd, 0x72, 0xbc, 0x55, 0x62, 0xb0, 0xa4, 0x2f, 0x4a,
	0x4b, 0xb6, 0x2a, 0x52, 0x6d, 0x13, 0x8e, 0x62, 0xd4, 0xb0, 0x90, 0x1c, 0x7c, 0xae, 0xcb, 0xfa,
	0xa2, 0x88, 0x5a, 0x16, 0xa1, 0x09, 0xaf, 0xb3, 0x5a, 0x49, 0xf4, 0x08, 0x2d, 0x84, 0xb3, 0x58,
	0xe2, 0x6f, 0x40, 0x49, 0x2b, 0xcb, 0xf1, 0xef, 0x1c, 0x52, 0x9e, 0x34, 0xe4, 0xdc, 0x6b, 0xbb,
	0xcc, 0x28, 0x1e, 0x68, 0x92, 0xa4, 0x7a, 0xb2, 0x3a, 0xa6, 0x86, 0x1d, 0xd2, 0x59, 0x51, 0xe0,
	0x14, 0xa5, 0x4e, 0xcc, 0xcc, 0x84, 0xa5, 0x90, 0xca, 0x61, 0x3a, 0x45, 0x0b, 0x6c, 0x76, 0x48,
	0xf1, 0x05, 0x6f, 0xf5, 0x80, 0xc0, 0xda, 0xbf, 0x7a, 0x60, 0xd7, 0x4b, 0x83, 0x40, 0xa6, 0xc2,
	0x90, 0xb8, 0x0a, 0x77, 0xd7, 0xc9, 0x83, 0xd6, 0xee, 0x75, 0x22, 0xc5, 0xea, 0x50, 0x52, 0x15,
	0xc2, 0xe6, 0x89, 0x70, 0xbe, 0x74, 0xb2, 0x2a, 0x80, 0xe8, 0x21, 0x3a, 0x6f, 0x7f, 0xeb, 0x92,
	0xe9, 0x06, 0xe8, 0x5a, 0xcf, 0x72, 0xfc, 0xd1, 0xb1, 0x21, 0x50, 0xfa, 0xa6, 0x85, 0x88, 0x85,
	0x88, 0x5f, 0x37, 0xd9, 0x7a, 0xc9, 0x8e, 0x54, 0xf5, 0xd2, 0x3f, 0x34, 0xd1, 0x59, 0x0b, 0x24,
	0x8a, 0xc7, 0x0c, 0xff, 0x16, 0x48, 0x79, 0x96, 0x63, 0xe6, 0xc1, 0x40, 0xb8, 0xdf, 0x2d, 0x1f,
	0x89, 0xe6, 0xc6, 0xa6, 0x03, 0x62, 0x26, 0x8c, 0xc4, 0x50, 0x31, 0x90, 0x20, 0x4a, 0xe1, 0xd7,
	0xbe, 0xc0, 0x84, 0x45, 0x89, 0x26, 0x4c, 0xd0, 0x61, 0xc4, 0xc8, 0x80, 0x52, 0x0d, 0xdb, 0x66,
	0x85, 0x1f, 0x96, 0x09, 0xc5, 0x0f, 0xa7, 0xb5, 0x9a, 0x67, 0x68, 0xb9, 0x7a, 0xa8, 0x5f, 0xf4,
	0x26, 0xac, 0xe9, 0x8b, 0x2c, 0xc7, 0x37, 0x7f, 0x6e, 0x1c, 0x16, 0xf7, 0x76, 0xbd, 0xb8, 0x13,
	0xa5, 0xa2, 0xf5, 0xfd, 0x6a, 0x5a, 0xf5, 0xde, 0xb7, 0xd0, 0xe2, 0x98, 0x8a, 0x31, 0xd3, 0xf8,
	0x53, 0x2f, 0x88, 0x16, 0x58, 0x95, 0xcf, 0x2f, 0x6c, 0x46, 0xf2, 0x90, 0x04, 0xd6, 0x4a, 0x6d,
	0x04, 0xb6, 0xb6, 0x54, 0x48, 0xec, 0xa0, 0xa5, 0xb1, 0xe2, 0xa3, 0x11, 0x17, 0xf8, 0x22, 0x10,
	0xac, 0x66, 0x39, 0xbe, 0x56, 0x81, 0xb0, 0xaa, 0x4b, 0x03, 0x6e, 0x58, 0x55, 0x21, 0x6d, 0xa6,
	0x02, 0x92, 0x1e, 0x8d, 0xb8, 0x99, 0xd9, 0x58, 0x50, 0x8a, 0x7e, 0x87, 0x16, 0x27, 0x2c, 0x8a,
	0xa8, 0xc6, 0xef, 0x03, 0xd3, 0x30, 0xcb, 0xf1, 0xb7, 0x25, 0x06, 0x26, 0xd9, 0xdb, 0x97, 0x89,
	0x8c, 0xe4, 0x78, 0xe6, 0xd5, 0x57, 0xe4, 0x70, 0xc2, 0x83, 0x89, 0xb5, 0x46, 0xeb, 0x17, 0x9a,
	0x98, 0x52, 0x64, 0x48, 0x35, 0x0b, 0x09, 0x17, 0x10, 0x98, 0xc0, 0xf1, 0x8c, 0x24, 0x91, 0x0c,
	0x68, 0x54, 0x56, 0x46, 0xe0, 0x82, 0x25, 0xff, 0x08, 0x2d, 0x71, 0x9a, 0x30, 0x93, 0x6a, 0xfc,
	0x99, 0x17, 0x87, 0x4a, 0xb0, 0x0a, 0x82, 0x37, 0xfc, 0xa0, 0x90, 0x78, 0xde, 0x58, 0xfb, 0x03,
	0x71, 0x69, 0x11, 0x8c, 0x40, 0xa5, 0x91, 0x2b, 0x55, 0x4a, 0x9e, 0x19, 0x7a, 0x95, 0x87, 0x4c,
	0x18, 0x6e, 0x66, 0x34, 0x35, 0x13, 0x69, 0x43, 0x08, 0x7e, 0x05, 0x34, 0xee, 0x64, 0x39, 0xee,
	0xfe, 0xcc, 0x30, 0x6c, 0xe2, 0xf5, 0x9d, 0x02, 0xb6, 0xc9, 0x6c, 0xca, 0x35, 0x97, 0xa2, 0xf4,
	0x94, 0xda, 0x95, 0xca, 0x54, 0x6a, 0xcf, 0xfa, 0x24, 0xcd, 0x2e, 0x3a, 0xc5, 0x93, 0x04, 0x7f,
	0xee, 0x19, 0x92, 0x05, 0x80, 0xfe, 0xc3, 0xed, 0xfd, 0xfd, 0x1e, 0x19, 0x71, 0x6b, 0x98, 0x36,
	0xb0, 0x84, 0xf0, 0x7e, 0x65, 0xda, 0xe1, 0x76, 0xb7, 0x75, 0xe2, 0xaa, 0x95, 0xed, 0x46, 0x1f,
	0xa6, 0x7d, 0x83, 0x16, 0x79, 0x92, 0x84, 0x6c, 0x8a, 0xbf, 0xf2, 0x02, 0x49, 0x81, 0x01, 0xe9,
	0x7a, 0x87, 0x4d, 0x59, 0x24, 0x13, 0x58, 0x1a, 0x17, 0xda, 0x40, 0x82, 0x00, 0x2f, 0x60, 0x1a,
	0xa2, 0x24, 0x5c, 0x0a, 0x98, 0x3d, 0x35, 0xc2, 0x93, 0xc4, 0x1e, 0x47, 0x31, 0xfd, 0x0e, 0x5a,
	0xe2, 0x49, 0x62, 0xf7, 0x14, 0xdf, 0x02, 0xf6, 0xb5, 0x2c, 0xc7, 0x1f, 0x56, 0xa0, 0xb3, 0xf6,
	0x5e, 0xbd, 0xe5, 0x15, 0xbb, 0x1c, 0x91, 0x9d, 0x5e, 0x8f, 0xc0, 0x96, 0x17, 0xb2, 0x1d, 0x74,
	0xfa, 0x99, 0xd4, 0x6c, 0x84, 0x5b, 0xc0, 0x74, 0x3d, 0xcb, 0xf1, 0xd5, 0x02, 0x72, 0x3c, 0xad,
	0xea, 0x45, 0xed, 0xda, 0x82, 0x48, 0xa6, 0x21, 0xd1, 0x46, 0x2a, 0x3a, 0x86, 0x3b, 0x85, 0x93,
	0xbc, 0x85, 0x16, 0x0f, 0x82, 0x30, 0x4e, 0x8f, 0xf0, 0x86, 0xef, 0x29, 0x0e, 0x03, 0x9e, 0xe5,
	0x0e, 0xdb, 0x4d, 0x8f, 0x80, 0xe3, 0x2e, 0x9b, 0xb5, 0x23, 0x49, 0x0f, 0xec, 0x1b, 0x15, 0x12,
	0x14, 0x5d, 0x74, 0xff, 0x6a, 0x97, 0x6e, 0x03, 0xd1, 0xa7, 0x59, 0x8e, 0x3f, 0x39, 0x31, 0xe8,
	0x56, 0x76, 0x22, 0x70, 0xd9, 0xf7, 0x73, 0x92, 0xdb, 0x8d, 0xfe, 0x05, 0xf7, 0xcf, 0x73, 0xe6,
	0xd3, 0x07, 0x6c, 0x96, 0x28, 0xfc, 0x2a, 0x10, 0xff, 0x3a, 0xcb, 0xf1, 0xe5, 0x02, 0x02, 0xba,
	0x37, 0xee, 0xb2, 0x99, 0x57, 0x67, 0x92, 0xc1, 0x4c, 0x1b, 0x66, 0x83, 0x4f, 0x21, 0x73, 0x1f,
	0x21, 0x28, 0xb9, 0x9e, 0xb2, 0x70, 0xcc, 0xf0, 0x2f, 0xbd, 0x7d, 0x77, 0xf8, 0xaa, 0xc5, 0xab,
	0x04, 0xf1, 0xfa, 0x3d, 0x8b, 0x41, 0xc5, 0x06, 0xf7, 0x88, 0x24, 0xa2, 0xc2, 0xee, 0xd7, 0x59,
	0x90, 0xed, 0x5a, 0x51, 0x81, 0x16, 0x62, 0xaa, 0x34, 0xee, 0x00, 0xd5, 0xe3, 0x2c, 0xc7, 0xfb,
	0x0e, 0xa9, 0xdc, 0xa9, 0x53, 0xba, 0x93, 0x73, 0x57, 0x29, 0xc8, 0xc6, 0x56, 0xaf, 0xf4, 0xad,
	0x84, 0xba, 0x84, 0xbb, 0xae, 0x67, 0x02, 0x6a, 0xd3, 0x32, 0xc1, 0xd1, 0x40, 0x49, 0xad, 0xab,
	0x8c, 0x6f, 0xb3, 0x03, 0xb0, 0x6e, 0xa2, 0xa5, 0x98, 0xa6, 0x8a, 0x07, 0x0c, 0x2f, 0x83, 0xca,
	0x0f, 0xb3, 0x1c, 0xff, 0xba, 0x02, 0x61, 0x13, 0x7e, 0xf1, 0xb0, 0x47, 0x5a, 0x61, 0xcc, 0xb5,
	0x75, 0xa1, 0xf9, 0x8b, 0x5a, 0x25, 0x77, 0x1b, 0x2d, 0xc5, 0x5c, 0x30, 0x35, 0xa5, 0xb8, 0xeb,
	0x1d, 0x76, 0x09, 0x02, 0xcf, 0xab, 0x7d, 0x96, 0x48, 0x05, 0x56, 0x5c, 0x7b, 0x5d, 0x25, 0x71,
	0x0f, 0x2d, 0x8a, 0xd1, 0xd4, 0x56, 0xc2, 0x97, 0xbd, 0x3b, 0x7d, 0x81, 0xc1, 0xf6, 0x91, 0xee,
	0x91, 0x61, 0x4a, 0xd0, 0xa8, 0x9c, 0xae, 0x49, 0x87, 0x25, 0x91, 0x9c, 0xc1, 0xd1, 0xdc, 0x91,
	0x43, 0x6b, 0x3b, 0x85, 0xfc, 0x3f, 0x37, 0xd1, 0x39, 0x11, 0xeb, 0xaa, 0x04, 0xc6, 0x9b, 0x40,
	0xfa, 0xb7, 0x59, 0x8e, 0xe3, 0xf9, 0x11, 0x58, 0xda, 0x13, 0x77, 0xf1, 0xf2, 0x4f, 0x3a, 0xb5,
	0x21, 0x98, 0x6a, 0x42, 0xab, 0x6a, 0x7b, 0x95, 0xd4, 0x15, 0x38, 0x17, 0x86, 0xa9, 0x11, 0xb5,
	0xc7, 0xc0, 0xcc, 0x21, 0x63, 0x82, 0x6c, 0xde, 0x7c, 0xdc, 0x86, 0xe0, 0xb2, 0xb7, 0x3b, 0xa0,
	0x74, 0x40, 0x86, 0x34, 0x38, 0x60, 0x22, 0xb4, 0x79, 0x73, 0x4e, 0xdd, 0x1e, 0x3a, 0x23, 0x62,
	0x0d, 0x55, 0x01, 0xde, 0x82, 0x45, 0xfd, 0x26, 0xcb, 0xf1, 0xf5, 0x1a, 0x85, 0x05, 0xbd, 0xe3,
	0x16, 0xe4, 0x05, 0x2a, 0x0d, 0x0b, 0x02, 0x89, 0xed, 0x46, 0xbf, 0x96, 0x1e, 0xa0, 0x45, 0x39,
	0x64, 0x11, 0x3f, 0xc2, 0xaf, 0x79, 0x61, 0xaa, 0xc0, 0xe6, 0xee, 0x98, 0xef, 0x55, 0x59, 0x14,
	0xae, 0x40, 0x3b, 0xa2, 0x8c, 0x4f, 0xa4, 0x0b, 0x97, 0x4a, 0xbb, 0x7d, 0xc5, 0xb4, 0xa7, 0xe8,
	0x8c, 0x0c, 0x74, 0x12, 0xa7, 0x11, 0xc3, 0xaf, 0x7b, 0xb1, 0xaa, 0x42, 0x61, 0x91, 0xab, 0x2d,
	0x6b, 0x66, 0x13, 0x25, 0x85, 0x2d, 0x70, 0xef, 0xb7, 0x07, 0x3d, 0xa2, 0x98, 0x4e, 0xa4, 0x2d,
	0x9e, 0x63, 0xca, 0x85, 0xa1, 0xf6, 0x6c, 0xbd, 0xc3, 0xae, 0xa7, 0x33, 0xb4, 0x24, 0xa3, 0x59,
	0x9c, 0xa4, 0x1a, 0x6f, 0x7b, 0xa1, 0xbc, 0x04, 0x81, 0xfe, 0xd3, 0x36, 0xc4, 0x95, 0x2a, 0x3f,
	0xf9, 0x99, 0xa9, 0xca, 0xac, 0x5e, 0xc4, 0x85, 0x4a, 0x61, 0xab, 0x6d, 0x8d, 0xaa, 0xa4, 0xd9,
	0x44, 0xa7, 0x65, 0xc2, 0x14, 0xc5, 0x6f, 0x78, 0xae, 0xe9, 0xa0, 0xb9, 0xd2, 0xed, 0x8d, 0x6a,
	0x6b, 0x7a, 0xb6, 0xd6, 0x9c, 0x91, 0xd6, 0xd8, 0x5d, 0x2b, 0x0b, 0xd9, 0x0e, 0x5a, 0x4c, 0x26,
	0x72, 0x28, 0x35, 0xde, 0xf1, 0xbc, 0xa4, 0xc0, 0x80, 0x01, 0x57, 0x0c, 0xfd, 0xa2, 0xa7, 0x53,
	0xbf, 0x76, 0x29, 0xf7, 0x3b, 0xb4, 0x94, 0xf0, 0x03, 0x1a, 0x4c, 0x52, 0xfc, 0x26, 0xd0, 0xbc,
	0x9f, 0xe5, 0xf8, 0xdd, 0x0a, 0xac, 0x6f, 0x5f, 0x6d, 0xd7, 0x13, 0x69, 0xf5, 0x76, 0xec, 0xcb,
	0x94, 0xc3, 0x3b, 0x68, 0x21, 0xe1, 0x07, 0x29, 0xbe, 0x03, 0x73, 0x6f, 0x64, 0x39, 0x5e, 0x77,
	0x08, 0x2c, 0xe0, 0x83, 0x64, 0x32, 0xd3, 0xdc, 0x26, 0x6b, 0xbf, 0xb0, 0x9d, 0x50, 0x11, 0xda,
	0x9c, 0xcf, 0x05, 0x69, 0x77, 0xc1, 0xed, 0x61, 0x42, 0x8c, 0x50, 0x72, 0xc0, 0x47, 0xd4, 0xee,
	0xe0, 0x0c, 0xff, 0xc2, 0xab, 0x3e, 0x3d, 0xdc, 0xdd, 0x23, 0x36, 0x52, 0x1e, 0x85, 0x24, 0x80,
	0x3b, 0x2f, 0xe9, 0xdd, 0xdd, 0x21, 0x13, 0xce, 0x14, 0x55, 0xc1, 0x84, 0x33, 0x97, 0xb0, 0x63,
	0x2e, 0x5c, 0x66, 0x62, 0xca, 0xb8, 0x6e, 0x13, 0xc4, 0x17, 0x9f, 0xa8, 0x8f, 0x4e, 0x27, 0x51,
	0x6a, 0x24, 0xbe, 0xeb, 0x77, 0xac, 0x00, 0x72, 0x57, 0xdb, 0x7d, 0x16, 0xb1, 0x98, 0x19, 0x35,
	0x9b, 0xcb, 0x2b, 0x71, 0x51, 0x4f, 0x5b, 0x2d, 0x43, 0x1e, 0xd9, 0xcb, 0x93, 0x3d, 0x12, 0x37,
	0xaf, 0x8d, 0x4e, 0x27, 0x52, 0x48, 0x8d, 0xef, 0x79, 0xfd, 0x2a, 0x07, 0x55, 0xb1, 0xf2, 0xcd,
	0xb2, 0x22, 0xb7, 0x01, 0x2b, 0x4d, 0xfc, 0xb6, 0x97, 0x13, 0xfc, 0x02, 0x9d, 0x4e, 0x14, 0xd7,
	0x31, 0xde, 0xf5, 0xce, 0xc3, 0x41, 0xb0, 0xb0, 0x57, 0x46, 0x37, 0x8f, 0x02, 0x68, 0x16, 0x6c,
	0xb9, 0x72, 0x1e, 0xa6, 0xc2, 0x70, 0x1b, 0x21, 0xf8, 0xe3, 0xea, 0xdf, 0x3d, 0x6f, 0xbe, 0x87,
	0xbb, 0xee, 0x54, 0xcf, 0x3e, 0x13, 0x00, 0x60, 0x63, 0xea, 0xe1, 0x7d, 0x2b, 0x5c, 0xa6, 0x64,
	0xfc, 0xd8, 0x0b, 0x7c, 0x1e, 0xee, 0x02, 0x82, 0x57, 0x2d, 0xb9, 0x7d, 0x29, 0x7d, 0xc0, 0x15,
	0x18, 0xbe, 0x7c, 0x88, 0xce, 0x24, 0x4a, 0x1a, 0x76, 0x60, 0x38, 0xbe, 0x0f, 0x9c, 0x9b, 0x59,
	0x8e, 0x37, 0x6a, 0x14, 0x18, 0x3f, 0x29, 0x22, 0xb9, 0x4b, 0x43, 0x73, 0x1b, 0xdf, 0x0a, 0xa4,
	0x4a, 0x35, 0x39, 0x2a, 0x9b, 0x50, 0x5e, 0xda, 0xa8, 0x39, 0x6e, 0xa1, 0xd3, 0x0a, 0x1a, 0xbd,
	0xd8, 0xcf, 0x9d, 0xca, 0x75, 0x7a, 0xfb, 0xdd, 0x4b, 0x6f, 0xdc, 0x83, 0xd2, 0x11, 0x4a, 0xd9,
	0xb6, 0x9f, 0x34, 0x0a, 0x99, 0xfb, 0x68, 0x49, 0x51, 0x13, 0x4c, 0x98, 0xc1, 0x7f, 0xf4, 0x2c,
	0xba, 0x04, 0xff, 0xdf, 0x21, 0xbf, 0x9a, 0xf0, 0x37, 0xe8, 0xb4, 0x92, 0x11, 0x3b, 0xc2, 0x3d,
	0xa0, 0xdb, 0xce, 0x72, 0xdc, 0x29, 0x20, 0x78, 0xe1, 0xcf, 0xfc, 0x42, 0xb4, 0x8c, 0x4f, 0xe5,
	0xb5, 0x70, 0xd5, 0xca, 0x91, 0x98, 0x26, 0x49, 0x79, 0x45, 0x67, 0xb1, 0x55, 0xc4, 0xe0, 0xad,
	0x0b, 0x96, 0x0e, 0x5a, 0xd4, 0x74, 0x42, 0x67, 0x14, 0x7f, 0xeb, 0x87, 0x81, 0x01, 0x60, 0xae,
	0x47, 0xba, 0x55, 0x5c, 0x68, 0xa7, 0x8c, 0xb4, 0x76, 0xe6, 0xdb, 0x4c, 0xc5, 0xdc, 0xe5, 0x3f,
	0xa0, 0x05, 0x1d, 0xf0, 0x18, 0x7f, 0x00, 0x1c, 0x5f, 0x65, 0x39, 0xfe, 0xcc, 0x21, 0xc0, 0xf0,
	0x91, 0xab, 0x31, 0x5c, 0x6f, 0xc7, 0x26, 0xed, 0xd5, 0x0e, 0x34, 0x93, 0x49, 0x55, 0xce, 0xce,
	0xf5, 0xbd, 0xdc, 0xc4, 0xe7, 0xe8, 0x94, 0x66, 0x21, 0xfe, 0x03, 0x30, 0x8e, 0xb2, 0x1c, 0x0f,
	0x01, 0x00, 0xc2, 0x47, 0xbb, 0x3c, 0x50, 0x72, 0xb5, 0x3c, 0x5f, 0x95, 0x0a, 0x78, 0xe9, 0x2a,
	0x5e, 0x16, 0xf7, 0x01, 0x68, 0x94, 0x68, 0xd7, 0xb1, 0x33, 0x92, 0x04, 0x32, 0x8e, 0x53, 0x01,
	0xde, 0x4c, 0x0e, 0xb9, 0x99, 0x10, 0x3d, 0xa1, 0x09, 0xab, 0x9a, 0xbe, 0xce, 0x8b, 0x40, 0x47,
	0x17, 0x9d, 0xd1, 0x76, 0x65, 0x82, 0x45, 0xb8, 0x0f, 0x0b, 0xb8, 0x92, 0xe5, 0xf8, 0x83, 0x1a,
	0x85, 0x55, 0xbc, 0x26, 0x8a, 0x83, 0x9c, 0x77, 0xa6, 0x5a, 0xe8, 0x36, 0x3a, 0x03, 0xf9, 0x48,
	0xa5, 0x31, 0x1e, 0x00, 0xcd, 0xe5, 0x2c, 0xc7, 0x2b, 0x35, 0xea, 0xc2, 0xa3, 0x0d, 0x6e, 0x73,
	0xbb, 0x5a, 0x8f, 0xdf, 0x43, 0xe7, 0x34, 0x37, 0xec, 0x69, 0xe0, 0xba, 0x3c, 0xf8, 0x2d, 0x6f,
	0x31, 0x2f, 0xdb, 0x91, 0xa2, 0xfd, 0x53, 0x45, 0xfd, 0x73, 0x60, 0x9b, 0x85, 0xf8, 0x76, 0xa3,
	0x3f, 0x27, 0xd4, 0x45, 0x8b, 0xda, 0x28, 0x46, 0x0f, 0xf0, 0xbe, 0x17, 0x60, 0x0a, 0xcc, 0x7d,
	0x5c, 0x18, 0x18, 0x6a, 0xec, 0xe5, 0xa5, 0x68, 0x74, 0x48, 0xbf, 0xa5, 0x55, 0x0a, 0x7e, 0x83,
	0xce, 0x99, 0x24, 0xae, 0x2f, 0x2e, 0x8f, 0xbc, 0x36, 0xe7, 0xdc, 0x08, 0x50, 0xbe, 0x7b, 0xec,
	0xae, 0x54, 0x5f, 0x5b, 0xf6, 0x7b, 0xbb, 0xd6, 0x10, 0xe7, 0xa7, 0x48, 0x74, 0xb1, 0x68, 0xfd,
	0x52, 0x88, 0x03, 0x4c, 0xe1, 0x07, 0xc0, 0xdf, 0xce, 0x72, 0xfc, 0xfb, 0x13, 0x83, 0xe0, 0x96,
	0x57, 0x5b, 0x83, 0xea, 0xb3, 0x03, 0x0d, 0xa7, 0x36, 0x68, 0x6b, 0x30, 0x26, 0x17, 0x67, 0xed,
	0x59, 0x87, 0x8a, 0x1e, 0x46, 0x56, 0xdb, 0x09, 0x82, 0xdf, 0xa3, 0x85, 0x29, 0x1b, 0x53, 0x7c,
	0xc9, 0xfb, 0x34, 0x02, 0x48, 0x9d, 0x49, 0xdb, 0x73, 0x51, 0xc5, 0xbe, 0xc7, 0xc3, 0x6e, 0xdf,
	0x1a, 0x2a, 0x88, 0x7d, 0x85, 0x4e, 0x4d, 0x99, 0xc2, 0x0f, 0xbd, 0xa3, 0xb1, 0x40, 0x5d, 0x22,
	0x57, 0x69, 0xd4, 0x96, 0xc3, 0x90, 0x4b, 0xe1, 0x94, 0x41, 0xe8, 0x3b, 0x74, 0x71, 0xca, 0xe9,
	0x53, 0x9a, 0xf0, 0xf2, 0xfb, 0x15, 0x7e, 0x02, 0x44, 0xfd, 0x2c, 0xc7, 0x7b, 0x27, 0x06, 0x9d,
	0xd3, 0x6f, 0x43, 0x06, 0xd4, 0xa4, 0xdd, 0x7f, 0xd0, 0x71, 0x6d, 0x12, 0x97, 0xca, 0x5a, 0xbd,
	0x1d, 0xd7, 0x5f, 0xb8, 0x3f, 0xb4, 0xf2, 0x74, 0xc8, 0xed, 0xf5, 0xba, 0x3c, 0xc1, 0xb5, 0xed,
	0x46, 0xff, 0xfc, 0x94, 0xd3, 0x56, 0xc2, 0x8b, 0x23, 0x59, 0xfe, 0xf7, 0x26, 0x3a, 0x37, 0xe5,
	0xb4, 0x2e, 0x29, 0xbf, 0x06, 0xdd, 0xcf, 0xb3, 0x1c, 0x4f, 0xe7, 0x47, 0x40, 0xf1, 0x10, 0xdc,
	0xee, 0xb8, 0xd7, 0xc9, 0xbf, 0xd0, 0xeb, 0x3c, 0x7f, 0x3b, 0xb9, 0x58, 0x6b, 0x0f, 0x73, 0x7a,
	0xbf, 0x45, 0x4b, 0x53, 0x99, 0x06, 0x13, 0xa6, 0xf0, 0xdb, 0xb0, 0xb8, 0x8d, 0x2c, 0xc7, 0xb7,
	0x2a, 0x10, 0xce, 0x7f, 0xbd, 0x8a, 0x23, 0x2d, 0x63, 0x2f, 0x95, 0xd2, 0xf5, 0x5e, 0xaa, 0xe6,
	0x5c, 0xd9, 0x9d, 0xe5, 0xe2, 0x59, 0xd9, 0xba, 0xa8, 0xe6, 0xdf, 0x46, 0xa7, 0xa6, 0x49, 0x8c,
	0xdf, 0xf1, 0x6e, 0x85, 0x16, 0xa8, 0x4e, 0xef, 0xad, 0xba, 0x8c, 0x2a, 0xfa, 0x34, 0x45, 0x05,
	0xeb, 0x8e, 0x30, 0x89, 0x97, 0x5b, 0x68, 0x71, 0x9a, 0x46, 0x09, 0x3f, 0xc2, 0xef, 0x7a, 0x26,
	0x50, 0x60, 0xee, 0xca, 0xe5, 0xda, 0x70, 0x22, 0x24, 0x53, 0xce, 0x0e, 0xbd, 0xf9, 0xa5, 0xd0,
	0x77, 0x68, 0xf1, 0x90, 0xaa, 0x90, 0x09, 0xbc, 0xe2, 0x77, 0x3d, 0x1c, 0x06, 0x14, 0xbd, 0x96,
	0xb0, 0xd7, 0xdb, 0xb2, 0xba, 0x2d, 0xf7, 0xcf, 0x4c, 0xa8, 0x21, 0x09, 0x53, 0x5c, 0x86, 0xb6,
	0x4e, 0x8a, 0x66, 0x24, 0x98, 0xb0, 0xe0, 0xc0, 0x29, 0x1b, 0x45, 0x74, 0xac, 0xc9, 0x94, 0x2a,
	0x6e, 0x6b, 0xd9, 0x6a, 0x37, 0xb8, 0xd6, 0xa9, 0xeb, 0x7a, 0x14, 0xfc, 0x5b, 0x68, 0xe9, 0x90,
	0x8b, 0x71, 0x4c, 0x05, 0x7e, 0xcf, 0xff, 0x50, 0x56, 0x80, 0x73, 0x55, 0xe5, 0x2b, 0x83, 0x92,
	0x66, 0xe0, 0x36, 0xd5, 0xee, 0x65, 0x29, 0xd8, 0x45, 0x4b, 0x51, 0x1a, 0x58, 0x7d, 0x98, 0x78,
	0xde, 0x54, 0x82, 0xae, 0x17, 0xe7, 0x2a, 0xe0, 0x7e, 0x97, 0xdc, 0x57, 0xc1, 0x84, 0x69, 0x53,
	0xf5, 0xf6, 0x2a, 0xb1, 0x7f, 0x6c, 0xa2, 0xb3, 0x41, 0xc4, 0xa8, 0xb2, 0xbb, 0x85, 0x43, 0xaf,
	0x43, 0x5e, 0xc3, 0x2e, 0x0d, 0x0c, 0x4e, 0x9a, 0xe2, 0x56, 0xdb, 0x6d, 0x8a, 0x67, 0x76, 0xda,
	0xd9, 0x5d, 0xfb, 0x21, 0xd9, 0x50, 0xf2, 0xa0, 0xea, 0x16, 0x71, 0xed, 0xcf, 0x4b, 0xd2, 0x61,
	0x64, 0x0b, 0x10, 0xbb, 0x3a, 0x7b, 0x7f, 0xad, 0x35, 0xfd, 0x7d, 0x13, 0x5d, 0x18, 0xf2, 0x31,
	0x4f, 0x6a, 0x37, 0x61, 0xde, 0x55, 0xf6, 0xd8, 0x18, 0x2c, 0xec, 0x56, 0xb9, 0x30, 0xb7, 0x20,
	0x38, 0x70, 0xab, 0x67, 0xf3, 0x26, 0x79, 0xdc, 0x86, 0x8b, 0xd6, 0xb8, 0xf8, 0x1a, 0x0c, 0x2b,
	0x2b, 0x3e, 0x86, 0xb1, 0x40, 0xea, 0xf2, 0x32, 0x7e, 0x9c, 0xf5, 0x2e, 0x3a, 0x35, 0xe6, 0x14,
	0x8f, 0x40, 0xf1, 0x67, 0x59, 0x8e, 0x6f, 0x00, 0x00, 0xda, 0xae, 0xfe, 0x1f, 0xda, 0xbe, 0xde,
	0xdf, 0x6b, 0x11, 0x9e, 0x10, 0x1a, 0x86, 0xaa, 0xec, 0x74, 0xc1, 0x24, 0x86, 0xd0, 0x21, 0x1f,
	0xd2, 0x90, 0x26, 0x86, 0x29, 0x3c, 0xf1, 0xc2, 0xab, 0x87, 0xc3, 0x71, 0xaf, 0x3a, 0x67, 0x2d,
	0x8e, 0xbc, 0x18, 0x81, 0x46, 0x4d, 0x99, 0xfb, 0x1e, 0xed, 0x6c, 0xf8, 0xb5, 0x94, 0x47, 0xb0,
	0x71, 0x06, 0x2d, 0x06, 0xf0, 0xfd, 0xfc, 0xce, 0xc2, 0x99, 0x2b, 0xaf, 0x5c, 0xdd, 0xf8, 0x53,
	0xf3, 0xfb, 0x1f, 0x56, 0x1a, 0x7f, 0xfe, 0x61, 0xa5, 0xf1, 0xd3, 0x0f, 0x2b, 0xcd, 0x3f, 0xbd,
	0x58, 0x69, 0xfe, 0xc7, 0x8b, 0x95, 0xe6, 0x7f, 0xbe, 0x58, 0x69, 0x7e, 0xff, 0x62, 0xa5, 0xf9,
	0xdf, 0x2f, 0x56, 0x9a, 0xff, 0xf3, 0x62, 0xa5, 0xf1, 0xd3, 0x8b, 0x95, 0xe6, 0x3f, 0xfd, 0xb8,
	0xd2, 0xf8, 0xfe, 0xc7, 0x95, 0xc6, 0x9f, 0x7f, 0x5c, 0x69, 0x7c, 0x7d, 0x67, 0x2c, 0x93, 0x83,
	0xf1, 0x5a, 0xf9, 0x01, 0x6e, 0x2d, 0xd5, 0xeb, 0xf0, 0xc7, 0xfa, 0xe2, 0x2a, 0x24, 0x94, 0x90,
	0xa9, 0xd5, 0x72, 0x78, 0x3d, 0x19, 0x8e, 0xe5, 0x3a, 0x3b, 0x32, 0xc5, 0x17, 0xfe, 0xb9, 0x0f,
	0xfd, 0xc3, 0x45, 0xf8, 0xc2, 0x7f, 0xe3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x79, 0xce, 0xa6,
	0xe1, 0x46, 0x20, 0x00, 0x00,
}

func (this *ServiceChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice)
	if !ok {
		that2, ok := that.(ServiceChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *ServiceChoice_Akar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Akar)
	if !ok {
		that2, ok := that.(ServiceChoice_Akar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Akar != that1.Akar {
		return false
	}
	return true
}
func (this *ServiceChoice_AkarReadonly) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_AkarReadonly)
	if !ok {
		that2, ok := that.(ServiceChoice_AkarReadonly)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AkarReadonly != that1.AkarReadonly {
		return false
	}
	return true
}
func (this *ServiceChoice_AkarDnsdomain) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_AkarDnsdomain)
	if !ok {
		that2, ok := that.(ServiceChoice_AkarDnsdomain)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AkarDnsdomain != that1.AkarDnsdomain {
		return false
	}
	return true
}
func (this *ServiceChoice_Ares) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ares)
	if !ok {
		that2, ok := that.(ServiceChoice_Ares)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ares != that1.Ares {
		return false
	}
	return true
}
func (this *ServiceChoice_Aspen) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Aspen)
	if !ok {
		that2, ok := that.(ServiceChoice_Aspen)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Aspen != that1.Aspen {
		return false
	}
	return true
}
func (this *ServiceChoice_Asterix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Asterix)
	if !ok {
		that2, ok := that.(ServiceChoice_Asterix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Asterix != that1.Asterix {
		return false
	}
	return true
}
func (this *ServiceChoice_Athena) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Athena)
	if !ok {
		that2, ok := that.(ServiceChoice_Athena)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Athena != that1.Athena {
		return false
	}
	return true
}
func (this *ServiceChoice_Automatix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Automatix)
	if !ok {
		that2, ok := that.(ServiceChoice_Automatix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Automatix != that1.Automatix {
		return false
	}
	return true
}
func (this *ServiceChoice_Barracute) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Barracute)
	if !ok {
		that2, ok := that.(ServiceChoice_Barracute)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Barracute != that1.Barracute {
		return false
	}
	return true
}
func (this *ServiceChoice_Bdbewaf) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bdbewaf)
	if !ok {
		that2, ok := that.(ServiceChoice_Bdbewaf)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bdbewaf != that1.Bdbewaf {
		return false
	}
	return true
}
func (this *ServiceChoice_Bfdp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bfdp)
	if !ok {
		that2, ok := that.(ServiceChoice_Bfdp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bfdp != that1.Bfdp {
		return false
	}
	return true
}
func (this *ServiceChoice_Bifrost) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bifrost)
	if !ok {
		that2, ok := that.(ServiceChoice_Bifrost)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bifrost != that1.Bifrost {
		return false
	}
	return true
}
func (this *ServiceChoice_Blindfold) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Blindfold)
	if !ok {
		that2, ok := that.(ServiceChoice_Blindfold)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Blindfold != that1.Blindfold {
		return false
	}
	return true
}
func (this *ServiceChoice_Bolt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bolt)
	if !ok {
		that2, ok := that.(ServiceChoice_Bolt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bolt != that1.Bolt {
		return false
	}
	return true
}
func (this *ServiceChoice_Brmalerts) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Brmalerts)
	if !ok {
		that2, ok := that.(ServiceChoice_Brmalerts)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Brmalerts != that1.Brmalerts {
		return false
	}
	return true
}
func (this *ServiceChoice_Cdnconnectorsvc) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Cdnconnectorsvc)
	if !ok {
		that2, ok := that.(ServiceChoice_Cdnconnectorsvc)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cdnconnectorsvc != that1.Cdnconnectorsvc {
		return false
	}
	return true
}
func (this *ServiceChoice_Charmander) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Charmander)
	if !ok {
		that2, ok := that.(ServiceChoice_Charmander)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Charmander != that1.Charmander {
		return false
	}
	return true
}
func (this *ServiceChoice_Charmandercar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Charmandercar)
	if !ok {
		that2, ok := that.(ServiceChoice_Charmandercar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Charmandercar != that1.Charmandercar {
		return false
	}
	return true
}
func (this *ServiceChoice_ClientSideDefense) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_ClientSideDefense)
	if !ok {
		that2, ok := that.(ServiceChoice_ClientSideDefense)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientSideDefense != that1.ClientSideDefense {
		return false
	}
	return true
}
func (this *ServiceChoice_Conprof) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Conprof)
	if !ok {
		that2, ok := that.(ServiceChoice_Conprof)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Conprof != that1.Conprof {
		return false
	}
	return true
}
func (this *ServiceChoice_Discovery) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Discovery)
	if !ok {
		that2, ok := that.(ServiceChoice_Discovery)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Discovery != that1.Discovery {
		return false
	}
	return true
}
func (this *ServiceChoice_Doscontroller) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Doscontroller)
	if !ok {
		that2, ok := that.(ServiceChoice_Doscontroller)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Doscontroller != that1.Doscontroller {
		return false
	}
	return true
}
func (this *ServiceChoice_Drogon) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Drogon)
	if !ok {
		that2, ok := that.(ServiceChoice_Drogon)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Drogon != that1.Drogon {
		return false
	}
	return true
}
func (this *ServiceChoice_Dymo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Dymo)
	if !ok {
		that2, ok := that.(ServiceChoice_Dymo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Dymo != that1.Dymo {
		return false
	}
	return true
}
func (this *ServiceChoice_Eywa) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Eywa)
	if !ok {
		that2, ok := that.(ServiceChoice_Eywa)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Eywa != that1.Eywa {
		return false
	}
	return true
}
func (this *ServiceChoice_EywaReadonly) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_EywaReadonly)
	if !ok {
		that2, ok := that.(ServiceChoice_EywaReadonly)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.EywaReadonly != that1.EywaReadonly {
		return false
	}
	return true
}
func (this *ServiceChoice_Eywaprime) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Eywaprime)
	if !ok {
		that2, ok := that.(ServiceChoice_Eywaprime)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Eywaprime != that1.Eywaprime {
		return false
	}
	return true
}
func (this *ServiceChoice_EywaprimeReadonly) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_EywaprimeReadonly)
	if !ok {
		that2, ok := that.(ServiceChoice_EywaprimeReadonly)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.EywaprimeReadonly != that1.EywaprimeReadonly {
		return false
	}
	return true
}
func (this *ServiceChoice_Ganges) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ganges)
	if !ok {
		that2, ok := that.(ServiceChoice_Ganges)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ganges != that1.Ganges {
		return false
	}
	return true
}
func (this *ServiceChoice_Griffin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Griffin)
	if !ok {
		that2, ok := that.(ServiceChoice_Griffin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Griffin != that1.Griffin {
		return false
	}
	return true
}
func (this *ServiceChoice_Hellas) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Hellas)
	if !ok {
		that2, ok := that.(ServiceChoice_Hellas)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Hellas != that1.Hellas {
		return false
	}
	return true
}
func (this *ServiceChoice_Iapetus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Iapetus)
	if !ok {
		that2, ok := that.(ServiceChoice_Iapetus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Iapetus != that1.Iapetus {
		return false
	}
	return true
}
func (this *ServiceChoice_Identityauthority) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Identityauthority)
	if !ok {
		that2, ok := that.(ServiceChoice_Identityauthority)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Identityauthority != that1.Identityauthority {
		return false
	}
	return true
}
func (this *ServiceChoice_Ipp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ipp)
	if !ok {
		that2, ok := that.(ServiceChoice_Ipp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ipp != that1.Ipp {
		return false
	}
	return true
}
func (this *ServiceChoice_Ippdev) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ippdev)
	if !ok {
		that2, ok := that.(ServiceChoice_Ippdev)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ippdev != that1.Ippdev {
		return false
	}
	return true
}
func (this *ServiceChoice_Ippprom) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ippprom)
	if !ok {
		that2, ok := that.(ServiceChoice_Ippprom)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ippprom != that1.Ippprom {
		return false
	}
	return true
}
func (this *ServiceChoice_Josef) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Josef)
	if !ok {
		that2, ok := that.(ServiceChoice_Josef)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Josef != that1.Josef {
		return false
	}
	return true
}
func (this *ServiceChoice_Kcdmux) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Kcdmux)
	if !ok {
		that2, ok := that.(ServiceChoice_Kcdmux)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Kcdmux != that1.Kcdmux {
		return false
	}
	return true
}
func (this *ServiceChoice_KcdmuxReadonly) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_KcdmuxReadonly)
	if !ok {
		that2, ok := that.(ServiceChoice_KcdmuxReadonly)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.KcdmuxReadonly != that1.KcdmuxReadonly {
		return false
	}
	return true
}
func (this *ServiceChoice_Keypr) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Keypr)
	if !ok {
		that2, ok := that.(ServiceChoice_Keypr)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Keypr != that1.Keypr {
		return false
	}
	return true
}
func (this *ServiceChoice_LilacEdge) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_LilacEdge)
	if !ok {
		that2, ok := that.(ServiceChoice_LilacEdge)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LilacEdge != that1.LilacEdge {
		return false
	}
	return true
}
func (this *ServiceChoice_Mars) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Mars)
	if !ok {
		that2, ok := that.(ServiceChoice_Mars)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Mars != that1.Mars {
		return false
	}
	return true
}
func (this *ServiceChoice_Maurice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Maurice)
	if !ok {
		that2, ok := that.(ServiceChoice_Maurice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Maurice != that1.Maurice {
		return false
	}
	return true
}
func (this *ServiceChoice_Minerva) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Minerva)
	if !ok {
		that2, ok := that.(ServiceChoice_Minerva)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Minerva != that1.Minerva {
		return false
	}
	return true
}
func (this *ServiceChoice_Nfvsvc) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Nfvsvc)
	if !ok {
		that2, ok := that.(ServiceChoice_Nfvsvc)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Nfvsvc != that1.Nfvsvc {
		return false
	}
	return true
}
func (this *ServiceChoice_Nmsconnector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Nmsconnector)
	if !ok {
		that2, ok := that.(ServiceChoice_Nmsconnector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Nmsconnector != that1.Nmsconnector {
		return false
	}
	return true
}
func (this *ServiceChoice_Nmsproxy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Nmsproxy)
	if !ok {
		that2, ok := that.(ServiceChoice_Nmsproxy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Nmsproxy != that1.Nmsproxy {
		return false
	}
	return true
}
func (this *ServiceChoice_Obelix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Obelix)
	if !ok {
		that2, ok := that.(ServiceChoice_Obelix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Obelix != that1.Obelix {
		return false
	}
	return true
}
func (this *ServiceChoice_Ocspmule) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ocspmule)
	if !ok {
		that2, ok := that.(ServiceChoice_Ocspmule)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ocspmule != that1.Ocspmule {
		return false
	}
	return true
}
func (this *ServiceChoice_Olympus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Olympus)
	if !ok {
		that2, ok := that.(ServiceChoice_Olympus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Olympus != that1.Olympus {
		return false
	}
	return true
}
func (this *ServiceChoice_Opera) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Opera)
	if !ok {
		that2, ok := that.(ServiceChoice_Opera)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Opera != that1.Opera {
		return false
	}
	return true
}
func (this *ServiceChoice_Phobos) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Phobos)
	if !ok {
		that2, ok := that.(ServiceChoice_Phobos)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Phobos != that1.Phobos {
		return false
	}
	return true
}
func (this *ServiceChoice_Pikachu) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Pikachu)
	if !ok {
		that2, ok := that.(ServiceChoice_Pikachu)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Pikachu != that1.Pikachu {
		return false
	}
	return true
}
func (this *ServiceChoice_Piku) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Piku)
	if !ok {
		that2, ok := that.(ServiceChoice_Piku)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Piku != that1.Piku {
		return false
	}
	return true
}
func (this *ServiceChoice_Pkifactory) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Pkifactory)
	if !ok {
		that2, ok := that.(ServiceChoice_Pkifactory)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Pkifactory != that1.Pkifactory {
		return false
	}
	return true
}
func (this *ServiceChoice_Pluto) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Pluto)
	if !ok {
		that2, ok := that.(ServiceChoice_Pluto)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Pluto != that1.Pluto {
		return false
	}
	return true
}
func (this *ServiceChoice_Ponos) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ponos)
	if !ok {
		that2, ok := that.(ServiceChoice_Ponos)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ponos != that1.Ponos {
		return false
	}
	return true
}
func (this *ServiceChoice_Prism) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Prism)
	if !ok {
		that2, ok := that.(ServiceChoice_Prism)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Prism != that1.Prism {
		return false
	}
	return true
}
func (this *ServiceChoice_Prismprime) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Prismprime)
	if !ok {
		that2, ok := that.(ServiceChoice_Prismprime)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Prismprime != that1.Prismprime {
		return false
	}
	return true
}
func (this *ServiceChoice_Prometheus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Prometheus)
	if !ok {
		that2, ok := that.(ServiceChoice_Prometheus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Prometheus != that1.Prometheus {
		return false
	}
	return true
}
func (this *ServiceChoice_Protekti) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Protekti)
	if !ok {
		that2, ok := that.(ServiceChoice_Protekti)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Protekti != that1.Protekti {
		return false
	}
	return true
}
func (this *ServiceChoice_Rakar) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Rakar)
	if !ok {
		that2, ok := that.(ServiceChoice_Rakar)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Rakar != that1.Rakar {
		return false
	}
	return true
}
func (this *ServiceChoice_Ratchet) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ratchet)
	if !ok {
		that2, ok := that.(ServiceChoice_Ratchet)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ratchet != that1.Ratchet {
		return false
	}
	return true
}
func (this *ServiceChoice_Rolex) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Rolex)
	if !ok {
		that2, ok := that.(ServiceChoice_Rolex)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Rolex != that1.Rolex {
		return false
	}
	return true
}
func (this *ServiceChoice_Sahaya) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Sahaya)
	if !ok {
		that2, ok := that.(ServiceChoice_Sahaya)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Sahaya != that1.Sahaya {
		return false
	}
	return true
}
func (this *ServiceChoice_Scim) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Scim)
	if !ok {
		that2, ok := that.(ServiceChoice_Scim)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Scim != that1.Scim {
		return false
	}
	return true
}
func (this *ServiceChoice_Sed) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Sed)
	if !ok {
		that2, ok := that.(ServiceChoice_Sed)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Sed != that1.Sed {
		return false
	}
	return true
}
func (this *ServiceChoice_Sentinel) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Sentinel)
	if !ok {
		that2, ok := that.(ServiceChoice_Sentinel)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Sentinel != that1.Sentinel {
		return false
	}
	return true
}
func (this *ServiceChoice_Spectrum) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Spectrum)
	if !ok {
		that2, ok := that.(ServiceChoice_Spectrum)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Spectrum != that1.Spectrum {
		return false
	}
	return true
}
func (this *ServiceChoice_SiteConsole) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_SiteConsole)
	if !ok {
		that2, ok := that.(ServiceChoice_SiteConsole)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SiteConsole != that1.SiteConsole {
		return false
	}
	return true
}
func (this *ServiceChoice_Streak) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Streak)
	if !ok {
		that2, ok := that.(ServiceChoice_Streak)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Streak != that1.Streak {
		return false
	}
	return true
}
func (this *ServiceChoice_Tpmauthority) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Tpmauthority)
	if !ok {
		that2, ok := that.(ServiceChoice_Tpmauthority)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Tpmauthority != that1.Tpmauthority {
		return false
	}
	return true
}
func (this *ServiceChoice_Trafficactioner) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Trafficactioner)
	if !ok {
		that2, ok := that.(ServiceChoice_Trafficactioner)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Trafficactioner != that1.Trafficactioner {
		return false
	}
	return true
}
func (this *ServiceChoice_Vega) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vega)
	if !ok {
		that2, ok := that.(ServiceChoice_Vega)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vega != that1.Vega {
		return false
	}
	return true
}
func (this *ServiceChoice_Ver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Ver)
	if !ok {
		that2, ok := that.(ServiceChoice_Ver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ver != that1.Ver {
		return false
	}
	return true
}
func (this *ServiceChoice_ViaApiService) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_ViaApiService)
	if !ok {
		that2, ok := that.(ServiceChoice_ViaApiService)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ViaApiService != that1.ViaApiService {
		return false
	}
	return true
}
func (this *ServiceChoice_Viaconnector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Viaconnector)
	if !ok {
		that2, ok := that.(ServiceChoice_Viaconnector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Viaconnector != that1.Viaconnector {
		return false
	}
	return true
}
func (this *ServiceChoice_Voucher) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Voucher)
	if !ok {
		that2, ok := that.(ServiceChoice_Voucher)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Voucher != that1.Voucher {
		return false
	}
	return true
}
func (this *ServiceChoice_Vpm) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vpm)
	if !ok {
		that2, ok := that.(ServiceChoice_Vpm)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vpm != that1.Vpm {
		return false
	}
	return true
}
func (this *ServiceChoice_Vulpix) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Vulpix)
	if !ok {
		that2, ok := that.(ServiceChoice_Vulpix)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vulpix != that1.Vulpix {
		return false
	}
	return true
}
func (this *ServiceChoice_Warden) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Warden)
	if !ok {
		that2, ok := that.(ServiceChoice_Warden)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Warden != that1.Warden {
		return false
	}
	return true
}
func (this *ServiceChoice_Wingman) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Wingman)
	if !ok {
		that2, ok := that.(ServiceChoice_Wingman)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Wingman != that1.Wingman {
		return false
	}
	return true
}
func (this *ServiceChoice_Lucario) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Lucario)
	if !ok {
		that2, ok := that.(ServiceChoice_Lucario)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Lucario != that1.Lucario {
		return false
	}
	return true
}
func (this *ServiceChoice_Clearview) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Clearview)
	if !ok {
		that2, ok := that.(ServiceChoice_Clearview)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Clearview != that1.Clearview {
		return false
	}
	return true
}
func (this *ServiceChoice_Bigipconnector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Bigipconnector)
	if !ok {
		that2, ok := that.(ServiceChoice_Bigipconnector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Bigipconnector != that1.Bigipconnector {
		return false
	}
	return true
}
func (this *ServiceChoice_Gia) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Gia)
	if !ok {
		that2, ok := that.(ServiceChoice_Gia)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Gia != that1.Gia {
		return false
	}
	return true
}
func (this *ServiceChoice_Wibadapter) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServiceChoice_Wibadapter)
	if !ok {
		that2, ok := that.(ServiceChoice_Wibadapter)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Wibadapter != that1.Wibadapter {
		return false
	}
	return true
}
func (this *ServiceChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 91)
	s = append(s, "&vesenv.ServiceChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ServiceChoice_Akar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Akar{` +
		`Akar:` + fmt.Sprintf("%#v", this.Akar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_AkarReadonly) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_AkarReadonly{` +
		`AkarReadonly:` + fmt.Sprintf("%#v", this.AkarReadonly) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_AkarDnsdomain) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_AkarDnsdomain{` +
		`AkarDnsdomain:` + fmt.Sprintf("%#v", this.AkarDnsdomain) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ares) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ares{` +
		`Ares:` + fmt.Sprintf("%#v", this.Ares) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Aspen) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Aspen{` +
		`Aspen:` + fmt.Sprintf("%#v", this.Aspen) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Asterix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Asterix{` +
		`Asterix:` + fmt.Sprintf("%#v", this.Asterix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Athena) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Athena{` +
		`Athena:` + fmt.Sprintf("%#v", this.Athena) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Automatix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Automatix{` +
		`Automatix:` + fmt.Sprintf("%#v", this.Automatix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Barracute) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Barracute{` +
		`Barracute:` + fmt.Sprintf("%#v", this.Barracute) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bdbewaf) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bdbewaf{` +
		`Bdbewaf:` + fmt.Sprintf("%#v", this.Bdbewaf) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bfdp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bfdp{` +
		`Bfdp:` + fmt.Sprintf("%#v", this.Bfdp) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bifrost) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bifrost{` +
		`Bifrost:` + fmt.Sprintf("%#v", this.Bifrost) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Blindfold) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Blindfold{` +
		`Blindfold:` + fmt.Sprintf("%#v", this.Blindfold) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bolt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bolt{` +
		`Bolt:` + fmt.Sprintf("%#v", this.Bolt) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Brmalerts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Brmalerts{` +
		`Brmalerts:` + fmt.Sprintf("%#v", this.Brmalerts) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Cdnconnectorsvc) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Cdnconnectorsvc{` +
		`Cdnconnectorsvc:` + fmt.Sprintf("%#v", this.Cdnconnectorsvc) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Charmander) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Charmander{` +
		`Charmander:` + fmt.Sprintf("%#v", this.Charmander) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Charmandercar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Charmandercar{` +
		`Charmandercar:` + fmt.Sprintf("%#v", this.Charmandercar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_ClientSideDefense) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_ClientSideDefense{` +
		`ClientSideDefense:` + fmt.Sprintf("%#v", this.ClientSideDefense) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Conprof) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Conprof{` +
		`Conprof:` + fmt.Sprintf("%#v", this.Conprof) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Discovery) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Discovery{` +
		`Discovery:` + fmt.Sprintf("%#v", this.Discovery) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Doscontroller) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Doscontroller{` +
		`Doscontroller:` + fmt.Sprintf("%#v", this.Doscontroller) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Drogon) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Drogon{` +
		`Drogon:` + fmt.Sprintf("%#v", this.Drogon) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Dymo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Dymo{` +
		`Dymo:` + fmt.Sprintf("%#v", this.Dymo) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Eywa) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Eywa{` +
		`Eywa:` + fmt.Sprintf("%#v", this.Eywa) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_EywaReadonly) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_EywaReadonly{` +
		`EywaReadonly:` + fmt.Sprintf("%#v", this.EywaReadonly) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Eywaprime) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Eywaprime{` +
		`Eywaprime:` + fmt.Sprintf("%#v", this.Eywaprime) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_EywaprimeReadonly) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_EywaprimeReadonly{` +
		`EywaprimeReadonly:` + fmt.Sprintf("%#v", this.EywaprimeReadonly) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ganges) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ganges{` +
		`Ganges:` + fmt.Sprintf("%#v", this.Ganges) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Griffin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Griffin{` +
		`Griffin:` + fmt.Sprintf("%#v", this.Griffin) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Hellas) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Hellas{` +
		`Hellas:` + fmt.Sprintf("%#v", this.Hellas) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Iapetus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Iapetus{` +
		`Iapetus:` + fmt.Sprintf("%#v", this.Iapetus) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Identityauthority) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Identityauthority{` +
		`Identityauthority:` + fmt.Sprintf("%#v", this.Identityauthority) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ipp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ipp{` +
		`Ipp:` + fmt.Sprintf("%#v", this.Ipp) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ippdev) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ippdev{` +
		`Ippdev:` + fmt.Sprintf("%#v", this.Ippdev) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ippprom) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ippprom{` +
		`Ippprom:` + fmt.Sprintf("%#v", this.Ippprom) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Josef) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Josef{` +
		`Josef:` + fmt.Sprintf("%#v", this.Josef) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Kcdmux) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Kcdmux{` +
		`Kcdmux:` + fmt.Sprintf("%#v", this.Kcdmux) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_KcdmuxReadonly) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_KcdmuxReadonly{` +
		`KcdmuxReadonly:` + fmt.Sprintf("%#v", this.KcdmuxReadonly) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Keypr) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Keypr{` +
		`Keypr:` + fmt.Sprintf("%#v", this.Keypr) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_LilacEdge) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_LilacEdge{` +
		`LilacEdge:` + fmt.Sprintf("%#v", this.LilacEdge) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Mars) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Mars{` +
		`Mars:` + fmt.Sprintf("%#v", this.Mars) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Maurice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Maurice{` +
		`Maurice:` + fmt.Sprintf("%#v", this.Maurice) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Minerva) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Minerva{` +
		`Minerva:` + fmt.Sprintf("%#v", this.Minerva) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Nfvsvc) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Nfvsvc{` +
		`Nfvsvc:` + fmt.Sprintf("%#v", this.Nfvsvc) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Nmsconnector) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Nmsconnector{` +
		`Nmsconnector:` + fmt.Sprintf("%#v", this.Nmsconnector) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Nmsproxy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Nmsproxy{` +
		`Nmsproxy:` + fmt.Sprintf("%#v", this.Nmsproxy) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Obelix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Obelix{` +
		`Obelix:` + fmt.Sprintf("%#v", this.Obelix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ocspmule) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ocspmule{` +
		`Ocspmule:` + fmt.Sprintf("%#v", this.Ocspmule) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Olympus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Olympus{` +
		`Olympus:` + fmt.Sprintf("%#v", this.Olympus) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Opera) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Opera{` +
		`Opera:` + fmt.Sprintf("%#v", this.Opera) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Phobos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Phobos{` +
		`Phobos:` + fmt.Sprintf("%#v", this.Phobos) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Pikachu) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Pikachu{` +
		`Pikachu:` + fmt.Sprintf("%#v", this.Pikachu) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Piku) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Piku{` +
		`Piku:` + fmt.Sprintf("%#v", this.Piku) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Pkifactory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Pkifactory{` +
		`Pkifactory:` + fmt.Sprintf("%#v", this.Pkifactory) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Pluto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Pluto{` +
		`Pluto:` + fmt.Sprintf("%#v", this.Pluto) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ponos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ponos{` +
		`Ponos:` + fmt.Sprintf("%#v", this.Ponos) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Prism) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Prism{` +
		`Prism:` + fmt.Sprintf("%#v", this.Prism) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Prismprime) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Prismprime{` +
		`Prismprime:` + fmt.Sprintf("%#v", this.Prismprime) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Prometheus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Prometheus{` +
		`Prometheus:` + fmt.Sprintf("%#v", this.Prometheus) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Protekti) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Protekti{` +
		`Protekti:` + fmt.Sprintf("%#v", this.Protekti) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Rakar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Rakar{` +
		`Rakar:` + fmt.Sprintf("%#v", this.Rakar) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ratchet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ratchet{` +
		`Ratchet:` + fmt.Sprintf("%#v", this.Ratchet) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Rolex) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Rolex{` +
		`Rolex:` + fmt.Sprintf("%#v", this.Rolex) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Sahaya) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Sahaya{` +
		`Sahaya:` + fmt.Sprintf("%#v", this.Sahaya) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Scim) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Scim{` +
		`Scim:` + fmt.Sprintf("%#v", this.Scim) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Sed) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Sed{` +
		`Sed:` + fmt.Sprintf("%#v", this.Sed) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Sentinel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Sentinel{` +
		`Sentinel:` + fmt.Sprintf("%#v", this.Sentinel) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Spectrum) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Spectrum{` +
		`Spectrum:` + fmt.Sprintf("%#v", this.Spectrum) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_SiteConsole) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_SiteConsole{` +
		`SiteConsole:` + fmt.Sprintf("%#v", this.SiteConsole) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Streak) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Streak{` +
		`Streak:` + fmt.Sprintf("%#v", this.Streak) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Tpmauthority) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Tpmauthority{` +
		`Tpmauthority:` + fmt.Sprintf("%#v", this.Tpmauthority) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Trafficactioner) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Trafficactioner{` +
		`Trafficactioner:` + fmt.Sprintf("%#v", this.Trafficactioner) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vega) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vega{` +
		`Vega:` + fmt.Sprintf("%#v", this.Vega) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Ver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Ver{` +
		`Ver:` + fmt.Sprintf("%#v", this.Ver) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_ViaApiService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_ViaApiService{` +
		`ViaApiService:` + fmt.Sprintf("%#v", this.ViaApiService) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Viaconnector) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Viaconnector{` +
		`Viaconnector:` + fmt.Sprintf("%#v", this.Viaconnector) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Voucher) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Voucher{` +
		`Voucher:` + fmt.Sprintf("%#v", this.Voucher) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vpm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vpm{` +
		`Vpm:` + fmt.Sprintf("%#v", this.Vpm) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Vulpix) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Vulpix{` +
		`Vulpix:` + fmt.Sprintf("%#v", this.Vulpix) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Warden) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Warden{` +
		`Warden:` + fmt.Sprintf("%#v", this.Warden) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Wingman) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Wingman{` +
		`Wingman:` + fmt.Sprintf("%#v", this.Wingman) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Lucario) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Lucario{` +
		`Lucario:` + fmt.Sprintf("%#v", this.Lucario) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Clearview) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Clearview{` +
		`Clearview:` + fmt.Sprintf("%#v", this.Clearview) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Bigipconnector) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Bigipconnector{` +
		`Bigipconnector:` + fmt.Sprintf("%#v", this.Bigipconnector) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Gia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Gia{` +
		`Gia:` + fmt.Sprintf("%#v", this.Gia) + `}`}, ", ")
	return s
}
func (this *ServiceChoice_Wibadapter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.ServiceChoice_Wibadapter{` +
		`Wibadapter:` + fmt.Sprintf("%#v", this.Wibadapter) + `}`}, ", ")
	return s
}
func valueToGoStringAllServices(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ServiceChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceChoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		{
			size := m.Choice.Size()
			i -= size
			if _, err := m.Choice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *ServiceChoice_Akar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Akar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Akar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ares) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ares) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ares {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Asterix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Asterix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Asterix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Athena) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Athena) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Athena {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x30
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Automatix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Automatix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Automatix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Barracute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Barracute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Barracute {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x40
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Blindfold) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Blindfold) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Blindfold {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x48
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bolt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bolt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bolt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x50
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Charmander) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Charmander) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Charmander {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x58
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Charmandercar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Charmandercar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Charmandercar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x60
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Drogon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Drogon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Drogon {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x68
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Eywa) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Eywa) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Eywa {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x70
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Griffin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Griffin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Griffin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x78
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Identityauthority) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Identityauthority) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Identityauthority {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Keypr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Keypr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Keypr {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Maurice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Maurice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Maurice {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Obelix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Obelix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Obelix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ocspmule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ocspmule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ocspmule {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Opera) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Opera) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Opera {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Pikachu) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Pikachu) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Pikachu {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Pkifactory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Pkifactory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Pkifactory {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Rakar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Rakar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Rakar {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_SiteConsole) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_SiteConsole) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.SiteConsole {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vega) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vega) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vega {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Voucher) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Voucher) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Voucher {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vpm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vpm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vpm {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Vulpix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Vulpix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Vulpix {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Warden) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Warden) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Warden {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Wingman) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Wingman) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Wingman {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Lucario) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Lucario) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Lucario {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Hellas) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Hellas) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Hellas {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Nfvsvc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Nfvsvc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Nfvsvc {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Scim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Scim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Scim {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_LilacEdge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_LilacEdge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.LilacEdge {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_AkarReadonly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_AkarReadonly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.AkarReadonly {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_AkarDnsdomain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_AkarDnsdomain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.AkarDnsdomain {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Aspen) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Aspen) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Aspen {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bdbewaf) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bdbewaf) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bdbewaf {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bfdp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bfdp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bfdp {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bifrost) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bifrost) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bifrost {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Brmalerts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Brmalerts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Brmalerts {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Cdnconnectorsvc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Cdnconnectorsvc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Cdnconnectorsvc {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_ClientSideDefense) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_ClientSideDefense) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ClientSideDefense {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Doscontroller) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Doscontroller) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Doscontroller {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_EywaReadonly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_EywaReadonly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.EywaReadonly {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Eywaprime) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Eywaprime) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Eywaprime {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_EywaprimeReadonly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_EywaprimeReadonly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.EywaprimeReadonly {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ganges) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ganges) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ganges {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Iapetus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Iapetus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Iapetus {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ipp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ipp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ipp {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ippdev) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ippdev) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ippdev {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ippprom) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ippprom) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ippprom {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Josef) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Josef) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Josef {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Kcdmux) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Kcdmux) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Kcdmux {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_KcdmuxReadonly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_KcdmuxReadonly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.KcdmuxReadonly {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Mars) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Mars) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Mars {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Minerva) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Minerva) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Minerva {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Nmsconnector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Nmsconnector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Nmsconnector {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Nmsproxy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Nmsproxy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Nmsproxy {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Olympus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Olympus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Olympus {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Phobos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Phobos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Phobos {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Piku) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Piku) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Piku {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Pluto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Pluto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Pluto {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ponos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ponos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ponos {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Prism) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Prism) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Prism {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Prismprime) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Prismprime) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Prismprime {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Protekti) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Protekti) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Protekti {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Rolex) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Rolex) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Rolex {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Sed) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Sed) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Sed {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Sentinel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Sentinel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Sentinel {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Spectrum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Spectrum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Spectrum {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Streak) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Streak) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Streak {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Trafficactioner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Trafficactioner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Trafficactioner {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ver {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Tpmauthority) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Tpmauthority) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Tpmauthority {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Prometheus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Prometheus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Prometheus {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_ViaApiService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_ViaApiService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ViaApiService {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Viaconnector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Viaconnector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Viaconnector {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Dymo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Dymo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Dymo {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Conprof) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Conprof) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Conprof {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Ratchet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Ratchet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Ratchet {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Sahaya) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Sahaya) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Sahaya {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Clearview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Clearview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Clearview {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Bigipconnector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Bigipconnector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Bigipconnector {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Gia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Gia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Gia {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Discovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Discovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Discovery {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *ServiceChoice_Wibadapter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServiceChoice_Wibadapter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Wibadapter {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func encodeVarintAllServices(dAtA []byte, offset int, v uint64) int {
	offset -= sovAllServices(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ServiceChoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *ServiceChoice_Akar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Ares) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Asterix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Athena) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Automatix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Barracute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Blindfold) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Bolt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Charmander) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Charmandercar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Drogon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Eywa) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Griffin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *ServiceChoice_Identityauthority) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Keypr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Maurice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Obelix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ocspmule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Opera) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Pikachu) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Pkifactory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Rakar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_SiteConsole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vega) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Voucher) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vpm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Vulpix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Warden) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Wingman) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Lucario) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Hellas) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Nfvsvc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Scim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_LilacEdge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_AkarReadonly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_AkarDnsdomain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Aspen) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Bdbewaf) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Bfdp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Bifrost) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Brmalerts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Cdnconnectorsvc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_ClientSideDefense) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Doscontroller) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_EywaReadonly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Eywaprime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_EywaprimeReadonly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ganges) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Iapetus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ipp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ippdev) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ippprom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Josef) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Kcdmux) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_KcdmuxReadonly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Mars) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Minerva) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Nmsconnector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Nmsproxy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Olympus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Phobos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Piku) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Pluto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ponos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Prism) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Prismprime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Protekti) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Rolex) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Sed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Sentinel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Spectrum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Streak) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Trafficactioner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Tpmauthority) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Prometheus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_ViaApiService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Viaconnector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Dymo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Conprof) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Ratchet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Sahaya) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Clearview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Bigipconnector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Gia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Discovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *ServiceChoice_Wibadapter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}

func sovAllServices(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAllServices(x uint64) (n int) {
	return sovAllServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ServiceChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Akar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Akar{`,
		`Akar:` + fmt.Sprintf("%v", this.Akar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ares) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ares{`,
		`Ares:` + fmt.Sprintf("%v", this.Ares) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Asterix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Asterix{`,
		`Asterix:` + fmt.Sprintf("%v", this.Asterix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Athena) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Athena{`,
		`Athena:` + fmt.Sprintf("%v", this.Athena) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Automatix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Automatix{`,
		`Automatix:` + fmt.Sprintf("%v", this.Automatix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Barracute) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Barracute{`,
		`Barracute:` + fmt.Sprintf("%v", this.Barracute) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Blindfold) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Blindfold{`,
		`Blindfold:` + fmt.Sprintf("%v", this.Blindfold) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bolt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bolt{`,
		`Bolt:` + fmt.Sprintf("%v", this.Bolt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Charmander) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Charmander{`,
		`Charmander:` + fmt.Sprintf("%v", this.Charmander) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Charmandercar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Charmandercar{`,
		`Charmandercar:` + fmt.Sprintf("%v", this.Charmandercar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Drogon) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Drogon{`,
		`Drogon:` + fmt.Sprintf("%v", this.Drogon) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Eywa) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Eywa{`,
		`Eywa:` + fmt.Sprintf("%v", this.Eywa) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Griffin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Griffin{`,
		`Griffin:` + fmt.Sprintf("%v", this.Griffin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Identityauthority) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Identityauthority{`,
		`Identityauthority:` + fmt.Sprintf("%v", this.Identityauthority) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Keypr) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Keypr{`,
		`Keypr:` + fmt.Sprintf("%v", this.Keypr) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Maurice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Maurice{`,
		`Maurice:` + fmt.Sprintf("%v", this.Maurice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Obelix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Obelix{`,
		`Obelix:` + fmt.Sprintf("%v", this.Obelix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ocspmule) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ocspmule{`,
		`Ocspmule:` + fmt.Sprintf("%v", this.Ocspmule) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Opera) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Opera{`,
		`Opera:` + fmt.Sprintf("%v", this.Opera) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Pikachu) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Pikachu{`,
		`Pikachu:` + fmt.Sprintf("%v", this.Pikachu) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Pkifactory) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Pkifactory{`,
		`Pkifactory:` + fmt.Sprintf("%v", this.Pkifactory) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Rakar) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Rakar{`,
		`Rakar:` + fmt.Sprintf("%v", this.Rakar) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_SiteConsole) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_SiteConsole{`,
		`SiteConsole:` + fmt.Sprintf("%v", this.SiteConsole) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vega) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vega{`,
		`Vega:` + fmt.Sprintf("%v", this.Vega) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Voucher) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Voucher{`,
		`Voucher:` + fmt.Sprintf("%v", this.Voucher) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vpm) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vpm{`,
		`Vpm:` + fmt.Sprintf("%v", this.Vpm) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Vulpix) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Vulpix{`,
		`Vulpix:` + fmt.Sprintf("%v", this.Vulpix) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Warden) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Warden{`,
		`Warden:` + fmt.Sprintf("%v", this.Warden) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Wingman) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Wingman{`,
		`Wingman:` + fmt.Sprintf("%v", this.Wingman) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Lucario) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Lucario{`,
		`Lucario:` + fmt.Sprintf("%v", this.Lucario) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Hellas) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Hellas{`,
		`Hellas:` + fmt.Sprintf("%v", this.Hellas) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Nfvsvc) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Nfvsvc{`,
		`Nfvsvc:` + fmt.Sprintf("%v", this.Nfvsvc) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Scim) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Scim{`,
		`Scim:` + fmt.Sprintf("%v", this.Scim) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_LilacEdge) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_LilacEdge{`,
		`LilacEdge:` + fmt.Sprintf("%v", this.LilacEdge) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_AkarReadonly) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_AkarReadonly{`,
		`AkarReadonly:` + fmt.Sprintf("%v", this.AkarReadonly) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_AkarDnsdomain) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_AkarDnsdomain{`,
		`AkarDnsdomain:` + fmt.Sprintf("%v", this.AkarDnsdomain) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Aspen) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Aspen{`,
		`Aspen:` + fmt.Sprintf("%v", this.Aspen) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bdbewaf) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bdbewaf{`,
		`Bdbewaf:` + fmt.Sprintf("%v", this.Bdbewaf) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bfdp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bfdp{`,
		`Bfdp:` + fmt.Sprintf("%v", this.Bfdp) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bifrost) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bifrost{`,
		`Bifrost:` + fmt.Sprintf("%v", this.Bifrost) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Brmalerts) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Brmalerts{`,
		`Brmalerts:` + fmt.Sprintf("%v", this.Brmalerts) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Cdnconnectorsvc) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Cdnconnectorsvc{`,
		`Cdnconnectorsvc:` + fmt.Sprintf("%v", this.Cdnconnectorsvc) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_ClientSideDefense) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_ClientSideDefense{`,
		`ClientSideDefense:` + fmt.Sprintf("%v", this.ClientSideDefense) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Doscontroller) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Doscontroller{`,
		`Doscontroller:` + fmt.Sprintf("%v", this.Doscontroller) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_EywaReadonly) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_EywaReadonly{`,
		`EywaReadonly:` + fmt.Sprintf("%v", this.EywaReadonly) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Eywaprime) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Eywaprime{`,
		`Eywaprime:` + fmt.Sprintf("%v", this.Eywaprime) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_EywaprimeReadonly) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_EywaprimeReadonly{`,
		`EywaprimeReadonly:` + fmt.Sprintf("%v", this.EywaprimeReadonly) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ganges) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ganges{`,
		`Ganges:` + fmt.Sprintf("%v", this.Ganges) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Iapetus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Iapetus{`,
		`Iapetus:` + fmt.Sprintf("%v", this.Iapetus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ipp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ipp{`,
		`Ipp:` + fmt.Sprintf("%v", this.Ipp) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ippdev) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ippdev{`,
		`Ippdev:` + fmt.Sprintf("%v", this.Ippdev) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ippprom) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ippprom{`,
		`Ippprom:` + fmt.Sprintf("%v", this.Ippprom) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Josef) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Josef{`,
		`Josef:` + fmt.Sprintf("%v", this.Josef) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Kcdmux) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Kcdmux{`,
		`Kcdmux:` + fmt.Sprintf("%v", this.Kcdmux) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_KcdmuxReadonly) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_KcdmuxReadonly{`,
		`KcdmuxReadonly:` + fmt.Sprintf("%v", this.KcdmuxReadonly) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Mars) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Mars{`,
		`Mars:` + fmt.Sprintf("%v", this.Mars) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Minerva) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Minerva{`,
		`Minerva:` + fmt.Sprintf("%v", this.Minerva) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Nmsconnector) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Nmsconnector{`,
		`Nmsconnector:` + fmt.Sprintf("%v", this.Nmsconnector) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Nmsproxy) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Nmsproxy{`,
		`Nmsproxy:` + fmt.Sprintf("%v", this.Nmsproxy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Olympus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Olympus{`,
		`Olympus:` + fmt.Sprintf("%v", this.Olympus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Phobos) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Phobos{`,
		`Phobos:` + fmt.Sprintf("%v", this.Phobos) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Piku) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Piku{`,
		`Piku:` + fmt.Sprintf("%v", this.Piku) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Pluto) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Pluto{`,
		`Pluto:` + fmt.Sprintf("%v", this.Pluto) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ponos) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ponos{`,
		`Ponos:` + fmt.Sprintf("%v", this.Ponos) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Prism) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Prism{`,
		`Prism:` + fmt.Sprintf("%v", this.Prism) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Prismprime) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Prismprime{`,
		`Prismprime:` + fmt.Sprintf("%v", this.Prismprime) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Protekti) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Protekti{`,
		`Protekti:` + fmt.Sprintf("%v", this.Protekti) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Rolex) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Rolex{`,
		`Rolex:` + fmt.Sprintf("%v", this.Rolex) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Sed) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Sed{`,
		`Sed:` + fmt.Sprintf("%v", this.Sed) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Sentinel) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Sentinel{`,
		`Sentinel:` + fmt.Sprintf("%v", this.Sentinel) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Spectrum) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Spectrum{`,
		`Spectrum:` + fmt.Sprintf("%v", this.Spectrum) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Streak) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Streak{`,
		`Streak:` + fmt.Sprintf("%v", this.Streak) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Trafficactioner) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Trafficactioner{`,
		`Trafficactioner:` + fmt.Sprintf("%v", this.Trafficactioner) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ver) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ver{`,
		`Ver:` + fmt.Sprintf("%v", this.Ver) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Tpmauthority) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Tpmauthority{`,
		`Tpmauthority:` + fmt.Sprintf("%v", this.Tpmauthority) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Prometheus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Prometheus{`,
		`Prometheus:` + fmt.Sprintf("%v", this.Prometheus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_ViaApiService) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_ViaApiService{`,
		`ViaApiService:` + fmt.Sprintf("%v", this.ViaApiService) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Viaconnector) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Viaconnector{`,
		`Viaconnector:` + fmt.Sprintf("%v", this.Viaconnector) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Dymo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Dymo{`,
		`Dymo:` + fmt.Sprintf("%v", this.Dymo) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Conprof) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Conprof{`,
		`Conprof:` + fmt.Sprintf("%v", this.Conprof) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Ratchet) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Ratchet{`,
		`Ratchet:` + fmt.Sprintf("%v", this.Ratchet) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Sahaya) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Sahaya{`,
		`Sahaya:` + fmt.Sprintf("%v", this.Sahaya) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Clearview) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Clearview{`,
		`Clearview:` + fmt.Sprintf("%v", this.Clearview) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Bigipconnector) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Bigipconnector{`,
		`Bigipconnector:` + fmt.Sprintf("%v", this.Bigipconnector) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Gia) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Gia{`,
		`Gia:` + fmt.Sprintf("%v", this.Gia) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Discovery) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Discovery{`,
		`Discovery:` + fmt.Sprintf("%v", this.Discovery) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ServiceChoice_Wibadapter) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ServiceChoice_Wibadapter{`,
		`Wibadapter:` + fmt.Sprintf("%v", this.Wibadapter) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllServices(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ServiceChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Akar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Akar{b}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ares", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ares{b}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asterix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Asterix{b}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Athena", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Athena{b}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Automatix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Automatix{b}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Barracute", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Barracute{b}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blindfold", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Blindfold{b}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bolt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bolt{b}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charmander", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Charmander{b}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Charmandercar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Charmandercar{b}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Drogon", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Drogon{b}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Eywa", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Eywa{b}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Griffin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Griffin{b}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identityauthority", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Identityauthority{b}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keypr", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Keypr{b}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Maurice", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Maurice{b}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Obelix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Obelix{b}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ocspmule", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ocspmule{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opera", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Opera{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pikachu", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Pikachu{b}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pkifactory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Pkifactory{b}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rakar", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Rakar{b}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteConsole", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_SiteConsole{b}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vega", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vega{b}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voucher", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Voucher{b}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vpm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vpm{b}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vulpix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Vulpix{b}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Warden", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Warden{b}
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wingman", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Wingman{b}
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lucario", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Lucario{b}
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hellas", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Hellas{b}
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nfvsvc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Nfvsvc{b}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scim", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Scim{b}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LilacEdge", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_LilacEdge{b}
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AkarReadonly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_AkarReadonly{b}
		case 41:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AkarDnsdomain", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_AkarDnsdomain{b}
		case 42:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aspen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Aspen{b}
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bdbewaf", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bdbewaf{b}
		case 45:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bfdp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bfdp{b}
		case 46:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bifrost", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bifrost{b}
		case 47:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Brmalerts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Brmalerts{b}
		case 48:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cdnconnectorsvc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Cdnconnectorsvc{b}
		case 49:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSideDefense", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_ClientSideDefense{b}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Doscontroller", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Doscontroller{b}
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EywaReadonly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_EywaReadonly{b}
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Eywaprime", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Eywaprime{b}
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EywaprimeReadonly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_EywaprimeReadonly{b}
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ganges", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ganges{b}
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iapetus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Iapetus{b}
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ipp{b}
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ippdev", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ippdev{b}
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ippprom", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ippprom{b}
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Josef", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Josef{b}
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kcdmux", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Kcdmux{b}
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KcdmuxReadonly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_KcdmuxReadonly{b}
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mars", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Mars{b}
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minerva", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Minerva{b}
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nmsconnector", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Nmsconnector{b}
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nmsproxy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Nmsproxy{b}
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Olympus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Olympus{b}
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phobos", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Phobos{b}
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Piku", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Piku{b}
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pluto", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Pluto{b}
		case 76:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ponos", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ponos{b}
		case 77:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prism", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Prism{b}
		case 78:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prismprime", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Prismprime{b}
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protekti", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Protekti{b}
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rolex", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Rolex{b}
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Sed{b}
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sentinel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Sentinel{b}
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spectrum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Spectrum{b}
		case 84:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Streak", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Streak{b}
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trafficactioner", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Trafficactioner{b}
		case 86:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ver", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ver{b}
		case 87:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tpmauthority", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Tpmauthority{b}
		case 88:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prometheus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Prometheus{b}
		case 89:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViaApiService", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_ViaApiService{b}
		case 90:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Viaconnector", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Viaconnector{b}
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dymo", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Dymo{b}
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conprof", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Conprof{b}
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ratchet", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Ratchet{b}
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sahaya", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Sahaya{b}
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clearview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Clearview{b}
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bigipconnector", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Bigipconnector{b}
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Gia{b}
		case 103:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Discovery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Discovery{b}
		case 104:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wibadapter", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &ServiceChoice_Wibadapter{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAllServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAllServices
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAllServices
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAllServices
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAllServices        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllServices          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAllServices = fmt.Errorf("proto: unexpected end of group")
)

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/instance_management/v2_signup/types.proto

package v2_signup

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/infraprotect_information"
	signup "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/signup"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Signup specification
//
// x-displayName: "Signup"
// desired state of Signup
type GlobalSpecType struct {
	// Company Details
	//
	// x-displayName: "Company Details"
	// x-required
	// details of the company
	CompanyDetails *signup.CompanyMeta `protobuf:"bytes,1,opt,name=company_details,json=companyDetails,proto3" json:"company_details,omitempty"`
	// User Details
	//
	// x-displayName: "User Details"
	// x-required
	// details of the user
	UserDetails *signup.UserMeta `protobuf:"bytes,2,opt,name=user_details,json=userDetails,proto3" json:"user_details,omitempty"`
	// Account Details
	//
	// x-displayName: "Account Details"
	// x-required
	// details of the new F5XC account to be created
	AccountDetails *signup.AccountMeta `protobuf:"bytes,3,opt,name=account_details,json=accountDetails,proto3" json:"account_details,omitempty"`
	// Billing Details
	//
	// x-displayName: "Billing Details"
	// x-required
	// details about the billing of the account
	BillingDetails *signup.BillingMeta `protobuf:"bytes,4,opt,name=billing_details,json=billingDetails,proto3" json:"billing_details,omitempty"`
	// Internal Meta
	//
	// x-displayName: "Internal Meta"
	// x-required
	// we use it to store derived internal information like f5xc instance, kc instance
	InternalMeta *signup.InternalMeta `protobuf:"bytes,12,opt,name=internal_meta,json=internalMeta,proto3" json:"internal_meta,omitempty"`
	// Signup Type
	//
	// x-displayName: "Signup Type"
	// x-required
	// indicates the type of the signup, example scaling, msp...etc
	// signup type can be defined as a specific usecase the tenant is created for
	//
	// Types that are valid to be assigned to SignupType:
	//	*GlobalSpecType_SignupTypePublic
	//	*GlobalSpecType_SignupTypeInternalSre
	//	*GlobalSpecType_SignupTypeInternalScaling
	//	*GlobalSpecType_SignupTypePlanTransition
	//	*GlobalSpecType_SignupTypeMsp
	//	*GlobalSpecType_SignupTypeInternalSso
	//	*GlobalSpecType_SignupTypeMarketplace
	SignupType isGlobalSpecType_SignupType `protobuf_oneof:"signup_type"`
	// Origin
	//
	// x-displayName: "Origin"
	// x-required
	// origin of the signup, from which platform signup is originated, example f5xc, aws..etc
	Origin schema.SignupOrigin `protobuf:"varint,14,opt,name=origin,proto3,enum=ves.io.schema.SignupOrigin" json:"origin,omitempty"`
}

func (m *GlobalSpecType) Reset()      { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage() {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_142ba11d320bb60e, []int{0}
}
func (m *GlobalSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GlobalSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSpecType.Merge(m, src)
}
func (m *GlobalSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GlobalSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSpecType proto.InternalMessageInfo

type isGlobalSpecType_SignupType interface {
	isGlobalSpecType_SignupType()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GlobalSpecType_SignupTypePublic struct {
	SignupTypePublic *signup.SignupTypePublic `protobuf:"bytes,6,opt,name=signup_type_public,json=signupTypePublic,proto3,oneof" json:"signup_type_public,omitempty"`
}
type GlobalSpecType_SignupTypeInternalSre struct {
	SignupTypeInternalSre *signup.SignupTypeInternalSre `protobuf:"bytes,7,opt,name=signup_type_internal_sre,json=signupTypeInternalSre,proto3,oneof" json:"signup_type_internal_sre,omitempty"`
}
type GlobalSpecType_SignupTypeInternalScaling struct {
	SignupTypeInternalScaling *signup.SignupTypeInternalScaling `protobuf:"bytes,8,opt,name=signup_type_internal_scaling,json=signupTypeInternalScaling,proto3,oneof" json:"signup_type_internal_scaling,omitempty"`
}
type GlobalSpecType_SignupTypePlanTransition struct {
	SignupTypePlanTransition *signup.SignupTypePlanTransition `protobuf:"bytes,9,opt,name=signup_type_plan_transition,json=signupTypePlanTransition,proto3,oneof" json:"signup_type_plan_transition,omitempty"`
}
type GlobalSpecType_SignupTypeMsp struct {
	SignupTypeMsp *signup.SignupTypeMsp `protobuf:"bytes,10,opt,name=signup_type_msp,json=signupTypeMsp,proto3,oneof" json:"signup_type_msp,omitempty"`
}
type GlobalSpecType_SignupTypeInternalSso struct {
	SignupTypeInternalSso *signup.SignupTypeInternalSso `protobuf:"bytes,11,opt,name=signup_type_internal_sso,json=signupTypeInternalSso,proto3,oneof" json:"signup_type_internal_sso,omitempty"`
}
type GlobalSpecType_SignupTypeMarketplace struct {
	SignupTypeMarketplace *signup.SignupTypeMarketplace `protobuf:"bytes,13,opt,name=signup_type_marketplace,json=signupTypeMarketplace,proto3,oneof" json:"signup_type_marketplace,omitempty"`
}

func (*GlobalSpecType_SignupTypePublic) isGlobalSpecType_SignupType()          {}
func (*GlobalSpecType_SignupTypeInternalSre) isGlobalSpecType_SignupType()     {}
func (*GlobalSpecType_SignupTypeInternalScaling) isGlobalSpecType_SignupType() {}
func (*GlobalSpecType_SignupTypePlanTransition) isGlobalSpecType_SignupType()  {}
func (*GlobalSpecType_SignupTypeMsp) isGlobalSpecType_SignupType()             {}
func (*GlobalSpecType_SignupTypeInternalSso) isGlobalSpecType_SignupType()     {}
func (*GlobalSpecType_SignupTypeMarketplace) isGlobalSpecType_SignupType()     {}

func (m *GlobalSpecType) GetSignupType() isGlobalSpecType_SignupType {
	if m != nil {
		return m.SignupType
	}
	return nil
}

func (m *GlobalSpecType) GetCompanyDetails() *signup.CompanyMeta {
	if m != nil {
		return m.CompanyDetails
	}
	return nil
}

func (m *GlobalSpecType) GetUserDetails() *signup.UserMeta {
	if m != nil {
		return m.UserDetails
	}
	return nil
}

func (m *GlobalSpecType) GetAccountDetails() *signup.AccountMeta {
	if m != nil {
		return m.AccountDetails
	}
	return nil
}

func (m *GlobalSpecType) GetBillingDetails() *signup.BillingMeta {
	if m != nil {
		return m.BillingDetails
	}
	return nil
}

func (m *GlobalSpecType) GetInternalMeta() *signup.InternalMeta {
	if m != nil {
		return m.InternalMeta
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypePublic() *signup.SignupTypePublic {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypePublic); ok {
		return x.SignupTypePublic
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypeInternalSre() *signup.SignupTypeInternalSre {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypeInternalSre); ok {
		return x.SignupTypeInternalSre
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypeInternalScaling() *signup.SignupTypeInternalScaling {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypeInternalScaling); ok {
		return x.SignupTypeInternalScaling
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypePlanTransition() *signup.SignupTypePlanTransition {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypePlanTransition); ok {
		return x.SignupTypePlanTransition
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypeMsp() *signup.SignupTypeMsp {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypeMsp); ok {
		return x.SignupTypeMsp
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypeInternalSso() *signup.SignupTypeInternalSso {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypeInternalSso); ok {
		return x.SignupTypeInternalSso
	}
	return nil
}

func (m *GlobalSpecType) GetSignupTypeMarketplace() *signup.SignupTypeMarketplace {
	if x, ok := m.GetSignupType().(*GlobalSpecType_SignupTypeMarketplace); ok {
		return x.SignupTypeMarketplace
	}
	return nil
}

func (m *GlobalSpecType) GetOrigin() schema.SignupOrigin {
	if m != nil {
		return m.Origin
	}
	return schema.ORIGIN_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GlobalSpecType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GlobalSpecType_SignupTypePublic)(nil),
		(*GlobalSpecType_SignupTypeInternalSre)(nil),
		(*GlobalSpecType_SignupTypeInternalScaling)(nil),
		(*GlobalSpecType_SignupTypePlanTransition)(nil),
		(*GlobalSpecType_SignupTypeMsp)(nil),
		(*GlobalSpecType_SignupTypeInternalSso)(nil),
		(*GlobalSpecType_SignupTypeMarketplace)(nil),
	}
}

func init() {
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.instance_management.v2_signup.GlobalSpecType")
}

func init() {
	proto.RegisterFile("ves.io/schema/instance_management/v2_signup/types.proto", fileDescriptor_142ba11d320bb60e)
}

var fileDescriptor_142ba11d320bb60e = []byte{
	// 718 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0x4d, 0x4f, 0xe3, 0x38,
	0x1c, 0xc6, 0xe3, 0x5d, 0x28, 0xe0, 0x42, 0x41, 0x91, 0x56, 0x84, 0x17, 0x79, 0x59, 0x90, 0x56,
	0x48, 0x88, 0x44, 0x2a, 0x87, 0x3d, 0xd3, 0x5d, 0x89, 0x2e, 0x12, 0xda, 0x55, 0x61, 0x39, 0xec,
	0x25, 0x72, 0x83, 0x1b, 0x2c, 0x12, 0xdb, 0xb2, 0xdd, 0x0e, 0x1c, 0x46, 0x9a, 0x8f, 0x30, 0xf7,
	0xf9, 0x02, 0xf3, 0x1d, 0x7a, 0x99, 0xe3, 0x1c, 0x7b, 0xec, 0x71, 0x08, 0x17, 0x8e, 0x7c, 0x84,
	0x51, 0x9c, 0xb4, 0x24, 0x55, 0x0b, 0xcc, 0xa9, 0x71, 0x9f, 0xe7, 0xf9, 0x3d, 0xff, 0xd8, 0x95,
	0x0b, 0xff, 0xe8, 0x11, 0xe5, 0x52, 0xee, 0xa9, 0xe0, 0x9a, 0xc4, 0xd8, 0xa3, 0x4c, 0x69, 0xcc,
	0x02, 0xe2, 0xc7, 0x98, 0xe1, 0x90, 0xc4, 0x84, 0x69, 0xaf, 0x57, 0xf7, 0x15, 0x0d, 0x59, 0x57,
	0x78, 0xfa, 0x4e, 0x10, 0xe5, 0x0a, 0xc9, 0x35, 0xb7, 0x0f, 0xb2, 0xa0, 0x9b, 0x05, 0xdd, 0x29,
	0x41, 0x77, 0x1c, 0xdc, 0x3c, 0x0c, 0xa9, 0xbe, 0xee, 0xb6, 0xdd, 0x80, 0xc7, 0x5e, 0xc8, 0x43,
	0xee, 0x19, 0x46, 0xbb, 0xdb, 0x31, 0x2b, 0xb3, 0x30, 0x4f, 0x19, 0x7b, 0xf3, 0xd7, 0x90, 0xf3,
	0x30, 0x22, 0xcf, 0x2e, 0x4d, 0x63, 0xa2, 0x34, 0x8e, 0x45, 0x6e, 0xa8, 0x4f, 0x4e, 0xdd, 0x91,
	0x38, 0x55, 0x48, 0xa0, 0x7d, 0xca, 0x3a, 0x5c, 0xc6, 0x58, 0x53, 0xce, 0x8a, 0x03, 0x6f, 0x6e,
	0x95, 0x33, 0x5c, 0xa4, 0x8e, 0x91, 0xb8, 0x57, 0x16, 0x8b, 0xef, 0xeb, 0xf7, 0xea, 0xb9, 0x69,
	0xa3, 0x6c, 0x2a, 0xc2, 0xb7, 0xcb, 0x52, 0x0f, 0x47, 0xf4, 0x0a, 0x6b, 0x92, 0xab, 0x3b, 0x13,
	0x2a, 0x25, 0xef, 0xfc, 0x52, 0xff, 0x6e, 0x7f, 0x09, 0xd6, 0x4e, 0x22, 0xde, 0xc6, 0xd1, 0xb9,
	0x20, 0xc1, 0xc5, 0x9d, 0x20, 0xf6, 0x29, 0x5c, 0x0d, 0x78, 0x2c, 0x30, 0xbb, 0xf3, 0xaf, 0x88,
	0xc6, 0x34, 0x52, 0x0e, 0xd8, 0x01, 0xfb, 0xd5, 0xfa, 0x6f, 0x6e, 0x79, 0xeb, 0xb3, 0x61, 0xdd,
	0x3f, 0x33, 0xf3, 0x19, 0xd1, 0xb8, 0x55, 0xcb, 0x93, 0x7f, 0x65, 0x41, 0xfb, 0x18, 0x2e, 0x77,
	0x15, 0x91, 0x63, 0xd0, 0x4f, 0x06, 0x84, 0xa6, 0x83, 0xfe, 0x53, 0x44, 0x1a, 0x4a, 0x35, 0xcd,
	0x8c, 0x10, 0xa7, 0x70, 0x15, 0x07, 0x01, 0xef, 0x32, 0x3d, 0xa6, 0xfc, 0xfc, 0xd2, 0x38, 0xc7,
	0x99, 0x39, 0x1b, 0x27, 0x4f, 0x16, 0x58, 0x6d, 0x1a, 0x45, 0x94, 0x85, 0x63, 0xd6, 0xdc, 0x4b,
	0xac, 0x46, 0x66, 0xce, 0x58, 0x79, 0x72, 0xc4, 0x3a, 0x81, 0x2b, 0x94, 0x69, 0x22, 0x19, 0x8e,
	0xfc, 0x98, 0x68, 0xec, 0x2c, 0x1b, 0xd2, 0xee, 0x74, 0xd2, 0xdf, 0xb9, 0xd5, 0xa0, 0x96, 0x69,
	0x61, 0x65, 0x5f, 0x42, 0x3b, 0x33, 0xf9, 0xe9, 0xc1, 0xfa, 0xa2, 0xdb, 0x8e, 0x68, 0xe0, 0x54,
	0x0c, 0xed, 0xf7, 0xe9, 0xb4, 0x73, 0xf3, 0x91, 0x9e, 0xd6, 0xbf, 0xc6, 0xdd, 0xb4, 0x5a, 0x6b,
	0x6a, 0xe2, 0x3b, 0xbb, 0x03, 0x9d, 0x22, 0x77, 0x3c, 0xac, 0x92, 0xc4, 0x59, 0x30, 0xf4, 0x83,
	0xd7, 0xe8, 0xa3, 0xa9, 0xcf, 0x25, 0x69, 0x5a, 0xad, 0x5f, 0xd4, 0x34, 0xc1, 0x96, 0x70, 0x7b,
	0x7a, 0x4f, 0x80, 0xd3, 0xfd, 0x72, 0x16, 0x4d, 0x97, 0xf7, 0xe6, 0xae, 0x2c, 0xd6, 0xb4, 0x5a,
	0x1b, 0x6a, 0x96, 0x68, 0xdf, 0xc2, 0xad, 0xd2, 0x9e, 0x45, 0x98, 0xf9, 0x5a, 0x62, 0xa6, 0x68,
	0xfa, 0xe3, 0x76, 0x96, 0x4c, 0xa5, 0xfb, 0xea, 0xe6, 0x45, 0x98, 0x5d, 0x8c, 0x53, 0x8d, 0x85,
	0xe1, 0x7b, 0xf0, 0xd8, 0x07, 0xa0, 0x69, 0xb5, 0x1c, 0x35, 0xc3, 0x64, 0x5f, 0xc2, 0xd5, 0x62,
	0x73, 0xac, 0x84, 0x03, 0x4d, 0xdb, 0xde, 0x6b, 0x6d, 0x67, 0x4a, 0x14, 0x2b, 0x56, 0x54, 0x51,
	0xb1, 0xf9, 0xac, 0xd3, 0x52, 0xdc, 0xa9, 0xfe, 0xe0, 0x69, 0x29, 0x5e, 0x2c, 0x9a, 0x76, 0x6c,
	0x8a, 0xdb, 0x0c, 0xae, 0x97, 0x5e, 0x04, 0xcb, 0x1b, 0xa2, 0x45, 0x84, 0x03, 0xe2, 0xac, 0xbc,
	0xad, 0xef, 0xec, 0x39, 0x32, 0xa3, 0xaf, 0xe0, 0xb0, 0x8f, 0x60, 0x85, 0x4b, 0x1a, 0x52, 0xe6,
	0xd4, 0x76, 0xc0, 0x7e, 0xad, 0xbe, 0x35, 0x81, 0xcf, 0xb8, 0xff, 0x18, 0x4b, 0x2b, 0xb7, 0x36,
	0xd6, 0x61, 0xb5, 0x30, 0xa4, 0xbd, 0xf8, 0xa5, 0x0f, 0x2a, 0x83, 0x3e, 0x98, 0x3f, 0x9d, 0x5b,
	0x9c, 0x5f, 0xab, 0x34, 0x3e, 0x81, 0xc1, 0x3d, 0xb2, 0x86, 0xf7, 0xc8, 0x7a, 0xba, 0x47, 0xe0,
	0x43, 0x82, 0xc0, 0xe7, 0x04, 0x81, 0xaf, 0x09, 0x02, 0x83, 0x04, 0x81, 0x61, 0x82, 0xc0, 0xb7,
	0x04, 0x81, 0xc7, 0x04, 0x59, 0x4f, 0x09, 0x02, 0x1f, 0x1f, 0x90, 0x35, 0x78, 0x40, 0xd6, 0xf0,
	0x01, 0x59, 0xff, 0xe3, 0x90, 0x8b, 0x9b, 0xd0, 0xed, 0xf1, 0x48, 0x13, 0x29, 0xb1, 0xdb, 0x55,
	0x9e, 0x79, 0x48, 0xef, 0xf0, 0x43, 0x21, 0x79, 0x8f, 0x5e, 0x11, 0x79, 0x38, 0x92, 0x3d, 0xd1,
	0x0e, 0xb9, 0x47, 0x6e, 0xf5, 0xe8, 0x9e, 0x7e, 0xc3, 0xbf, 0x56, 0xbb, 0x62, 0xae, 0xd8, 0xa3,
	0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xec, 0x85, 0xb4, 0x4d, 0xeb, 0x06, 0x00, 0x00,
}

func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.CompanyDetails.Equal(that1.CompanyDetails) {
		return false
	}
	if !this.UserDetails.Equal(that1.UserDetails) {
		return false
	}
	if !this.AccountDetails.Equal(that1.AccountDetails) {
		return false
	}
	if !this.BillingDetails.Equal(that1.BillingDetails) {
		return false
	}
	if !this.InternalMeta.Equal(that1.InternalMeta) {
		return false
	}
	if that1.SignupType == nil {
		if this.SignupType != nil {
			return false
		}
	} else if this.SignupType == nil {
		return false
	} else if !this.SignupType.Equal(that1.SignupType) {
		return false
	}
	if this.Origin != that1.Origin {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypePublic) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypePublic)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypePublic)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypePublic.Equal(that1.SignupTypePublic) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypeInternalSre) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypeInternalSre)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypeInternalSre)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypeInternalSre.Equal(that1.SignupTypeInternalSre) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypeInternalScaling) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypeInternalScaling)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypeInternalScaling)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypeInternalScaling.Equal(that1.SignupTypeInternalScaling) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypePlanTransition) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypePlanTransition)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypePlanTransition)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypePlanTransition.Equal(that1.SignupTypePlanTransition) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypeMsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypeMsp)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypeMsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypeMsp.Equal(that1.SignupTypeMsp) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypeInternalSso) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypeInternalSso)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypeInternalSso)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypeInternalSso.Equal(that1.SignupTypeInternalSso) {
		return false
	}
	return true
}
func (this *GlobalSpecType_SignupTypeMarketplace) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType_SignupTypeMarketplace)
	if !ok {
		that2, ok := that.(GlobalSpecType_SignupTypeMarketplace)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SignupTypeMarketplace.Equal(that1.SignupTypeMarketplace) {
		return false
	}
	return true
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&v2_signup.GlobalSpecType{")
	if this.CompanyDetails != nil {
		s = append(s, "CompanyDetails: "+fmt.Sprintf("%#v", this.CompanyDetails)+",\n")
	}
	if this.UserDetails != nil {
		s = append(s, "UserDetails: "+fmt.Sprintf("%#v", this.UserDetails)+",\n")
	}
	if this.AccountDetails != nil {
		s = append(s, "AccountDetails: "+fmt.Sprintf("%#v", this.AccountDetails)+",\n")
	}
	if this.BillingDetails != nil {
		s = append(s, "BillingDetails: "+fmt.Sprintf("%#v", this.BillingDetails)+",\n")
	}
	if this.InternalMeta != nil {
		s = append(s, "InternalMeta: "+fmt.Sprintf("%#v", this.InternalMeta)+",\n")
	}
	if this.SignupType != nil {
		s = append(s, "SignupType: "+fmt.Sprintf("%#v", this.SignupType)+",\n")
	}
	s = append(s, "Origin: "+fmt.Sprintf("%#v", this.Origin)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GlobalSpecType_SignupTypePublic) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypePublic{` +
		`SignupTypePublic:` + fmt.Sprintf("%#v", this.SignupTypePublic) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalSre) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypeInternalSre{` +
		`SignupTypeInternalSre:` + fmt.Sprintf("%#v", this.SignupTypeInternalSre) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalScaling) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypeInternalScaling{` +
		`SignupTypeInternalScaling:` + fmt.Sprintf("%#v", this.SignupTypeInternalScaling) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypePlanTransition) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypePlanTransition{` +
		`SignupTypePlanTransition:` + fmt.Sprintf("%#v", this.SignupTypePlanTransition) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypeMsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypeMsp{` +
		`SignupTypeMsp:` + fmt.Sprintf("%#v", this.SignupTypeMsp) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalSso) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypeInternalSso{` +
		`SignupTypeInternalSso:` + fmt.Sprintf("%#v", this.SignupTypeInternalSso) + `}`}, ", ")
	return s
}
func (this *GlobalSpecType_SignupTypeMarketplace) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&v2_signup.GlobalSpecType_SignupTypeMarketplace{` +
		`SignupTypeMarketplace:` + fmt.Sprintf("%#v", this.SignupTypeMarketplace) + `}`}, ", ")
	return s
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Origin != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Origin))
		i--
		dAtA[i] = 0x70
	}
	if m.SignupType != nil {
		{
			size := m.SignupType.Size()
			i -= size
			if _, err := m.SignupType.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.InternalMeta != nil {
		{
			size, err := m.InternalMeta.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.BillingDetails != nil {
		{
			size, err := m.BillingDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.AccountDetails != nil {
		{
			size, err := m.AccountDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.UserDetails != nil {
		{
			size, err := m.UserDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CompanyDetails != nil {
		{
			size, err := m.CompanyDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GlobalSpecType_SignupTypePublic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypePublic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypePublic != nil {
		{
			size, err := m.SignupTypePublic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypeInternalSre) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypeInternalSre) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypeInternalSre != nil {
		{
			size, err := m.SignupTypeInternalSre.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypeInternalScaling) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypeInternalScaling) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypeInternalScaling != nil {
		{
			size, err := m.SignupTypeInternalScaling.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypePlanTransition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypePlanTransition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypePlanTransition != nil {
		{
			size, err := m.SignupTypePlanTransition.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypeMsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypeMsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypeMsp != nil {
		{
			size, err := m.SignupTypeMsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypeInternalSso) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypeInternalSso) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypeInternalSso != nil {
		{
			size, err := m.SignupTypeInternalSso.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *GlobalSpecType_SignupTypeMarketplace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType_SignupTypeMarketplace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SignupTypeMarketplace != nil {
		{
			size, err := m.SignupTypeMarketplace.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	return len(dAtA) - i, nil
}
func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GlobalSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CompanyDetails != nil {
		l = m.CompanyDetails.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.UserDetails != nil {
		l = m.UserDetails.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.AccountDetails != nil {
		l = m.AccountDetails.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.BillingDetails != nil {
		l = m.BillingDetails.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.SignupType != nil {
		n += m.SignupType.Size()
	}
	if m.InternalMeta != nil {
		l = m.InternalMeta.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Origin != 0 {
		n += 1 + sovTypes(uint64(m.Origin))
	}
	return n
}

func (m *GlobalSpecType_SignupTypePublic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypePublic != nil {
		l = m.SignupTypePublic.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypeInternalSre) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypeInternalSre != nil {
		l = m.SignupTypeInternalSre.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypeInternalScaling) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypeInternalScaling != nil {
		l = m.SignupTypeInternalScaling.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypePlanTransition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypePlanTransition != nil {
		l = m.SignupTypePlanTransition.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypeMsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypeMsp != nil {
		l = m.SignupTypeMsp.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypeInternalSso) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypeInternalSso != nil {
		l = m.SignupTypeInternalSso.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}
func (m *GlobalSpecType_SignupTypeMarketplace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignupTypeMarketplace != nil {
		l = m.SignupTypeMarketplace.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType{`,
		`CompanyDetails:` + strings.Replace(fmt.Sprintf("%v", this.CompanyDetails), "CompanyMeta", "signup.CompanyMeta", 1) + `,`,
		`UserDetails:` + strings.Replace(fmt.Sprintf("%v", this.UserDetails), "UserMeta", "signup.UserMeta", 1) + `,`,
		`AccountDetails:` + strings.Replace(fmt.Sprintf("%v", this.AccountDetails), "AccountMeta", "signup.AccountMeta", 1) + `,`,
		`BillingDetails:` + strings.Replace(fmt.Sprintf("%v", this.BillingDetails), "BillingMeta", "signup.BillingMeta", 1) + `,`,
		`SignupType:` + fmt.Sprintf("%v", this.SignupType) + `,`,
		`InternalMeta:` + strings.Replace(fmt.Sprintf("%v", this.InternalMeta), "InternalMeta", "signup.InternalMeta", 1) + `,`,
		`Origin:` + fmt.Sprintf("%v", this.Origin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypePublic) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypePublic{`,
		`SignupTypePublic:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypePublic), "SignupTypePublic", "signup.SignupTypePublic", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalSre) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypeInternalSre{`,
		`SignupTypeInternalSre:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypeInternalSre), "SignupTypeInternalSre", "signup.SignupTypeInternalSre", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalScaling) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypeInternalScaling{`,
		`SignupTypeInternalScaling:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypeInternalScaling), "SignupTypeInternalScaling", "signup.SignupTypeInternalScaling", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypePlanTransition) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypePlanTransition{`,
		`SignupTypePlanTransition:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypePlanTransition), "SignupTypePlanTransition", "signup.SignupTypePlanTransition", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypeMsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypeMsp{`,
		`SignupTypeMsp:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypeMsp), "SignupTypeMsp", "signup.SignupTypeMsp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypeInternalSso) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypeInternalSso{`,
		`SignupTypeInternalSso:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypeInternalSso), "SignupTypeInternalSso", "signup.SignupTypeInternalSso", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GlobalSpecType_SignupTypeMarketplace) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GlobalSpecType_SignupTypeMarketplace{`,
		`SignupTypeMarketplace:` + strings.Replace(fmt.Sprintf("%v", this.SignupTypeMarketplace), "SignupTypeMarketplace", "signup.SignupTypeMarketplace", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompanyDetails == nil {
				m.CompanyDetails = &signup.CompanyMeta{}
			}
			if err := m.CompanyDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserDetails == nil {
				m.UserDetails = &signup.UserMeta{}
			}
			if err := m.UserDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AccountDetails == nil {
				m.AccountDetails = &signup.AccountMeta{}
			}
			if err := m.AccountDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BillingDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BillingDetails == nil {
				m.BillingDetails = &signup.BillingMeta{}
			}
			if err := m.BillingDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypePublic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypePublic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypePublic{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypeInternalSre", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypeInternalSre{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypeInternalSre{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypeInternalScaling", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypeInternalScaling{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypeInternalScaling{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypePlanTransition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypePlanTransition{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypePlanTransition{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypeMsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypeMsp{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypeMsp{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypeInternalSso", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypeInternalSso{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypeInternalSso{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InternalMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InternalMeta == nil {
				m.InternalMeta = &signup.InternalMeta{}
			}
			if err := m.InternalMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignupTypeMarketplace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &signup.SignupTypeMarketplace{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.SignupType = &GlobalSpecType_SignupTypeMarketplace{v}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
			}
			m.Origin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Origin |= schema.SignupOrigin(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)

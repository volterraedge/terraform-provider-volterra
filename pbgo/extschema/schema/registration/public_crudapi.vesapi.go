// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package registration

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"

	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"go.uber.org/zap"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/client/configapi"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
)

const (
	// CreateRequestFQN is the fully-qualified-name of the CreateRequest message
	CreateRequestFQN = "ves.io.schema.registration.CreateRequest"
	// CreateResponseFQN is the fully-qualified-name of the CreateResponse message
	CreateResponseFQN = "ves.io.schema.registration.CreateResponse"
	// ReplaceRequestFQN is the fully-qualified-name of the ReplaceRequest message
	ReplaceRequestFQN = "ves.io.schema.registration.ReplaceRequest"
	// ReplaceResponseFQN is the fully-qualified-name of the ReplaceResponse message
	ReplaceResponseFQN = "ves.io.schema.registration.ReplaceResponse"
	// GetRequestFQN is the fully-qualified-name of the GetRequest message
	GetRequestFQN = "ves.io.schema.registration.GetRequest"
	// GetResponseFQN is the fully-qualified-name of the GetResponse message
	GetResponseFQN = "ves.io.schema.registration.GetResponse"
	// ListRequestFQN is the fully-qualified-name of the ListRequest message
	ListRequestFQN = "ves.io.schema.registration.ListRequest"
	// ListResponseFQN is the fully-qualified-name of the ListResponse message
	ListResponseFQN = "ves.io.schema.registration.ListResponse"
	// DeleteRequestFQN is the fully-qualified-name of the DeleteRequest message
	DeleteRequestFQN = "ves.io.schema.registration.DeleteRequest"
	// DeleteResponseFQN is the fully-qualified-name of the DeleteResponse message
	DeleteResponseFQN = "ves.io.schema.registration.DeleteResponse"
)

// CLIENT side
func NewCreateRequest(e db.Entry) (*CreateRequest, error) {
	r := &CreateRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewReplaceRequest(e db.Entry) (*ReplaceRequest, error) {
	r := &ReplaceRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *CreateRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*CreateRequest)
		if !ok {
			return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Create")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return nil, err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *ReplaceRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*ReplaceRequest)
		if !ok {
			return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewReplaceRequest(e)
		if err != nil {
			return errors.Wrap(err, "Replace")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return nil

}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	return fmt.Errorf("Not implemented")

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return nil, fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var req *CreateRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*CreateRequest)
			if !ok {
				return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
			}
			req = r
		} else {
			r, err := NewCreateRequest(e)
			if err != nil {
				return nil, errors.Wrap(err, "Creating new create request")
			}
			req = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, req); err != nil {
					return nil, err
				}
			}
		}

		j, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "RestClient Create")
		}
		jsn = j
	}

	var namespace string
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return nil, errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return nil, fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}
	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return nil, fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/registrations", c.baseURL, namespace)

	hReq, err := http.NewRequest("POST", url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &CreateResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	configapi.TranscribeCall(ctx, jsn, string(body))
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}

	obj := NewDBObject(nil)
	rspo.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rspo, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var rReq *ReplaceRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*ReplaceRequest)
			if !ok {
				return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
			}
			rReq = r
		} else {
			r, err := NewReplaceRequest(e)
			if err != nil {
				return errors.Wrap(err, "Creating new replace request")
			}
			rReq = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, rReq); err != nil {
					return err
				}
			}
		}

		rReq.ResourceVersion = cco.ResourceVersion
		j, err := codec.ToJSON(rReq, codec.ToWithUseProtoFieldName())
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		jsn = j
	}

	var namespace, name string
	_ = namespace
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}

	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	if val, ok := md["name"].(string); ok {
		name = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.name'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/registrations/%s", c.baseURL, namespace, name)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	hReq = hReq.WithContext(ctx)
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	if _, err := io.ReadAll(rsp.Body); err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	configapi.TranscribeCall(ctx, jsn, nil)
	return nil

}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	return fmt.Errorf("Not implemented")

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	var bURL string
	if strings.HasSuffix(baseURL, "/") {
		bURL = baseURL[:len(baseURL)-1]
	} else {
		bURL = baseURL
	}
	crcl := &crudAPIRestClient{bURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	svc svcfw.Service
}

func (c *APIInprocClient) Create(ctx context.Context, req *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.registration.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.registration")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.registration.API.Create")
	rsp, err := oah.Create(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.registration.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.registration")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.registration.API.Replace")
	if rsp, err := oah.Replace(ctx, req); err != nil {
		return rsp, err
	}
	return NewObjectReplaceRsp(nil)
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	return &APIInprocClient{svc: svc}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	cl APIClient
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewCreateRequest(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return nil, err
		}
	}

	rsp, err := c.cl.Create(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if err != nil {
		return nil, err
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewReplaceRequest(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return err
		}
	}

	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.cl.Replace(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	return nil, fmt.Errorf("Not implemented")

}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	return fmt.Errorf("Not implemented")

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	return &crudAPIInprocClient{cl: NewAPIInprocClient(svc)}
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper

	// resource handler function pointers
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.registration.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.registration.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.registration.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.registration.API.Create"), zap.Error(err))
			}
		}
	}
	reqMsgFQN := "ves.io.schema.registration.CreateRequest"
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, reqMsgFQN, req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	obj := NewDBObject(nil)
	req.ToObject(obj)
	if conv, exists := s.sf.Config().MsgToObjConverters[reqMsgFQN]; exists {
		if err := conv(req, obj); err != nil {
			return nil, err
		}
	}
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}
	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.registration.CreateResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.registration.API.CreateResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ReplaceRequest) (*ReplaceResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		err := fmt.Errorf("Nil spec in Replace Request")
		return nil, svcfw.NewInvalidInputError(err.Error(), err)
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.registration.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.registration.API.Replace"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.registration.API.ReplaceRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.registration.API.ReplaceResponse", rsp)...)
	return rsp, nil
}

// Assert that APISrv implements the generated gRPC APIServer interface
var _ APIServer = &APISrv{}

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.API", strings.Join(sl[:len(sl)-1], "."))
}

func (r *Object) Key() string {
	m := r.GetMetadata()
	if m == nil {
		return ""
	}
	return strings.Join([]string{m.Namespace, m.Name}, "/")
}

func (r *Object) Uid() string {
	return r.SystemMetadata.Uid
}

func NewObjectCreateRsp(e db.Entry) (*CreateResponse, error) {
	switch e.(type) {
	case nil:
		return nil, nil
	case *DBObject:
		rsp := &CreateResponse{}
		rsp.FromObject(e)
		return rsp, nil
	}
	return nil, fmt.Errorf("Entry not of type *DBObject in NewObjectCreateRsp")
}

func NewObjectReplaceRsp(e db.Entry) (*ReplaceResponse, error) {
	return &ReplaceResponse{}, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "registration",
        "description": "registration API(s) are used by Customer edge site to register itself with volterra edge cloud.\nEvery node in given site is represented by it's registration.\nregistration must have unique hostname for given cluster_name. Registration state is changed to RETIRED in order to decommission node.\nRegistration can't be changed by user after creation.\n\nRegistration contains HA information about node in infra section\nand site which belongs to in passport.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{metadata.namespace}/registrations": {
            "post": {
                "summary": "Create Registration",
                "description": "VPM creates registration using this message, never used by users.",
                "operationId": "ves.io.schema.registration.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/registrationCreateResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registrationCreateRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-registration-api-create"
                },
                "x-ves-proto-rpc": "ves.io.schema.registration.API.Create"
            },
            "x-displayname": "Registration",
            "x-ves-proto-service": "ves.io.schema.registration.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{metadata.namespace}/registrations/{metadata.name}": {
            "put": {
                "summary": "Replace Registration",
                "description": "NO fields are allowed to be replaced",
                "operationId": "ves.io.schema.registration.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/registrationReplaceResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "metadata.name",
                        "description": "name\n\nx-example: \"acmecorp-web\"\nThe configuration object to be replaced will be looked up by name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registrationReplaceRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-registration-api-replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.registration.API.Replace"
            },
            "x-displayname": "Registration",
            "x-ves-proto-service": "ves.io.schema.registration.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        }
    },
    "definitions": {
        "ioschemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "ioschemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "registrationCreateRequest": {
            "type": "object",
            "description": "This is the input message of the 'Create' RPC",
            "title": "CreateRequest is used to create an instance of registration",
            "x-displayname": "Create Request",
            "x-ves-proto-message": "ves.io.schema.registration.CreateRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectCreateMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the registration",
                    "title": "spec",
                    "$ref": "#/definitions/schemaregistrationCreateSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "registrationCreateResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.registration.CreateResponse",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the registration",
                    "title": "spec",
                    "$ref": "#/definitions/schemaregistrationGetSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "registrationInfra": {
            "type": "object",
            "description": "InfraMetadata stores information about instance infrastructure",
            "title": "Infrastructure information",
            "x-displayname": "Infra Information",
            "x-ves-proto-message": "ves.io.schema.registration.Infra",
            "properties": {
                "availability_zone": {
                    "type": "string",
                    "description": " An Availability Zone is a high-availability offering that protects your applications and data from datacenter failures.\n\nExample: - \"value\"-",
                    "title": "availability_zone",
                    "x-displayname": "Availability Zone",
                    "x-ves-example": "value"
                },
                "certified_hw": {
                    "type": "string",
                    "description": " certified HW name used to map with F5XC certified_hardware definition\n\nExample: - \"value\"-",
                    "title": "Certified hardware name",
                    "x-displayname": "Certified Hardware",
                    "x-ves-example": "value"
                },
                "domain": {
                    "type": "string",
                    "description": " Machine domain. It's used for Kubernetes cloud provider when domain must be\n different than Volterra\n\nExample: - \"value\"-",
                    "title": "Instance domain",
                    "x-displayname": "Instance Domain",
                    "x-ves-example": "value"
                },
                "hostname": {
                    "type": "string",
                    "description": " Must be unique in entire cluster and same as OS settings.\n '.' (dots) are not allowed in hostname\n\nExample: - \"value\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Instance hostname",
                    "x-displayname": "Hostname",
                    "x-ves-example": "value",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "hw_info": {
                    "description": " HW information about node in the site",
                    "title": "Hardware information",
                    "$ref": "#/definitions/siteOsInfo",
                    "x-displayname": "Hardware Information"
                },
                "instance_id": {
                    "type": "string",
                    "description": " Instance id (assigned by infrastructure provider)\n\nExample: - \"value\"-",
                    "title": "Instance ID",
                    "x-displayname": "Instance ID",
                    "x-ves-example": "value"
                },
                "interfaces": {
                    "type": "object",
                    "description": " Machine interfaces present during registration time\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Interfaces",
                    "x-displayname": "Interfaces",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "internet_proxy": {
                    "description": " It will be used as the proxy URL for HTTP requests and HTTPS requests to F5XC public domains.",
                    "title": "Internet Proxy Configuration",
                    "$ref": "#/definitions/registrationInternetProxy",
                    "x-displayname": "Local HTTP/HTTPS proxy configuration"
                },
                "machine_id": {
                    "type": "string",
                    "description": " Machine id - generated by operating system\n\nExample: - \"value\"-",
                    "title": "Machine ID",
                    "x-displayname": "Machine ID",
                    "x-ves-example": "value"
                },
                "provider": {
                    "description": " Infrastructure provider detected by system",
                    "title": "Provider",
                    "$ref": "#/definitions/registrationProvider",
                    "x-displayname": "Provider"
                },
                "timestamp": {
                    "type": "string",
                    "description": " It's used to verify machine have acceptable time difference from server",
                    "title": "Timestamp",
                    "format": "date-time",
                    "x-displayname": "Current (machine) time"
                },
                "zone": {
                    "type": "string",
                    "description": " Instance zone (or region), depends on provider\n\nExample: - \"value\"-",
                    "title": "Zone",
                    "x-displayname": "Region",
                    "x-ves-example": "value"
                }
            }
        },
        "registrationInterface": {
            "type": "object",
            "description": "x-displayName: \"Machine Interface\"\nInterface describe network interface",
            "title": "Machine interface",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": "x-displayName: \"IP Address\"\nx-example: \"192.168.100.1\"",
                    "title": "IP Address"
                },
                "name": {
                    "type": "string",
                    "description": "x-displayName: \"Interface Name\"\nx-example: \"eth0\"",
                    "title": "Interface name"
                },
                "plen": {
                    "type": "integer",
                    "description": "x-displayName: \"IP Prefix\"\nx-example: \"24\"",
                    "title": "Prefix length",
                    "format": "int32"
                }
            }
        },
        "registrationInternetProxy": {
            "type": "object",
            "description": "Proxy describes options for HTTP or HTTPS proxy configurations",
            "title": "Internet Proxy configuration",
            "x-displayname": "Internet Proxy Configuration",
            "x-ves-proto-message": "ves.io.schema.registration.InternetProxy",
            "properties": {
                "http_proxy": {
                    "type": "string",
                    "description": " It will be used as the proxy URL for HTTP requests and HTTPS requests unless overridden by HTTPSProxy or NoProxy.\n\nExample: - \"http://USERNAME:PASSWORD@10.0.1.1:8080/\"-",
                    "title": "Http Proxy",
                    "x-displayname": "HTTP PROXY",
                    "x-ves-example": "http://USERNAME:PASSWORD@10.0.1.1:8080/"
                },
                "https_proxy": {
                    "type": "string",
                    "description": " It will be used as the proxy URL for HTTPS requests unless overridden by NoProxy.\n\nExample: - \"https://USERNAME:PASSWORD@10.0.0.1:8080/\"-",
                    "title": "Https Proxy",
                    "x-displayname": "HTTPS PROXY",
                    "x-ves-example": "https://USERNAME:PASSWORD@10.0.0.1:8080/"
                },
                "no_proxy": {
                    "type": "string",
                    "description": " It specifies a string that contains comma-separated values\n specifying hosts that should be excluded from proxying. Each value is\n represented by an IP address prefix (1.2.3.4), an IP address prefix in\n CIDR notation (1.2.3.4/8), a domain name, or a special DNS label (*).\n An IP address prefix and domain name can also include a literal port\n number (1.2.3.4:80).\n A domain name matches that name and all subdomains. A domain name with\n a leading \".\" matches subdomains only. For example \"foo.com\" matches\n \"foo.com\" and \"bar.foo.com\"; \".y.com\" matches \"x.y.com\" but not \"y.com\".\n A single asterisk (*) indicates that no proxying should be done.\n\nExample: - \"master.hostname.example.com,10.1.0.0/16,172.30.0.0/16\"-",
                    "title": "No Proxy",
                    "x-displayname": "NO PROXY",
                    "x-ves-example": "master.hostname.example.com,10.1.0.0/16,172.30.0.0/16"
                },
                "proxy_cacert_url": {
                    "type": "string",
                    "description": " Allow optional different trust-store for proxy in HTTP CONNECT step\n by picking proxy ca certificate value.\n\nExample: - \"string:///LS0tLS1CRUdJTiBDRxxxx\"-",
                    "title": "Proxy CA certificate URL",
                    "x-displayname": "Proxy CA certificate URL",
                    "x-ves-example": "string:///LS0tLS1CRUdJTiBDRxxxx"
                }
            }
        },
        "registrationPassport": {
            "type": "object",
            "description": "Passport stores information about identification and node configuration provided by CE during registration. It can be manually updated by user during approval.",
            "title": "Passport",
            "x-displayname": "Passport",
            "x-ves-displayorder": "1,2,9,7,8,4,5,6,10,3,11,12,15",
            "x-ves-oneof-field-operating_system_version_choice": "[\"default_os_version\",\"operating_system_version\"]",
            "x-ves-oneof-field-volterra_sw_version_choice": "[\"default_sw_version\",\"volterra_software_version\"]",
            "x-ves-proto-message": "ves.io.schema.registration.Passport",
            "properties": {
                "cluster_name": {
                    "type": "string",
                    "description": "\nExample: - \"acme-ce01\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "cluster_name",
                    "x-displayname": "Cluster Name",
                    "x-ves-example": "acme-ce01",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "cluster_size": {
                    "type": "integer",
                    "description": " Defines how many master nodes is in the cluster, only 1 or 3 is allowed\n 1 - cluster have single master, without HA\n 3 - cluster have 3 masters, with HA, all nodes should be allowed at same time, cluster won't start until ALL nodes are ADMITTED\n 0 - same as 1\n This value can't be changed after installation.\n It does not interact with auto-scaling as only pool nodes are scaled.\n\nExample: - \"3\"-\n\nValidation Rules:\n  ves.io.schema.rules.int32.in: [0,1,3]\n",
                    "title": "Cluster size",
                    "format": "int32",
                    "x-displayname": "Cluster Size",
                    "x-ves-example": "3",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.int32.in": "[0,1,3]"
                    }
                },
                "cluster_type": {
                    "type": "string",
                    "description": "\nExample: - \"ce\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "cluster_type",
                    "x-displayname": "Cluster Type",
                    "x-ves-example": "ce",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "default_os_version": {
                    "description": "Exclusive with [operating_system_version]\n Will assign latest available OS version or version defined on parent object such as Fleet, App Stack site, AWS, Azure, etc.",
                    "title": "Default OS Version",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default OS Version"
                },
                "default_sw_version": {
                    "description": "Exclusive with [volterra_software_version]\n Will assign latest available SW version or version defined on parent object such as Fleet, App Stack site, AWS, Azure, etc.",
                    "title": "Default SW Version",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Default SW Version"
                },
                "latitude": {
                    "type": "number",
                    "description": " Geographic location of this site\n\nExample: - \"49.3156733\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.float.gte: -90.0\n  ves.io.schema.rules.float.lte: 90.0\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Latitude",
                    "format": "float",
                    "x-displayname": "Latitude",
                    "x-ves-example": "49.3156733",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.float.gte": "-90.0",
                        "ves.io.schema.rules.float.lte": "90.0",
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "longitude": {
                    "type": "number",
                    "description": " Geographic location of this site\n\nExample: - \"14.2484333\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.float.gte: -180.0\n  ves.io.schema.rules.float.lte: 180.0\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Longitude",
                    "format": "float",
                    "x-displayname": "Longitude",
                    "x-ves-example": "14.2484333",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.float.gte": "-180.0",
                        "ves.io.schema.rules.float.lte": "180.0",
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "operating_system_version": {
                    "type": "string",
                    "description": "Exclusive with [default_os_version]\n Operating System Version is optional parameter, which allows to specify target SW version for particular site e.g. 7.2009.10.\n\nExample: - \"7.2009.10\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "Operating System Version",
                    "maxLength": 20,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "7.2009.10",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                },
                "private_network_name": {
                    "type": "string",
                    "description": " Private Network name for private access connectivity to F5XC ADN.\n It is used for PrivateLink, CloudLink and L3VPN.\n\nExample: - \"private-ntw\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "Private Network Name",
                    "maxLength": 64,
                    "x-displayname": "Private Network Name",
                    "x-ves-example": "private-ntw",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": "Exclusive with [default_sw_version]\n F5XC Software Version is optional parameter, which allows to specify target SW version for particular site e.g. crt-20210329-1002.\n\nExample: - \"crt-20210329-1002\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "F5XC Software Version",
                    "maxLength": 20,
                    "x-displayname": "F5XC Software Version",
                    "x-ves-example": "crt-20210329-1002",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                }
            }
        },
        "registrationProvider": {
            "type": "string",
            "description": "Infrastructure provider enum for registration. It describes where is instance running.\n\nProvider was not detected\nAWS cloud instance\nGoogle cloud instance\nAzure cloud instance\nVMWare VM\nKVM VM\nOther provider, which was not identified by system.\nF5XC HW device.\nIBM Cloud instance.\nKubernetes cluster in AWS\nKubernetes cluster in GCP\nKubernetes cluster in Azure\nKubernetes cluster in Vmware\nKubernetes cluster in VMware\nKubernetes cluster in Other provider\nKubernetes cluster in Volterra\nKubernetes cluster in IBM Cloud\nF5OS HW device.",
            "title": "Infrastructure provider",
            "enum": [
                "UNKNOWN",
                "AWS",
                "GOOGLE",
                "AZURE",
                "VMWARE",
                "KVM",
                "OTHER",
                "VOLTERRA",
                "IBMCLOUD",
                "UNKNOWN_K8S",
                "AWS_K8S",
                "GCP_K8S",
                "AZURE_K8S",
                "VMWARE_K8S",
                "KVM_K8S",
                "OTHER_K8S",
                "VOLTERRA_K8S",
                "IBMCLOUD_K8S",
                "F5OS"
            ],
            "default": "UNKNOWN",
            "x-displayname": "Infrastructure Provider",
            "x-ves-proto-enum": "ves.io.schema.registration.Provider"
        },
        "registrationReplaceRequest": {
            "type": "object",
            "description": "This is the input message of the 'Replace' RPC",
            "title": "ReplaceRequest is used to replace contents of a registration",
            "x-displayname": "Replace Request",
            "x-ves-proto-message": "ves.io.schema.registration.ReplaceRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectReplaceMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the registration",
                    "title": "spec",
                    "$ref": "#/definitions/schemaregistrationReplaceSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "registrationReplaceResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.registration.ReplaceResponse"
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/ioschemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaObjectCreateMetaType": {
            "type": "object",
            "description": "ObjectCreateMetaType is metadata that can be specified in Create request of an object.",
            "title": "ObjectCreateMetaType",
            "x-displayname": "Create Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectCreateMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectGetMetaType": {
            "type": "object",
            "description": "ObjectGetMetaType is metadata that can be specified in Get/Create response of an object.",
            "title": "ObjectGetMetaType",
            "x-displayname": "Get Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectGetMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectReplaceMetaType": {
            "type": "object",
            "description": "ObjectReplaceMetaType is metadata that can be specified in Replace request of an object.",
            "title": "ObjectReplaceMetaType",
            "x-displayname": "Replace Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectReplaceMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaSystemObjectGetMetaType": {
            "type": "object",
            "description": "SystemObjectGetMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectGetMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectGetMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "prism"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "admin@acmecorp.com"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n\n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n\n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the operator or software. Values here can be interpreted\n by software(backend or frontend) to enable certain behavior e.g. things marked as soft-deleted(restorable).\n\nExample: - \"'ves.io/soft-deleted''true'\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "'ves.io/soft-deleted': 'true'"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaregistrationCreateSpecType": {
            "type": "object",
            "description": "VPM creates registration using this message, never used by users.",
            "title": "Create registration",
            "x-displayname": "Create Registration",
            "x-ves-displayorder": "1,2,3",
            "x-ves-proto-message": "ves.io.schema.registration.CreateSpecType",
            "properties": {
                "infra": {
                    "description": " Infrastructure metadata section\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/registrationInfra",
                    "x-displayname": "Infrastructure",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "passport": {
                    "description": " Passport is storing identification for instance as site name, latitude, longitude, etc.\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/registrationPassport",
                    "x-displayname": "Passport",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "token": {
                    "type": "string",
                    "description": " Token is used for machine and tenant identification\n\nExample: - \"value\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "x-displayname": "Token",
                    "x-ves-example": "value",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "schemaregistrationGetSpecType": {
            "type": "object",
            "description": "Get registration specification",
            "title": "Get registration",
            "x-displayname": "Get Registration",
            "x-ves-displayorder": "1,2,3",
            "x-ves-proto-message": "ves.io.schema.registration.GetSpecType",
            "properties": {
                "infra": {
                    "description": " Infrastructure metadata section\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/registrationInfra",
                    "x-displayname": "Infrastructure",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "passport": {
                    "description": " Passport is storing identification for instance as site name, latitude, longitude, etc.\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/registrationPassport",
                    "x-displayname": "Passport",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "token": {
                    "type": "string",
                    "description": " Token is used for machine and tenant identification\n\nExample: - \"value\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "x-displayname": "Token",
                    "x-ves-example": "value",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "schemaregistrationReplaceSpecType": {
            "type": "object",
            "description": "NO fields are allowed to be replaced",
            "title": "Replace registration",
            "x-displayname": "Replace Registration",
            "x-ves-proto-message": "ves.io.schema.registration.ReplaceSpecType"
        },
        "siteBios": {
            "type": "object",
            "description": "BIOS information.",
            "title": "Bios Data",
            "x-displayname": "Bios Data",
            "x-ves-proto-message": "ves.io.schema.site.Bios",
            "properties": {
                "date": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/bios_date\n\nExample: - \"value\"-",
                    "title": "date",
                    "x-displayname": "Date",
                    "x-ves-example": "value"
                },
                "vendor": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/bios_vendor\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                },
                "version": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/bios_version\n\nExample: - \"value\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "value"
                }
            }
        },
        "siteBoard": {
            "type": "object",
            "description": "Board information",
            "title": "Board Details",
            "x-displayname": "Board Details",
            "x-ves-proto-message": "ves.io.schema.site.Board",
            "properties": {
                "asset_tag": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/board_asset_tag\n\nExample: - \"value\"-",
                    "title": "asset_tag",
                    "x-displayname": "Asset Tag",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/board_name\n\nExample: - \"value\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "value"
                },
                "serial": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/board_serial\n\nExample: - \"value\"-",
                    "title": "serial",
                    "x-displayname": "Serial Number",
                    "x-ves-example": "value"
                },
                "vendor": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/board_vendor\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                },
                "version": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/board_version\n\nExample: - \"value\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "value"
                }
            }
        },
        "siteChassis": {
            "type": "object",
            "description": "Chassis information.",
            "title": "Chassis Details",
            "x-displayname": "Chassis Details",
            "x-ves-proto-message": "ves.io.schema.site.Chassis",
            "properties": {
                "asset_tag": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/chassis_asset_tag\n\nExample: - \"value\"-",
                    "title": "asset_tag",
                    "x-displayname": "Asset Tag",
                    "x-ves-example": "value"
                },
                "serial": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/chassis_serial\n\nExample: - \"value\"-",
                    "title": "serial",
                    "x-displayname": "Serial Number",
                    "x-ves-example": "value"
                },
                "type": {
                    "type": "integer",
                    "description": " information from /sys/class/dmi/id/chassis_type\n\nExample: - \"0\"-",
                    "title": "type",
                    "format": "int64",
                    "x-displayname": "Type",
                    "x-ves-example": "0"
                },
                "vendor": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/chassis_vendor\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                },
                "version": {
                    "type": "string",
                    "description": " information from /sys/class/dmi/id/chassis_version\n\nExample: - \"value\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "value"
                }
            }
        },
        "siteCpu": {
            "type": "object",
            "description": "CPU information",
            "title": "Cpu information",
            "x-displayname": "Cpu Information",
            "x-ves-proto-message": "ves.io.schema.site.Cpu",
            "properties": {
                "cache": {
                    "type": "integer",
                    "description": " CPU cache size in KB\n\nExample: - \"8192\"-",
                    "title": "cache",
                    "format": "int64",
                    "x-displayname": "Cache",
                    "x-ves-example": "8192"
                },
                "cores": {
                    "type": "integer",
                    "description": " number of physical CPU cores\n\nExample: - \"4\"-",
                    "title": "cores",
                    "format": "int64",
                    "x-displayname": "Cores",
                    "x-ves-example": "4"
                },
                "cpus": {
                    "type": "integer",
                    "description": " number of physical CPUs\n\nExample: - \"4\"-",
                    "title": "cpus",
                    "format": "int64",
                    "x-displayname": "CPUs",
                    "x-ves-example": "4"
                },
                "model": {
                    "type": "string",
                    "description": " CPU model\n\nExample: - \"value\"-",
                    "title": "model",
                    "x-displayname": "Model",
                    "x-ves-example": "value"
                },
                "speed": {
                    "type": "integer",
                    "description": " CPU clock rate in MHz\n\nExample: - \"4200\"-",
                    "title": "speed",
                    "format": "int64",
                    "x-displayname": "Speed",
                    "x-ves-example": "4200"
                },
                "threads": {
                    "type": "integer",
                    "description": " number of logical (HT) CPU cores\n\nExample: - \"4\"-",
                    "title": "threads",
                    "format": "int64",
                    "x-displayname": "Threads",
                    "x-ves-example": "4"
                },
                "vendor": {
                    "type": "string",
                    "description": " CPU vendor\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                }
            }
        },
        "siteGPU": {
            "type": "object",
            "description": "GPU information on server",
            "title": "GPU",
            "x-displayname": "GPU",
            "x-ves-proto-message": "ves.io.schema.site.GPU",
            "properties": {
                "cuda_version": {
                    "type": "string",
                    "description": " GPU Cuda Version\n\nExample: - \"10.2\"-",
                    "title": "cudaVersion",
                    "x-displayname": "Cuda Version",
                    "x-ves-example": "10.2"
                },
                "driver_version": {
                    "type": "string",
                    "description": " GPU Driver Version\n\nExample: - \"440.82\"-",
                    "title": "driverVersion",
                    "x-displayname": "Driver Version",
                    "x-ves-example": "440.82"
                },
                "gpu_device": {
                    "type": "array",
                    "description": " List of GPU devices in server",
                    "title": "GPUDevice",
                    "items": {
                        "$ref": "#/definitions/siteGPUDevice"
                    },
                    "x-displayname": "GPU devices"
                }
            }
        },
        "siteGPUDevice": {
            "type": "object",
            "title": "GPUDevice",
            "x-displayname": "GPUDevice",
            "x-ves-proto-message": "ves.io.schema.site.GPUDevice",
            "properties": {
                "id": {
                    "type": "string",
                    "description": " GPU ID\n\nExample: - \"00000000:17:00.0\"-",
                    "title": "id",
                    "x-displayname": "GPU ID",
                    "x-ves-example": "00000000:17:00.0"
                },
                "processes": {
                    "type": "string",
                    "description": " GPU Processes\n\nExample: - \"value\"-",
                    "title": "processes",
                    "x-displayname": "Processes",
                    "x-ves-example": "value"
                },
                "product_name": {
                    "type": "string",
                    "description": " GPU Product Name\n\nExample: - \"Quadro P1000\"-",
                    "title": "productName",
                    "x-displayname": "Product Name",
                    "x-ves-example": "Quadro P1000"
                }
            }
        },
        "siteKernel": {
            "type": "object",
            "description": "Kernel information",
            "title": "Kernel Information",
            "x-displayname": "Kernel",
            "x-ves-proto-message": "ves.io.schema.site.Kernel",
            "properties": {
                "architecture": {
                    "type": "string",
                    "description": " kernel architecture\n\nExample: - \"value\"-",
                    "title": "architecture",
                    "x-displayname": "Architecture",
                    "x-ves-example": "value"
                },
                "release": {
                    "type": "string",
                    "description": " kernel release\n\nExample: - \"value\"-",
                    "title": "release",
                    "x-displayname": "Release",
                    "x-ves-example": "value"
                },
                "version": {
                    "type": "string",
                    "description": " kernel version\n\nExample: - \"value\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "value"
                }
            }
        },
        "siteLinkQuality": {
            "type": "string",
            "description": "Link quality determined by VER using different probes\n\nUnknown quality\nLink quality is good\nLink quality is poor\nQuality disabled",
            "title": "Link quality",
            "enum": [
                "QUALITY_UNKNOWN",
                "QUALITY_GOOD",
                "QUALITY_POOR",
                "QUALITY_DISABLED"
            ],
            "default": "QUALITY_UNKNOWN",
            "x-displayname": "Link quality",
            "x-ves-proto-enum": "ves.io.schema.site.LinkQuality"
        },
        "siteLinkType": {
            "type": "string",
            "description": "Link type of interface determined operationally\n\nLink type unknown\nLink type ethernet\nWiFi link of type 802.11ac\nWiFi link of type 802.11bgn\nLink type 4G\nWiFi link\nWan link",
            "title": "Link type",
            "enum": [
                "LINK_TYPE_UNKNOWN",
                "LINK_TYPE_ETHERNET",
                "LINK_TYPE_WIFI_802_11AC",
                "LINK_TYPE_WIFI_802_11BGN",
                "LINK_TYPE_4G",
                "LINK_TYPE_WIFI",
                "LINK_TYPE_WAN"
            ],
            "default": "LINK_TYPE_UNKNOWN",
            "x-displayname": "Link type",
            "x-ves-proto-enum": "ves.io.schema.site.LinkType"
        },
        "siteMemory": {
            "type": "object",
            "description": "Memory information.",
            "title": "Memory Information",
            "x-displayname": "Memory Information",
            "x-ves-proto-message": "ves.io.schema.site.Memory",
            "properties": {
                "size_mb": {
                    "type": "integer",
                    "description": " RAM size in MB\n\nExample: - \"value\"-",
                    "title": "size_mb",
                    "format": "int64",
                    "x-displayname": "RAM",
                    "x-ves-example": "value"
                },
                "speed": {
                    "type": "integer",
                    "description": " RAM data rate in MT/s\n\nExample: - \"value\"-",
                    "title": "speed",
                    "format": "int64",
                    "x-displayname": "Speed",
                    "x-ves-example": "value"
                },
                "type": {
                    "type": "string",
                    "description": " type of memory, eg. DDR4\n\nExample: - \"DDR4\"-",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "DDR4"
                }
            }
        },
        "siteNetworkDevice": {
            "type": "object",
            "description": "NetworkDevice information.",
            "title": "Network Device Information",
            "x-displayname": "Network Device Information",
            "x-ves-proto-message": "ves.io.schema.site.NetworkDevice",
            "properties": {
                "driver": {
                    "type": "string",
                    "description": " driver of device, eg. e1000e\n\nExample: - \"e1000e\"-",
                    "title": "driver",
                    "x-displayname": "Driver",
                    "x-ves-example": "e1000e"
                },
                "ip_address": {
                    "type": "array",
                    "description": " ip address on interface\n\nExample: - \"1.1.1.1\"-",
                    "title": "ip_address",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Address",
                    "x-ves-example": "1.1.1.1"
                },
                "link_quality": {
                    "description": " Link quality for the interface",
                    "title": "Link quality status",
                    "$ref": "#/definitions/siteLinkQuality",
                    "x-displayname": "Link Quality"
                },
                "link_type": {
                    "description": " Link type for the interface",
                    "title": "Link type",
                    "$ref": "#/definitions/siteLinkType",
                    "x-displayname": "Link type"
                },
                "mac_address": {
                    "type": "string",
                    "description": " mac address on interface\n\nExample: - \"value\"-",
                    "title": "mac_address",
                    "x-displayname": "MAC Address",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " name of device, eg. eth0\n\nExample: - \"eth0\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "eth0"
                },
                "port": {
                    "type": "string",
                    "description": " used port, eg. tp\n\nExample: - \"value\"-",
                    "title": "port",
                    "x-displayname": "Port",
                    "x-ves-example": "value"
                },
                "speed": {
                    "type": "integer",
                    "description": " device max supported speed in Mbps\n\nExample: - \"1000\"-",
                    "title": "speed",
                    "format": "int64",
                    "x-displayname": "Speed",
                    "x-ves-example": "1000"
                }
            }
        },
        "siteOS": {
            "type": "object",
            "description": "Details of Operating System",
            "title": "OS",
            "x-displayname": "OS",
            "x-ves-proto-message": "ves.io.schema.site.OS",
            "properties": {
                "architecture": {
                    "type": "string",
                    "description": " Architecture of OS\n\nExample: - \"amd64\"-",
                    "title": "architecture",
                    "x-displayname": "Architecture",
                    "x-ves-example": "amd64"
                },
                "name": {
                    "type": "string",
                    "description": " Name of OS\n\nExample: - \"Container Linux by CoreOS 1855.4.0 (Rhyolite)\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "Container Linux by CoreOS 1855.4.0 (Rhyolite)"
                },
                "release": {
                    "type": "string",
                    "description": " Release of the OS\n\nExample: - \"20.04\"-",
                    "title": "release",
                    "x-displayname": "Release",
                    "x-ves-example": "20.04"
                },
                "vendor": {
                    "type": "string",
                    "description": " Vendor of OS\n\nExample: - \"coreos\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "coreos"
                },
                "version": {
                    "type": "string",
                    "description": " Version of OS\n\nExample: - \"1855.4.0\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "1855.4.0"
                }
            }
        },
        "siteOsInfo": {
            "type": "object",
            "description": "OsInfo holds information about host OS and HW",
            "title": "OsInfo",
            "x-displayname": "Os Info",
            "x-ves-proto-message": "ves.io.schema.site.OsInfo",
            "properties": {
                "bios": {
                    "description": " Information about bios",
                    "title": "bios",
                    "$ref": "#/definitions/siteBios",
                    "x-displayname": "BIOS"
                },
                "board": {
                    "description": " HW board information",
                    "title": "board",
                    "$ref": "#/definitions/siteBoard",
                    "x-displayname": "Board"
                },
                "chassis": {
                    "description": " HW chassis information",
                    "title": "chassis",
                    "$ref": "#/definitions/siteChassis",
                    "x-displayname": "Chassis"
                },
                "cpu": {
                    "description": " HW CPU information",
                    "title": "cpu",
                    "$ref": "#/definitions/siteCpu",
                    "x-displayname": "CPU"
                },
                "gpu": {
                    "description": " GPU information on server",
                    "title": "GPU",
                    "$ref": "#/definitions/siteGPU",
                    "x-displayname": "GPU"
                },
                "kernel": {
                    "description": " kernel information",
                    "title": "kernel",
                    "$ref": "#/definitions/siteKernel",
                    "x-displayname": "Kernel"
                },
                "memory": {
                    "description": " HW memory information",
                    "title": "memory",
                    "$ref": "#/definitions/siteMemory",
                    "x-displayname": "Memory"
                },
                "network": {
                    "type": "array",
                    "description": " List of network devices in server",
                    "title": "network",
                    "items": {
                        "$ref": "#/definitions/siteNetworkDevice"
                    },
                    "x-displayname": "Network"
                },
                "os": {
                    "description": " os holds all general OS information",
                    "title": "os",
                    "$ref": "#/definitions/siteOS",
                    "x-displayname": "Operating System"
                },
                "product": {
                    "description": " HW product information",
                    "title": "product",
                    "$ref": "#/definitions/siteProduct",
                    "x-displayname": "Product"
                },
                "storage": {
                    "type": "array",
                    "description": " List of storage devices in server",
                    "title": "storage",
                    "items": {
                        "$ref": "#/definitions/siteStorageDevice"
                    },
                    "x-displayname": "Storage"
                },
                "usb": {
                    "type": "array",
                    "description": " List of USB devices in server",
                    "title": "USBDevice",
                    "items": {
                        "$ref": "#/definitions/siteUSBDevice"
                    },
                    "x-displayname": "USB devices"
                }
            }
        },
        "siteProduct": {
            "type": "object",
            "description": "Product information",
            "title": "Product Information",
            "x-displayname": "Product Information",
            "x-ves-proto-message": "ves.io.schema.site.Product",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " product name, eg. for aws m5a.xlarge. Info taken from /sys/class/dmi/id/product_name\n\nExample: - \"m5a.xlarge\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "m5a.xlarge"
                },
                "serial": {
                    "type": "string",
                    "description": " serial number, eg. for aws ec254b6d-9676-1a51-8b10-21370dbdc3e5. Info taken from /sys/class/dmi/id/product_serial\n\nExample: - \"ec254b6d-9676-1a51-8b10-21370dbdc3e5\"-",
                    "title": "serial",
                    "x-displayname": "Serial Number",
                    "x-ves-example": "ec254b6d-9676-1a51-8b10-21370dbdc3e5"
                },
                "vendor": {
                    "type": "string",
                    "description": " vendor name, eg. for aws Amazon EC2. Info taken from /sys/class/dmi/id/product_vendor\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                },
                "version": {
                    "type": "string",
                    "description": " version name. Info taken from /sys/class/dmi/id/product_version\n\nExample: - \"value\"-",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-example": "value"
                }
            }
        },
        "siteStorageDevice": {
            "type": "object",
            "description": "StorageDevice information.",
            "title": "Storage Information",
            "x-displayname": "Storage Information",
            "x-ves-proto-message": "ves.io.schema.site.StorageDevice",
            "properties": {
                "driver": {
                    "type": "string",
                    "description": " driver of device\n\nExample: - \"value\"-",
                    "title": "driver",
                    "x-displayname": "Driver",
                    "x-ves-example": "value"
                },
                "model": {
                    "type": "string",
                    "description": " model of device\n\nExample: - \"value\"-",
                    "title": "model",
                    "x-displayname": "Model",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " name of device, eg. nvme0n1\n\nExample: - \"nvme0n1\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "nvme0n1"
                },
                "serial": {
                    "type": "string",
                    "description": " serial of device\n\nExample: - \"value\"-",
                    "title": "serial",
                    "x-displayname": "Serial Number",
                    "x-ves-example": "value"
                },
                "size_gb": {
                    "type": "integer",
                    "description": " device size in GB\n\nExample: - \"value\"-",
                    "title": "size_gb",
                    "format": "int64",
                    "x-displayname": "Size(GB)",
                    "x-ves-example": "value"
                },
                "vendor": {
                    "type": "string",
                    "description": " vendor of device\n\nExample: - \"value\"-",
                    "title": "vendor",
                    "x-displayname": "Vendor",
                    "x-ves-example": "value"
                }
            }
        },
        "siteUSBDevice": {
            "type": "object",
            "description": "Information about USB device",
            "title": "USB device",
            "x-displayname": "USB Device informaton",
            "x-ves-proto-message": "ves.io.schema.site.USBDevice",
            "properties": {
                "address": {
                    "type": "integer",
                    "description": " Address of the device on the bus in decimal\n\nExample: - \"4\"-",
                    "title": "address",
                    "format": "int64",
                    "x-displayname": "Address",
                    "x-ves-example": "4"
                },
                "b_device_class": {
                    "type": "string",
                    "description": " The class of this device\n\nExample: - \"hub\"-",
                    "title": "b_device_class",
                    "x-displayname": "Class",
                    "x-ves-example": "hub"
                },
                "b_device_protocol": {
                    "type": "string",
                    "description": " The protocol (within the sub-class) of this device\n\nExample: - \"0002\"-",
                    "title": "b_device_protocol",
                    "x-displayname": "Protocol",
                    "x-ves-example": "0002"
                },
                "b_device_sub_class": {
                    "type": "string",
                    "description": " The sub-class (within the class) of this device\n\nExample: - \"hub\"-",
                    "title": "b_device_sub_class",
                    "x-displayname": "Subclass",
                    "x-ves-example": "hub"
                },
                "b_max_packet_size": {
                    "type": "integer",
                    "description": " Maximum size of the control transfer\n\nExample: - \"64\"-",
                    "title": "b_max_packet_size",
                    "format": "int64",
                    "x-displayname": "Max packet size",
                    "x-ves-example": "64"
                },
                "bcd_device": {
                    "type": "string",
                    "description": " The device version\n\nExample: - \"5.05\"-",
                    "title": "bcd_device",
                    "x-displayname": "BCD Device",
                    "x-ves-example": "5.05"
                },
                "bcd_usb": {
                    "type": "string",
                    "description": " USB Specification Release Number\n\nExample: - \"2.0\"-",
                    "title": "bcd_usb",
                    "x-displayname": "BCD Spec",
                    "x-ves-example": "2.0"
                },
                "bus": {
                    "type": "integer",
                    "description": " The bus on which the device was detected in decimal\n\nExample: - \"1\"-",
                    "title": "bus",
                    "format": "int64",
                    "x-displayname": "Bus",
                    "x-ves-example": "1"
                },
                "description": {
                    "type": "string",
                    "description": " Device description\n\nExample: - \"NetVista Full Width Keyboard (IBM Corp.)\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "NetVista Full Width Keyboard (IBM Corp.)"
                },
                "i_manufacturer": {
                    "type": "string",
                    "description": " Manufacturer name\n\nExample: - \"Voltera\"-",
                    "title": "i_manufacturer",
                    "x-displayname": "Manufacturer",
                    "x-ves-example": "Voltera"
                },
                "i_product": {
                    "type": "string",
                    "description": " Product name reported by device\n\nExample: - \"xHCI Host Controller\"-",
                    "title": "i_product",
                    "x-displayname": "Device product",
                    "x-ves-example": "xHCI Host Controller"
                },
                "i_serial": {
                    "type": "string",
                    "description": " Index of Serial Number String Descriptor\n\nExample: - \"0000:00:14.0\"-",
                    "title": "i_serial_number",
                    "x-displayname": "iSerialNumber",
                    "x-ves-example": "0000:00:14.0"
                },
                "id_product": {
                    "type": "string",
                    "description": " Product ID (Assigned by Manufacturer) in hex\n\nExample: - \"0x0002\"-",
                    "title": "id_product",
                    "x-displayname": "Product ID",
                    "x-ves-example": "0x0002"
                },
                "id_vendor": {
                    "type": "string",
                    "description": " Vendor ID (Assigned by USB Org) in hex\n\nExample: - \"0x1d6b\"-",
                    "title": "id_vendor",
                    "x-displayname": "Vendor ID",
                    "x-ves-example": "0x1d6b"
                },
                "port": {
                    "type": "integer",
                    "description": " Port on which the device was detected in decimal\n\nExample: - \"3\"-",
                    "title": "port",
                    "format": "int64",
                    "x-displayname": "Port",
                    "x-ves-example": "3"
                },
                "product_name": {
                    "type": "string",
                    "description": " Product ID translated to name (if available)\n\nExample: - \"NetVista Full Width Keyboard\"-",
                    "title": "product_name",
                    "x-displayname": "Product name",
                    "x-ves-example": "NetVista Full Width Keyboard"
                },
                "speed": {
                    "type": "string",
                    "description": " The negotiated operating speed for the device\n\nExample: - \"high\"-",
                    "title": "speed",
                    "x-displayname": "Speed",
                    "x-ves-example": "high"
                },
                "usb_type": {
                    "description": " Type of USB device\n\nExample: - \"INTERNAL\"-",
                    "title": "usb_type",
                    "$ref": "#/definitions/siteUsbType",
                    "x-displayname": "USB Type",
                    "x-ves-example": "INTERNAL"
                },
                "vendor_name": {
                    "type": "string",
                    "description": " Vendor ID translated to name (if available)\n\nExample: - \"IBM Corp.\"-",
                    "title": "vendor_name",
                    "x-displayname": "Vendor name",
                    "x-ves-example": "IBM Corp."
                }
            }
        },
        "siteUsbType": {
            "type": "string",
            "description": "Type of USB device\n\nUnknown USB device type\nInternal USB present in Certified HW\nUSB device present during node registration\nUSB device that can be matched by USB rules",
            "title": "UsbType",
            "enum": [
                "UNKNOWN_USB",
                "INTERNAL",
                "REGISTERED",
                "CONFIGURABLE"
            ],
            "default": "UNKNOWN_USB",
            "x-displayname": "USB Type",
            "x-ves-proto-enum": "ves.io.schema.site.UsbType"
        }
    },
    "x-displayname": "Registration",
    "x-ves-proto-file": "ves.io/schema/registration/public_crudapi.proto"
}`

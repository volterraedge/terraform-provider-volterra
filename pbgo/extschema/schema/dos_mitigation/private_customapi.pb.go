// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/dos_mitigation/private_customapi.proto

package dos_mitigation

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// FailedOperation
//
// x-displayName: "Failed Operation"
type FailedOperation struct {
	// object
	//
	// x-displayName: "Object Reference"
	// Object on which the operation failed
	Object *schema.ObjectRefType `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	// error
	//
	// x-displayName: "Error"
	// Error message for the failed operation on the object
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *FailedOperation) Reset()      { *m = FailedOperation{} }
func (*FailedOperation) ProtoMessage() {}
func (*FailedOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e46e44590e72c3d0, []int{0}
}
func (m *FailedOperation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FailedOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FailedOperation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FailedOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailedOperation.Merge(m, src)
}
func (m *FailedOperation) XXX_Size() int {
	return m.Size()
}
func (m *FailedOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_FailedOperation.DiscardUnknown(m)
}

var xxx_messageInfo_FailedOperation proto.InternalMessageInfo

func (m *FailedOperation) GetObject() *schema.ObjectRefType {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *FailedOperation) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// CreateBulkRequest
//
// x-displayName: "Bulk Create Objects"
// Create multiple dos_mitigation objects in bulk and rebuild ACLs only once for every virtual host
type CreateBulkRequest struct {
	// objects
	//
	// x-displayName: "Objects"
	// List of dos_mitigation objects to create
	Objects []*Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (m *CreateBulkRequest) Reset()      { *m = CreateBulkRequest{} }
func (*CreateBulkRequest) ProtoMessage() {}
func (*CreateBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e46e44590e72c3d0, []int{1}
}
func (m *CreateBulkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateBulkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBulkRequest.Merge(m, src)
}
func (m *CreateBulkRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBulkRequest proto.InternalMessageInfo

func (m *CreateBulkRequest) GetObjects() []*Object {
	if m != nil {
		return m.Objects
	}
	return nil
}

// CreateBulkResponse
//
// x-displayName: "Bulk Create Objects Response"
// List of objects that were successfully created
type CreateBulkResponse struct {
	// created
	//
	// x-displayName: "Created Objects"
	// List of dos_mitigation objects that were created
	Created []*schema.ObjectRefType `protobuf:"bytes,1,rep,name=created,proto3" json:"created,omitempty"`
	// rebuilt
	//
	// x-displayName: "Rebuilt ACLs for Virtual Hosts"
	// List of virtual_host objects for which ACLs were rebuilt
	Rebuilt []*schema.ObjectRefType `protobuf:"bytes,2,rep,name=rebuilt,proto3" json:"rebuilt,omitempty"`
	// not_created
	//
	// x-displayName: "Failed to Create"
	// List of dos_mitigation object that failed to be created, with the error reason
	NotCreated []*FailedOperation `protobuf:"bytes,3,rep,name=not_created,json=notCreated,proto3" json:"not_created,omitempty"`
	// rebuild_errors
	//
	// x-displayName: "Failed to Rebuild"
	// List of virtual_host object for which ACLs weren't successfully rebuilt, with the error reason
	RebuildErrors []*FailedOperation `protobuf:"bytes,4,rep,name=rebuild_errors,json=rebuildErrors,proto3" json:"rebuild_errors,omitempty"`
}

func (m *CreateBulkResponse) Reset()      { *m = CreateBulkResponse{} }
func (*CreateBulkResponse) ProtoMessage() {}
func (*CreateBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e46e44590e72c3d0, []int{2}
}
func (m *CreateBulkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateBulkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBulkResponse.Merge(m, src)
}
func (m *CreateBulkResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBulkResponse proto.InternalMessageInfo

func (m *CreateBulkResponse) GetCreated() []*schema.ObjectRefType {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CreateBulkResponse) GetRebuilt() []*schema.ObjectRefType {
	if m != nil {
		return m.Rebuilt
	}
	return nil
}

func (m *CreateBulkResponse) GetNotCreated() []*FailedOperation {
	if m != nil {
		return m.NotCreated
	}
	return nil
}

func (m *CreateBulkResponse) GetRebuildErrors() []*FailedOperation {
	if m != nil {
		return m.RebuildErrors
	}
	return nil
}

// DeleteBulkRequest
//
// x-displayName: "Bulk Delete Objects"
// Delete multiple dos_mitigation objects in bulk and rebuild ACLs only once for every virtual host
type DeleteBulkRequest struct {
	// objects
	//
	// x-displayName: "Objects to delete"
	// List of dos_mitigation object to delete (either by UID or tenant/ns/name)
	Objects []*schema.ObjectRefType `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (m *DeleteBulkRequest) Reset()      { *m = DeleteBulkRequest{} }
func (*DeleteBulkRequest) ProtoMessage() {}
func (*DeleteBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e46e44590e72c3d0, []int{3}
}
func (m *DeleteBulkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteBulkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBulkRequest.Merge(m, src)
}
func (m *DeleteBulkRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBulkRequest proto.InternalMessageInfo

func (m *DeleteBulkRequest) GetObjects() []*schema.ObjectRefType {
	if m != nil {
		return m.Objects
	}
	return nil
}

// DeleteBulkResponse
//
// x-displayName: "Bulk Delete Objects Response"
type DeleteBulkResponse struct {
	// deleted
	//
	// x-displayName: "Deleted Objects"
	// List of dos_mitigation object that were deleted
	Deleted []*schema.ObjectRefType `protobuf:"bytes,1,rep,name=deleted,proto3" json:"deleted,omitempty"`
	// rebuilt
	//
	// x-displayName: "Rebuilt ACLs for Virtual Hosts"
	// List of virtual_host objects for which ACLs were rebuilt
	Rebuilt []*schema.ObjectRefType `protobuf:"bytes,2,rep,name=rebuilt,proto3" json:"rebuilt,omitempty"`
	// not_deleted
	//
	// x-displayName: "Failed to Delete"
	// List of dos_mitigation object that failed to be deleted, with the error reason
	NotDeleted []*FailedOperation `protobuf:"bytes,3,rep,name=not_deleted,json=notDeleted,proto3" json:"not_deleted,omitempty"`
	// rebuild_errors
	//
	// x-displayName: "Failed to Rebuild"
	// List of virtual_host object for which ACLs weren't successfully rebuilt, with the error reason
	RebuildErrors []*FailedOperation `protobuf:"bytes,4,rep,name=rebuild_errors,json=rebuildErrors,proto3" json:"rebuild_errors,omitempty"`
}

func (m *DeleteBulkResponse) Reset()      { *m = DeleteBulkResponse{} }
func (*DeleteBulkResponse) ProtoMessage() {}
func (*DeleteBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e46e44590e72c3d0, []int{4}
}
func (m *DeleteBulkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteBulkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBulkResponse.Merge(m, src)
}
func (m *DeleteBulkResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBulkResponse proto.InternalMessageInfo

func (m *DeleteBulkResponse) GetDeleted() []*schema.ObjectRefType {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *DeleteBulkResponse) GetRebuilt() []*schema.ObjectRefType {
	if m != nil {
		return m.Rebuilt
	}
	return nil
}

func (m *DeleteBulkResponse) GetNotDeleted() []*FailedOperation {
	if m != nil {
		return m.NotDeleted
	}
	return nil
}

func (m *DeleteBulkResponse) GetRebuildErrors() []*FailedOperation {
	if m != nil {
		return m.RebuildErrors
	}
	return nil
}

func init() {
	proto.RegisterType((*FailedOperation)(nil), "ves.io.schema.dos_mitigation.FailedOperation")
	golang_proto.RegisterType((*FailedOperation)(nil), "ves.io.schema.dos_mitigation.FailedOperation")
	proto.RegisterType((*CreateBulkRequest)(nil), "ves.io.schema.dos_mitigation.CreateBulkRequest")
	golang_proto.RegisterType((*CreateBulkRequest)(nil), "ves.io.schema.dos_mitigation.CreateBulkRequest")
	proto.RegisterType((*CreateBulkResponse)(nil), "ves.io.schema.dos_mitigation.CreateBulkResponse")
	golang_proto.RegisterType((*CreateBulkResponse)(nil), "ves.io.schema.dos_mitigation.CreateBulkResponse")
	proto.RegisterType((*DeleteBulkRequest)(nil), "ves.io.schema.dos_mitigation.DeleteBulkRequest")
	golang_proto.RegisterType((*DeleteBulkRequest)(nil), "ves.io.schema.dos_mitigation.DeleteBulkRequest")
	proto.RegisterType((*DeleteBulkResponse)(nil), "ves.io.schema.dos_mitigation.DeleteBulkResponse")
	golang_proto.RegisterType((*DeleteBulkResponse)(nil), "ves.io.schema.dos_mitigation.DeleteBulkResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/dos_mitigation/private_customapi.proto", fileDescriptor_e46e44590e72c3d0)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/dos_mitigation/private_customapi.proto", fileDescriptor_e46e44590e72c3d0)
}

var fileDescriptor_e46e44590e72c3d0 = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x41, 0x4f, 0xd4, 0x4e,
	0x14, 0xdf, 0x59, 0xf8, 0x43, 0xfe, 0x43, 0xd4, 0xd0, 0x98, 0xb8, 0xae, 0x64, 0x42, 0xaa, 0x07,
	0xd4, 0x6c, 0xc7, 0x20, 0x72, 0xf0, 0x26, 0xa0, 0x89, 0x31, 0x0a, 0x69, 0x38, 0x28, 0x89, 0xd9,
	0xb4, 0xdd, 0x47, 0x19, 0x69, 0x3b, 0xe3, 0xcc, 0x74, 0x95, 0x83, 0x89, 0xf1, 0x6c, 0x8c, 0x89,
	0xf1, 0xe6, 0x07, 0x30, 0x7e, 0x05, 0x2e, 0x1c, 0x3d, 0x12, 0xbd, 0x70, 0x94, 0xae, 0x07, 0x8e,
	0x7c, 0x04, 0xe3, 0xb4, 0x0b, 0xbb, 0x60, 0x96, 0xcd, 0x12, 0x6e, 0x9d, 0x79, 0xef, 0xf7, 0x7b,
	0xef, 0xfd, 0xde, 0xeb, 0x1b, 0x3c, 0xd3, 0x04, 0xe5, 0x30, 0x4e, 0x55, 0xb0, 0x06, 0xb1, 0x47,
	0x1b, 0x5c, 0xd5, 0x63, 0xa6, 0x59, 0xe8, 0x69, 0xc6, 0x13, 0x2a, 0x24, 0x6b, 0x7a, 0x1a, 0xea,
	0x41, 0xaa, 0x34, 0x8f, 0x3d, 0xc1, 0x1c, 0x21, 0xb9, 0xe6, 0xd6, 0x44, 0x8e, 0x72, 0x72, 0x94,
	0xd3, 0x8d, 0xaa, 0xd6, 0x42, 0xa6, 0xd7, 0x52, 0xdf, 0x09, 0x78, 0x4c, 0x43, 0x1e, 0x72, 0x6a,
	0x40, 0x7e, 0xba, 0x6a, 0x4e, 0xe6, 0x60, 0xbe, 0x72, 0xb2, 0xea, 0x44, 0xc8, 0x79, 0x18, 0x01,
	0xf5, 0x04, 0xa3, 0x5e, 0x92, 0x70, 0x6d, 0x58, 0x54, 0x61, 0xbd, 0xde, 0x33, 0x41, 0xee, 0xbf,
	0x80, 0x40, 0x17, 0xae, 0x57, 0xba, 0x5d, 0xb9, 0xe8, 0xe4, 0xb9, 0xdc, 0x6d, 0xd4, 0x1b, 0x02,
	0x0a, 0x93, 0xfd, 0x1c, 0x5f, 0x78, 0xe0, 0xb1, 0x08, 0x1a, 0x8b, 0x02, 0xa4, 0xe1, 0xb5, 0x66,
	0xf0, 0x48, 0x4e, 0x5d, 0x41, 0x93, 0x68, 0x6a, 0x6c, 0x7a, 0xc2, 0xe9, 0xae, 0x78, 0xd1, 0x18,
	0x5d, 0x58, 0x5d, 0xde, 0x10, 0xe0, 0x16, 0xbe, 0xd6, 0x45, 0xfc, 0x1f, 0x48, 0xc9, 0x65, 0xa5,
	0x3c, 0x89, 0xa6, 0xfe, 0x77, 0xf3, 0x83, 0xfd, 0x14, 0x8f, 0xcf, 0x4b, 0xf0, 0x34, 0xcc, 0xa5,
	0xd1, 0xba, 0x0b, 0x2f, 0x53, 0x50, 0xda, 0x9a, 0xc7, 0xa3, 0x39, 0x48, 0x55, 0xd0, 0xe4, 0xd0,
	0xd4, 0xd8, 0xf4, 0x35, 0xa7, 0x97, 0xa6, 0x45, 0xc0, 0xb9, 0xa1, 0xad, 0x37, 0xc8, 0x6d, 0x23,
	0xed, 0x6f, 0x65, 0x6c, 0x75, 0x52, 0x2b, 0xc1, 0x13, 0x05, 0xd6, 0x2c, 0x1e, 0x0d, 0xcc, 0x6d,
	0xa3, 0xe0, 0xee, 0x9d, 0x7d, 0xdb, 0xf9, 0x2f, 0x4e, 0x82, 0x9f, 0xb2, 0x48, 0x57, 0xca, 0xfd,
	0xe0, 0x0a, 0x67, 0xeb, 0x09, 0x1e, 0x4b, 0xb8, 0xae, 0xb7, 0x63, 0x0e, 0x19, 0x6c, 0xad, 0x77,
	0x3d, 0x47, 0x04, 0x77, 0x71, 0xc2, 0xf5, 0x7c, 0x91, 0xc7, 0x32, 0x3e, 0x9f, 0x53, 0x37, 0xea,
	0x46, 0x41, 0x55, 0x19, 0x1e, 0x84, 0xf2, 0x5c, 0x41, 0x72, 0xdf, 0x70, 0xd8, 0x8f, 0xf0, 0xf8,
	0x02, 0x44, 0xd0, 0xdd, 0x86, 0xd9, 0xa3, 0x6d, 0x38, 0xa1, 0xe4, 0x4e, 0xe5, 0x3b, 0xd9, 0x0e,
	0x95, 0x6f, 0x98, 0xdb, 0x3e, 0x95, 0x2f, 0x9c, 0x4f, 0xab, 0x7c, 0x3b, 0xe6, 0xc0, 0xca, 0x2f,
	0x14, 0x79, 0x9c, 0x89, 0xf2, 0xd3, 0x7b, 0xc3, 0xf8, 0xd2, 0x52, 0xbe, 0x49, 0x16, 0xb8, 0x7a,
	0x7c, 0x80, 0xbb, 0xb7, 0xf4, 0xd0, 0xfa, 0x50, 0xc6, 0xf8, 0x70, 0x84, 0x2d, 0xda, 0x3b, 0xd0,
	0xb1, 0xff, 0xa8, 0x7a, 0xab, 0x7f, 0x40, 0xde, 0x23, 0xfb, 0x0b, 0x7a, 0xf7, 0xf3, 0xf7, 0xa7,
	0xf2, 0x67, 0x64, 0xdf, 0x69, 0xef, 0x37, 0x9a, 0x78, 0x31, 0x28, 0xe1, 0x05, 0xa0, 0xa8, 0xda,
	0x50, 0x1a, 0xe2, 0xa3, 0x7b, 0xc6, 0x4f, 0xa3, 0x75, 0x9a, 0x0f, 0xf8, 0x5d, 0x74, 0x63, 0xe5,
	0x99, 0xbd, 0x4c, 0xbb, 0xe2, 0x52, 0x96, 0x68, 0xc9, 0x95, 0x80, 0x40, 0xd3, 0x57, 0x92, 0x69,
	0x18, 0x94, 0xda, 0x08, 0x72, 0x38, 0x59, 0x27, 0x09, 0x72, 0x6c, 0xa2, 0x4f, 0x12, 0xe4, 0xf8,
	0xd0, 0x9e, 0x42, 0x90, 0x7c, 0xee, 0xce, 0x44, 0x90, 0x03, 0xea, 0xea, 0xcd, 0xad, 0x4d, 0x34,
	0xfc, 0x63, 0x13, 0x5d, 0xed, 0x67, 0x3f, 0xbe, 0x47, 0xdb, 0xbb, 0xa4, 0xb4, 0xb3, 0x4b, 0x4a,
	0xfb, 0xbb, 0x04, 0xbd, 0xcd, 0x08, 0xfa, 0x9a, 0x11, 0xf4, 0x3d, 0x23, 0x68, 0x3b, 0x23, 0xe8,
	0x57, 0x46, 0xd0, 0x5e, 0x46, 0x4a, 0xfb, 0x19, 0x41, 0x1f, 0x5b, 0xa4, 0xb4, 0xd5, 0x22, 0x68,
	0xbb, 0x45, 0x4a, 0x3b, 0x2d, 0x52, 0x5a, 0x71, 0x43, 0x2e, 0xd6, 0x43, 0xa7, 0xc9, 0x23, 0x0d,
	0x52, 0x7a, 0x4e, 0xaa, 0xa8, 0xf9, 0x58, 0xe5, 0x32, 0xae, 0x09, 0xc9, 0x9b, 0xac, 0x01, 0xb2,
	0xd6, 0x36, 0x53, 0xe1, 0x87, 0x9c, 0xc2, 0x6b, 0x5d, 0x94, 0xfb, 0xcf, 0xe7, 0xc9, 0x1f, 0x31,
	0x0f, 0xcc, 0xed, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xfa, 0x07, 0xb7, 0x66, 0x07, 0x00,
	0x00,
}

func (this *FailedOperation) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FailedOperation)
	if !ok {
		that2, ok := that.(FailedOperation)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Object.Equal(that1.Object) {
		return false
	}
	if this.Error != that1.Error {
		return false
	}
	return true
}
func (this *CreateBulkRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateBulkRequest)
	if !ok {
		that2, ok := that.(CreateBulkRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Objects) != len(that1.Objects) {
		return false
	}
	for i := range this.Objects {
		if !this.Objects[i].Equal(that1.Objects[i]) {
			return false
		}
	}
	return true
}
func (this *CreateBulkResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateBulkResponse)
	if !ok {
		that2, ok := that.(CreateBulkResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Created) != len(that1.Created) {
		return false
	}
	for i := range this.Created {
		if !this.Created[i].Equal(that1.Created[i]) {
			return false
		}
	}
	if len(this.Rebuilt) != len(that1.Rebuilt) {
		return false
	}
	for i := range this.Rebuilt {
		if !this.Rebuilt[i].Equal(that1.Rebuilt[i]) {
			return false
		}
	}
	if len(this.NotCreated) != len(that1.NotCreated) {
		return false
	}
	for i := range this.NotCreated {
		if !this.NotCreated[i].Equal(that1.NotCreated[i]) {
			return false
		}
	}
	if len(this.RebuildErrors) != len(that1.RebuildErrors) {
		return false
	}
	for i := range this.RebuildErrors {
		if !this.RebuildErrors[i].Equal(that1.RebuildErrors[i]) {
			return false
		}
	}
	return true
}
func (this *DeleteBulkRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteBulkRequest)
	if !ok {
		that2, ok := that.(DeleteBulkRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Objects) != len(that1.Objects) {
		return false
	}
	for i := range this.Objects {
		if !this.Objects[i].Equal(that1.Objects[i]) {
			return false
		}
	}
	return true
}
func (this *DeleteBulkResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteBulkResponse)
	if !ok {
		that2, ok := that.(DeleteBulkResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Deleted) != len(that1.Deleted) {
		return false
	}
	for i := range this.Deleted {
		if !this.Deleted[i].Equal(that1.Deleted[i]) {
			return false
		}
	}
	if len(this.Rebuilt) != len(that1.Rebuilt) {
		return false
	}
	for i := range this.Rebuilt {
		if !this.Rebuilt[i].Equal(that1.Rebuilt[i]) {
			return false
		}
	}
	if len(this.NotDeleted) != len(that1.NotDeleted) {
		return false
	}
	for i := range this.NotDeleted {
		if !this.NotDeleted[i].Equal(that1.NotDeleted[i]) {
			return false
		}
	}
	if len(this.RebuildErrors) != len(that1.RebuildErrors) {
		return false
	}
	for i := range this.RebuildErrors {
		if !this.RebuildErrors[i].Equal(that1.RebuildErrors[i]) {
			return false
		}
	}
	return true
}
func (this *FailedOperation) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&dos_mitigation.FailedOperation{")
	if this.Object != nil {
		s = append(s, "Object: "+fmt.Sprintf("%#v", this.Object)+",\n")
	}
	s = append(s, "Error: "+fmt.Sprintf("%#v", this.Error)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateBulkRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&dos_mitigation.CreateBulkRequest{")
	if this.Objects != nil {
		s = append(s, "Objects: "+fmt.Sprintf("%#v", this.Objects)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateBulkResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&dos_mitigation.CreateBulkResponse{")
	if this.Created != nil {
		s = append(s, "Created: "+fmt.Sprintf("%#v", this.Created)+",\n")
	}
	if this.Rebuilt != nil {
		s = append(s, "Rebuilt: "+fmt.Sprintf("%#v", this.Rebuilt)+",\n")
	}
	if this.NotCreated != nil {
		s = append(s, "NotCreated: "+fmt.Sprintf("%#v", this.NotCreated)+",\n")
	}
	if this.RebuildErrors != nil {
		s = append(s, "RebuildErrors: "+fmt.Sprintf("%#v", this.RebuildErrors)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteBulkRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&dos_mitigation.DeleteBulkRequest{")
	if this.Objects != nil {
		s = append(s, "Objects: "+fmt.Sprintf("%#v", this.Objects)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteBulkResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&dos_mitigation.DeleteBulkResponse{")
	if this.Deleted != nil {
		s = append(s, "Deleted: "+fmt.Sprintf("%#v", this.Deleted)+",\n")
	}
	if this.Rebuilt != nil {
		s = append(s, "Rebuilt: "+fmt.Sprintf("%#v", this.Rebuilt)+",\n")
	}
	if this.NotDeleted != nil {
		s = append(s, "NotDeleted: "+fmt.Sprintf("%#v", this.NotDeleted)+",\n")
	}
	if this.RebuildErrors != nil {
		s = append(s, "RebuildErrors: "+fmt.Sprintf("%#v", this.RebuildErrors)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPrivateCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrivateDosMitigationAPIClient is the client API for PrivateDosMitigationAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrivateDosMitigationAPIClient interface {
	// CreateBulk
	//
	// x-displayName: "Bulk Create Objects"
	// Create multiple dos_mitigation objects in bulk
	CreateBulk(ctx context.Context, in *CreateBulkRequest, opts ...grpc.CallOption) (*CreateBulkResponse, error)
	// DeleteBulk
	//
	// x-displayName: "Bulk Delete Objects"
	// Delete multiple dos_mitigation objects in bulk
	DeleteBulk(ctx context.Context, in *DeleteBulkRequest, opts ...grpc.CallOption) (*DeleteBulkResponse, error)
}

type privateDosMitigationAPIClient struct {
	cc *grpc.ClientConn
}

func NewPrivateDosMitigationAPIClient(cc *grpc.ClientConn) PrivateDosMitigationAPIClient {
	return &privateDosMitigationAPIClient{cc}
}

func (c *privateDosMitigationAPIClient) CreateBulk(ctx context.Context, in *CreateBulkRequest, opts ...grpc.CallOption) (*CreateBulkResponse, error) {
	out := new(CreateBulkResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.dos_mitigation.PrivateDosMitigationAPI/CreateBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privateDosMitigationAPIClient) DeleteBulk(ctx context.Context, in *DeleteBulkRequest, opts ...grpc.CallOption) (*DeleteBulkResponse, error) {
	out := new(DeleteBulkResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.dos_mitigation.PrivateDosMitigationAPI/DeleteBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivateDosMitigationAPIServer is the server API for PrivateDosMitigationAPI service.
type PrivateDosMitigationAPIServer interface {
	// CreateBulk
	//
	// x-displayName: "Bulk Create Objects"
	// Create multiple dos_mitigation objects in bulk
	CreateBulk(context.Context, *CreateBulkRequest) (*CreateBulkResponse, error)
	// DeleteBulk
	//
	// x-displayName: "Bulk Delete Objects"
	// Delete multiple dos_mitigation objects in bulk
	DeleteBulk(context.Context, *DeleteBulkRequest) (*DeleteBulkResponse, error)
}

// UnimplementedPrivateDosMitigationAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPrivateDosMitigationAPIServer struct {
}

func (*UnimplementedPrivateDosMitigationAPIServer) CreateBulk(ctx context.Context, req *CreateBulkRequest) (*CreateBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBulk not implemented")
}
func (*UnimplementedPrivateDosMitigationAPIServer) DeleteBulk(ctx context.Context, req *DeleteBulkRequest) (*DeleteBulkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBulk not implemented")
}

func RegisterPrivateDosMitigationAPIServer(s *grpc.Server, srv PrivateDosMitigationAPIServer) {
	s.RegisterService(&_PrivateDosMitigationAPI_serviceDesc, srv)
}

func _PrivateDosMitigationAPI_CreateBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateDosMitigationAPIServer).CreateBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.dos_mitigation.PrivateDosMitigationAPI/CreateBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateDosMitigationAPIServer).CreateBulk(ctx, req.(*CreateBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrivateDosMitigationAPI_DeleteBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateDosMitigationAPIServer).DeleteBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.dos_mitigation.PrivateDosMitigationAPI/DeleteBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateDosMitigationAPIServer).DeleteBulk(ctx, req.(*DeleteBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrivateDosMitigationAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.dos_mitigation.PrivateDosMitigationAPI",
	HandlerType: (*PrivateDosMitigationAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBulk",
			Handler:    _PrivateDosMitigationAPI_CreateBulk_Handler,
		},
		{
			MethodName: "DeleteBulk",
			Handler:    _PrivateDosMitigationAPI_DeleteBulk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/dos_mitigation/private_customapi.proto",
}

func (m *FailedOperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FailedOperation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FailedOperation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0x12
	}
	if m.Object != nil {
		{
			size, err := m.Object.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateBulkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateBulkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateBulkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for iNdEx := len(m.Objects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Objects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateBulkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateBulkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateBulkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RebuildErrors) > 0 {
		for iNdEx := len(m.RebuildErrors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RebuildErrors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.NotCreated) > 0 {
		for iNdEx := len(m.NotCreated) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NotCreated[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Rebuilt) > 0 {
		for iNdEx := len(m.Rebuilt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rebuilt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Created) > 0 {
		for iNdEx := len(m.Created) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Created[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeleteBulkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteBulkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteBulkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for iNdEx := len(m.Objects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Objects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeleteBulkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteBulkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteBulkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RebuildErrors) > 0 {
		for iNdEx := len(m.RebuildErrors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RebuildErrors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.NotDeleted) > 0 {
		for iNdEx := len(m.NotDeleted) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NotDeleted[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Rebuilt) > 0 {
		for iNdEx := len(m.Rebuilt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rebuilt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Deleted) > 0 {
		for iNdEx := len(m.Deleted) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Deleted[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPrivateCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintPrivateCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPrivateCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FailedOperation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Object != nil {
		l = m.Object.Size()
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *CreateBulkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for _, e := range m.Objects {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	return n
}

func (m *CreateBulkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Created) > 0 {
		for _, e := range m.Created {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.Rebuilt) > 0 {
		for _, e := range m.Rebuilt {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.NotCreated) > 0 {
		for _, e := range m.NotCreated {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.RebuildErrors) > 0 {
		for _, e := range m.RebuildErrors {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	return n
}

func (m *DeleteBulkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Objects) > 0 {
		for _, e := range m.Objects {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	return n
}

func (m *DeleteBulkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Deleted) > 0 {
		for _, e := range m.Deleted {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.Rebuilt) > 0 {
		for _, e := range m.Rebuilt {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.NotDeleted) > 0 {
		for _, e := range m.NotDeleted {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.RebuildErrors) > 0 {
		for _, e := range m.RebuildErrors {
			l = e.Size()
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	return n
}

func sovPrivateCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPrivateCustomapi(x uint64) (n int) {
	return sovPrivateCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *FailedOperation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&FailedOperation{`,
		`Object:` + strings.Replace(fmt.Sprintf("%v", this.Object), "ObjectRefType", "schema.ObjectRefType", 1) + `,`,
		`Error:` + fmt.Sprintf("%v", this.Error) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateBulkRequest) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForObjects := "[]*Object{"
	for _, f := range this.Objects {
		repeatedStringForObjects += strings.Replace(fmt.Sprintf("%v", f), "Object", "Object", 1) + ","
	}
	repeatedStringForObjects += "}"
	s := strings.Join([]string{`&CreateBulkRequest{`,
		`Objects:` + repeatedStringForObjects + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateBulkResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForCreated := "[]*ObjectRefType{"
	for _, f := range this.Created {
		repeatedStringForCreated += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForCreated += "}"
	repeatedStringForRebuilt := "[]*ObjectRefType{"
	for _, f := range this.Rebuilt {
		repeatedStringForRebuilt += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForRebuilt += "}"
	repeatedStringForNotCreated := "[]*FailedOperation{"
	for _, f := range this.NotCreated {
		repeatedStringForNotCreated += strings.Replace(f.String(), "FailedOperation", "FailedOperation", 1) + ","
	}
	repeatedStringForNotCreated += "}"
	repeatedStringForRebuildErrors := "[]*FailedOperation{"
	for _, f := range this.RebuildErrors {
		repeatedStringForRebuildErrors += strings.Replace(f.String(), "FailedOperation", "FailedOperation", 1) + ","
	}
	repeatedStringForRebuildErrors += "}"
	s := strings.Join([]string{`&CreateBulkResponse{`,
		`Created:` + repeatedStringForCreated + `,`,
		`Rebuilt:` + repeatedStringForRebuilt + `,`,
		`NotCreated:` + repeatedStringForNotCreated + `,`,
		`RebuildErrors:` + repeatedStringForRebuildErrors + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteBulkRequest) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForObjects := "[]*ObjectRefType{"
	for _, f := range this.Objects {
		repeatedStringForObjects += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForObjects += "}"
	s := strings.Join([]string{`&DeleteBulkRequest{`,
		`Objects:` + repeatedStringForObjects + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteBulkResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForDeleted := "[]*ObjectRefType{"
	for _, f := range this.Deleted {
		repeatedStringForDeleted += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForDeleted += "}"
	repeatedStringForRebuilt := "[]*ObjectRefType{"
	for _, f := range this.Rebuilt {
		repeatedStringForRebuilt += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForRebuilt += "}"
	repeatedStringForNotDeleted := "[]*FailedOperation{"
	for _, f := range this.NotDeleted {
		repeatedStringForNotDeleted += strings.Replace(f.String(), "FailedOperation", "FailedOperation", 1) + ","
	}
	repeatedStringForNotDeleted += "}"
	repeatedStringForRebuildErrors := "[]*FailedOperation{"
	for _, f := range this.RebuildErrors {
		repeatedStringForRebuildErrors += strings.Replace(f.String(), "FailedOperation", "FailedOperation", 1) + ","
	}
	repeatedStringForRebuildErrors += "}"
	s := strings.Join([]string{`&DeleteBulkResponse{`,
		`Deleted:` + repeatedStringForDeleted + `,`,
		`Rebuilt:` + repeatedStringForRebuilt + `,`,
		`NotDeleted:` + repeatedStringForNotDeleted + `,`,
		`RebuildErrors:` + repeatedStringForRebuildErrors + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPrivateCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *FailedOperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FailedOperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FailedOperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Object", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Object == nil {
				m.Object = &schema.ObjectRefType{}
			}
			if err := m.Object.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateBulkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateBulkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateBulkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objects = append(m.Objects, &Object{})
			if err := m.Objects[len(m.Objects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateBulkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateBulkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateBulkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Created = append(m.Created, &schema.ObjectRefType{})
			if err := m.Created[len(m.Created)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rebuilt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rebuilt = append(m.Rebuilt, &schema.ObjectRefType{})
			if err := m.Rebuilt[len(m.Rebuilt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotCreated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotCreated = append(m.NotCreated, &FailedOperation{})
			if err := m.NotCreated[len(m.NotCreated)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RebuildErrors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RebuildErrors = append(m.RebuildErrors, &FailedOperation{})
			if err := m.RebuildErrors[len(m.RebuildErrors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteBulkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteBulkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteBulkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objects = append(m.Objects, &schema.ObjectRefType{})
			if err := m.Objects[len(m.Objects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteBulkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteBulkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteBulkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deleted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deleted = append(m.Deleted, &schema.ObjectRefType{})
			if err := m.Deleted[len(m.Deleted)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rebuilt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rebuilt = append(m.Rebuilt, &schema.ObjectRefType{})
			if err := m.Rebuilt[len(m.Rebuilt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotDeleted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotDeleted = append(m.NotDeleted, &FailedOperation{})
			if err := m.NotDeleted[len(m.NotDeleted)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RebuildErrors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RebuildErrors = append(m.RebuildErrors, &FailedOperation{})
			if err := m.RebuildErrors[len(m.RebuildErrors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPrivateCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPrivateCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPrivateCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPrivateCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPrivateCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPrivateCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPrivateCustomapi = fmt.Errorf("proto: unexpected end of group")
)

// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package cloud_connect

import (
	"bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create CustomAPI GRPC Client satisfying server.CustomClient
type CustomAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient CustomAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *CustomAPIGrpcClient) doRPCGetMetrics(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.GetMetricsRequest", yamlReq)
	}
	rsp, err := c.grpcClient.GetMetrics(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListMetrics(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.ListMetricsRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListMetrics(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListSegmentMetrics(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListSegmentMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.ListSegmentMetricsRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListSegmentMetrics(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCTopCloudConnect(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &TopCloudConnectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.TopCloudConnectRequest", yamlReq)
	}
	rsp, err := c.grpcClient.TopCloudConnect(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewCustomAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &CustomAPIGrpcClient{
		conn:       cc,
		grpcClient: NewCustomAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["GetMetrics"] = ccl.doRPCGetMetrics

	rpcFns["ListMetrics"] = ccl.doRPCListMetrics

	rpcFns["ListSegmentMetrics"] = ccl.doRPCListSegmentMetrics

	rpcFns["TopCloudConnect"] = ccl.doRPCTopCloudConnect

	ccl.rpcFns = rpcFns

	return ccl
}

// Create CustomAPI REST Client satisfying server.CustomClient
type CustomAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *CustomAPIRestClient) doRPCGetMetrics(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.GetMetricsRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("end_time", fmt.Sprintf("%v", req.EndTime))
		for _, item := range req.FieldSelector {
			q.Add("field_selector", fmt.Sprintf("%v", item))
		}
		q.Add("is_trend_request", fmt.Sprintf("%v", req.IsTrendRequest))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("start_time", fmt.Sprintf("%v", req.StartTime))
		q.Add("step", fmt.Sprintf("%v", req.Step))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetMetricsResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.cloud_connect.GetMetricsResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListMetrics(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.ListMetricsRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.FieldSelector {
			q.Add("field_selector", fmt.Sprintf("%v", item))
		}
		for _, item := range req.LabelFilter {
			q.Add("label_filter", fmt.Sprintf("%v", item))
		}

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListMetricsResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.cloud_connect.ListMetricsResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListSegmentMetrics(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListSegmentMetricsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.ListSegmentMetricsRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("end_time", fmt.Sprintf("%v", req.EndTime))
		for _, item := range req.FieldSelector {
			q.Add("field_selector", fmt.Sprintf("%v", item))
		}
		q.Add("is_trend_request", fmt.Sprintf("%v", req.IsTrendRequest))
		for _, item := range req.LabelFilter {
			q.Add("label_filter", fmt.Sprintf("%v", item))
		}
		q.Add("start_time", fmt.Sprintf("%v", req.StartTime))
		q.Add("step", fmt.Sprintf("%v", req.Step))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListSegmentMetricsResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.cloud_connect.ListSegmentMetricsResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCTopCloudConnect(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &TopCloudConnectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.cloud_connect.TopCloudConnectRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("end_time", fmt.Sprintf("%v", req.EndTime))
		for _, item := range req.FieldSelector {
			q.Add("field_selector", fmt.Sprintf("%v", item))
		}
		q.Add("filter", fmt.Sprintf("%v", req.Filter))
		q.Add("limit", fmt.Sprintf("%v", req.Limit))
		q.Add("start_time", fmt.Sprintf("%v", req.StartTime))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &TopCloudConnectResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.cloud_connect.TopCloudConnectResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewCustomAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &CustomAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["GetMetrics"] = ccl.doRPCGetMetrics

	rpcFns["ListMetrics"] = ccl.doRPCListMetrics

	rpcFns["ListSegmentMetrics"] = ccl.doRPCListSegmentMetrics

	rpcFns["TopCloudConnect"] = ccl.doRPCTopCloudConnect

	ccl.rpcFns = rpcFns

	return ccl
}

// Create customAPIInprocClient

// INPROC Client (satisfying CustomAPIClient interface)
type customAPIInprocClient struct {
	CustomAPIServer
}

func (c *customAPIInprocClient) GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.cloud_connect.CustomAPI.GetMetrics")
	return c.CustomAPIServer.GetMetrics(ctx, in)
}
func (c *customAPIInprocClient) ListMetrics(ctx context.Context, in *ListMetricsRequest, opts ...grpc.CallOption) (*ListMetricsResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.cloud_connect.CustomAPI.ListMetrics")
	return c.CustomAPIServer.ListMetrics(ctx, in)
}
func (c *customAPIInprocClient) ListSegmentMetrics(ctx context.Context, in *ListSegmentMetricsRequest, opts ...grpc.CallOption) (*ListSegmentMetricsResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.cloud_connect.CustomAPI.ListSegmentMetrics")
	return c.CustomAPIServer.ListSegmentMetrics(ctx, in)
}
func (c *customAPIInprocClient) TopCloudConnect(ctx context.Context, in *TopCloudConnectRequest, opts ...grpc.CallOption) (*TopCloudConnectResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.cloud_connect.CustomAPI.TopCloudConnect")
	return c.CustomAPIServer.TopCloudConnect(ctx, in)
}

func NewCustomAPIInprocClient(svc svcfw.Service) CustomAPIClient {
	return &customAPIInprocClient{CustomAPIServer: NewCustomAPIServer(svc)}
}

// RegisterGwCustomAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwCustomAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterCustomAPIHandlerClient(ctx, mux, NewCustomAPIInprocClient(s))
}

// Create customAPISrv

// SERVER (satisfying CustomAPIServer interface)
type customAPISrv struct {
	svc svcfw.Service
}

func (s *customAPISrv) GetMetrics(ctx context.Context, in *GetMetricsRequest) (*GetMetricsResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.cloud_connect.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *GetMetricsResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.GetMetricsRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.GetMetrics' operation on 'cloud_connect'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.cloud_connect.CustomAPI.GetMetrics"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetMetrics(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.GetMetricsResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListMetrics(ctx context.Context, in *ListMetricsRequest) (*ListMetricsResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.cloud_connect.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListMetricsResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.ListMetricsRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListMetrics' operation on 'cloud_connect'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.cloud_connect.CustomAPI.ListMetrics"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListMetrics(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.ListMetricsResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListSegmentMetrics(ctx context.Context, in *ListSegmentMetricsRequest) (*ListSegmentMetricsResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.cloud_connect.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListSegmentMetricsResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.ListSegmentMetricsRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListSegmentMetrics' operation on 'cloud_connect'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.cloud_connect.CustomAPI.ListSegmentMetrics"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListSegmentMetrics(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.ListSegmentMetricsResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) TopCloudConnect(ctx context.Context, in *TopCloudConnectRequest) (*TopCloudConnectResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.cloud_connect.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *TopCloudConnectResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.TopCloudConnectRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.TopCloudConnect' operation on 'cloud_connect'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.cloud_connect.CustomAPI.TopCloudConnect"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.TopCloudConnect(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.cloud_connect.TopCloudConnectResponse", rsp)...)

	return rsp, nil
}

func NewCustomAPIServer(svc svcfw.Service) CustomAPIServer {
	return &customAPISrv{svc: svc}
}

var CustomAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Cloud Connect",
        "description": "Cloud Connect APIs are used to get the data for cloud connect for all customer edges.\nResponse includes in/out throughput metrics for all the tenant's Cloud Connect Sites\nIt is always scoped by system namespace.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/system/cloud_connects/metrics": {
            "post": {
                "summary": "All Cloud Connect Metrics",
                "description": "Cloud Connect APIs are used to get the data for cloud connect.",
                "operationId": "ves.io.schema.cloud_connect.CustomAPI.ListMetrics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloud_connectListMetricsResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud_connectListMetricsRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-cloud_connect-customapi-listmetrics"
                },
                "x-ves-proto-rpc": "ves.io.schema.cloud_connect.CustomAPI.ListMetrics"
            },
            "x-displayname": "Cloud Connect",
            "x-ves-proto-service": "ves.io.schema.cloud_connect.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/system/cloud_connects/segment_metrics": {
            "post": {
                "summary": "All Cloud Connect Segment Metrics",
                "description": "Cloud Connect APIs are used to get the segment data for cloud connect.",
                "operationId": "ves.io.schema.cloud_connect.CustomAPI.ListSegmentMetrics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloud_connectListSegmentMetricsResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud_connectListSegmentMetricsRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-cloud_connect-customapi-listsegmentmetrics"
                },
                "x-ves-proto-rpc": "ves.io.schema.cloud_connect.CustomAPI.ListSegmentMetrics"
            },
            "x-displayname": "Cloud Connect",
            "x-ves-proto-service": "ves.io.schema.cloud_connect.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/system/cloud_connects/{name}/metrics": {
            "post": {
                "summary": "Cloud Connect Metrics",
                "description": "Cloud Connect Metrics queries metrics for a specified cloud connect.",
                "operationId": "ves.io.schema.cloud_connect.CustomAPI.GetMetrics",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloud_connectGetMetricsResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "Name\n\nx-required\nx-example: \"cloud_connect-1\"\nCloud Connect name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud_connectGetMetricsRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-cloud_connect-customapi-getmetrics"
                },
                "x-ves-proto-rpc": "ves.io.schema.cloud_connect.CustomAPI.GetMetrics"
            },
            "x-displayname": "Cloud Connect",
            "x-ves-proto-service": "ves.io.schema.cloud_connect.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/system/top/cloud_connects": {
            "post": {
                "summary": "Top Cloud Connnect",
                "description": "Request to get top cloud connect from the AWS Cloudwatch metrics",
                "operationId": "ves.io.schema.cloud_connect.CustomAPI.TopCloudConnect",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/cloud_connectTopCloudConnectResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cloud_connectTopCloudConnectRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-cloud_connect-customapi-topcloudconnect"
                },
                "x-ves-proto-rpc": "ves.io.schema.cloud_connect.CustomAPI.TopCloudConnect"
            },
            "x-displayname": "Cloud Connect",
            "x-ves-proto-service": "ves.io.schema.cloud_connect.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "cloud_connectCloudConnectData": {
            "type": "object",
            "description": "CloudConnectData wraps all the response data for a cloud connect.",
            "title": "Cloud Connect Data",
            "x-displayname": "Cloud Connect Data",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.CloudConnectData",
            "properties": {
                "data": {
                    "type": "array",
                    "description": " metric values",
                    "title": "Data",
                    "items": {
                        "$ref": "#/definitions/cloud_connectMetricData"
                    },
                    "x-displayname": "Data"
                },
                "labels": {
                    "type": "object",
                    "description": " Labels contains the name/value pair.\n \"name\" is the label defined in Labels",
                    "title": "Labels",
                    "x-displayname": "Labels"
                }
            }
        },
        "cloud_connectCustomerEdge": {
            "type": "object",
            "description": "Customer Edge uniquely identifies customer edge i.e. site.",
            "title": "Customer Edge",
            "x-displayname": "Customer Edge",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.CustomerEdge",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " Name of the customer edge\n\nExample: - \"Customer Edge 1\"-",
                    "title": "Customer Edge",
                    "x-displayname": "Customer Edge",
                    "x-ves-example": "Customer Edge 1"
                }
            }
        },
        "cloud_connectEdgeData": {
            "type": "object",
            "description": "EdgeData wraps all the response data for a customer edge.",
            "title": "Cloud Connect Edge Data",
            "x-displayname": "Cloud Connect Edge Data",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.EdgeData",
            "properties": {
                "ce": {
                    "description": " Identifier for the customer edge",
                    "title": "CE",
                    "$ref": "#/definitions/cloud_connectCustomerEdge",
                    "x-displayname": "CE"
                },
                "segments": {
                    "type": "array",
                    "description": " Metric data for the segments",
                    "title": "Metric",
                    "items": {
                        "$ref": "#/definitions/cloud_connectSegmentationData"
                    },
                    "x-displayname": "Metric"
                }
            }
        },
        "cloud_connectFieldData": {
            "type": "object",
            "description": "Field Data contains key/value pairs that uniquely identifies the group_by labels specified in the request.",
            "title": "Field Data",
            "x-displayname": "Field Data",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.FieldData",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": " Labels contains the name/value pair.\n \"name\" is the label defined in Labels",
                    "title": "Labels",
                    "x-displayname": "Labels"
                },
                "value": {
                    "type": "array",
                    "description": " List of metric values.",
                    "title": "Value",
                    "items": {
                        "$ref": "#/definitions/schemaMetricValue"
                    },
                    "x-displayname": "Value"
                }
            }
        },
        "cloud_connectFieldSelector": {
            "type": "string",
            "description": "FieldSelector specifies the metrics that can be queried for cloud connect.\n\nIndicates field not being set\nx-unit: \"bytes per second (bps)\"\nThroughput of incoming traffic\nx-unit: \"bytes per second (bps)\"\nThroughput of outgoing traffic\nx-unit: \"bytes per second (bps)\"\nThroughput of outgoing traffic",
            "title": "Cloud Connect Metric Type",
            "enum": [
                "METRIC_TYPE_NONE",
                "METRIC_TYPE_IN_BYTES",
                "METRIC_TYPE_OUT_BYTES",
                "METRIC_TYPE_TOTAL_BYTES"
            ],
            "default": "METRIC_TYPE_NONE",
            "x-displayname": "Cloud Connect Metric Type",
            "x-ves-proto-enum": "ves.io.schema.cloud_connect.FieldSelector"
        },
        "cloud_connectGetMetricsRequest": {
            "type": "object",
            "description": "Request to get cloud connect data",
            "title": "Get Metrics Request",
            "x-displayname": "Get Metrics Request",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.GetMetricsRequest",
            "properties": {
                "end_time": {
                    "type": "string",
                    "description": "\n end time of metric collection from which data will be considered to fetch cloud connect data.\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the end_time will be evaluated to start_time+10m\n           If start_time is not specified, then the end_time will be evaluated to \u003ccurrent time\u003e\n\nExample: - \"2019-09-24T12:30:11.733Z\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "end_time",
                    "x-displayname": "End Time",
                    "x-ves-example": "2019-09-24T12:30:11.733Z",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                },
                "field_selector": {
                    "type": "array",
                    "description": "\n Select fields to be returned in the response.\n field_selector is used to specify the fields to be returned in the response, thereby limiting the\n amount of data returned in the response.\n\n Note: Selecting many/all fields may impact the query latency.\n\n Optional: If not specified, only the following fields are returned in the response.\n METRIC_TYPE_IN_BYTES, METRIC_TYPE_OUT_BYTES\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.enum.defined_only: true\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "field_selector",
                    "items": {
                        "$ref": "#/definitions/cloud_connectFieldSelector"
                    },
                    "x-displayname": "Field Selector",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.enum.defined_only": "true",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "is_trend_request": {
                    "type": "boolean",
                    "description": " Trend value computation requested by the user\n Optional: default is false\n\nExample: - \"true\"-",
                    "format": "boolean",
                    "x-displayname": "Trend calculation requested by the user",
                    "x-ves-example": "true"
                },
                "name": {
                    "type": "string",
                    "description": " Cloud Connect name\n\nExample: - \"cloud_connect-1\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Name",
                    "x-displayname": "Name",
                    "x-ves-example": "cloud_connect-1",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "start_time": {
                    "type": "string",
                    "description": "\n start time of metric collection from which data will be considered to fetch cloud connect data.\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the start_time will be evaluated to end_time-10m\n           If end_time is not specified, then the start_time will be evaluated to \u003ccurrent time\u003e-10m\n\nExample: - \"2019-09-23T12:30:11.733Z\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "start_time",
                    "x-displayname": "Start Time",
                    "x-ves-example": "2019-09-23T12:30:11.733Z",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                },
                "step": {
                    "type": "string",
                    "description": "\n step is the resolution width, which determines the number of the data points [x-axis (time)] to be returned in the response.\n The timestamps in the response will be t1=start_time, t2=t1+step, ... tn=tn-1+step, where tn \u003c= end_time.\n Format: [0-9][smhd], where s - seconds, m - minutes, h - hours, d - days\n\n Optional: If not specified, then step size is evaluated to \u003cend_time - start_time\u003e\n\nExample: - \"5m\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_step: true\n",
                    "title": "step",
                    "x-displayname": "Step",
                    "x-ves-example": "5m",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_step": "true"
                    }
                }
            }
        },
        "cloud_connectGetMetricsResponse": {
            "type": "object",
            "description": "Get Metrics Response",
            "title": "Get Metrics Response",
            "x-displayname": "Get Metrics Response",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.GetMetricsResponse",
            "properties": {
                "data": {
                    "type": "array",
                    "description": " Metric data specified for the cloud connect",
                    "title": "Data",
                    "items": {
                        "$ref": "#/definitions/cloud_connectMetricData"
                    },
                    "x-displayname": "Data"
                },
                "step": {
                    "type": "string",
                    "description": " Actual step size used in the response. It could be higher than the requested step due to metric rollups and the query duration.\n Format: [0-9][smhd], where s - seconds, m - minutes, h - hours, d - days\n\nExample: - \"30m\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.time_interval: true\n",
                    "title": "step",
                    "x-displayname": "Step",
                    "x-ves-example": "30m",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.time_interval": "true"
                    }
                }
            }
        },
        "cloud_connectLabelFilter": {
            "type": "object",
            "description": "Metrics used in the cloud connect are tagged with labels listed in the enum Label.\nLabel Filter is used to filter the timeseries that match the specified label key/value\nand the operator.",
            "title": "Label Filter",
            "x-displayname": "Label Filter",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.LabelFilter",
            "properties": {
                "label": {
                    "description": " Label name",
                    "title": "Label",
                    "$ref": "#/definitions/schemacloud_connectLabel",
                    "x-displayname": "Label"
                },
                "op": {
                    "description": " Operator to be applied on the label",
                    "title": "Operator",
                    "$ref": "#/definitions/schemaMetricLabelOp",
                    "x-displayname": "Operator"
                },
                "value": {
                    "type": "string",
                    "description": " Value of the label\n\nExample: - \"ce01\"-",
                    "title": "Value",
                    "x-displayname": "Value",
                    "x-ves-example": "ce01"
                }
            }
        },
        "cloud_connectListMetricsRequest": {
            "type": "object",
            "description": "cloud_connect API is used to get the in/out throughput\nfor the tenant's customer edges.",
            "title": "List metrics Request",
            "x-displayname": "List Metrics Request",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.ListMetricsRequest",
            "properties": {
                "field_selector": {
                    "type": "array",
                    "description": "\n Select fields to be returned in the response.\n field_selector is used to specify the fields to be returned in the response, thereby limiting the\n amount of data returned in the response.\n\n Note: Selecting many/all fields may impact the query latency.\n\n Optional: If not specified, only the following fields are returned in the response.\n METRIC_TYPE_IN_BYTES, METRIC_TYPE_OUT_BYTES\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.enum.defined_only: true\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "field_selector",
                    "items": {
                        "$ref": "#/definitions/cloud_connectFieldSelector"
                    },
                    "x-displayname": "Field Selector",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.enum.defined_only": "true",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "label_filter": {
                    "type": "array",
                    "description": "\n List of label filter expressions of the form \"label key\" QueryOp \"value\".\n Response will only contain data that matches all the conditions specified in the label_filter.\n\n Optional: If not specified, cloud connect data for all sites will be returned in the response.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 100\n",
                    "title": "label_filter",
                    "maxItems": 100,
                    "items": {
                        "$ref": "#/definitions/cloud_connectLabelFilter"
                    },
                    "x-displayname": "Label Filter",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "100"
                    }
                }
            }
        },
        "cloud_connectListMetricsResponse": {
            "type": "object",
            "description": "Response for cloud connect API contains list of customer edges \u0026 cloud connects associated with the customer edge.\nEach cloud connect contains throughput data for a given cloud connect.",
            "title": "List Metrics Response",
            "x-displayname": "List Metrics Response",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.ListMetricsResponse",
            "properties": {
                "cloud_connect": {
                    "type": "array",
                    "description": " Metric data specified for the cloud connect",
                    "title": "Cloud Connect",
                    "items": {
                        "$ref": "#/definitions/cloud_connectCloudConnectData"
                    },
                    "x-displayname": "Cloud Connect"
                }
            }
        },
        "cloud_connectListSegmentMetricsRequest": {
            "type": "object",
            "description": "cloud_connect API is used to get the in/out throughput\nfor the tenant's customer edges.",
            "title": "List Segment metrics Request",
            "x-displayname": "List Metrics Request",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.ListSegmentMetricsRequest",
            "properties": {
                "end_time": {
                    "type": "string",
                    "description": "\n end time of metric collection from which data will be considered to fetch cloud connect data.\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the end_time will be evaluated to start_time+10m\n           If start_time is not specified, then the end_time will be evaluated to \u003ccurrent time\u003e\n\nExample: - \"2019-09-24T12:30:11.733Z\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "end_time",
                    "x-displayname": "End Time",
                    "x-ves-example": "2019-09-24T12:30:11.733Z",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                },
                "field_selector": {
                    "type": "array",
                    "description": "\n Select fields to be returned in the response.\n field_selector is used to specify the fields to be returned in the response, thereby limiting the\n amount of data returned in the response.\n\n Note: Selecting many/all fields may impact the query latency.\n\n Optional: If not specified, only the following fields are returned in the response.\n METRIC_TYPE_IN_BYTES, METRIC_TYPE_OUT_BYTES\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.enum.defined_only: true\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "field_selector",
                    "items": {
                        "$ref": "#/definitions/cloud_connectFieldSelector"
                    },
                    "x-displayname": "Field Selector",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.enum.defined_only": "true",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "is_trend_request": {
                    "type": "boolean",
                    "description": " Trend value computation requested by the user\n Optional: default is false\n\nExample: - \"true\"-",
                    "format": "boolean",
                    "x-displayname": "Trend calculation requested by the user",
                    "x-ves-example": "true"
                },
                "label_filter": {
                    "type": "array",
                    "description": "\n List of label filter expressions of the form \"label key\" QueryOp \"value\".\n Response will only contain data that matches all the conditions specified in the label_filter.\n\n Optional: If not specified, cloud connect data for all sites will be returned in the response.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 100\n",
                    "title": "label_filter",
                    "maxItems": 100,
                    "items": {
                        "$ref": "#/definitions/cloud_connectLabelFilter"
                    },
                    "x-displayname": "Label Filter",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "100"
                    }
                },
                "start_time": {
                    "type": "string",
                    "description": "\n start time of metric collection from which data will be considered to fetch cloud connect data.\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the start_time will be evaluated to end_time-10m\n           If end_time is not specified, then the start_time will be evaluated to \u003ccurrent time\u003e-10m\n\nExample: - \"2019-09-23T12:30:11.733Z\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "start_time",
                    "x-displayname": "Start Time",
                    "x-ves-example": "2019-09-23T12:30:11.733Z",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                },
                "step": {
                    "type": "string",
                    "description": "\n step is the resolution width, which determines the number of the data points [x-axis (time)] to be returned in the response.\n The timestamps in the response will be t1=start_time, t2=t1+step, ... tn=tn-1+step, where tn \u003c= end_time.\n Format: [0-9][smhd], where s - seconds, m - minutes, h - hours, d - days\n\n Optional: If not specified, then step size is evaluated to \u003cend_time - start_time\u003e\n\nExample: - \"5m\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_step: true\n",
                    "title": "step",
                    "x-displayname": "Step",
                    "x-ves-example": "5m",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_step": "true"
                    }
                }
            }
        },
        "cloud_connectListSegmentMetricsResponse": {
            "type": "object",
            "description": "Response for cloud connect API contains list of customer edges \u0026 cloud connects associated with the customer edge.\nEach cloud connect contains throughput data for a given cloud connect.",
            "title": "List Segment Metrics Response",
            "x-displayname": "List Metrics Response",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.ListSegmentMetricsResponse",
            "properties": {
                "edges": {
                    "type": "array",
                    "description": " Cloud connect data for list of customer edges owned by a tenant.",
                    "title": "Customer Edges",
                    "items": {
                        "$ref": "#/definitions/cloud_connectEdgeData"
                    },
                    "x-displayname": "Customer Edges"
                },
                "segment": {
                    "type": "array",
                    "description": "metric data for the given metric.",
                    "items": {
                        "$ref": "#/definitions/cloud_connectSegmentationData"
                    }
                },
                "step": {
                    "type": "string",
                    "description": " Actual step size used in the response. It could be higher than the requested step due to metric rollups and the query duration.\n Format: [0-9][smhd], where s - seconds, m - minutes, h - hours, d - days\n\nExample: - \"30m\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.time_interval: true\n",
                    "title": "step",
                    "x-displayname": "Step",
                    "x-ves-example": "30m",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.time_interval": "true"
                    }
                }
            }
        },
        "cloud_connectMetricData": {
            "type": "object",
            "description": "MetricData contains metric type and the corresponding value for a cloud connect",
            "title": "Metric Data",
            "x-displayname": "Metric Data",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.MetricData",
            "properties": {
                "type": {
                    "description": " Identifies the metric type",
                    "title": "Type",
                    "$ref": "#/definitions/cloud_connectFieldSelector",
                    "x-displayname": "Type"
                },
                "unit": {
                    "description": " Unit for the metric value",
                    "title": "Unit",
                    "$ref": "#/definitions/schemaUnitType",
                    "x-displayname": "Unit"
                },
                "values": {
                    "type": "array",
                    "description": " List of metric values. May contain more than one value if timeseries data is requested.",
                    "title": "Value",
                    "items": {
                        "$ref": "#/definitions/schemaMetricValue"
                    },
                    "x-displayname": "Value"
                }
            }
        },
        "cloud_connectSegmentationData": {
            "type": "object",
            "description": "SegmentationData contains metric type and the corresponding value for a cloud connect",
            "title": "Cloud Connect Segmentation Data",
            "x-displayname": "Cloud Connect Segmentation Data",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.SegmentationData",
            "properties": {
                "data": {
                    "type": "array",
                    "description": " List of metric values. May contain more than one value if timeseries data is requested.",
                    "title": "Data",
                    "items": {
                        "$ref": "#/definitions/cloud_connectMetricData"
                    },
                    "x-displayname": "Data"
                },
                "type": {
                    "description": " Identifies the segment type",
                    "title": "Type",
                    "$ref": "#/definitions/cloud_connectTrafficType",
                    "x-displayname": "Type"
                }
            }
        },
        "cloud_connectTopCloudConnectData": {
            "type": "object",
            "description": "TopCloudConnectData wraps all the response data",
            "title": "TopCloudConnectData",
            "x-displayname": "TopCloudConnectData",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.TopCloudConnectData",
            "properties": {
                "data": {
                    "type": "array",
                    "description": " Flows data",
                    "title": "Data",
                    "items": {
                        "$ref": "#/definitions/cloud_connectFieldData"
                    },
                    "x-displayname": "Data"
                },
                "type": {
                    "description": " Type of data returned",
                    "title": "Type",
                    "$ref": "#/definitions/cloud_connectFieldSelector",
                    "x-displayname": "Type"
                }
            }
        },
        "cloud_connectTopCloudConnectRequest": {
            "type": "object",
            "title": "Top Cloud Connect Request",
            "x-displayname": "Top Cloud Connect Request",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.TopCloudConnectRequest",
            "properties": {
                "end_time": {
                    "type": "string",
                    "description": " end time of flow collection\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the end_time will be evaluated to start_time+10m\n           If start_time is not specified, then the end_time will be evaluated to \u003ccurrent time\u003e\n\nExample: - \"1570197600\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "End time",
                    "x-displayname": "End Time",
                    "x-ves-example": "1570197600",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                },
                "field_selector": {
                    "type": "array",
                    "description": " Metric fields to be returned in the response. If no metric fields are specified in the request,\n then the response will not contain any metric data.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.enum.defined_only: true\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Metric Selector",
                    "items": {
                        "$ref": "#/definitions/cloud_connectFieldSelector"
                    },
                    "x-displayname": "Metric Selector",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.enum.defined_only": "true",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "filter": {
                    "type": "string",
                    "description": " x-example: \"{CUSTOMER_EDGE IN (\"\\site-1\",\\\"site-2\\\")}\"\n filter is used to specify the list of matchers\n syntax for filter := {[\u003cmatcher\u003e]}\n \u003cmatcher\u003e := \u003clabel\u003e\u003coperator\u003e\"\u003cvalue\u003e\"\n   \u003clabel\u003e := string\n     One or more labels defined in Label can be specified in the filter.\n   \u003cvalue\u003e := string\n   \u003coperator\u003e := [\"=\"|\"!=\"]\n     =  : equal to\n     != : not equal to\n\n Optional: If not specified, counter will be aggregated based on the group_by labels.\n\nExample: - \"{CUSTOMER_EDGE=\\\"site-1\\\"}\"-",
                    "title": "Label Filter",
                    "x-displayname": "Filter",
                    "x-ves-example": "{CUSTOMER_EDGE=\\\"site-1\\\"}"
                },
                "limit": {
                    "type": "integer",
                    "description": " Limits the number of results\n Default 20000\n\nExample: - \"5\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 100\n",
                    "title": "Limit",
                    "format": "int64",
                    "x-displayname": "Limit",
                    "x-ves-example": "5",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "100"
                    }
                },
                "start_time": {
                    "type": "string",
                    "description": " start time of flow collection\n Format: unix_timestamp|rfc 3339\n\n Optional: If not specified, then the start_time will be evaluated to end_time-10m\n           If end_time is not specified, then the start_time will be evaluated to \u003ccurrent time\u003e-10m\n\nExample: - \"1570194000\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.query_time: true\n",
                    "title": "Start time",
                    "x-displayname": "Start Time",
                    "x-ves-example": "1570194000",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.query_time": "true"
                    }
                }
            }
        },
        "cloud_connectTopCloudConnectResponse": {
            "type": "object",
            "title": "Top Cloud Connect Response",
            "x-displayname": "Top Cloud Connect Response",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.TopCloudConnectResponse",
            "properties": {
                "data": {
                    "type": "array",
                    "description": " CloudConnectData wraps the response for the top cloud connect request.",
                    "title": "CloudConnectData",
                    "items": {
                        "$ref": "#/definitions/cloud_connectTopCloudConnectData"
                    },
                    "x-displayname": "CloudConnectData"
                }
            }
        },
        "cloud_connectTrafficType": {
            "type": "string",
            "description": "TrafficType specifies the type of traffic.\n\nIntersegment traffic\nIntrasegment traffic\nInternet traffic",
            "title": "Traffic Type",
            "enum": [
                "TRAFFIC_TYPE_NONE",
                "TRAFFIC_TYPE_INTER_SEGMENT",
                "TRAFFIC_TYPE_INTRA_SEGMENT",
                "TRAFFIC_TYPE_INTERNET"
            ],
            "default": "TRAFFIC_TYPE_NONE",
            "x-displayname": "Traffic Type",
            "x-ves-proto-enum": "ves.io.schema.cloud_connect.TrafficType"
        },
        "schemaMetricLabelOp": {
            "type": "string",
            "description": "The operator to use when filtering metrics based on label values.\n",
            "title": "Metric Label Operator",
            "enum": [
                "EQ",
                "NEQ"
            ],
            "default": "EQ",
            "x-displayname": "Metric Label Operator",
            "x-ves-proto-enum": "ves.io.schema.MetricLabelOp"
        },
        "schemaMetricValue": {
            "type": "object",
            "description": "Metric data contains timestamp and the value.",
            "title": "Metric Value",
            "x-displayname": "Metric Value",
            "x-ves-proto-message": "ves.io.schema.MetricValue",
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": " timestamp\n\nExample: - \"1570007981\"-",
                    "title": "Timestamp",
                    "format": "double",
                    "x-displayname": "Timestamp",
                    "x-ves-example": "1570007981"
                },
                "trend_value": {
                    "description": " trend value for the metric\n\nExample: - \"100.000000\"-",
                    "title": "Trend value",
                    "$ref": "#/definitions/schemaTrendValue",
                    "x-displayname": "Trend Value",
                    "x-ves-example": "100.000000"
                },
                "value": {
                    "type": "string",
                    "description": "\n\nExample: - \"15\"-",
                    "title": "Value",
                    "x-displayname": "Value",
                    "x-ves-example": "15"
                }
            }
        },
        "schemaTrendSentiment": {
            "type": "string",
            "description": "trend sentiment\n\nIndicates trend sentiment is positive\nIndicates trend sentiment is negative.",
            "title": "Trend Sentiment",
            "enum": [
                "TREND_SENTIMENT_NONE",
                "TREND_SENTIMENT_POSITIVE",
                "TREND_SENTIMENT_NEGATIVE"
            ],
            "default": "TREND_SENTIMENT_NONE",
            "x-displayname": "Trend Sentiment",
            "x-ves-proto-enum": "ves.io.schema.TrendSentiment"
        },
        "schemaTrendValue": {
            "type": "object",
            "description": "Trend value contains trend value, trend sentiment and trend calculation description and window size.",
            "title": "Trend Value",
            "x-displayname": "Trend Value",
            "x-ves-proto-message": "ves.io.schema.TrendValue",
            "properties": {
                "description": {
                    "type": "string",
                    "description": " description of the method used to calculate trend.\n\nExample: - \"Trend was calculated by comparing the avg of window size intervals of end-start Time and last window time interval\"-",
                    "title": "Description",
                    "x-displayname": "Description",
                    "x-ves-example": "Trend was calculated by comparing the avg of window size intervals of end-start Time and last window time interval"
                },
                "previous_value": {
                    "type": "string",
                    "description": "\n\nExample: - \"200.00\"-",
                    "title": "Previous Value",
                    "x-displayname": "Previous Value",
                    "x-ves-example": "200.00"
                },
                "sentiment": {
                    "description": "\n\nExample: - \"Positive\"-",
                    "title": "Sentiment",
                    "$ref": "#/definitions/schemaTrendSentiment",
                    "x-displayname": "Sentiment",
                    "x-ves-example": "Positive"
                },
                "value": {
                    "type": "string",
                    "description": "\n\nExample: - \"-15\"-",
                    "title": "Value",
                    "x-displayname": "Value",
                    "x-ves-example": "-15"
                }
            }
        },
        "schemaUnitType": {
            "type": "string",
            "description": "UnitType is enumeration of units for scalar fields",
            "title": "UnitType",
            "enum": [
                "UNIT_MILLISECONDS",
                "UNIT_SECONDS",
                "UNIT_MINUTES",
                "UNIT_HOURS",
                "UNIT_DAYS",
                "UNIT_BYTES",
                "UNIT_KBYTES",
                "UNIT_MBYTES",
                "UNIT_GBYTES",
                "UNIT_TBYTES",
                "UNIT_KIBIBYTES",
                "UNIT_MIBIBYTES",
                "UNIT_GIBIBYTES",
                "UNIT_TEBIBYTES",
                "UNIT_BITS_PER_SECOND",
                "UNIT_BYTES_PER_SECOND",
                "UNIT_KBITS_PER_SECOND",
                "UNIT_KBYTES_PER_SECOND",
                "UNIT_MBITS_PER_SECOND",
                "UNIT_MBYTES_PER_SECOND",
                "UNIT_CONNECTIONS_PER_SECOND",
                "UNIT_ERRORS_PER_SECOND",
                "UNIT_PACKETS_PER_SECOND",
                "UNIT_REQUESTS_PER_SECOND",
                "UNIT_PACKETS",
                "UNIT_PERCENTAGE",
                "UNIT_COUNT"
            ],
            "default": "UNIT_MILLISECONDS",
            "x-displayname": "Unit",
            "x-ves-proto-enum": "ves.io.schema.UnitType"
        },
        "schemacloud_connectLabel": {
            "type": "string",
            "description": "Metrics used to construct the cloud connect dara are tagged with these labels and therefore\nthe metrics can be sliced and diced based on one or more labels.\n\nIndicates the field not being set\nIdentifies a customer edge\nIdentifies a cloud connect",
            "title": "Label",
            "enum": [
                "LABEL_NONE",
                "LABEL_CUSTOMER_EDGE",
                "LABEL_CLOUD_CONNECT"
            ],
            "default": "LABEL_NONE",
            "x-displayname": "Label",
            "x-ves-proto-enum": "ves.io.schema.cloud_connect.Label"
        }
    },
    "x-displayname": "Cloud Connect",
    "x-ves-proto-file": "ves.io/schema/cloud_connect/public_customapi.proto"
}`

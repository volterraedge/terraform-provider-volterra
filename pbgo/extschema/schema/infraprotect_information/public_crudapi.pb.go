// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/infraprotect_information/public_crudapi.proto

// Information
//
// x-displayName: "Infraprotect Information"
// Infraprotect information about the current organisation

package infraprotect_information

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GetResponseFormatCode
//
// x-displayName: "Get Response Format"
// This is the various forms that can be requested to be sent in the GetResponse
type GetResponseFormatCode int32

const (
	// x-displayName: "Default Format"
	// Default format of returned resource
	GET_RSP_FORMAT_DEFAULT GetResponseFormatCode = 0
	// x-displayName: "Status format"
	// Response should be in StatusObject(s) format
	GET_RSP_FORMAT_STATUS GetResponseFormatCode = 3
	// x-displayName: "GetSpecType format"
	// Response should be in format of GetSpecType
	GET_RSP_FORMAT_READ GetResponseFormatCode = 4
	// x-displayName: "Referring Objects"
	// Response should have other objects referring to this object
	GET_RSP_FORMAT_REFERRING_OBJECTS GetResponseFormatCode = 5
	// x-displayName: "Broken Referred Objects"
	// Response should have deleted and disabled objects referrred by this object
	GET_RSP_FORMAT_BROKEN_REFERENCES GetResponseFormatCode = 6
)

var GetResponseFormatCode_name = map[int32]string{
	0: "GET_RSP_FORMAT_DEFAULT",
	3: "GET_RSP_FORMAT_STATUS",
	4: "GET_RSP_FORMAT_READ",
	5: "GET_RSP_FORMAT_REFERRING_OBJECTS",
	6: "GET_RSP_FORMAT_BROKEN_REFERENCES",
}

var GetResponseFormatCode_value = map[string]int32{
	"GET_RSP_FORMAT_DEFAULT":           0,
	"GET_RSP_FORMAT_STATUS":            3,
	"GET_RSP_FORMAT_READ":              4,
	"GET_RSP_FORMAT_REFERRING_OBJECTS": 5,
	"GET_RSP_FORMAT_BROKEN_REFERENCES": 6,
}

func (GetResponseFormatCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dce1eab5350b50d, []int{0}
}

// GetRequest is used to get different forms of a infraprotect_information
//
// x-displayName: "Get Request"
// This is the input message of the 'Get' RPC. Different forms of a resource
// for e.g. a ReplaceRequest form (for editing), a CreateRequest form (for
// creating new instance of infraprotect_information) etc. can be fetched
type GetRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "ns1"
	// The namespace in which the configuration object is present
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// name
	//
	// x-displayName: "Name"
	// x-example: "name"
	// The name of the configuration object to be fetched
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// response_format
	//
	// x-displayName: "Response Format"
	// The format in which the configuration object is to be fetched. This could be for example
	//     - in GetSpec form for the contents of object
	//     - in CreateRequest form to create a new similar object
	//     - to ReplaceRequest form to replace changeable values
	ResponseFormat GetResponseFormatCode `protobuf:"varint,3,opt,name=response_format,json=responseFormat,proto3,enum=ves.io.schema.infraprotect_information.GetResponseFormatCode" json:"response_format,omitempty"`
}

func (m *GetRequest) Reset()      { *m = GetRequest{} }
func (*GetRequest) ProtoMessage() {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dce1eab5350b50d, []int{0}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRequest) GetResponseFormat() GetResponseFormatCode {
	if m != nil {
		return m.ResponseFormat
	}
	return GET_RSP_FORMAT_DEFAULT
}

// GetResponse is the shape of a read infraprotect_information
//
// x-displayName: "Get Response"
// This is the output message of the 'Get' RPC
type GetResponse struct {
	// resource_version
	//
	// x-displayName: "Resource Version"
	// x-example: "42"
	// Version of the object
	ResourceVersion string `protobuf:"bytes,4,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	// metadata
	//
	// x-displayName: "Metadata"
	// Common attributes of the object like name, labels etc.
	Metadata *schema.ObjectGetMetaType `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// system metadata
	//
	// x-displayName: "System Metadata"
	// System generated attributes of this object.
	SystemMetadata *schema.SystemObjectGetMetaType `protobuf:"bytes,7,opt,name=system_metadata,json=systemMetadata,proto3" json:"system_metadata,omitempty"`
	// spec
	//
	// x-displayName: "Spec"
	// A specification of the configuration object read
	Spec *GetSpecType `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	// status
	//
	// x-displayName: "Status"
	// The status reported by different services for this configuration object
	Status []*StatusObject `protobuf:"bytes,20000,rep,name=status,proto3" json:"status,omitempty"`
	// referring_objects
	//
	// x-displayName: "Referring Objects"
	// The set of objects that are referring to this object in their spec
	ReferringObjects []*schema.ObjectRefType `protobuf:"bytes,8,rep,name=referring_objects,json=referringObjects,proto3" json:"referring_objects,omitempty"`
	// deleted_referred_objects
	//
	// x-displayName: "Deleted Referred Objects"
	// The set of deleted objects that are referred by this object
	DeletedReferredObjects []*schema.ObjectRefType `protobuf:"bytes,9,rep,name=deleted_referred_objects,json=deletedReferredObjects,proto3" json:"deleted_referred_objects,omitempty"`
	// disabled_referred_objects
	//
	// x-displayName: "Disabled Referred Objects"
	// The set of deleted objects that are referred by this object
	DisabledReferredObjects []*schema.ObjectRefType `protobuf:"bytes,10,rep,name=disabled_referred_objects,json=disabledReferredObjects,proto3" json:"disabled_referred_objects,omitempty"`
}

func (m *GetResponse) Reset()      { *m = GetResponse{} }
func (*GetResponse) ProtoMessage() {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dce1eab5350b50d, []int{1}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *GetResponse) GetMetadata() *schema.ObjectGetMetaType {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GetResponse) GetSystemMetadata() *schema.SystemObjectGetMetaType {
	if m != nil {
		return m.SystemMetadata
	}
	return nil
}

func (m *GetResponse) GetSpec() *GetSpecType {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *GetResponse) GetStatus() []*StatusObject {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetResponse) GetReferringObjects() []*schema.ObjectRefType {
	if m != nil {
		return m.ReferringObjects
	}
	return nil
}

func (m *GetResponse) GetDeletedReferredObjects() []*schema.ObjectRefType {
	if m != nil {
		return m.DeletedReferredObjects
	}
	return nil
}

func (m *GetResponse) GetDisabledReferredObjects() []*schema.ObjectRefType {
	if m != nil {
		return m.DisabledReferredObjects
	}
	return nil
}

func init() {
	proto.RegisterEnum("ves.io.schema.infraprotect_information.GetResponseFormatCode", GetResponseFormatCode_name, GetResponseFormatCode_value)
	golang_proto.RegisterEnum("ves.io.schema.infraprotect_information.GetResponseFormatCode", GetResponseFormatCode_name, GetResponseFormatCode_value)
	proto.RegisterType((*GetRequest)(nil), "ves.io.schema.infraprotect_information.GetRequest")
	golang_proto.RegisterType((*GetRequest)(nil), "ves.io.schema.infraprotect_information.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "ves.io.schema.infraprotect_information.GetResponse")
	golang_proto.RegisterType((*GetResponse)(nil), "ves.io.schema.infraprotect_information.GetResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/infraprotect_information/public_crudapi.proto", fileDescriptor_7dce1eab5350b50d)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/infraprotect_information/public_crudapi.proto", fileDescriptor_7dce1eab5350b50d)
}

var fileDescriptor_7dce1eab5350b50d = []byte{
	// 921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x3d, 0xb6, 0x63, 0x92, 0x09, 0x4a, 0xcc, 0xa2, 0xb6, 0x1b, 0x13, 0xad, 0xac, 0x08,
	0x55, 0x11, 0x62, 0x77, 0x25, 0x1b, 0x2e, 0xfc, 0x28, 0xb2, 0x53, 0xc7, 0x4a, 0x21, 0x71, 0xb5,
	0x76, 0xab, 0x0a, 0x90, 0x56, 0xe3, 0xdd, 0xe7, 0xed, 0x82, 0xbd, 0xb3, 0xcc, 0xcc, 0x9a, 0x46,
	0x28, 0x12, 0xea, 0x91, 0x13, 0x12, 0xb7, 0x96, 0x03, 0x27, 0x84, 0xb8, 0x72, 0x41, 0xf2, 0x25,
	0x37, 0xaa, 0x1e, 0x50, 0x04, 0x97, 0x1c, 0x89, 0xc3, 0xa1, 0xc7, 0xfe, 0x09, 0xc8, 0xb3, 0x6b,
	0x13, 0x3b, 0xa9, 0xea, 0xf6, 0xb4, 0x6f, 0xe6, 0xfb, 0xbe, 0x9f, 0x7d, 0x6f, 0x77, 0x7e, 0xe0,
	0xf7, 0xfb, 0xc0, 0x0d, 0x9f, 0x9a, 0xdc, 0xb9, 0x0b, 0x3d, 0x62, 0xfa, 0x41, 0x87, 0x91, 0x90,
	0x51, 0x01, 0x8e, 0xb0, 0xfd, 0xa0, 0x43, 0x59, 0x8f, 0x08, 0x9f, 0x06, 0x66, 0x18, 0xb5, 0xbb,
	0xbe, 0x63, 0x3b, 0x2c, 0x72, 0x49, 0xe8, 0x1b, 0xa3, 0x14, 0xaa, 0x5c, 0x8d, 0xcd, 0x46, 0x6c,
	0x36, 0x9e, 0x65, 0x2e, 0xe8, 0x9e, 0x2f, 0xee, 0x46, 0x6d, 0xc3, 0xa1, 0x3d, 0xd3, 0xa3, 0x1e,
	0x35, 0xa5, 0xbd, 0x1d, 0x75, 0xe4, 0x48, 0x0e, 0x64, 0x14, 0x63, 0x0b, 0xeb, 0x1e, 0xa5, 0x5e,
	0x17, 0x4c, 0x12, 0xfa, 0x26, 0x09, 0x02, 0x2a, 0x24, 0x85, 0x27, 0xea, 0x1b, 0x89, 0x3a, 0x61,
	0x40, 0x2f, 0x14, 0xfb, 0x89, 0x58, 0x98, 0x6e, 0x07, 0x18, 0xa3, 0x6c, 0x6c, 0x2c, 0xcf, 0xd9,
	0x2a, 0x6d, 0x7f, 0x01, 0x8e, 0x48, 0x4c, 0xa5, 0x39, 0x4d, 0x62, 0x3f, 0x84, 0x49, 0x85, 0xd3,
	0x1e, 0x1a, 0x9e, 0x2d, 0x7f, 0x6d, 0x5a, 0x3c, 0xeb, 0xdb, 0x98, 0x96, 0xfa, 0xc0, 0x21, 0xe8,
	0xcf, 0xd8, 0x8b, 0x33, 0x39, 0x3e, 0x7c, 0x6d, 0x4f, 0x65, 0x6c, 0xfc, 0x8c, 0x30, 0xae, 0x83,
	0xb0, 0xe0, 0xab, 0x08, 0xb8, 0x50, 0xd6, 0xf1, 0x52, 0x40, 0x7a, 0xc0, 0x43, 0xe2, 0x80, 0x8a,
	0x8a, 0x68, 0x73, 0xc9, 0xfa, 0x7f, 0x42, 0x51, 0x70, 0x76, 0x34, 0x50, 0xd3, 0x52, 0x90, 0xb1,
	0xd2, 0xc1, 0xab, 0x0c, 0x78, 0x48, 0x03, 0x0e, 0x76, 0xdc, 0xa0, 0x9a, 0x29, 0xa2, 0xcd, 0x95,
	0xd2, 0x87, 0xc6, 0x7c, 0xff, 0xdb, 0x90, 0xaf, 0x8f, 0x09, 0xdb, 0x72, 0x72, 0x8b, 0xba, 0x60,
	0xad, 0xb0, 0xa9, 0xb9, 0x8d, 0xef, 0x16, 0xf0, 0xf2, 0x99, 0x4c, 0xc5, 0xc4, 0x79, 0x06, 0x9c,
	0x46, 0xcc, 0x01, 0xbb, 0x0f, 0x8c, 0xfb, 0x34, 0x50, 0xb3, 0xa3, 0xba, 0xaa, 0xd9, 0x27, 0x03,
	0x84, 0xac, 0xd5, 0xb1, 0x7a, 0x3b, 0x16, 0x95, 0x0f, 0xf0, 0x62, 0x0f, 0x04, 0x71, 0x89, 0x20,
	0xea, 0x42, 0x11, 0x6d, 0x2e, 0x97, 0x8a, 0x33, 0x15, 0x36, 0xe4, 0xaf, 0xac, 0x83, 0xd8, 0x05,
	0x41, 0x5a, 0xfb, 0x21, 0x58, 0x13, 0x87, 0xd2, 0xc0, 0xab, 0x7c, 0x9f, 0x0b, 0xe8, 0xd9, 0x13,
	0xc8, 0x2b, 0x12, 0x72, 0x75, 0x06, 0xd2, 0x94, 0x59, 0xe7, 0x51, 0x2b, 0xb1, 0x7d, 0x77, 0x0c,
	0xbc, 0x83, 0xb3, 0x3c, 0x04, 0x47, 0xcd, 0x49, 0x4a, 0xf9, 0x05, 0x3e, 0x56, 0x33, 0x04, 0x67,
	0x84, 0xac, 0xae, 0x3e, 0x38, 0x78, 0x75, 0xc4, 0x30, 0x3c, 0xc7, 0x1e, 0x3d, 0x2d, 0x49, 0x54,
	0x9a, 0x38, 0xc7, 0x05, 0x11, 0x11, 0x57, 0x7f, 0xfa, 0x11, 0x15, 0x33, 0x9b, 0xcb, 0xa5, 0x77,
	0xe6, 0xa5, 0x37, 0xa5, 0x2f, 0x2e, 0xbe, 0x9a, 0x39, 0x3c, 0x40, 0x56, 0x82, 0x52, 0x76, 0xf0,
	0x6b, 0x0c, 0x3a, 0xc0, 0x98, 0x1f, 0x78, 0x76, 0xbc, 0xe6, 0xb9, 0xba, 0x28, 0xe9, 0xeb, 0x17,
	0x7e, 0x46, 0x0b, 0x3a, 0xb2, 0xef, 0xfc, 0xc4, 0x16, 0xcf, 0x73, 0xe5, 0x36, 0x56, 0x5d, 0xe8,
	0x82, 0x00, 0xd7, 0x8e, 0x35, 0x70, 0x27, 0xc4, 0xa5, 0x39, 0x88, 0x97, 0x13, 0xb7, 0x95, 0x98,
	0xc7, 0xdc, 0x3b, 0x78, 0xcd, 0xf5, 0x39, 0x69, 0x77, 0x2f, 0x02, 0xe3, 0x39, 0xc0, 0x57, 0xc6,
	0xf6, 0x19, 0xf2, 0x7b, 0x4b, 0x8f, 0xaf, 0xe5, 0xe2, 0xf8, 0x46, 0x76, 0x11, 0xe5, 0xd3, 0x6f,
	0xfd, 0x86, 0xf0, 0xa5, 0x0b, 0x97, 0xad, 0x52, 0xc0, 0x97, 0xeb, 0xb5, 0x96, 0x6d, 0x35, 0x6f,
	0xda, 0xdb, 0x0d, 0x6b, 0xb7, 0xd2, 0xb2, 0xaf, 0xd7, 0xb6, 0x2b, 0xb7, 0x3e, 0x69, 0xe5, 0x53,
	0xca, 0x1a, 0xbe, 0x34, 0xa3, 0x35, 0x5b, 0x95, 0xd6, 0xad, 0x66, 0x3e, 0xa3, 0x5c, 0xc1, 0xaf,
	0xcf, 0x48, 0x56, 0xad, 0x72, 0x3d, 0x9f, 0x55, 0xde, 0xc4, 0xc5, 0x73, 0xc2, 0x76, 0xcd, 0xb2,
	0x76, 0xf6, 0xea, 0x76, 0xa3, 0x7a, 0xa3, 0xb6, 0xd5, 0x6a, 0xe6, 0x17, 0x2e, 0xc8, 0xaa, 0x5a,
	0x8d, 0x8f, 0x6b, 0x7b, 0x71, 0x72, 0x6d, 0x6f, 0xab, 0xd6, 0xcc, 0xe7, 0x4a, 0x0f, 0x33, 0x38,
	0x53, 0xb9, 0xb9, 0xa3, 0x3c, 0x4c, 0xe3, 0x4c, 0x1d, 0x84, 0x52, 0x7a, 0xa1, 0x1d, 0x2a, 0x0f,
	0x88, 0x42, 0xf9, 0x25, 0x76, 0xf5, 0xc6, 0xaf, 0xe8, 0xd1, 0xef, 0x69, 0x34, 0xfc, 0x43, 0xfd,
	0xac, 0x0f, 0x5c, 0xf7, 0xa9, 0x2e, 0x5d, 0x5c, 0xb0, 0xc8, 0x11, 0x11, 0x03, 0x9d, 0x01, 0x71,
	0xdf, 0xee, 0xbc, 0x7b, 0xcf, 0xd1, 0x19, 0x8d, 0x04, 0xb8, 0xba, 0xeb, 0x52, 0xae, 0xb7, 0x09,
	0xf7, 0x1d, 0xbd, 0x47, 0x03, 0x5f, 0x50, 0x76, 0x5e, 0xe6, 0x82, 0x04, 0x2e, 0x61, 0xee, 0x38,
	0xe3, 0xfe, 0xdf, 0xff, 0xfe, 0x90, 0xae, 0x28, 0x1f, 0x25, 0x97, 0x8f, 0x39, 0x39, 0xb6, 0xb8,
	0xf9, 0xcd, 0x24, 0x3e, 0x78, 0xe6, 0x99, 0x9c, 0x64, 0x1d, 0x14, 0xfa, 0x87, 0x03, 0x94, 0xfe,
	0x6b, 0x80, 0xf4, 0x39, 0x1b, 0x8d, 0x17, 0xc6, 0xf1, 0x00, 0xa1, 0xe1, 0x00, 0x95, 0x5f, 0x62,
	0xa3, 0xdd, 0xff, 0x73, 0x74, 0xa0, 0x56, 0x1f, 0xa0, 0xc7, 0xd7, 0x90, 0x75, 0x74, 0xa2, 0xa5,
	0x8e, 0x4f, 0xb4, 0xd4, 0xd3, 0x13, 0x0d, 0x7d, 0x3b, 0xd4, 0xd0, 0x2f, 0x43, 0x0d, 0x3d, 0x1a,
	0x6a, 0xe8, 0x68, 0xa8, 0xa1, 0x7f, 0x86, 0x1a, 0x7a, 0x32, 0xd4, 0x52, 0x4f, 0x87, 0x1a, 0xfa,
	0xfe, 0x54, 0x4b, 0x1d, 0x9e, 0x6a, 0xe8, 0xe8, 0x54, 0x4b, 0x1d, 0x9f, 0x6a, 0xa9, 0x4f, 0x3f,
	0xf7, 0x68, 0xf8, 0xa5, 0x67, 0xf4, 0x69, 0x57, 0x00, 0x63, 0xc4, 0x88, 0xb8, 0x29, 0x83, 0xd1,
	0x3b, 0xf5, 0x90, 0xd1, 0xbe, 0xef, 0x02, 0xd3, 0xc7, 0xb2, 0x19, 0xb6, 0x3d, 0x6a, 0xc2, 0x3d,
	0x91, 0xdc, 0x0c, 0xcf, 0xb9, 0xb0, 0xda, 0x39, 0x79, 0x5b, 0x94, 0xff, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0xf9, 0x2b, 0xfc, 0xc5, 0x01, 0x08, 0x00, 0x00,
}

func (x GetResponseFormatCode) String() string {
	s, ok := GetResponseFormatCode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *GetRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRequest)
	if !ok {
		that2, ok := that.(GetRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.ResponseFormat != that1.ResponseFormat {
		return false
	}
	return true
}
func (this *GetResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetResponse)
	if !ok {
		that2, ok := that.(GetResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ResourceVersion != that1.ResourceVersion {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if !this.SystemMetadata.Equal(that1.SystemMetadata) {
		return false
	}
	if !this.Spec.Equal(that1.Spec) {
		return false
	}
	if len(this.Status) != len(that1.Status) {
		return false
	}
	for i := range this.Status {
		if !this.Status[i].Equal(that1.Status[i]) {
			return false
		}
	}
	if len(this.ReferringObjects) != len(that1.ReferringObjects) {
		return false
	}
	for i := range this.ReferringObjects {
		if !this.ReferringObjects[i].Equal(that1.ReferringObjects[i]) {
			return false
		}
	}
	if len(this.DeletedReferredObjects) != len(that1.DeletedReferredObjects) {
		return false
	}
	for i := range this.DeletedReferredObjects {
		if !this.DeletedReferredObjects[i].Equal(that1.DeletedReferredObjects[i]) {
			return false
		}
	}
	if len(this.DisabledReferredObjects) != len(that1.DisabledReferredObjects) {
		return false
	}
	for i := range this.DisabledReferredObjects {
		if !this.DisabledReferredObjects[i].Equal(that1.DisabledReferredObjects[i]) {
			return false
		}
	}
	return true
}
func (this *GetRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&infraprotect_information.GetRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "ResponseFormat: "+fmt.Sprintf("%#v", this.ResponseFormat)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&infraprotect_information.GetResponse{")
	s = append(s, "ResourceVersion: "+fmt.Sprintf("%#v", this.ResourceVersion)+",\n")
	if this.Metadata != nil {
		s = append(s, "Metadata: "+fmt.Sprintf("%#v", this.Metadata)+",\n")
	}
	if this.SystemMetadata != nil {
		s = append(s, "SystemMetadata: "+fmt.Sprintf("%#v", this.SystemMetadata)+",\n")
	}
	if this.Spec != nil {
		s = append(s, "Spec: "+fmt.Sprintf("%#v", this.Spec)+",\n")
	}
	if this.Status != nil {
		s = append(s, "Status: "+fmt.Sprintf("%#v", this.Status)+",\n")
	}
	if this.ReferringObjects != nil {
		s = append(s, "ReferringObjects: "+fmt.Sprintf("%#v", this.ReferringObjects)+",\n")
	}
	if this.DeletedReferredObjects != nil {
		s = append(s, "DeletedReferredObjects: "+fmt.Sprintf("%#v", this.DeletedReferredObjects)+",\n")
	}
	if this.DisabledReferredObjects != nil {
		s = append(s, "DisabledReferredObjects: "+fmt.Sprintf("%#v", this.DisabledReferredObjects)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCrudapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	// Get InfraProtect Information
	//
	// x-displayName: "Get Infraprotect Information"
	// Get organisation information
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.infraprotect_information.API/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	// Get InfraProtect Information
	//
	// x-displayName: "Get Infraprotect Information"
	// Get organisation information
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.infraprotect_information.API/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.infraprotect_information.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _API_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/infraprotect_information/public_crudapi.proto",
}

func (m *GetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ResponseFormat != 0 {
		i = encodeVarintPublicCrudapi(dAtA, i, uint64(m.ResponseFormat))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicCrudapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCrudapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		for iNdEx := len(m.Status) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Status[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xe2
			i--
			dAtA[i] = 0x82
		}
	}
	if len(m.DisabledReferredObjects) > 0 {
		for iNdEx := len(m.DisabledReferredObjects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DisabledReferredObjects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.DeletedReferredObjects) > 0 {
		for iNdEx := len(m.DeletedReferredObjects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DeletedReferredObjects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.ReferringObjects) > 0 {
		for iNdEx := len(m.ReferringObjects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ReferringObjects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.SystemMetadata != nil {
		{
			size, err := m.SystemMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Spec != nil {
		{
			size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicCrudapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ResourceVersion) > 0 {
		i -= len(m.ResourceVersion)
		copy(dAtA[i:], m.ResourceVersion)
		i = encodeVarintPublicCrudapi(dAtA, i, uint64(len(m.ResourceVersion)))
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}

func encodeVarintPublicCrudapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCrudapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	if m.ResponseFormat != 0 {
		n += 1 + sovPublicCrudapi(uint64(m.ResponseFormat))
	}
	return n
}

func (m *GetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceVersion)
	if l > 0 {
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	if m.Spec != nil {
		l = m.Spec.Size()
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	if m.SystemMetadata != nil {
		l = m.SystemMetadata.Size()
		n += 1 + l + sovPublicCrudapi(uint64(l))
	}
	if len(m.ReferringObjects) > 0 {
		for _, e := range m.ReferringObjects {
			l = e.Size()
			n += 1 + l + sovPublicCrudapi(uint64(l))
		}
	}
	if len(m.DeletedReferredObjects) > 0 {
		for _, e := range m.DeletedReferredObjects {
			l = e.Size()
			n += 1 + l + sovPublicCrudapi(uint64(l))
		}
	}
	if len(m.DisabledReferredObjects) > 0 {
		for _, e := range m.DisabledReferredObjects {
			l = e.Size()
			n += 1 + l + sovPublicCrudapi(uint64(l))
		}
	}
	if len(m.Status) > 0 {
		for _, e := range m.Status {
			l = e.Size()
			n += 3 + l + sovPublicCrudapi(uint64(l))
		}
	}
	return n
}

func sovPublicCrudapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCrudapi(x uint64) (n int) {
	return sovPublicCrudapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`ResponseFormat:` + fmt.Sprintf("%v", this.ResponseFormat) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForReferringObjects := "[]*ObjectRefType{"
	for _, f := range this.ReferringObjects {
		repeatedStringForReferringObjects += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForReferringObjects += "}"
	repeatedStringForDeletedReferredObjects := "[]*ObjectRefType{"
	for _, f := range this.DeletedReferredObjects {
		repeatedStringForDeletedReferredObjects += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForDeletedReferredObjects += "}"
	repeatedStringForDisabledReferredObjects := "[]*ObjectRefType{"
	for _, f := range this.DisabledReferredObjects {
		repeatedStringForDisabledReferredObjects += strings.Replace(fmt.Sprintf("%v", f), "ObjectRefType", "schema.ObjectRefType", 1) + ","
	}
	repeatedStringForDisabledReferredObjects += "}"
	repeatedStringForStatus := "[]*StatusObject{"
	for _, f := range this.Status {
		repeatedStringForStatus += strings.Replace(fmt.Sprintf("%v", f), "StatusObject", "StatusObject", 1) + ","
	}
	repeatedStringForStatus += "}"
	s := strings.Join([]string{`&GetResponse{`,
		`ResourceVersion:` + fmt.Sprintf("%v", this.ResourceVersion) + `,`,
		`Metadata:` + strings.Replace(fmt.Sprintf("%v", this.Metadata), "ObjectGetMetaType", "schema.ObjectGetMetaType", 1) + `,`,
		`Spec:` + strings.Replace(fmt.Sprintf("%v", this.Spec), "GetSpecType", "GetSpecType", 1) + `,`,
		`SystemMetadata:` + strings.Replace(fmt.Sprintf("%v", this.SystemMetadata), "SystemObjectGetMetaType", "schema.SystemObjectGetMetaType", 1) + `,`,
		`ReferringObjects:` + repeatedStringForReferringObjects + `,`,
		`DeletedReferredObjects:` + repeatedStringForDeletedReferredObjects + `,`,
		`DisabledReferredObjects:` + repeatedStringForDisabledReferredObjects + `,`,
		`Status:` + repeatedStringForStatus + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCrudapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCrudapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseFormat", wireType)
			}
			m.ResponseFormat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResponseFormat |= GetResponseFormatCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCrudapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCrudapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &schema.ObjectGetMetaType{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Spec == nil {
				m.Spec = &GetSpecType{}
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SystemMetadata == nil {
				m.SystemMetadata = &schema.SystemObjectGetMetaType{}
			}
			if err := m.SystemMetadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReferringObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReferringObjects = append(m.ReferringObjects, &schema.ObjectRefType{})
			if err := m.ReferringObjects[len(m.ReferringObjects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedReferredObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedReferredObjects = append(m.DeletedReferredObjects, &schema.ObjectRefType{})
			if err := m.DeletedReferredObjects[len(m.DeletedReferredObjects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisabledReferredObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisabledReferredObjects = append(m.DisabledReferredObjects, &schema.ObjectRefType{})
			if err := m.DisabledReferredObjects[len(m.DisabledReferredObjects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = append(m.Status, &StatusObject{})
			if err := m.Status[len(m.Status)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCrudapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCrudapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCrudapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCrudapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCrudapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCrudapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCrudapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCrudapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCrudapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCrudapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCrudapi = fmt.Errorf("proto: unexpected end of group")
)

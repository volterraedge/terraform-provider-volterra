// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/uztna/views/uztna_application_view/private_customapi.proto

// Onboarded Application Object
//
// x-displayName: "Onboarded Application"
//
// Applications are services that run within your organization,
// and end users are granted access to them after the ZTNA Access Policy
// is successfully evaluated. Access to these applications is subject to user authorization.
// This section allows you to onboard your private applications to the ZTNA platform.

package uztna_application_view

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Request to Configure Extended Tags
//
// x-displayName: "Request to Configure Extended Tags"
// Request to Configure Extended Tags from application group
type SetExtendedTagsRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "default"
	// Namespace for the object to be configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Extended Tags of Application
	//
	// x-displayName: "Extended Tags of Application"
	// x-example: "["HR","Eng"]"
	// Extended Tags of Application from application group
	ExtendedTags []string `protobuf:"bytes,2,rep,name=extended_tags,json=extendedTags,proto3" json:"extended_tags,omitempty"`
	// Object Name
	//
	// x-displayName: "Object Name"
	// x-example: "example"
	// Object Name
	Objname string `protobuf:"bytes,4,opt,name=objname,proto3" json:"objname,omitempty"`
}

func (m *SetExtendedTagsRequest) Reset()      { *m = SetExtendedTagsRequest{} }
func (*SetExtendedTagsRequest) ProtoMessage() {}
func (*SetExtendedTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{0}
}
func (m *SetExtendedTagsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetExtendedTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetExtendedTagsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetExtendedTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetExtendedTagsRequest.Merge(m, src)
}
func (m *SetExtendedTagsRequest) XXX_Size() int {
	return m.Size()
}
func (m *SetExtendedTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetExtendedTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetExtendedTagsRequest proto.InternalMessageInfo

func (m *SetExtendedTagsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SetExtendedTagsRequest) GetExtendedTags() []string {
	if m != nil {
		return m.ExtendedTags
	}
	return nil
}

func (m *SetExtendedTagsRequest) GetObjname() string {
	if m != nil {
		return m.Objname
	}
	return ""
}

// Response to configure Configure Extended Tags
//
// x-displayName: "Response to Configure Extended Tags "
type SetExtendedTagsResponse struct {
}

func (m *SetExtendedTagsResponse) Reset()      { *m = SetExtendedTagsResponse{} }
func (*SetExtendedTagsResponse) ProtoMessage() {}
func (*SetExtendedTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{1}
}
func (m *SetExtendedTagsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetExtendedTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetExtendedTagsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetExtendedTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetExtendedTagsResponse.Merge(m, src)
}
func (m *SetExtendedTagsResponse) XXX_Size() int {
	return m.Size()
}
func (m *SetExtendedTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetExtendedTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetExtendedTagsResponse proto.InternalMessageInfo

// Request to Update Extended Tags
//
// x-displayName: "Request to Update Extended Tags"
// Request to Update Extended Tags from application group
type UpdateExtendedTagsRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "default"
	// Namespace for the object to be configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Extended Tags of Application to be Added
	//
	// x-displayName: "Extended Tags of Application to be Added"
	// x-example: "["HR","Eng"]"
	// Extended Tags of Application to be Added from application group
	AddExtendedTags []string `protobuf:"bytes,2,rep,name=add_extended_tags,json=addExtendedTags,proto3" json:"add_extended_tags,omitempty"`
	// Extended Tags of Application to be Deleted
	//
	// x-displayName: "Extended Tags of Application to be Deleted"
	// x-example: "["HR","Eng"]"
	// Extended Tags of Application to be Deleted from application group
	DeleteExtendedTags []string `protobuf:"bytes,3,rep,name=delete_extended_tags,json=deleteExtendedTags,proto3" json:"delete_extended_tags,omitempty"`
	// Object Name
	//
	// x-displayName: "Object Name"
	// x-example: "example"
	// Object Name
	Objname string `protobuf:"bytes,4,opt,name=objname,proto3" json:"objname,omitempty"`
}

func (m *UpdateExtendedTagsRequest) Reset()      { *m = UpdateExtendedTagsRequest{} }
func (*UpdateExtendedTagsRequest) ProtoMessage() {}
func (*UpdateExtendedTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{2}
}
func (m *UpdateExtendedTagsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateExtendedTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateExtendedTagsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateExtendedTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExtendedTagsRequest.Merge(m, src)
}
func (m *UpdateExtendedTagsRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateExtendedTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExtendedTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExtendedTagsRequest proto.InternalMessageInfo

func (m *UpdateExtendedTagsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateExtendedTagsRequest) GetAddExtendedTags() []string {
	if m != nil {
		return m.AddExtendedTags
	}
	return nil
}

func (m *UpdateExtendedTagsRequest) GetDeleteExtendedTags() []string {
	if m != nil {
		return m.DeleteExtendedTags
	}
	return nil
}

func (m *UpdateExtendedTagsRequest) GetObjname() string {
	if m != nil {
		return m.Objname
	}
	return ""
}

// Response to Update Extended Tags
//
// x-displayName: "Response to Update Extended Tags"
type UpdateExtendedTagsResponse struct {
}

func (m *UpdateExtendedTagsResponse) Reset()      { *m = UpdateExtendedTagsResponse{} }
func (*UpdateExtendedTagsResponse) ProtoMessage() {}
func (*UpdateExtendedTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{3}
}
func (m *UpdateExtendedTagsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateExtendedTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateExtendedTagsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateExtendedTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExtendedTagsResponse.Merge(m, src)
}
func (m *UpdateExtendedTagsResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateExtendedTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExtendedTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExtendedTagsResponse proto.InternalMessageInfo

// Request to Delete Extended Tags
//
// x-displayName: "Request to Delete Extended Tags"
// Request to Delete Extended Tags from application group
type DeleteExtendedTagsRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "default"
	// Namespace for the object to be configured
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Extended Tags of Application
	//
	// x-displayName: "Extended Tags of Application"
	// x-example: "["HR","Eng"]"
	// Extended Tags of Application from application group
	ExtendedTags []string `protobuf:"bytes,2,rep,name=extended_tags,json=extendedTags,proto3" json:"extended_tags,omitempty"`
	// Object Name
	//
	// x-displayName: "Object Name"
	// x-example: "example"
	// Object Name
	Objname string `protobuf:"bytes,4,opt,name=objname,proto3" json:"objname,omitempty"`
}

func (m *DeleteExtendedTagsRequest) Reset()      { *m = DeleteExtendedTagsRequest{} }
func (*DeleteExtendedTagsRequest) ProtoMessage() {}
func (*DeleteExtendedTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{4}
}
func (m *DeleteExtendedTagsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteExtendedTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteExtendedTagsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteExtendedTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExtendedTagsRequest.Merge(m, src)
}
func (m *DeleteExtendedTagsRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteExtendedTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExtendedTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExtendedTagsRequest proto.InternalMessageInfo

func (m *DeleteExtendedTagsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteExtendedTagsRequest) GetExtendedTags() []string {
	if m != nil {
		return m.ExtendedTags
	}
	return nil
}

func (m *DeleteExtendedTagsRequest) GetObjname() string {
	if m != nil {
		return m.Objname
	}
	return ""
}

// Response to Delete Extended Tags
//
// x-displayName: "Response to Delete Extended Tags"
type DeleteExtendedTagsResponse struct {
}

func (m *DeleteExtendedTagsResponse) Reset()      { *m = DeleteExtendedTagsResponse{} }
func (*DeleteExtendedTagsResponse) ProtoMessage() {}
func (*DeleteExtendedTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_caaad9f8bb98259e, []int{5}
}
func (m *DeleteExtendedTagsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteExtendedTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteExtendedTagsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteExtendedTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExtendedTagsResponse.Merge(m, src)
}
func (m *DeleteExtendedTagsResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteExtendedTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExtendedTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExtendedTagsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SetExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.SetExtendedTagsRequest")
	golang_proto.RegisterType((*SetExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.SetExtendedTagsRequest")
	proto.RegisterType((*SetExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.SetExtendedTagsResponse")
	golang_proto.RegisterType((*SetExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.SetExtendedTagsResponse")
	proto.RegisterType((*UpdateExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.UpdateExtendedTagsRequest")
	golang_proto.RegisterType((*UpdateExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.UpdateExtendedTagsRequest")
	proto.RegisterType((*UpdateExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.UpdateExtendedTagsResponse")
	golang_proto.RegisterType((*UpdateExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.UpdateExtendedTagsResponse")
	proto.RegisterType((*DeleteExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.DeleteExtendedTagsRequest")
	golang_proto.RegisterType((*DeleteExtendedTagsRequest)(nil), "ves.io.schema.uztna.views.uztna_application_view.DeleteExtendedTagsRequest")
	proto.RegisterType((*DeleteExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.DeleteExtendedTagsResponse")
	golang_proto.RegisterType((*DeleteExtendedTagsResponse)(nil), "ves.io.schema.uztna.views.uztna_application_view.DeleteExtendedTagsResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/uztna/views/uztna_application_view/private_customapi.proto", fileDescriptor_caaad9f8bb98259e)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/uztna/views/uztna_application_view/private_customapi.proto", fileDescriptor_caaad9f8bb98259e)
}

var fileDescriptor_caaad9f8bb98259e = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcf, 0x6b, 0x13, 0x4f,
	0x14, 0xcf, 0xa4, 0xe5, 0x5b, 0x3a, 0x7c, 0xa5, 0x75, 0x11, 0x4d, 0xd6, 0x30, 0x94, 0xe8, 0xa1,
	0x14, 0x76, 0xa7, 0x2a, 0x2a, 0x88, 0x1e, 0xfc, 0x51, 0x68, 0x51, 0xb0, 0x54, 0xbd, 0x78, 0x09,
	0x93, 0xdd, 0x97, 0xed, 0xd6, 0x64, 0x67, 0xdc, 0x99, 0x5d, 0xa3, 0x22, 0x48, 0xcf, 0x1e, 0x04,
	0x11, 0x3c, 0x7a, 0xf4, 0xea, 0xb9, 0x97, 0xde, 0xf4, 0x24, 0x45, 0x2f, 0x3d, 0xda, 0x8d, 0x07,
	0x8f, 0xfd, 0x13, 0xa4, 0xb3, 0x9b, 0x9a, 0x34, 0x29, 0x74, 0x43, 0xf1, 0xf6, 0x66, 0xde, 0xbc,
	0xcf, 0xfb, 0xbc, 0xcf, 0xbc, 0x37, 0x83, 0x17, 0x63, 0x90, 0xb6, 0xcf, 0xa9, 0x74, 0x56, 0xa1,
	0xc5, 0x68, 0xf4, 0x42, 0x05, 0x8c, 0xc6, 0x3e, 0x3c, 0x93, 0xa9, 0x5d, 0x63, 0x42, 0x34, 0x7d,
	0x87, 0x29, 0x9f, 0x07, 0xb5, 0xbd, 0x7d, 0x2a, 0x42, 0x3f, 0x66, 0x0a, 0x6a, 0x4e, 0x24, 0x15,
	0x6f, 0x31, 0xe1, 0xdb, 0x22, 0xe4, 0x8a, 0x1b, 0xf3, 0x29, 0x92, 0x9d, 0x22, 0xd9, 0x3a, 0xda,
	0xd6, 0x48, 0xf6, 0x70, 0x24, 0xd3, 0xf2, 0x7c, 0xb5, 0x1a, 0xd5, 0x6d, 0x87, 0xb7, 0xa8, 0xc7,
	0x3d, 0x4e, 0x35, 0x50, 0x3d, 0x6a, 0xe8, 0x95, 0x5e, 0x68, 0x2b, 0x4d, 0x60, 0x56, 0x3c, 0xce,
	0xbd, 0x26, 0x50, 0x26, 0x7c, 0xca, 0x82, 0x80, 0x2b, 0x0d, 0x25, 0x33, 0xef, 0xd9, 0xfe, 0x42,
	0xb8, 0xe8, 0x75, 0x96, 0xfb, 0x9d, 0xea, 0xb9, 0x80, 0xae, 0xeb, 0x46, 0x6e, 0x01, 0x78, 0x7d,
	0x0d, 0x1c, 0x95, 0x85, 0x5f, 0xcf, 0x1d, 0xde, 0x9b, 0xbc, 0xda, 0x1f, 0x1d, 0x83, 0x84, 0x20,
	0xee, 0xe7, 0x5e, 0x8d, 0xf0, 0xe9, 0x07, 0xa0, 0x16, 0xda, 0x0a, 0x02, 0x17, 0xdc, 0x87, 0xcc,
	0x93, 0x2b, 0xf0, 0x34, 0x02, 0xa9, 0x8c, 0x0a, 0x9e, 0x0c, 0x58, 0x0b, 0xa4, 0x60, 0x0e, 0x94,
	0xd0, 0x0c, 0x9a, 0x9d, 0x5c, 0xf9, 0xbb, 0x61, 0x9c, 0xc3, 0x27, 0x20, 0x0b, 0xaa, 0x29, 0xe6,
	0xc9, 0x52, 0x71, 0x66, 0x6c, 0x76, 0x72, 0xe5, 0x7f, 0xe8, 0x41, 0x32, 0x4a, 0x78, 0x82, 0xd7,
	0xd7, 0xf6, 0x82, 0x4a, 0xe3, 0x1a, 0xa0, 0xbb, 0xac, 0x96, 0xf1, 0x99, 0x81, 0xb4, 0x52, 0xf0,
	0x40, 0x42, 0xf5, 0x33, 0xc2, 0xe5, 0x47, 0xc2, 0x65, 0x0a, 0xf2, 0xb3, 0x9a, 0xc3, 0x27, 0x99,
	0xeb, 0xd6, 0x86, 0x31, 0x9b, 0x62, 0xae, 0xdb, 0x0b, 0x68, 0xcc, 0xe3, 0x53, 0x2e, 0x34, 0x41,
	0xc1, 0x81, 0xe3, 0x63, 0xfa, 0xb8, 0x91, 0xfa, 0x16, 0x8e, 0x56, 0x4e, 0x05, 0x9b, 0xc3, 0x28,
	0x67, 0x15, 0xb5, 0x71, 0xf9, 0xce, 0x00, 0xda, 0x3f, 0x91, 0xb9, 0x82, 0xcd, 0x61, 0x99, 0x53,
	0x5e, 0x17, 0x3f, 0x4c, 0xe0, 0xe9, 0xdb, 0x7a, 0xce, 0x96, 0xd3, 0xa9, 0xbb, 0xb9, 0xbc, 0x64,
	0xbc, 0x29, 0xe2, 0xa9, 0x03, 0x57, 0x63, 0x2c, 0xda, 0x79, 0xa7, 0xcf, 0x1e, 0xde, 0x54, 0xe6,
	0xd2, 0x31, 0x20, 0x65, 0xaa, 0xba, 0xc9, 0x97, 0xd2, 0xf9, 0xc6, 0xe5, 0xb6, 0x63, 0x45, 0x81,
	0x1f, 0x43, 0x28, 0x59, 0xd3, 0xda, 0x43, 0xb0, 0xa4, 0x62, 0x81, 0xcb, 0x42, 0xd7, 0x6a, 0xf1,
	0xc0, 0x57, 0x3c, 0x5c, 0xff, 0xf1, 0xeb, 0x5d, 0xf1, 0x4a, 0xf5, 0x42, 0xf7, 0x6d, 0xa1, 0xfb,
	0xf2, 0x4a, 0xfa, 0x72, 0xdf, 0x7e, 0x35, 0x38, 0x51, 0xd7, 0xd0, 0x9c, 0xf1, 0xbe, 0x88, 0x8d,
	0xc1, 0xab, 0x35, 0xee, 0xe6, 0xaf, 0xe3, 0xd0, 0x9e, 0x36, 0xef, 0x1d, 0x0f, 0xd8, 0x68, 0xba,
	0x98, 0xa3, 0xeb, 0x32, 0xd8, 0x5a, 0xa3, 0xe8, 0x72, 0xe8, 0x68, 0x8c, 0xa2, 0xcb, 0xe1, 0xdd,
	0x9e, 0x57, 0x97, 0xb9, 0x91, 0x74, 0x31, 0x17, 0x36, 0x37, 0xd0, 0xf8, 0xf7, 0x0d, 0x74, 0x35,
	0x37, 0xf5, 0xfb, 0xfa, 0xe1, 0x5f, 0xff, 0x56, 0x2a, 0x4e, 0xa3, 0x5b, 0x1f, 0xd1, 0xd6, 0x0e,
	0x29, 0x6c, 0xef, 0x90, 0xc2, 0xee, 0x0e, 0x41, 0xaf, 0x13, 0x82, 0x3e, 0x25, 0x04, 0x7d, 0x4d,
	0x08, 0xda, 0x4a, 0x08, 0xfa, 0x99, 0x10, 0xf4, 0x3b, 0x21, 0x85, 0xdd, 0x84, 0xa0, 0xb7, 0x1d,
	0x52, 0xd8, 0xec, 0x10, 0xb4, 0xd5, 0x21, 0x85, 0xed, 0x0e, 0x29, 0x3c, 0x6e, 0x78, 0x5c, 0x3c,
	0xf1, 0xec, 0x98, 0x37, 0x15, 0x84, 0x21, 0xb3, 0x23, 0x49, 0xb5, 0xd1, 0xe0, 0x61, 0xcb, 0x12,
	0x21, 0x8f, 0x7d, 0x17, 0x42, 0xab, 0xeb, 0xa6, 0xa2, 0xee, 0x71, 0x0a, 0x6d, 0x95, 0x7d, 0x12,
	0x47, 0xfe, 0x69, 0xea, 0xff, 0xe9, 0x0f, 0xe4, 0xd2, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e,
	0xfd, 0x4d, 0xd0, 0xe4, 0x07, 0x00, 0x00,
}

func (this *SetExtendedTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SetExtendedTagsRequest)
	if !ok {
		that2, ok := that.(SetExtendedTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if len(this.ExtendedTags) != len(that1.ExtendedTags) {
		return false
	}
	for i := range this.ExtendedTags {
		if this.ExtendedTags[i] != that1.ExtendedTags[i] {
			return false
		}
	}
	if this.Objname != that1.Objname {
		return false
	}
	return true
}
func (this *SetExtendedTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SetExtendedTagsResponse)
	if !ok {
		that2, ok := that.(SetExtendedTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *UpdateExtendedTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateExtendedTagsRequest)
	if !ok {
		that2, ok := that.(UpdateExtendedTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if len(this.AddExtendedTags) != len(that1.AddExtendedTags) {
		return false
	}
	for i := range this.AddExtendedTags {
		if this.AddExtendedTags[i] != that1.AddExtendedTags[i] {
			return false
		}
	}
	if len(this.DeleteExtendedTags) != len(that1.DeleteExtendedTags) {
		return false
	}
	for i := range this.DeleteExtendedTags {
		if this.DeleteExtendedTags[i] != that1.DeleteExtendedTags[i] {
			return false
		}
	}
	if this.Objname != that1.Objname {
		return false
	}
	return true
}
func (this *UpdateExtendedTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateExtendedTagsResponse)
	if !ok {
		that2, ok := that.(UpdateExtendedTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *DeleteExtendedTagsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteExtendedTagsRequest)
	if !ok {
		that2, ok := that.(DeleteExtendedTagsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if len(this.ExtendedTags) != len(that1.ExtendedTags) {
		return false
	}
	for i := range this.ExtendedTags {
		if this.ExtendedTags[i] != that1.ExtendedTags[i] {
			return false
		}
	}
	if this.Objname != that1.Objname {
		return false
	}
	return true
}
func (this *DeleteExtendedTagsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteExtendedTagsResponse)
	if !ok {
		that2, ok := that.(DeleteExtendedTagsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *SetExtendedTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&uztna_application_view.SetExtendedTagsRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ExtendedTags: "+fmt.Sprintf("%#v", this.ExtendedTags)+",\n")
	s = append(s, "Objname: "+fmt.Sprintf("%#v", this.Objname)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SetExtendedTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&uztna_application_view.SetExtendedTagsResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateExtendedTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&uztna_application_view.UpdateExtendedTagsRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "AddExtendedTags: "+fmt.Sprintf("%#v", this.AddExtendedTags)+",\n")
	s = append(s, "DeleteExtendedTags: "+fmt.Sprintf("%#v", this.DeleteExtendedTags)+",\n")
	s = append(s, "Objname: "+fmt.Sprintf("%#v", this.Objname)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateExtendedTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&uztna_application_view.UpdateExtendedTagsResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteExtendedTagsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&uztna_application_view.DeleteExtendedTagsRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ExtendedTags: "+fmt.Sprintf("%#v", this.ExtendedTags)+",\n")
	s = append(s, "Objname: "+fmt.Sprintf("%#v", this.Objname)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteExtendedTagsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&uztna_application_view.DeleteExtendedTagsResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPrivateCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomPrivateAPIClient is the client API for CustomPrivateAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomPrivateAPIClient interface {
	// Configure Extended Tags
	//
	// x-displayName: "Configure Extended Tags"
	// Configure Extended Tags from application group
	SetExtendedTags(ctx context.Context, in *SetExtendedTagsRequest, opts ...grpc.CallOption) (*SetExtendedTagsResponse, error)
	// Update Extended Tags
	//
	// x-displayName: "Update Extended Tags"
	// Update Extended Tags from application group
	UpdateExtendedTags(ctx context.Context, in *UpdateExtendedTagsRequest, opts ...grpc.CallOption) (*UpdateExtendedTagsResponse, error)
	// Delete Extended Tags
	//
	// x-displayName: "Delete Extended Tags"
	// Delete Extended Tags from application group
	DeleteExtendedTags(ctx context.Context, in *DeleteExtendedTagsRequest, opts ...grpc.CallOption) (*DeleteExtendedTagsResponse, error)
}

type customPrivateAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomPrivateAPIClient(cc *grpc.ClientConn) CustomPrivateAPIClient {
	return &customPrivateAPIClient{cc}
}

func (c *customPrivateAPIClient) SetExtendedTags(ctx context.Context, in *SetExtendedTagsRequest, opts ...grpc.CallOption) (*SetExtendedTagsResponse, error) {
	out := new(SetExtendedTagsResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/SetExtendedTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customPrivateAPIClient) UpdateExtendedTags(ctx context.Context, in *UpdateExtendedTagsRequest, opts ...grpc.CallOption) (*UpdateExtendedTagsResponse, error) {
	out := new(UpdateExtendedTagsResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/UpdateExtendedTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customPrivateAPIClient) DeleteExtendedTags(ctx context.Context, in *DeleteExtendedTagsRequest, opts ...grpc.CallOption) (*DeleteExtendedTagsResponse, error) {
	out := new(DeleteExtendedTagsResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/DeleteExtendedTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomPrivateAPIServer is the server API for CustomPrivateAPI service.
type CustomPrivateAPIServer interface {
	// Configure Extended Tags
	//
	// x-displayName: "Configure Extended Tags"
	// Configure Extended Tags from application group
	SetExtendedTags(context.Context, *SetExtendedTagsRequest) (*SetExtendedTagsResponse, error)
	// Update Extended Tags
	//
	// x-displayName: "Update Extended Tags"
	// Update Extended Tags from application group
	UpdateExtendedTags(context.Context, *UpdateExtendedTagsRequest) (*UpdateExtendedTagsResponse, error)
	// Delete Extended Tags
	//
	// x-displayName: "Delete Extended Tags"
	// Delete Extended Tags from application group
	DeleteExtendedTags(context.Context, *DeleteExtendedTagsRequest) (*DeleteExtendedTagsResponse, error)
}

// UnimplementedCustomPrivateAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomPrivateAPIServer struct {
}

func (*UnimplementedCustomPrivateAPIServer) SetExtendedTags(ctx context.Context, req *SetExtendedTagsRequest) (*SetExtendedTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetExtendedTags not implemented")
}
func (*UnimplementedCustomPrivateAPIServer) UpdateExtendedTags(ctx context.Context, req *UpdateExtendedTagsRequest) (*UpdateExtendedTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExtendedTags not implemented")
}
func (*UnimplementedCustomPrivateAPIServer) DeleteExtendedTags(ctx context.Context, req *DeleteExtendedTagsRequest) (*DeleteExtendedTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExtendedTags not implemented")
}

func RegisterCustomPrivateAPIServer(s *grpc.Server, srv CustomPrivateAPIServer) {
	s.RegisterService(&_CustomPrivateAPI_serviceDesc, srv)
}

func _CustomPrivateAPI_SetExtendedTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetExtendedTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).SetExtendedTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/SetExtendedTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).SetExtendedTags(ctx, req.(*SetExtendedTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomPrivateAPI_UpdateExtendedTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExtendedTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).UpdateExtendedTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/UpdateExtendedTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).UpdateExtendedTags(ctx, req.(*UpdateExtendedTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomPrivateAPI_DeleteExtendedTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExtendedTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomPrivateAPIServer).DeleteExtendedTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI/DeleteExtendedTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomPrivateAPIServer).DeleteExtendedTags(ctx, req.(*DeleteExtendedTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomPrivateAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.uztna.views.uztna_application_view.CustomPrivateAPI",
	HandlerType: (*CustomPrivateAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetExtendedTags",
			Handler:    _CustomPrivateAPI_SetExtendedTags_Handler,
		},
		{
			MethodName: "UpdateExtendedTags",
			Handler:    _CustomPrivateAPI_UpdateExtendedTags_Handler,
		},
		{
			MethodName: "DeleteExtendedTags",
			Handler:    _CustomPrivateAPI_DeleteExtendedTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/uztna/views/uztna_application_view/private_customapi.proto",
}

func (m *SetExtendedTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetExtendedTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetExtendedTagsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objname) > 0 {
		i -= len(m.Objname)
		copy(dAtA[i:], m.Objname)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Objname)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ExtendedTags) > 0 {
		for iNdEx := len(m.ExtendedTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExtendedTags[iNdEx])
			copy(dAtA[i:], m.ExtendedTags[iNdEx])
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.ExtendedTags[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetExtendedTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetExtendedTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetExtendedTagsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *UpdateExtendedTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateExtendedTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateExtendedTagsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objname) > 0 {
		i -= len(m.Objname)
		copy(dAtA[i:], m.Objname)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Objname)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DeleteExtendedTags) > 0 {
		for iNdEx := len(m.DeleteExtendedTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DeleteExtendedTags[iNdEx])
			copy(dAtA[i:], m.DeleteExtendedTags[iNdEx])
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.DeleteExtendedTags[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.AddExtendedTags) > 0 {
		for iNdEx := len(m.AddExtendedTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AddExtendedTags[iNdEx])
			copy(dAtA[i:], m.AddExtendedTags[iNdEx])
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.AddExtendedTags[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateExtendedTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateExtendedTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateExtendedTagsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DeleteExtendedTagsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteExtendedTagsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteExtendedTagsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Objname) > 0 {
		i -= len(m.Objname)
		copy(dAtA[i:], m.Objname)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Objname)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ExtendedTags) > 0 {
		for iNdEx := len(m.ExtendedTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExtendedTags[iNdEx])
			copy(dAtA[i:], m.ExtendedTags[iNdEx])
			i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.ExtendedTags[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPrivateCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteExtendedTagsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteExtendedTagsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteExtendedTagsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintPrivateCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPrivateCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SetExtendedTagsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if len(m.ExtendedTags) > 0 {
		for _, s := range m.ExtendedTags {
			l = len(s)
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	l = len(m.Objname)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *SetExtendedTagsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *UpdateExtendedTagsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if len(m.AddExtendedTags) > 0 {
		for _, s := range m.AddExtendedTags {
			l = len(s)
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	if len(m.DeleteExtendedTags) > 0 {
		for _, s := range m.DeleteExtendedTags {
			l = len(s)
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	l = len(m.Objname)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *UpdateExtendedTagsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DeleteExtendedTagsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	if len(m.ExtendedTags) > 0 {
		for _, s := range m.ExtendedTags {
			l = len(s)
			n += 1 + l + sovPrivateCustomapi(uint64(l))
		}
	}
	l = len(m.Objname)
	if l > 0 {
		n += 1 + l + sovPrivateCustomapi(uint64(l))
	}
	return n
}

func (m *DeleteExtendedTagsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovPrivateCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPrivateCustomapi(x uint64) (n int) {
	return sovPrivateCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *SetExtendedTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetExtendedTagsRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ExtendedTags:` + fmt.Sprintf("%v", this.ExtendedTags) + `,`,
		`Objname:` + fmt.Sprintf("%v", this.Objname) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SetExtendedTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetExtendedTagsResponse{`,
		`}`,
	}, "")
	return s
}
func (this *UpdateExtendedTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateExtendedTagsRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`AddExtendedTags:` + fmt.Sprintf("%v", this.AddExtendedTags) + `,`,
		`DeleteExtendedTags:` + fmt.Sprintf("%v", this.DeleteExtendedTags) + `,`,
		`Objname:` + fmt.Sprintf("%v", this.Objname) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateExtendedTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateExtendedTagsResponse{`,
		`}`,
	}, "")
	return s
}
func (this *DeleteExtendedTagsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteExtendedTagsRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ExtendedTags:` + fmt.Sprintf("%v", this.ExtendedTags) + `,`,
		`Objname:` + fmt.Sprintf("%v", this.Objname) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteExtendedTagsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteExtendedTagsResponse{`,
		`}`,
	}, "")
	return s
}
func valueToStringPrivateCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *SetExtendedTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetExtendedTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetExtendedTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedTags = append(m.ExtendedTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetExtendedTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetExtendedTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetExtendedTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateExtendedTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateExtendedTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateExtendedTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddExtendedTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddExtendedTags = append(m.AddExtendedTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteExtendedTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeleteExtendedTags = append(m.DeleteExtendedTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateExtendedTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateExtendedTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateExtendedTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteExtendedTagsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteExtendedTagsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteExtendedTagsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedTags = append(m.ExtendedTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Objname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Objname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteExtendedTagsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteExtendedTagsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteExtendedTagsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPrivateCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPrivateCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPrivateCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPrivateCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPrivateCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPrivateCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPrivateCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPrivateCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPrivateCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPrivateCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPrivateCustomapi = fmt.Errorf("proto: unexpected end of group")
)

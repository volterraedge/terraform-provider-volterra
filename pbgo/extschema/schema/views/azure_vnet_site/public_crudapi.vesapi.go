//
// Copyright (c) 2018 Volterra, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.
//

package azure_vnet_site

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/client/configapi"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/flags"
	"gopkg.volterra.us/stdlib/log"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
)

const (
	// CreateRequestFQN is the fully-qualified-name of the CreateRequest message
	CreateRequestFQN = "ves.io.schema.views.azure_vnet_site.CreateRequest"
	// CreateResponseFQN is the fully-qualified-name of the CreateResponse message
	CreateResponseFQN = "ves.io.schema.views.azure_vnet_site.CreateResponse"
	// ReplaceRequestFQN is the fully-qualified-name of the ReplaceRequest message
	ReplaceRequestFQN = "ves.io.schema.views.azure_vnet_site.ReplaceRequest"
	// ReplaceResponseFQN is the fully-qualified-name of the ReplaceResponse message
	ReplaceResponseFQN = "ves.io.schema.views.azure_vnet_site.ReplaceResponse"
	// GetRequestFQN is the fully-qualified-name of the GetRequest message
	GetRequestFQN = "ves.io.schema.views.azure_vnet_site.GetRequest"
	// GetResponseFQN is the fully-qualified-name of the GetResponse message
	GetResponseFQN = "ves.io.schema.views.azure_vnet_site.GetResponse"
	// ListRequestFQN is the fully-qualified-name of the ListRequest message
	ListRequestFQN = "ves.io.schema.views.azure_vnet_site.ListRequest"
	// ListResponseFQN is the fully-qualified-name of the ListResponse message
	ListResponseFQN = "ves.io.schema.views.azure_vnet_site.ListResponse"
	// DeleteRequestFQN is the fully-qualified-name of the DeleteRequest message
	DeleteRequestFQN = "ves.io.schema.views.azure_vnet_site.DeleteRequest"
	// DeleteResponseFQN is the fully-qualified-name of the DeleteResponse message
	DeleteResponseFQN = "ves.io.schema.views.azure_vnet_site.DeleteResponse"
)

// CLIENT side
func NewCreateRequest(e db.Entry) (*CreateRequest, error) {
	r := &CreateRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewReplaceRequest(e db.Entry) (*ReplaceRequest, error) {
	r := &ReplaceRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewGetRequest(key string, opts ...server.CRUDCallOpt) (*GetRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	var rspFmt GetResponseFormatCode
	switch ccOpts.ResponseFormat {
	case server.DefaultForm:
		rspFmt = GET_RSP_FORMAT_DEFAULT
	case server.CreateRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_CREATE
	case server.ReplaceRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_REPLACE
	case server.StatusForm:
		rspFmt = GET_RSP_FORMAT_STATUS
	case server.GetSpecForm:
		rspFmt = GET_RSP_FORMAT_READ
	default:
		return nil, fmt.Errorf("Unsupported Response Format %s", ccOpts.ResponseFormat)
	}
	return &GetRequest{Namespace: strs[0], Name: strs[1], ResponseFormat: rspFmt}, nil
}
func (m *GetRequest) ResponseFormatString() string {
	return m.GetResponseFormat().String()
}

func NewListRequest(opts ...server.CRUDCallOpt) *ListRequest {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	return &ListRequest{Namespace: ccOpts.Namespace}
}

func NewDeleteRequest(key string) (*DeleteRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	return &DeleteRequest{Namespace: strs[0], Name: strs[1]}, nil
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *CreateRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*CreateRequest)
		if !ok {
			return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Create")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return nil, err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *ReplaceRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*ReplaceRequest)
		if !ok {
			return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewReplaceRequest(e)
		if err != nil {
			return errors.Wrap(err, "Replace")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return nil

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(obj)
		}
		return obj, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(respDetail.Entry)
		}
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields
	req.ReportStatusFields = cco.ReportStatusFields
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *CreateRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*CreateRequest)
		if !ok {
			return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new create request")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return nil, err
			}
		}
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/azure_vnet_sites", c.baseURL, req.Metadata.GetNamespace())
	jsn, err := req.ToJSON()
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Create")
	}

	hReq, err := http.NewRequest("POST", url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &CreateResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	configapi.TranscribeCall(ctx, req, rspo)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}

	obj := NewDBObject(nil)
	rspo.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rspo, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var rReq *ReplaceRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*ReplaceRequest)
		if !ok {
			return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
		}
		rReq = r
	} else {
		r, err := NewReplaceRequest(e)
		if err != nil {
			return errors.Wrap(err, "Creating new replace request")
		}
		rReq = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, rReq); err != nil {
				return err
			}
		}
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.ReplaceJSONReq != "" {
		got++
	}
	if got != 1 {
		return fmt.Errorf("Only one of entry, WithRequestProto() or WithReplaceJSONRequest() should be specified")
	}
	if e == nil && cco.RequestProto == nil && cco.ReplaceJSONReq == "" {
		return fmt.Errorf("Neither entry nor WithRequestProto() nor WithReplaceJSONRequest() specified")
	}

	var jsn, namespace, name string
	var err error
	_ = namespace
	if e != nil || cco.RequestProto != nil {
		rReq.ResourceVersion = cco.ResourceVersion
		jsn, err = rReq.ToJSON()
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		namespace = rReq.GetMetadata().GetNamespace()
		name = rReq.GetMetadata().GetName()
	} else {
		jsn = cco.ReplaceJSONReq
		reqMap := make(map[string]interface{})
		if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
			return errors.Wrapf(err, "Unmarshaling ReplaceJSONReq")
		}
		md, ok := reqMap["metadata"].(map[string]interface{})
		if !ok {
			return fmt.Errorf("ReplaceJSONReq does not have 'metadata'")
		}
		if val, ok := md["namespace"].(string); ok {
			namespace = val
		}
		if val, ok := md["name"].(string); ok {
			name = val
		}
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/azure_vnet_sites/%s", c.baseURL, namespace, name)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	hReq = hReq.WithContext(ctx)
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	if _, err := ioutil.ReadAll(rsp.Body); err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	configapi.TranscribeCall(ctx, rReq, nil)
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/azure_vnet_sites/%s", c.baseURL, req.Namespace, req.Name)
	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	q.Add("response_format", fmt.Sprintf("%d", req.ResponseFormat))
	hReq.URL.RawQuery += q.Encode()

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &GetResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(obj)
		}
		return obj, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(respDetail.Entry)
		}
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)
	_ = req
	url := fmt.Sprintf("%s/public/namespaces/%s/azure_vnet_sites", c.baseURL, req.Namespace)

	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}
	for _, fName := range cco.ReportStatusFields {
		q.Add("report_status_fields", fName)
	}

	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ListResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/azure_vnet_sites/%s", c.baseURL, dReq.Namespace, dReq.Name)
	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	_, err = ioutil.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	configapi.TranscribeCall(ctx, dReq, nil)

	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	crcl := &crudAPIRestClient{baseURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	crudCl *crudAPIInprocClient
}

func (c *APIInprocClient) Create(ctx context.Context, req *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	rsp, err := oah.Create(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	if rsp, err := oah.Replace(ctx, req); err != nil {
		return rsp, err
	}
	return NewObjectReplaceRsp(nil)
}

func (c *APIInprocClient) Get(ctx context.Context, req *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) List(ctx context.Context, req *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	rsp, err := oah.List(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Delete(ctx context.Context, req *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	rsp, err := oah.Delete(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	crudCl := newCRUDAPIInprocClient(svc)
	return &APIInprocClient{crudCl}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	svc svcfw.Service
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewCreateRequest(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return nil, err
		}
	}

	rsp, err := oah.Create(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if err != nil {
		return nil, err
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewReplaceRequest(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return err
		}
	}

	req.ResourceVersion = cco.ResourceVersion

	rsp, err := oah.Replace(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(obj)
		}
		return obj, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(gRsp.Object)
		if gRsp.Object == nil {
			gRsp.ToObject(respDetail.Entry)
		}
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewListRequest(opts...)
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	rsp, err := oah.List(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.azure_vnet_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.azure_vnet_site")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	rsp, err := oah.Delete(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	crcl := &crudAPIInprocClient{svc: svc}
	return crcl
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper

	// resource handler function pointers
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.views.azure_vnet_site.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.views.azure_vnet_site.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.azure_vnet_site.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.azure_vnet_site.API.Create"), zap.Error(err))
			}
		}
	}
	reqMsgFQN := "ves.io.schema.views.azure_vnet_site.CreateRequest"
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, reqMsgFQN, req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	obj := NewDBObject(nil)
	req.ToObject(obj)
	if conv, exists := s.sf.Config().MsgToObjConverters[reqMsgFQN]; exists {
		if err := conv(req, obj); err != nil {
			return nil, err
		}
	}
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}
	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.views.azure_vnet_site.CreateResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.views.azure_vnet_site.API.CreateResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ReplaceRequest) (*ReplaceResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		err := fmt.Errorf("Nil spec in Replace Request")
		return nil, svcfw.NewInvalidInputError(err.Error(), err)
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.azure_vnet_site.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.azure_vnet_site.API.Replace"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.views.azure_vnet_site.API.ReplaceRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.views.azure_vnet_site.API.ReplaceResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.azure_vnet_site.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	tenant := server.TenantFromContext(ctx)
	rsrcReq := &server.ResourceGetRequest{IsPublic: true, Tenant: tenant, Namespace: req.GetNamespace(), Name: req.GetName()}
	switch req.ResponseFormat {
	case GET_RSP_FORMAT_FOR_CREATE:
		rsrcReq.RspInCreateForm = true

	case GET_RSP_FORMAT_FOR_REPLACE:
		rsrcReq.RspInReplaceForm = true

	case GET_RSP_FORMAT_READ:
		rsrcReq.RspInReadForm = true

	case GET_RSP_FORMAT_STATUS:
		rsrcReq.RspInStatusForm = true

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		rsrcReq.RspInReferringObjectsForm = true

	}

	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectGetRsp(ctx, s.sf, req, rsrcRsp)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.views.azure_vnet_site.GetResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.azure_vnet_site.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		Namespace:   req.Namespace,
		LabelFilter: req.LabelFilter,
		RspStreamed: false,
	}
	if len(req.ReportStatusFields) > 0 {
		rsrcReq.ReportStatusFields = &req.ReportStatusFields
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResource"))
	}
	rsp, err := NewListResponse(ctx, req, s.sf, rsrcRsp)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResponse allocation failed"))
	}
	if merr != nil {
		if rsp == nil {
			return nil, merr
		}
		rsp.Errors = append(rsp.Errors, &ves_io_schema.ErrorType{
			Code:    ves_io_schema.EINTERNAL,
			Message: merr.Error(),
		})

	}
	return rsp, nil
}

func (s *APISrv) Delete(ctx context.Context, req *DeleteRequest) (*google_protobuf.Empty, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.azure_vnet_site.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.azure_vnet_site.API.Delete"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.views.azure_vnet_site.API.DeleteRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	tenant := server.TenantFromContext(ctx)
	key := fmt.Sprintf("%s/%s/%s", tenant, req.GetNamespace(), req.GetName())
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	rsrcReq.FailIfReferred = req.FailIfReferred
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "DeleteResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	return &google_protobuf.Empty{}, nil
}

// Assert that APISrv implements the generated gRPC APIServer interface
var _ APIServer = &APISrv{}

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.API", strings.Join(sl[:len(sl)-1], "."))
}

func (r *Object) Key() string {
	m := r.GetMetadata()
	if m == nil {
		return ""
	}
	return strings.Join([]string{m.Namespace, m.Name}, "/")
}

func (r *Object) Uid() string {
	return r.SystemMetadata.Uid
}

func (r *ListResponse) GetKeys() []string {
	var ret []string
	for _, i := range r.Items {
		ret = append(ret, i.Namespace+"/"+i.Name)
	}
	return ret
}

// Implement server.SROListItem interface on ListResponseItem
func (l *ListResponseItem) GetObjUid() string {
	return l.Uid
}

func (l *ListResponseItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ListResponseItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ListResponseItem) GetObjName() string {
	return l.Name
}

func (l *ListResponseItem) GetObjLabels() map[string]string {
	return l.Labels
}

func NewObjectCreateRsp(e db.Entry) (*CreateResponse, error) {
	switch e.(type) {
	case nil:
		return nil, nil
	case *DBObject:
		rsp := &CreateResponse{}
		rsp.FromObject(e)
		return rsp, nil
	}
	return nil, fmt.Errorf("Entry not of type *DBObject in NewObjectCreateRsp")
}

func NewObjectReplaceRsp(e db.Entry) (*ReplaceResponse, error) {
	return &ReplaceResponse{}, nil
}

func NewObjectGetRsp(ctx context.Context, sf svcfw.Service, req *GetRequest, rsrcRsp *server.ResourceGetResponse) (*GetResponse, error) {
	rsp := &GetResponse{}
	e := rsrcRsp.Entry
	if e == nil {
		return rsp, nil
	}
	o, ok := e.(*DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *DBObject in NewObjectGetRsp")
	}

	rsp.ResourceVersion = rsrcRsp.ResourceVersion
	var merr *multierror.Error
	buildReadForm := func() {
		rsp.Metadata = &ves_io_schema.ObjectGetMetaType{}
		rsp.Metadata.FromObjectMetaType(o.Metadata)
		rsp.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
		rsp.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)
		rsp.Spec = &GetSpecType{}
		rsp.Spec.FromGlobalSpecType(o.Spec.GcSpec)

	}
	_ = buildReadForm
	buildStatusForm := func() {
		for _, statusEnt := range rsrcRsp.BackRefs {
			statusObj, ok := statusEnt.ToStore().(*StatusObject)
			if !ok {
				merr = multierror.Append(merr, fmt.Errorf("%T is not *StatusObject", statusEnt))
				continue
			}
			rsp.Status = append(rsp.Status, statusObj)
		}

	}
	_ = buildStatusForm
	buildReferringObjectsForm := func() {
		for _, br := range rsrcRsp.ReferringObjects {
			rsp.ReferringObjects = append(rsp.ReferringObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}

	}
	_ = buildReferringObjectsForm

	switch req.ResponseFormat {

	case GET_RSP_FORMAT_FOR_CREATE:
		createReq, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building CreateRequest from entry")
		}
		// Name has to be specified for a new create
		createReq.Metadata.Name = ""
		rsp.CreateForm = createReq

	case GET_RSP_FORMAT_FOR_REPLACE:
		replaceReq, err := NewReplaceRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building ReplaceRequest from entry")
		}
		rsp.ReplaceForm = replaceReq

	case GET_RSP_FORMAT_STATUS:
		buildStatusForm()

	case GET_RSP_FORMAT_READ:
		buildReadForm()

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		buildReferringObjectsForm()

	default:
		noDBForm, _ := flags.GetEnvGetRspNoDBForm()
		if !noDBForm {
			rsp.Object = o.Object
			sf.Logger().Alert(svcfw.GetResponseInDBForm,
				log.MinorAlert,
				zap.String("user", server.UserFromContext(ctx)),
				zap.String("useragent", server.UseragentStrFromContext(ctx)),
				zap.String("operation", "Get"),
			)
			buildReadForm()

		} else {
			buildReadForm()

		}
		buildStatusForm()
	}

	return rsp, errors.ErrOrNil(merr)
}

func NewListResponse(ctx context.Context, req *ListRequest, sf svcfw.Service, rsrcRsp *server.ResourceListResponse) (*ListResponse, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ListRequest")
	}
	if rsrcRsp == nil {
		return nil, fmt.Errorf("Nil ResourceResponse")
	}

	errStrs := []string{}
	resp := &ListResponse{}
	resp.Items = []*ListResponseItem{}

	for _, rsrcItem := range rsrcRsp.Items {
		if rsrcItem == nil {
			errStrs = append(errStrs, fmt.Sprintf("Nil ResourceListResponseItem"))
			continue
		}

		e := rsrcItem.Entry
		o, ok := e.(*DBObject)
		if !ok {
			resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
				Code:    ves_io_schema.EINTERNAL,
				Message: fmt.Sprintf("Entry %T not of type *DBObject in NewListResponse", e),
			})

			continue
		}
		item := &ListResponseItem{
			Tenant:    o.GetSystemMetadata().GetTenant(),
			Namespace: o.GetMetadata().GetNamespace(),
			Name:      o.GetMetadata().GetName(),
			Uid:       o.GetMetadata().GetUid(),
			OwnerView: o.GetSystemMetadata().GetOwnerView(),
			Labels:    o.GetMetadata().GetLabels(),
		}

		item.Description = o.GetMetadata().GetDescription()
		item.Annotations = o.GetMetadata().GetAnnotations()
		item.Disabled = o.GetMetadata().GetDisable()

		if len(req.ReportFields) > 0 {
			noDBForm, _ := flags.GetEnvGetRspNoDBForm()
			if !noDBForm {
				item.Object = o.Object
				sf.Logger().Alert(svcfw.GetResponseInDBForm,
					log.MinorAlert,
					zap.String("user", server.UserFromContext(ctx)),
					zap.String("useragent", server.UseragentStrFromContext(ctx)),
					zap.String("operation", "List"),
				)
			}

			item.Metadata = &ves_io_schema.ObjectGetMetaType{}
			item.Metadata.FromObjectMetaType(o.Metadata)
			item.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
			item.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)

			if o.Object != nil && o.Object.GetSpec().GetGcSpec() != nil {
				msgFQN := "ves.io.schema.views.azure_vnet_site.GetResponse"
				if conv, exists := sf.Config().ObjToMsgConverters[msgFQN]; exists {
					getSpec := &GetSpecType{}
					getSpec.FromGlobalSpecType(o.Spec.GcSpec)
					getRsp := &GetResponse{Spec: getSpec}
					if err := conv(o, getRsp); err != nil {
						resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
							Code:    ves_io_schema.EINTERNAL,
							Message: fmt.Sprintf("Converting entry to getResponse: %s", err),
						})

						continue
					}
					item.GetSpec = getRsp.Spec
				} else {
					item.GetSpec = &GetSpecType{}
					item.GetSpec.FromGlobalSpecType(o.Spec.GcSpec)
				}
			}

		}

		if len(req.ReportStatusFields) > 0 {
			for _, sroStatus := range rsrcItem.StatusSet {
				statusDBO, ok := sroStatus.(*DBStatusObject)
				if !ok {
					resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
						Code:    ves_io_schema.EINTERNAL,
						Message: fmt.Sprintf("sro.Status %T is not of type *DBStatusObject in NewListResponse", sroStatus),
					})

					continue
				}
				item.StatusSet = append(item.StatusSet, statusDBO.StatusObject)
			}
		}

		resp.Items = append(resp.Items, item)
	}
	return resp, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Azure Vnet site",
        "description": "Azure Vnet site view defines a required parameters that can be used in CRUD, to create and manage a volterra site in Azure Vnet.\nIt can be used to either automatically create or Manually assisted site creation in Azure Vnet.\n\nView will create following child objects.\n\n* Site",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": null,
    "paths": {
        "/public/namespaces/{metadata.namespace}/azure_vnet_sites": {
            "post": {
                "summary": "CreateSpecType",
                "description": "Shape of the Azure Vnet site specification",
                "operationId": "ves.io.schema.views.azure_vnet_site.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteCreateResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created. \nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteCreateRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "x-ves-proto-rpc": "ves.io.schema.views.azure_vnet_site.API.Create"
            },
            "x-displayname": "Configure Azure Vnet Site",
            "x-ves-proto-service": "ves.io.schema.views.azure_vnet_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{metadata.namespace}/azure_vnet_sites/{metadata.name}": {
            "put": {
                "summary": "ReplaceSpecType",
                "description": "Shape of the Azure Vnet site replace specification",
                "operationId": "ves.io.schema.views.azure_vnet_site.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteReplaceResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created. \nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "metadata.name",
                        "description": "name\n\nx-example: \"acmecorp-web\"\nThe configuration object to be replaced will be looked up by name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteReplaceRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "x-ves-proto-rpc": "ves.io.schema.views.azure_vnet_site.API.Replace"
            },
            "x-displayname": "Configure Azure Vnet Site",
            "x-ves-proto-service": "ves.io.schema.views.azure_vnet_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/azure_vnet_sites": {
            "get": {
                "summary": "List",
                "description": "List the set of azure_vnet_site in a namespace",
                "operationId": "ves.io.schema.views.azure_vnet_site.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteListResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace to scope the listing of azure_vnet_site",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "label_filter",
                        "description": "x-example: \"env in (staging, testing), tier in (web, db)\"\nA LabelSelectorType expression that every item in list response will satisfy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Label Filter"
                    },
                    {
                        "name": "report_fields",
                        "description": "x-example: \"\"\nExtra fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Fields"
                    },
                    {
                        "name": "report_status_fields",
                        "description": "x-example: \"\"\nExtra status fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Status Fields"
                    }
                ],
                "tags": [
                    "API"
                ],
                "x-ves-proto-rpc": "ves.io.schema.views.azure_vnet_site.API.List"
            },
            "x-displayname": "Configure Azure Vnet Site",
            "x-ves-proto-service": "ves.io.schema.views.azure_vnet_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/azure_vnet_sites/{name}": {
            "get": {
                "summary": "GetSpecType",
                "description": "Shape of the Azure Vnet site specification",
                "operationId": "ves.io.schema.views.azure_vnet_site.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteGetResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nThe namespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nThe name of the configuration object to be fetched",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "response_format",
                        "description": "The format in which the configuration object is to be fetched. This could be for example\n    - in GetSpec form for the contents of object\n    - in CreateRequest form to create a new similar object\n    - to ReplaceRequest form to replace changeable values\n\nDefault format of returned resource\nResponse should be in CreateRequest format\nResponse should be in ReplaceRequest format\nResponse should be in StatusObject(s) format\nResponse should be in format of GetSpecType\nResponse should have other objects referring to this object",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "GET_RSP_FORMAT_DEFAULT",
                            "GET_RSP_FORMAT_FOR_CREATE",
                            "GET_RSP_FORMAT_FOR_REPLACE",
                            "GET_RSP_FORMAT_STATUS",
                            "GET_RSP_FORMAT_READ",
                            "GET_RSP_FORMAT_REFERRING_OBJECTS"
                        ],
                        "default": "GET_RSP_FORMAT_DEFAULT",
                        "x-displayname": "Referring Objects"
                    }
                ],
                "tags": [
                    "API"
                ],
                "x-ves-proto-rpc": "ves.io.schema.views.azure_vnet_site.API.Get"
            },
            "delete": {
                "summary": "Delete",
                "description": "Delete the specified azure_vnet_site",
                "operationId": "ves.io.schema.views.azure_vnet_site.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {}
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nName of the configuration object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/azure_vnet_siteDeleteRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "x-ves-proto-rpc": "ves.io.schema.views.azure_vnet_site.API.Delete"
            },
            "x-displayname": "Configure Azure Vnet Site",
            "x-ves-proto-service": "ves.io.schema.views.azure_vnet_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        }
    },
    "definitions": {
        "azure_vnet_siteAzureVnetIngressEgressGwARReplaceType": {
            "type": "object",
            "description": "Two interface Azure ingress/egress site for Alternate Region",
            "title": "Azure Ingress Egress Gateway for Alternate Region",
            "x-displayname": "Azure Ingress/Egress Gateway for Alternate Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-inside_static_route_choice": "[\"inside_static_routes\",\"no_inside_static_routes\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressEgressGwARReplaceType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "inside_static_routes": {
                    "description": "Exclusive with [no_inside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_inside_static_routes": {
                    "description": "Exclusive with [inside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetIngressEgressGwARType": {
            "type": "object",
            "description": "Two interface Azure ingress/egress site on Alternate Region with no support for zones",
            "title": "Azure Ingress Egress Gateway on Alternate Region",
            "x-displayname": "Azure Ingress/Egress Gateway on Alternate Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-inside_static_route_choice": "[\"inside_static_routes\",\"no_inside_static_routes\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressEgressGwARType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-multi-nic-voltmesh\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-multi-nic-voltmesh",
                    "x-ves-required": "true"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "inside_static_routes": {
                    "description": "Exclusive with [no_inside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_inside_static_routes": {
                    "description": "Exclusive with [inside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "node": {
                    "description": " Ingress/Egress Gateway (Two Interface) Node information.",
                    "title": "Node Information",
                    "$ref": "#/definitions/viewsAzureVnetTwoInterfaceNodeARType",
                    "x-displayname": "Ingress/Egress Gateway (Two Interface) Node information"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetIngressEgressGwReplaceType": {
            "type": "object",
            "description": "Two interface Azure ingress/egress site",
            "title": "Azure Ingress Egress Gateway",
            "x-displayname": "Azure Ingress/Egress Gateway",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-inside_static_route_choice": "[\"inside_static_routes\",\"no_inside_static_routes\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressEgressGwReplaceType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "inside_static_routes": {
                    "description": "Exclusive with [no_inside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_inside_static_routes": {
                    "description": "Exclusive with [inside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetIngressEgressGwType": {
            "type": "object",
            "description": "Two interface Azure ingress/egress site",
            "title": "Azure Ingress Egress Gateway on Recommended Region",
            "x-displayname": "Azure Ingress/Egress Gateway on Recommended Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-inside_static_route_choice": "[\"inside_static_routes\",\"no_inside_static_routes\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressEgressGwType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "az_nodes": {
                    "type": "array",
                    "description": " Only Single AZ or Three AZ(s) nodes are supported currently.",
                    "title": "Nodes",
                    "items": {
                        "$ref": "#/definitions/viewsAzureVnetTwoInterfaceNodeType"
                    },
                    "x-displayname": "Ingress/Egress Gateway (two Interface) Nodes in AZ"
                },
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-multi-nic-voltmesh\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-multi-nic-voltmesh",
                    "x-ves-required": "true"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "inside_static_routes": {
                    "description": "Exclusive with [no_inside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_inside_static_routes": {
                    "description": "Exclusive with [inside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetIngressGwARReplaceType": {
            "type": "object",
            "description": "Single interface Azure ingress site for Alternate Region",
            "title": "Azure Ingress Gateway for Alternate Region",
            "x-displayname": "Azure Ingress Gateway for Alternate Region",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressGwARReplaceType"
        },
        "azure_vnet_siteAzureVnetIngressGwARType": {
            "type": "object",
            "description": "Single interface Azure ingress site",
            "title": "Azure Ingress Gateway on Alternate Region",
            "x-displayname": "Azure Ingress Gateway on Alternate Region",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressGwARType",
            "properties": {
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-voltmesh\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-voltmesh",
                    "x-ves-required": "true"
                },
                "node": {
                    "description": " Ingress Gateway (One Interface) Node information",
                    "title": "Node Information",
                    "$ref": "#/definitions/viewsAzureVnetOneInterfaceNodeARType",
                    "x-displayname": "Ingress Gateway (One Interface) Node information"
                }
            }
        },
        "azure_vnet_siteAzureVnetIngressGwReplaceType": {
            "type": "object",
            "description": "Single interface Azure ingress site",
            "title": "Azure Ingress Gateway",
            "x-displayname": "Azure Ingress Gateway",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressGwReplaceType"
        },
        "azure_vnet_siteAzureVnetIngressGwType": {
            "type": "object",
            "description": "Single interface Azure ingress site on on Recommended Region",
            "title": "Azure Ingress Gateway on Recommended Region",
            "x-displayname": "Azure Ingress Gateway on Recommended Region",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetIngressGwType",
            "properties": {
                "az_nodes": {
                    "type": "array",
                    "description": " Only Single AZ or Three AZ(s) nodes are supported currently.",
                    "title": "Nodes",
                    "items": {
                        "$ref": "#/definitions/viewsAzureVnetOneInterfaceNodeType"
                    },
                    "x-displayname": "Ingress Gateway (One Interface) Nodes in AZ"
                },
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-voltmesh\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-voltmesh",
                    "x-ves-required": "true"
                }
            }
        },
        "azure_vnet_siteAzureVnetVoltstackClusterARReplaceType": {
            "type": "object",
            "description": "Voltstack cluster of single interface Azure nodes",
            "title": "Azure VoltStack Cluster for Alternate Region",
            "x-displayname": "Azure VoltStack Cluster for Alternate Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetVoltstackClusterARReplaceType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetVoltstackClusterARType": {
            "type": "object",
            "description": "Voltstack Cluster of single interface Azure nodes",
            "title": "Azure Voltstack Cluster on Alternate Region",
            "x-displayname": "Azure Voltstack Cluster on Alternate Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-k8s_cluster_choice": "[\"k8s_cluster\",\"no_k8s_cluster\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetVoltstackClusterARType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-voltstack-combo\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-voltstack-combo",
                    "x-ves-required": "true"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "k8s_cluster": {
                    "description": "Exclusive with [no_k8s_cluster]\nx-displayName: \"Enable Site Local K8s API access\"\nSite Local K8s API access is enabled, using k8s_cluster object",
                    "title": "Enable Site Local K8s API access",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_k8s_cluster": {
                    "description": "Exclusive with [k8s_cluster]\nx-displayName: \"Disable Site Local K8s API access\"\nSite Local K8s API access is disabled",
                    "title": "Disable Site Local K8s API access",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "node": {
                    "description": " Only Single AZ or Three AZ(s) nodes are supported currently.",
                    "title": "Node Information",
                    "$ref": "#/definitions/viewsAzureVnetOneInterfaceNodeARType",
                    "x-displayname": "Ingress Gateway (One Interface) Node information"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetVoltstackClusterReplaceType": {
            "type": "object",
            "description": "Voltstack cluster of single interface Azure nodes",
            "title": "Azure VoltStack Cluster",
            "x-displayname": "Azure VoltStack Cluster",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetVoltstackClusterReplaceType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteAzureVnetVoltstackClusterType": {
            "type": "object",
            "description": "Voltstack Cluster of single interface Azure nodes",
            "title": "Azure Voltstack Cluster on Recommended Region",
            "x-displayname": "Azure Voltstack Cluster on Recommended Region",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-k8s_cluster_choice": "[\"k8s_cluster\",\"no_k8s_cluster\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.AzureVnetVoltstackClusterType",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "az_nodes": {
                    "type": "array",
                    "description": " Only Single AZ or Three AZ(s) nodes are supported currently.",
                    "title": "Nodes",
                    "items": {
                        "$ref": "#/definitions/viewsAzureVnetOneInterfaceNodeType"
                    },
                    "x-displayname": "VoltStack Cluster (One Interface) Nodes in AZ"
                },
                "azure_certified_hw": {
                    "type": "string",
                    "description": " Name for Azure certified hardware.\n\nExample: - \"azure-byol-voltstack-combo\"-\nRequired: YES",
                    "title": "Azure Certified Hardware",
                    "x-displayname": "Azure Certified Hardware",
                    "x-ves-example": "azure-byol-voltstack-combo",
                    "x-ves-required": "true"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType"
                },
                "k8s_cluster": {
                    "description": "Exclusive with [no_k8s_cluster]\nx-displayName: \"Enable Site Local K8s API access\"\nSite Local K8s API access is enabled, using k8s_cluster object",
                    "title": "Enable Site Local K8s API access",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_k8s_cluster": {
                    "description": "Exclusive with [k8s_cluster]\nx-displayName: \"Disable Site Local K8s API access\"\nSite Local K8s API access is disabled",
                    "title": "Disable Site Local K8s API access",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType"
                }
            }
        },
        "azure_vnet_siteCreateRequest": {
            "type": "object",
            "description": "This is the input message of the 'Create' RPC",
            "title": "CreateRequest is used to create an instance of azure_vnet_site",
            "x-displayname": "Create Request",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.CreateRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectCreateMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteCreateSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "azure_vnet_siteCreateResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.CreateResponse",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteGetSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "azure_vnet_siteDeleteRequest": {
            "type": "object",
            "description": "This is the input message of the 'Delete' RPC.",
            "title": "DeleteRequest is used to delete a azure_vnet_site",
            "x-displayname": "Delete Request",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.DeleteRequest",
            "properties": {
                "fail_if_referred": {
                    "type": "boolean",
                    "description": " Fail the delete operation if this object is being referred by other objects",
                    "title": "fail_if_referred",
                    "format": "boolean",
                    "x-displayname": "Fail-If-Referred"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the configuration object\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace in which the configuration object is present\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                }
            }
        },
        "azure_vnet_siteGetResponse": {
            "type": "object",
            "description": "This is the output message of the 'Get' RPC",
            "title": "GetResponse is the shape of a read azure_vnet_site",
            "x-displayname": "Get Response",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.GetResponse",
            "properties": {
                "create_form": {
                    "description": "Format used to create a new similar object",
                    "title": "create_form",
                    "$ref": "#/definitions/azure_vnet_siteCreateRequest",
                    "x-displayname": "CreateRequest Format"
                },
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "object": {
                    "title": "object",
                    "$ref": "#/definitions/azure_vnet_siteObject",
                    "x-displayname": "Object"
                },
                "referring_objects": {
                    "type": "array",
                    "description": "The set of objects that are referring to this object in their spec",
                    "title": "referring_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Referring Objects"
                },
                "replace_form": {
                    "description": "Format to replace changeable values in object",
                    "title": "replace_form",
                    "$ref": "#/definitions/azure_vnet_siteReplaceRequest",
                    "x-displayname": "ReplaceRequest Format"
                },
                "resource_version": {
                    "type": "string",
                    "description": "Version of the object\n\nExample: -\"42\"-",
                    "title": "resource_version",
                    "x-displayname": "Resource Version",
                    "x-ves-example": "42"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteGetSpecType",
                    "x-displayname": "Spec"
                },
                "status": {
                    "type": "array",
                    "description": "The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/azure_vnet_siteStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "azure_vnet_siteGetResponseFormatCode": {
            "type": "string",
            "description": "x-displayName: \"Get Response Format\"\nThis is the various forms that can be requested to be sent in the GetResponse\n\n - GET_RSP_FORMAT_DEFAULT: x-displayName: \"Default Format\"\nDefault format of returned resource\n - GET_RSP_FORMAT_FOR_CREATE: x-displayName: \"Create request Format\"\nResponse should be in CreateRequest format\n - GET_RSP_FORMAT_FOR_REPLACE: x-displayName: \"Replace request format\"\nResponse should be in ReplaceRequest format\n - GET_RSP_FORMAT_STATUS: x-displayName: \"Status format\"\nResponse should be in StatusObject(s) format\n - GET_RSP_FORMAT_READ: x-displayName: \"GetSpecType format\"\nResponse should be in format of GetSpecType\n - GET_RSP_FORMAT_REFERRING_OBJECTS: x-displayName: \"Referring Objects\"\nResponse should have other objects referring to this object",
            "title": "GetResponseFormatCode",
            "enum": [
                "GET_RSP_FORMAT_DEFAULT",
                "GET_RSP_FORMAT_FOR_CREATE",
                "GET_RSP_FORMAT_FOR_REPLACE",
                "GET_RSP_FORMAT_STATUS",
                "GET_RSP_FORMAT_READ",
                "GET_RSP_FORMAT_REFERRING_OBJECTS"
            ],
            "default": "GET_RSP_FORMAT_DEFAULT"
        },
        "azure_vnet_siteListResponse": {
            "type": "object",
            "description": "This is the output message of 'List' RPC.",
            "title": "ListResponse is the collection of azure_vnet_site",
            "x-displayname": "List Response",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.ListResponse",
            "properties": {
                "errors": {
                    "type": "array",
                    "description": " Errors(if any) while listing items from collection",
                    "title": "errors",
                    "items": {
                        "$ref": "#/definitions/schemaErrorType"
                    },
                    "x-displayname": "Errors"
                },
                "items": {
                    "type": "array",
                    "description": " items represents the collection in response",
                    "title": "items",
                    "items": {
                        "$ref": "#/definitions/azure_vnet_siteListResponseItem"
                    },
                    "x-displayname": "Items"
                }
            }
        },
        "azure_vnet_siteListResponseItem": {
            "type": "object",
            "description": "By default a summary of azure_vnet_site is returned in 'List'. By setting\n'report_fields' in the ListRequest more details of each item can be got.",
            "title": "ListResponseItem is an individual item in a collection of azure_vnet_site",
            "x-displayname": "List Item",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.ListResponseItem",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " The set of annotations present on this azure_vnet_site",
                    "title": "annotations",
                    "x-displayname": "Annotations"
                },
                "description": {
                    "type": "string",
                    "description": " The description set for this azure_vnet_site",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "disabled": {
                    "type": "boolean",
                    "description": " A value of true indicates azure_vnet_site is administratively disabled",
                    "title": "disabled",
                    "format": "boolean",
                    "x-displayname": "Disabled"
                },
                "get_spec": {
                    "description": " If ListRequest has any specified report_fields, it will appear in object",
                    "title": "get_spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteGetSpecType",
                    "x-displayname": "Get Specification"
                },
                "labels": {
                    "type": "object",
                    "description": " The set of labels present on this azure_vnet_site",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "metadata": {
                    "description": " If list request has report_fields set then metadata will\n contain all the metadata associated with the object.",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "name": {
                    "type": "string",
                    "description": " The name of this azure_vnet_site\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " The namespace this item belongs to\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "object": {
                    "description": " If ListRequest has any specified report_fields, it will appear in object\n DEPRECATED by get_spec, metadata and system_metadata",
                    "title": "object",
                    "$ref": "#/definitions/azure_vnet_siteObject",
                    "x-displayname": "Object"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "status_set": {
                    "type": "array",
                    "description": " The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/azure_vnet_siteStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " If list request has report_fields set then system_metadata will\n contain all the system generated details of this object.",
                    "title": "system_metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                },
                "tenant": {
                    "type": "string",
                    "description": " The tenant this item belongs to\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " The unique uid of this azure_vnet_site\n\nExample: - \"d27938ba-967e-40a7-9709-57b8627f9f75\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d27938ba-967e-40a7-9709-57b8627f9f75"
                }
            }
        },
        "azure_vnet_siteObject": {
            "type": "object",
            "description": "Azure VNET view object",
            "title": "Object",
            "x-displayname": "Object",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.Object",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/azure_vnet_siteSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system_metadata",
                    "$ref": "#/definitions/schemaSystemObjectMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "azure_vnet_siteReplaceRequest": {
            "type": "object",
            "description": "This is the input message of the 'Replace' RPC",
            "title": "ReplaceRequest is used to replace contents of a azure_vnet_site",
            "x-displayname": "Replace Request",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.ReplaceRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectReplaceMetaType",
                    "x-displayname": "Metadata"
                },
                "resource_version": {
                    "type": "string",
                    "description": "If provided, do the replace operation if the configuration object is still at 'resource_version'\n\nExample: -\"42\"-",
                    "title": "resource_version",
                    "x-displayname": "Resource Version",
                    "x-ves-example": "42"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteReplaceSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "azure_vnet_siteReplaceResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.ReplaceResponse"
        },
        "azure_vnet_siteSpecType": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.SpecType",
            "properties": {
                "gc_spec": {
                    "title": "gc_spec",
                    "$ref": "#/definitions/viewsazure_vnet_siteGlobalSpecType",
                    "x-displayname": "GC Spec"
                }
            }
        },
        "azure_vnet_siteStatusObject": {
            "type": "object",
            "description": "Most recently observed status of object",
            "title": "StatusObject",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions represent the normalized status values for configuration object",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " Azure VNET view object direct reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                }
            }
        },
        "ioschemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "network_firewallActiveForwardProxyPoliciesType": {
            "type": "object",
            "description": "List of Forward Proxy Policies",
            "title": "Active Forward Proxy Policies Type",
            "x-displayname": "Active Forward Proxy Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType",
            "properties": {
                "forward_proxy_policies": {
                    "type": "array",
                    "description": " List of Forward Proxy Policies\nRequired: YES",
                    "title": "Forward Proxy Policies",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Forward Proxy Policies",
                    "x-ves-required": "true"
                }
            }
        },
        "network_firewallActiveNetworkPoliciesType": {
            "type": "object",
            "description": "List of network policy views.",
            "title": "Active Network Policies Type",
            "x-displayname": "Active Network Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveNetworkPoliciesType",
            "properties": {
                "network_policies": {
                    "type": "array",
                    "description": " Ordered List of Network Policies active for this network firewall\nRequired: YES",
                    "title": "Network Policy",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Network Policy",
                    "x-ves-required": "true"
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by Volterra Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider"
                }
            }
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.  \n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "URL",
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed. \n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed"
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational"
                }
            }
        },
        "schemaDomainType": {
            "type": "object",
            "description": "Domains names",
            "title": "Domains",
            "x-displayname": "Domains",
            "x-ves-oneof-field-domain_choice": "[\"exact_value\",\"regex_value\",\"suffix_value\"]",
            "x-ves-proto-message": "ves.io.schema.DomainType",
            "properties": {
                "exact_value": {
                    "type": "string",
                    "description": "Exclusive with [regex_value suffix_value]\nx-displayName: \"Exact Value\"\nx-example: \"abc.zyz.com\"\nExact domain name.",
                    "title": "exact value"
                },
                "regex_value": {
                    "type": "string",
                    "description": "Exclusive with [exact_value suffix_value]\nx-displayName: \"Regex Values of Domains\"\nx-example: \"([a-z]([-a-z0-9]*[a-z0-9])?)\\.com$'\"\nRegular Expression value for the domain name",
                    "title": "regex values of Domains"
                },
                "suffix_value": {
                    "type": "string",
                    "description": "Exclusive with [exact_value regex_value]\nx-displayName: \"Suffix Value\"\nx-example: \"xyz.com\"\nSuffix of domain name e.g \"xyz.com\" will match \"*.xyz.com\" and \"xyz.com\"",
                    "title": "suffix value"
                }
            }
        },
        "schemaErrorCode": {
            "type": "string",
            "description": "Union of all possible error-codes from system\n\n - EOK: No error\n - EPERMS: Permissions error\n - EBADINPUT: Input is not correct\n - ENOTFOUND: Not found\n - EEXISTS: Already exists\n - EUNKNOWN: Unknown/catchall error\n - ESERIALIZE: Error in serializing/de-serializing\n - EINTERNAL: Server error",
            "title": "ErrorCode",
            "enum": [
                "EOK",
                "EPERMS",
                "EBADINPUT",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN",
                "ESERIALIZE",
                "EINTERNAL"
            ],
            "default": "EOK",
            "x-displayname": "Error Code",
            "x-ves-proto-enum": "ves.io.schema.ErrorCode"
        },
        "schemaErrorType": {
            "type": "object",
            "description": "Information about a error in API operation",
            "title": "ErrorType",
            "x-displayname": "Error Type",
            "x-ves-proto-message": "ves.io.schema.ErrorType",
            "properties": {
                "code": {
                    "description": " A simple general code by category",
                    "title": "code",
                    "$ref": "#/definitions/schemaErrorCode",
                    "x-displayname": "Code"
                },
                "error_obj": {
                    "description": " A structured error object for machine parsing",
                    "title": "error_obj",
                    "$ref": "#/definitions/protobufAny",
                    "x-displayname": "Error Object"
                },
                "message": {
                    "type": "string",
                    "description": " A human readable string of the error\n\nExample: - \"value\"-",
                    "title": "message",
                    "x-displayname": "Message",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaForwardProxyConfigType": {
            "type": "object",
            "description": "Fine tune forward proxy behavior\n\nFew configurations allowed are\n\n  White listed ports and ip prefixes:\n    Forward proxy does application protocol detection and server name(SNI) detection by peeking into\n    the traffic on the incoming downstream connection. Few protocols doesn't have client sending\n    the first data. In such cases, protocol and SNI detection fails. This configuration allows,\n    skipping protocol and SNI detection for whitelisted ip-prefix-list and ports\n  connection_timeout:\n    The timeout for new network connections to upstream server.\n  max_connect_attempts:\n    Maximum number of attempts made to make new network connection to upstream server.",
            "title": "ForwardProxyConfigType",
            "x-displayname": "Forward Proxy Configuration",
            "x-ves-oneof-field-tls_interception_choice": "[\"no_interception\",\"tls_intercept\"]",
            "x-ves-proto-message": "ves.io.schema.ForwardProxyConfigType",
            "properties": {
                "connection_timeout": {
                    "type": "integer",
                    "description": " The timeout for new network connections to upstream server.\n This is specified in milliseconds. The default value is 2000 (2 seconds)\n\nExample: - \"4000\"-",
                    "title": "connection_timeout",
                    "format": "int64",
                    "x-displayname": "Connection Timeout",
                    "x-ves-example": "4000"
                },
                "max_connect_attempts": {
                    "type": "integer",
                    "description": " Specifies the allowed number of retries on connect failure to upstream server. Defaults to 1.\n\nExample: - 3-",
                    "title": "max_connect_attempts",
                    "format": "int64",
                    "x-displayname": "Number of connect attempts"
                },
                "no_interception": {
                    "description": "Exclusive with [tls_intercept]\nx-displayName: \"No TLS Interception\"\nNo TLS interception is enabled for this network connector",
                    "title": "No TLS interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "tls_intercept": {
                    "description": "Exclusive with [no_interception]\nx-displayName: \"TLS Interception\"\nSpecify TLS interception configuration for the network connector",
                    "title": "TLS Interception",
                    "$ref": "#/definitions/schemaTlsInterceptionType"
                },
                "white_listed_ports": {
                    "type": "array",
                    "description": " Traffic to these destination TCP ports is not subjected to protocol parsing\n Example \"tmate\" server port\n\nExample: - [22, 9400]-",
                    "title": "Port list",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-displayname": "TCP Ports to Skip Protocol Parsing"
                },
                "white_listed_prefixes": {
                    "type": "array",
                    "description": " Traffic to these destination ip prefixes is not subjected to protocol parsing\n Example \"tmate\" server ip\n\nExample: - \"['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']\"-",
                    "title": "IP prefix list",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Prefixes to Skip Protocol Parsing",
                    "x-ves-example": "['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']"
                }
            }
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaIpAddressType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 address",
            "title": "IP Address",
            "x-displayname": "IP Address",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpAddressType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\nx-displayName: \"IPv4 Address\"\nIPv4 Address",
                    "title": "IPv4 Address",
                    "$ref": "#/definitions/schemaIpv4AddressType"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\nx-displayName: \"IPv6 Address\"\nIPv6 Address",
                    "title": "IPv6 ADDRESS",
                    "$ref": "#/definitions/schemaIpv6AddressType"
                }
            }
        },
        "schemaIpSubnetType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 subnet addresses",
            "title": "IP Subnet",
            "x-displayname": "IP Subnet",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpSubnetType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\nx-displayName: \"IPv4 Subnet\"\nIPv4 Subnet Address",
                    "title": "IPv4 Subnet",
                    "$ref": "#/definitions/schemaIpv4SubnetType"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\nx-displayName: \"IPv6 Subnet\"\nIPv6 Subnet Address",
                    "title": "IPv6 Subnet",
                    "$ref": "#/definitions/schemaIpv6SubnetType"
                }
            }
        },
        "schemaIpv4AddressType": {
            "type": "object",
            "description": "IPv4 Address in dot-decimal notation",
            "title": "IPv4 Address",
            "x-displayname": "IPv4 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv4AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv4 Address in string form with dot-decimal notation\n\nExample: - \"192.168.1.1\"-",
                    "title": "IPv4 Address",
                    "x-displayname": "IPv4 Address",
                    "x-ves-example": "192.168.1.1"
                }
            }
        },
        "schemaIpv4SubnetType": {
            "type": "object",
            "description": "IPv4 subnets specified as prefix and prefix-length. Prefix length must be \u003c= 32",
            "title": "IPv4 Subnet",
            "x-displayname": "IPv4 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv4SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix-length of the IPv4 subnet. Must be \u003c= 32\n\nExample: - 24-",
                    "title": "Prefix Length",
                    "format": "int64",
                    "x-displayname": "Prefix Length"
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv4 subnet in string form with dot-decimal notation\n\nExample: - \"192.168.1.0\"-",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "192.168.1.0"
                }
            }
        },
        "schemaIpv6AddressType": {
            "type": "object",
            "description": "IPv6 Address specified as hexadecimal numbers separated by ':'",
            "title": "IPv6 Address",
            "x-displayname": "IPv6 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv6AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv6 Address in form of string. IPv6 address must be specified as hexadecimal numbers separated by ':'\n The address can be compacted by suppressing zeros \n e.g. '2001:db8:0:0:0:0:2:1' becomes '2001:db8::2:1' or '2001:db8:0:0:0:2:0:0' becomes '2001:db8::2::'\n\nExample: - \"2001:db8:0:0:0:0:2:1\"-",
                    "title": "IPv6 Address",
                    "x-displayname": "IPv6 Address",
                    "x-ves-example": "2001:db8:0:0:0:0:2:1"
                }
            }
        },
        "schemaIpv6SubnetType": {
            "type": "object",
            "description": "IPv6 subnets specified as prefix and prefix-length. prefix-legnth must be \u003c= 128",
            "title": "IPv6 Subnet",
            "x-displayname": "IPv6 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv6SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix length of the IPv6 subnet. Must be \u003c= 128\n\nExample: - \"38\"-",
                    "title": "Prefix length",
                    "format": "int64",
                    "x-displayname": "Prefix Length",
                    "x-ves-example": "38"
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv6 subnet given in form of string.\n IPv6 address must be specified as hexadecimal numbers separated by ':'\n e.g. \"2001:db8:0:0:0:2:0:0\"\n The address can be compacted by suppressing zeros\n e.g. \"2001:db8::2::\"\n\nExample: - \"2001:db8:0:0:0:0:2:0\"-",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "2001:db8:0:0:0:0:2:0"
                }
            }
        },
        "schemaNextHopType": {
            "type": "object",
            "description": "Identifies the next-hop for a route",
            "title": "Nexthop",
            "x-displayname": "Nexthop",
            "x-ves-proto-message": "ves.io.schema.NextHopType",
            "properties": {
                "interface": {
                    "type": "array",
                    "description": " Nexthop is network interface when type is \"Network-Interface\"",
                    "title": "Network Interface",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Interface"
                },
                "nexthop_address": {
                    "description": " Nexthop address when type is \"Use-Configured\"",
                    "title": "Nexthop Address",
                    "$ref": "#/definitions/schemaIpAddressType",
                    "x-displayname": "Address"
                },
                "type": {
                    "description": " Identifies the type of next-hop",
                    "title": "Type",
                    "$ref": "#/definitions/schemaNextHopTypes",
                    "x-displayname": "Type"
                }
            }
        },
        "schemaNextHopTypes": {
            "type": "string",
            "description": "Defines types of next-hop\n\nUse default gateway on the local interface as gateway for route.\nAssumes there is only one local interface on the virtual network.\nUse the specified address as nexthop\nUse the network interface as nexthop\nDiscard nexthop, used when attr type is Advertise\nUsed in VoltADN private virtual network.",
            "title": "Nexthop Types",
            "enum": [
                "NEXT_HOP_DEFAULT_GATEWAY",
                "NEXT_HOP_USE_CONFIGURED",
                "NEXT_HOP_NETWORK_INTERFACE",
                "NEXT_HOP_DISCARD",
                "NEXT_HOP_SNAT_TO_PUBLIC"
            ],
            "default": "NEXT_HOP_DEFAULT_GATEWAY",
            "x-displayname": "Nexthop Types",
            "x-ves-proto-enum": "ves.io.schema.NextHopTypes"
        },
        "schemaObjectCreateMetaType": {
            "type": "object",
            "description": "ObjectCreateMetaType is metadata that can be specified in Create request of an object.",
            "title": "ObjectCreateMetaType",
            "x-displayname": "Create Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectCreateMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotation"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectGetMetaType": {
            "type": "object",
            "description": "ObjectGetMetaType is metadata that can be specified in Get/Create response of an object.",
            "title": "ObjectGetMetaType",
            "x-displayname": "Get Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectGetMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-example": "value"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectMetaType": {
            "type": "object",
            "description": "ObjectMetaType is metadata(common attributes) of an object that all configuration objects will have.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "ObjectMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. Object create will fail if \n provided by the client and the value exists in the system. Typically generated by the\n server on successful creation of an object and is not allowed to change once populated.\n Shadowed by SystemObjectMeta's uid field.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaObjectReplaceMetaType": {
            "type": "object",
            "description": "ObjectReplaceMetaType is metadata that can be specified in Replace request of an object.",
            "title": "ObjectReplaceMetaType",
            "x-displayname": "Replace Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectReplaceMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotations"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaRouteAttrType": {
            "type": "string",
            "description": "Defines attributes associated with route\n\nIgnore attribute\nAdvertise route in all supported routing protocols\nAdd route into host OS - route in host OS will point to interface corresponding to the\nvirtual network. Host OS must have an interface in the virtual network.\nUse the route for forwarding decision - adds route into data plane\nmodules with configured next-hop\nMerge Route if they already exist",
            "title": "Route Attribute",
            "enum": [
                "ROUTE_ATTR_NO_OP",
                "ROUTE_ATTR_ADVERTISE",
                "ROUTE_ATTR_INSTALL_HOST",
                "ROUTE_ATTR_INSTALL_FORWARDING",
                "ROUTE_ATTR_MERGE_ONLY"
            ],
            "default": "ROUTE_ATTR_NO_OP",
            "x-displayname": "Route Attribute",
            "x-ves-proto-enum": "ves.io.schema.RouteAttrType"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "SecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\nNo Encoding\n - EncodingBase64: Base64\n\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone",
            "x-displayname": "Secret Encoding",
            "x-ves-proto-enum": "ves.io.schema.SecretEncodingType"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\",\"vault_secret_info\",\"wingman_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Blindfold Secret\"\nBlindfold Secret is used for the secrets managed by Volterra Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType"
                },
                "blindfold_secret_info_internal": {
                    "description": " Blindfold Secret Internal is used for the putting re-encrypted blindfold secret",
                    "title": "Blindfold Secret Internal",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret Internal"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Clear Secret\"\nClear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType"
                },
                "secret_encoding_type": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is given to any Secret Management System.\n this will be set if the secret is encoded and not plaintext BEFORE it is encrypted and put it in SecretType.\n Note - Do NOT set this field for Clear Secret with string:/// scheme.\n e.g. if a secret is base64 encoded and then put into vault.",
                    "title": "secret_encoding_type",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "vault_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info wingman_secret_info]\nx-displayName: \"Vault Secret\"\nVault Secret is used for the secrets managed by Hashicorp Vault",
                    "title": "Vault Secret",
                    "$ref": "#/definitions/schemaVaultSecretInfoType"
                },
                "wingman_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info vault_secret_info]\nx-displayName: \"Bootstrap Secret\"\nSecret is given as bootstrap secret in Volterra Security Sidecar",
                    "title": "Wingman Secret",
                    "$ref": "#/definitions/schemaWingmanSecretInfoType"
                }
            }
        },
        "schemaStaticRouteType": {
            "type": "object",
            "description": "Defines a static route, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static Route",
            "x-displayname": "Static Route",
            "x-ves-displayorder": "2,10,11,1",
            "x-ves-proto-message": "ves.io.schema.StaticRouteType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of route attributes associated with the static route",
                    "title": "Attributes",
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes"
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Static Route, these labels can be used in network policy",
                    "title": "Static Route labels",
                    "x-displayname": "Static Route Labels"
                },
                "nexthop": {
                    "description": " Nexthop for the route",
                    "title": "Nexthop",
                    "$ref": "#/definitions/schemaNextHopType",
                    "x-displayname": "Nexthop"
                },
                "subnets": {
                    "type": "array",
                    "description": " List of route prefixes",
                    "title": "Subnets",
                    "items": {
                        "$ref": "#/definitions/schemaIpSubnetType"
                    },
                    "x-displayname": "Subnets"
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status \n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Oriong of this status exchanged by VTRP. ",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Propagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Publish",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectGetMetaType": {
            "type": "object",
            "description": "SystemObjectGetMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectGetMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectGetMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "prism"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "admin@acmecorp.com"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n \n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n \n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaSystemObjectMetaType": {
            "type": "object",
            "description": "SystemObjectMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "value"
                },
                "creator_cookie": {
                    "type": "string",
                    "description": " This can used by the creator of the object for later audit for e.g. by storing the\n version identifying information of the object so at future it can be determined if\n version present at remote end is current or stale.\n\nExample: - \"value\"-",
                    "title": "creator_cookie",
                    "x-displayname": "Creator Cookie",
                    "x-ves-example": "value"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "value"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n \n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n \n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "namespace": {
                    "type": "array",
                    "description": " The namespace this object belongs to. This is populated by the service based on the\n metadata.namespace field when an object is created.",
                    "title": "namespace",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Namespace Reference"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "sre_disable": {
                    "type": "boolean",
                    "description": " This should be set to true If VES/SRE operator wants to suppress an object from being\n presented to business-logic of a daemon(e.g. due to bad-form/issue-causing Object).\n This is meant only to be used in temporary situations for operational continuity till\n a fix is rolled out in business-logic.\n\nExample: - \"true\"-",
                    "title": "sre_disable",
                    "format": "boolean",
                    "x-displayname": "SRE Disable",
                    "x-ves-example": "true"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "trace_info": {
                    "type": "string",
                    "description": " trace_info holds information(\u003ctrace-id\u003e:\u003cspan-id\u003e:\u003cparent-span-id\u003e) of the request doing\n the object modification. This can be used on the watch side to create subsequent spans.\n This information can be used to co-relate activities across services (modulo state compression)\n for a synchronous API.\n\nExample: - \"value\"-",
                    "title": "trace_info",
                    "x-displayname": "Trace Info",
                    "x-ves-example": "value"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Indicate origin of this object.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaTlsCertificateType": {
            "type": "object",
            "description": "Handle to fetch certificate and key",
            "title": "TlsCertificateType",
            "x-displayname": "TLS Certificate",
            "x-ves-displayorder": "1,4,5",
            "x-ves-proto-message": "ves.io.schema.TlsCertificateType",
            "properties": {
                "certificate_url": {
                    "type": "string",
                    "description": " TLS certificate.\n Certificate or certificate chain in PEM format including the PEM headers.\nRequired: YES",
                    "title": "certificate_url",
                    "x-displayname": "Certificate URL",
                    "x-ves-required": "true"
                },
                "description": {
                    "type": "string",
                    "description": " Description for the certificate",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "private_key": {
                    "description": " TLS Private Key data in unencrypted PEM format including the PEM headers. The data may be optionally secured using BlindFold. TLS key has to match the accompanying certificate.\nRequired: YES",
                    "title": "private_key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Private Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaTlsInterceptionPolicy": {
            "type": "object",
            "description": "Policy to enable or disable TLS interception.",
            "title": "TlsInterceptionPolicy",
            "x-displayname": "TLS Interception Policy",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionPolicy",
            "properties": {
                "interception_rules": {
                    "type": "array",
                    "description": " List of ordered rules to enable or disable for TLS interception\nRequired: YES",
                    "title": "Interception Rules",
                    "items": {
                        "$ref": "#/definitions/schemaTlsInterceptionRule"
                    },
                    "x-displayname": "TLS Interception Rules",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaTlsInterceptionRule": {
            "type": "object",
            "description": "x-required\nRule to enable or disable TLS interception based on domain match",
            "title": "TlsInterceptionRule",
            "x-displayname": "TLS Interception Rule",
            "x-ves-oneof-field-enable_disable_choice": "[\"disable_interception\",\"enable_interception\"]",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionRule",
            "properties": {
                "disable_interception": {
                    "description": "Exclusive with [enable_interception]\nx-displayName: \"Disable Interception\"\nDisable Interception",
                    "title": "Disable Interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "domain_match": {
                    "description": " Domain value or regular expression to match\nRequired: YES",
                    "title": "Domain Match",
                    "$ref": "#/definitions/schemaDomainType",
                    "x-displayname": "Match Domain",
                    "x-ves-required": "true"
                },
                "enable_interception": {
                    "description": "Exclusive with [disable_interception]\nx-displayName: \"Enable Interception\"\nEnable Interception",
                    "title": "Enable Interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "schemaTlsInterceptionType": {
            "type": "object",
            "description": "Configuration to enable TLS interception",
            "title": "TlsInterceptionType",
            "x-displayname": "Configuration for TLS interception",
            "x-ves-oneof-field-interception_policy_choice": "[\"enable_for_all_domains\",\"policy\"]",
            "x-ves-oneof-field-signing_cert_choice": "[\"custom_certificate\",\"volterra_certificate\"]",
            "x-ves-oneof-field-trusted_ca_choice": "[\"trusted_ca_url\",\"volterra_trusted_ca\"]",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionType",
            "properties": {
                "custom_certificate": {
                    "description": "Exclusive with [volterra_certificate]\nx-displayName: \"Custom Signing Certificate\"\nCertificates for generating intermediate certificate for TLS interception.",
                    "title": "Custom Signing Certificate",
                    "$ref": "#/definitions/schemaTlsCertificateType"
                },
                "enable_for_all_domains": {
                    "description": "Exclusive with [policy]\nx-displayName: \"Enable For All Domains\"\nEnable interception for all domains",
                    "title": "Enable For All Domains",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "policy": {
                    "description": "Exclusive with [enable_for_all_domains]\nx-displayName: \"Enable/Disable for Specific Domains\"\nPolicy to enable/disable specific domains, with implicit enable all domains",
                    "title": "Policy for specific domains",
                    "$ref": "#/definitions/schemaTlsInterceptionPolicy"
                },
                "trusted_ca_url": {
                    "type": "string",
                    "description": "Exclusive with [volterra_trusted_ca]\nx-displayName: \"Custom Trusted CA List\"\nCustom trusted CA certificates for validating upstream server certificate",
                    "title": "Custom List"
                },
                "volterra_certificate": {
                    "description": "Exclusive with [custom_certificate]\nx-displayName: \"Volterra Signing Certificate\"\nVolterra certificates for generating intermediate certificate for TLS interception.",
                    "title": "Volterra Signing Certificate",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "volterra_trusted_ca": {
                    "description": "Exclusive with [trusted_ca_url]\nx-displayName: \"Default Trusted CA List\"\nDefault volterra trusted CA list for validating upstream server certificate",
                    "title": "Volterra List",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "VaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "x-displayname": "Vault Secret",
            "x-ves-displayorder": "1,2,3,4,5",
            "x-ves-proto-message": "ves.io.schema.VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key of the individual secret. Vault Secrets are stored as key-value pair.\n If user is only interested in one value from the map, this field should be set to the corresponding key.\n If not provided entire secret will be returned.\n\nExample: - \"key_pem\"-",
                    "title": "Key",
                    "x-displayname": "Key",
                    "x-ves-example": "key_pem"
                },
                "location": {
                    "type": "string",
                    "description": " Path to secret in Vault.\n\nExample: - \"v1/data/vhost_key\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "v1/data/vhost_key",
                    "x-ves-required": "true"
                },
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Vault.\n\nExample: - \"vault-vh-provider\"-\nRequired: YES",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "vault-vh-provider",
                    "x-ves-required": "true"
                },
                "secret_encoding": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "version": {
                    "type": "integer",
                    "description": " Version of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\n If not provided latest version will be returned.\n\nExample: - \"1\"-",
                    "title": "Version",
                    "format": "int64",
                    "x-displayname": "Version",
                    "x-ves-example": "1"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "WingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "x-displayname": "Wingman Secret",
            "x-ves-proto-message": "ves.io.schema.WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " Name of the secret.\n\nExample: - \"ChargeBack-API-Key\"-\nRequired: YES",
                    "title": "Name",
                    "x-displayname": "Name",
                    "x-ves-example": "ChargeBack-API-Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                }
            }
        },
        "siteCoordinates": {
            "type": "object",
            "description": "Coordinates of the site which provides the site physical location",
            "title": "Site Coordinates",
            "x-displayname": "Site Coordinates",
            "x-ves-proto-message": "ves.io.schema.site.Coordinates",
            "properties": {
                "latitude": {
                    "type": "number",
                    "description": " Latitude of the site location",
                    "title": "latitude",
                    "format": "float",
                    "x-displayname": "Latitude"
                },
                "longitude": {
                    "type": "number",
                    "description": " longitude of site location",
                    "title": "longitude",
                    "format": "float",
                    "x-displayname": "Longitude"
                }
            }
        },
        "sitePublishVIPParamsPerAz": {
            "type": "object",
            "description": "Per AZ parameters needed to publish VIP for publci cloud sites",
            "title": "Publish VIP Params Per AZ",
            "x-displayname": "Publish VIP Params Per AZ",
            "x-ves-proto-message": "ves.io.schema.site.PublishVIPParamsPerAz",
            "properties": {
                "az_name": {
                    "type": "string",
                    "description": " Name of the Availability zone\n\nExample: - \"us-east-2a\"-",
                    "title": "AZ Name",
                    "x-displayname": "AZ Name",
                    "x-ves-example": "us-east-2a"
                },
                "inside_vip": {
                    "type": "array",
                    "description": " List of Inside VIPs for an AZ\n\nExample: - \"192.168.0.156\"-",
                    "title": "Inside VIP(s)",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Inside VIP(s)",
                    "x-ves-example": "192.168.0.156"
                },
                "inside_vip_cname": {
                    "type": "string",
                    "description": " CNAME value for the inside VIP,\n These are usually public cloud generated CNAME\n\nExample: - \"test.56670-387196482.useast2.ves.io\"-",
                    "title": "Inside VIP CNAME",
                    "x-displayname": "Inside VIP CNAME",
                    "x-ves-example": "test.56670-387196482.useast2.ves.io"
                },
                "outside_vip": {
                    "type": "array",
                    "description": " List of Outside VIPs for an AZ\n\nExample: - \"192.168.0.156\"-\nRequired: YES",
                    "title": "Outside VIP(s)",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Outside VIP(s)",
                    "x-ves-example": "192.168.0.156",
                    "x-ves-required": "true"
                },
                "outside_vip_cname": {
                    "type": "string",
                    "description": " CNAME value for the outside VIP\n These are usually public cloud generated CNAME\n\nExample: - \"test.56670-387196482.useast2.ves.io\"-",
                    "title": "Outside VIP CNAME",
                    "x-displayname": "Outside VIP CNAME",
                    "x-ves-example": "test.56670-387196482.useast2.ves.io"
                }
            }
        },
        "siteSiteState": {
            "type": "string",
            "description": "State of Site defines in which operational state site itself is.\n\nSite is online and operational.\nSite is in provisioning state. For instance during site deployment or switching to different connected Regional Edge.\nSite is in process of upgrade. It transition to ONLINE or FAILED state.\nSite is in Standby before goes to ONLINE. This is mainly for Regional Edge sites to do their verification before they go to ONLINE state.\nSite is in failed state. It failed during provisioning or upgrade phase. Site Status Objects contain more details.\nReregistration was requested\nReregistration is in progress and maurice is waiting for nodes\nSite deletion is in progress\nSite is waiting for registration",
            "title": "SiteState",
            "enum": [
                "ONLINE",
                "PROVISIONING",
                "UPGRADING",
                "STANDBY",
                "FAILED",
                "REREGISTRATION",
                "WAITINGNODES",
                "DECOMMISSIONING",
                "WAITING_FOR_REGISTRATION"
            ],
            "default": "ONLINE",
            "x-displayname": "Site State",
            "x-ves-proto-enum": "ves.io.schema.site.SiteState"
        },
        "viewsAzureSubnetChoiceType": {
            "type": "object",
            "description": "Parameters for Azure subnet",
            "title": "Azure Cloud Subnet",
            "x-displayname": "Azure Subnet",
            "x-ves-oneof-field-choice": "[\"subnet\",\"subnet_param\"]",
            "x-ves-proto-message": "ves.io.schema.views.AzureSubnetChoiceType",
            "properties": {
                "subnet": {
                    "description": "Exclusive with [subnet_param]\nx-displayName: \"Existing Subnet\"\nInformation about existing subnet.",
                    "title": "Existing Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetType"
                },
                "subnet_param": {
                    "description": "Exclusive with [subnet]\nx-displayName: \"New Subnet\"\nParameters for creating new subnet.",
                    "title": "New Subnet",
                    "$ref": "#/definitions/viewsCloudSubnetParamType"
                }
            }
        },
        "viewsAzureSubnetType": {
            "type": "object",
            "description": "Parameters for Azure subnet",
            "title": "Azure Cloud Subnet",
            "x-displayname": "Azure Subnet",
            "x-ves-displayorder": "3,1",
            "x-ves-oneof-field-resource_group_choice": "[\"subnet_resource_grp\",\"vnet_resource_group\"]",
            "x-ves-proto-message": "ves.io.schema.views.AzureSubnetType",
            "properties": {
                "subnet_name": {
                    "type": "string",
                    "description": " Name of existing subnet.\n\nExample: - \"MySubnet\"-\nRequired: YES",
                    "title": "Existing Subnet Name",
                    "x-displayname": "Subnet Name",
                    "x-ves-example": "MySubnet",
                    "x-ves-required": "true"
                },
                "subnet_resource_grp": {
                    "type": "string",
                    "description": "Exclusive with [vnet_resource_group]\nx-displayName: \"Resource Group Name\"\nSpecify name of Resource Group",
                    "title": "subnet_resource_grp"
                },
                "vnet_resource_group": {
                    "description": "Exclusive with [subnet_resource_grp]\nx-displayName: \"Vnet Resource Group\"\nUse the same Resource Group as the Vnet",
                    "title": "vnet_resource_group",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "viewsAzureVnetChoiceType": {
            "type": "object",
            "description": "This defines choice about Azure Vnet for a view",
            "title": "Azure Vnet choice",
            "x-displayname": "Azure Vnet choice",
            "x-ves-oneof-field-choice": "[\"existing_vnet\",\"new_vnet\"]",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetChoiceType",
            "properties": {
                "existing_vnet": {
                    "description": "Exclusive with [new_vnet]\nx-displayName: \"Existing Vnet\"\nInformation about existing Vnet",
                    "title": "Existing VPC",
                    "$ref": "#/definitions/viewsAzureVnetType"
                },
                "new_vnet": {
                    "description": "Exclusive with [existing_vnet]\nx-displayName: \"New Vnet Parameters\"\nParameters for creating new Vnet",
                    "title": "New VPC",
                    "$ref": "#/definitions/viewsAzureVnetParamsType"
                }
            }
        },
        "viewsAzureVnetOneInterfaceNodeARType": {
            "type": "object",
            "description": "Parameters for creating Single interface Node for Alternate Region",
            "title": "Single Interface Node for Alternate Region",
            "x-displayname": "Single Interface Node for Alternate Region",
            "x-ves-displayorder": "1,2,3,4",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetOneInterfaceNodeARType",
            "properties": {
                "fault_domain": {
                    "type": "integer",
                    "description": " Namuber of fault domains to be used while creating the availability set\n\nExample: - \"1\"-",
                    "title": "Number of fault domains",
                    "format": "int64",
                    "x-displayname": "Number of fault domains",
                    "x-ves-example": "1"
                },
                "local_subnet": {
                    "description": " Subnets for the site local interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for local Interface"
                },
                "node_number": {
                    "type": "integer",
                    "description": " Number of main nodes to create, either 1 or 3.\nRequired: YES",
                    "title": "Number of main nodes",
                    "format": "int64",
                    "x-displayname": "Number of main nodes",
                    "x-ves-required": "true"
                },
                "update_domain": {
                    "type": "integer",
                    "description": " Namuber of update domains to be used while creating the availability set\n\nExample: - \"1\"-",
                    "title": "Number of update domains",
                    "format": "int64",
                    "x-displayname": "Number of update domains",
                    "x-ves-example": "1"
                }
            }
        },
        "viewsAzureVnetOneInterfaceNodeType": {
            "type": "object",
            "description": "Parameters for creating Single interface Node in one AZ",
            "title": "Single Interface Node",
            "x-displayname": "Single Interface Node",
            "x-ves-displayorder": "1,4,2",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetOneInterfaceNodeType",
            "properties": {
                "azure_az": {
                    "type": "string",
                    "description": " Azure availability zone.\n\nExample: - \"1\"-\nRequired: YES",
                    "title": "Azure AZ",
                    "x-displayname": "Azure AZ name",
                    "x-ves-example": "1",
                    "x-ves-required": "true"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " x-example \"80\"\n Disk size to be used for this instance in GiB. 80 is 80 GiB",
                    "title": "Cloud Disk size",
                    "format": "int64",
                    "x-displayname": "Cloud Disk Size"
                },
                "local_subnet": {
                    "description": " Subnets for the site local interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for local Interface"
                }
            }
        },
        "viewsAzureVnetParamsType": {
            "type": "object",
            "description": "Parameters to create a new Azure Vnet",
            "title": "Azure Vnet Parameters",
            "x-displayname": "Azure Vnet Parameters",
            "x-ves-displayorder": "3,2",
            "x-ves-oneof-field-name_choice": "[\"autogenerate\",\"name\"]",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetParamsType",
            "properties": {
                "autogenerate": {
                    "description": "Exclusive with [name]\nx-displayName: \"Autogenerate Vnet Name\"\nAutogenerate the Vnet Name",
                    "title": "autogenerate",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "name": {
                    "type": "string",
                    "description": "Exclusive with [autogenerate]\nx-displayName: \"Choose Vnet Name\"\nSpecify the Vnet Name",
                    "title": "name"
                },
                "primary_ipv4": {
                    "type": "string",
                    "description": " IPv4 CIDR block for this Vnet. It has to be private address space.\n\nExample: - \"10.1.0.0/16\"-\nRequired: YES",
                    "title": "IPv4 CIDR block",
                    "x-displayname": "IPv4 CIDR block",
                    "x-ves-example": "10.1.0.0/16",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsAzureVnetTwoInterfaceNodeARType": {
            "type": "object",
            "description": "Parameters for creating two interface Node in one AZ",
            "title": "Two Interface Node",
            "x-displayname": "Two Interface Node",
            "x-ves-displayorder": "1,2,3,4,5",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetTwoInterfaceNodeARType",
            "properties": {
                "fault_domain": {
                    "type": "integer",
                    "description": " Namuber of fault domains to be used while creating the availability set\n\nExample: - \"1\"-",
                    "title": "Number of fault domains",
                    "format": "int64",
                    "x-displayname": "Number of fault domains",
                    "x-ves-example": "1"
                },
                "inside_subnet": {
                    "description": " Subnets for the inside interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for Inside Interface"
                },
                "node_number": {
                    "type": "integer",
                    "description": " Number of main nodes to create, either 1 or 3.\nRequired: YES",
                    "title": "Number of main nodes",
                    "format": "int64",
                    "x-displayname": "Number of main nodes",
                    "x-ves-required": "true"
                },
                "outside_subnet": {
                    "description": " Subnets for the outside interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for Outside Interface"
                },
                "update_domain": {
                    "type": "integer",
                    "description": " Namuber of update domains to be used while creating the availability set\n\nExample: - \"1\"-",
                    "title": "Number of update domains",
                    "format": "int64",
                    "x-displayname": "Number of update domains",
                    "x-ves-example": "1"
                }
            }
        },
        "viewsAzureVnetTwoInterfaceNodeType": {
            "type": "object",
            "description": "Parameters for creating two interface Node in one AZ",
            "title": "Two Interface Node",
            "x-displayname": "Two Interface Node",
            "x-ves-displayorder": "1,2,5,3",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetTwoInterfaceNodeType",
            "properties": {
                "azure_az": {
                    "type": "string",
                    "description": " Azure availability zone.\n\nExample: - \"1\"-\nRequired: YES",
                    "title": "Azure AZ",
                    "x-displayname": "Azure AZ Name",
                    "x-ves-example": "1",
                    "x-ves-required": "true"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " x-example \"80\"\n Disk size to be used for this instance in GiB. 80 is 80 GiB",
                    "title": "Cloud Disk size",
                    "format": "int64",
                    "x-displayname": "Cloud Disk Size"
                },
                "inside_subnet": {
                    "description": " Subnets for the inside interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for Inside Interface"
                },
                "outside_subnet": {
                    "description": " Subnets for the outside interface of the node",
                    "title": "Subnet",
                    "$ref": "#/definitions/viewsAzureSubnetChoiceType",
                    "x-displayname": "Subnet for Outside Interface"
                }
            }
        },
        "viewsAzureVnetType": {
            "type": "object",
            "description": "Resource group and name of existing Azure Vnet",
            "title": "Azure Existing Vnet Type",
            "x-displayname": "Azure Existing Vnet Type",
            "x-ves-proto-message": "ves.io.schema.views.AzureVnetType",
            "properties": {
                "resource_group": {
                    "type": "string",
                    "description": " x-example:\"MyResourceGroup\"\n Resource group of existing Vnet\nRequired: YES",
                    "title": "Existing Vnet Resource Group",
                    "x-displayname": "Existing Vnet Resource Group",
                    "x-ves-required": "true"
                },
                "vnet_name": {
                    "type": "string",
                    "description": " x-example:\"MyVnet\"\n Name of existing Vnet\nRequired: YES",
                    "title": "Existing Vnet Name",
                    "x-displayname": "Existing Vnet Name",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsCloudSubnetParamType": {
            "type": "object",
            "description": "Parameters for creating a new cloud subnet",
            "title": "Cloud Subnet Param",
            "x-displayname": "New Cloud Subnet Parameters",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.views.CloudSubnetParamType",
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": " IPv4 subnet prefix for this subnet\n\nExample: - \"10.1.2.0/24\"-\nRequired: YES",
                    "title": "IPv4 Subnet",
                    "x-displayname": "IPv4 Subnet",
                    "x-ves-example": "10.1.2.0/24",
                    "x-ves-required": "true"
                },
                "ipv6": {
                    "type": "string",
                    "description": " IPv6 subnet prefix for this subnet\n\nExample: - \"1234:568:abcd:9100::/64\"-",
                    "title": "IPv6 Subnet",
                    "x-displayname": "IPv6 Subnet",
                    "x-ves-example": "1234:568:abcd:9100::/64"
                }
            }
        },
        "viewsGlobalConnectorType": {
            "type": "object",
            "description": "Global network reference for direct connection",
            "title": "Global Network",
            "x-displayname": "Global Network",
            "x-ves-proto-message": "ves.io.schema.views.GlobalConnectorType",
            "properties": {
                "global_vn": {
                    "description": " Select Virtual Network of Global Type\nRequired: YES",
                    "title": "Virtual Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Global Virtual Network",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsGlobalNetworkConnectionListType": {
            "type": "object",
            "description": "List of global network connections",
            "title": "Global Network Connection List",
            "x-displayname": "Global Network Connection List",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionListType",
            "properties": {
                "global_network_connections": {
                    "type": "array",
                    "description": " Global network connections\nRequired: YES",
                    "title": "Global Network Connections",
                    "items": {
                        "$ref": "#/definitions/viewsGlobalNetworkConnectionType"
                    },
                    "x-displayname": "Global Network Connections",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsGlobalNetworkConnectionType": {
            "type": "object",
            "description": "Global network connection",
            "title": "Global Network Connection",
            "x-displayname": "Global Network Connection",
            "x-ves-oneof-field-connection_choice": "[\"sli_to_global_dr\",\"slo_to_global_dr\"]",
            "x-ves-oneof-field-forward_proxy_choice": "[\"disable_forward_proxy\",\"enable_forward_proxy\"]",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionType",
            "properties": {
                "disable_forward_proxy": {
                    "description": "Exclusive with [enable_forward_proxy]\nx-displayName: \"Disable Forward Proxy\"\nForward Proxy is disabled for this connector",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "enable_forward_proxy": {
                    "description": "Exclusive with [disable_forward_proxy]\nx-displayName: \"Enable Forward Proxy\"\nForward Proxy is enabled for this connector",
                    "title": "Enable Forward Proxy",
                    "$ref": "#/definitions/schemaForwardProxyConfigType"
                },
                "sli_to_global_dr": {
                    "description": "Exclusive with [slo_to_global_dr]\nx-displayName: \"Direct, Site Local Inside to a Global Network\"\nSite local inside is connected directly to a given global network",
                    "title": "Site Local Inside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType"
                },
                "slo_to_global_dr": {
                    "description": "Exclusive with [sli_to_global_dr]\nx-displayName: \"Direct, Site Local Outside to a Global Network\"\nSite local outside is connected directly to a given global network",
                    "title": "Site Local Outside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType"
                }
            }
        },
        "viewsOperatingSystemType": {
            "type": "object",
            "description": "This is to specify volterra operating version choice",
            "title": "Operating System Version",
            "x-displayname": "Operating System Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-operating_system_version_choice": "[\"default_os_version\",\"operating_system_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.OperatingSystemType",
            "properties": {
                "default_os_version": {
                    "description": "Exclusive with [operating_system_version]\nx-displayName: \"Latest OS Version\"\nWill assign latest available OS version",
                    "title": "Default OS Version",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": "Exclusive with [default_os_version]\nx-displayName: \"Operating System Version\"\nx-example: \"7.2009.10\"\nOperating System Version is optional parameter, which allows to specify target OS version for particular site e.g. 7.2009.10.",
                    "title": "Operating System Version"
                }
            }
        },
        "viewsSiteStaticRoutesListType": {
            "type": "object",
            "description": "List of static routes",
            "title": "Static Route List Type",
            "x-displayname": "Static Route List Type",
            "x-ves-proto-message": "ves.io.schema.views.SiteStaticRoutesListType",
            "properties": {
                "static_route_list": {
                    "type": "array",
                    "description": " List of Static routes\nRequired: YES",
                    "title": "List of Static Routes",
                    "items": {
                        "$ref": "#/definitions/viewsSiteStaticRoutesType"
                    },
                    "x-displayname": "List of Static Routes",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsSiteStaticRoutesType": {
            "type": "object",
            "description": "Different ways to configure static routes",
            "title": "Site Static Route Config Modes",
            "x-displayname": "Site Static Route Config Modes",
            "x-ves-oneof-field-config_mode_choice": "[\"custom_static_route\",\"simple_static_route\"]",
            "x-ves-proto-message": "ves.io.schema.views.SiteStaticRoutesType",
            "properties": {
                "custom_static_route": {
                    "description": "Exclusive with [simple_static_route]\nx-displayName: \"Custom Static Route\"\nUse Custom static route to configure all advanced options",
                    "title": "Custom Static Route",
                    "$ref": "#/definitions/schemaStaticRouteType"
                },
                "simple_static_route": {
                    "type": "string",
                    "description": "Exclusive with [custom_static_route]\nx-displayName: \"Simple Static Route\"\nx-example: \"10.5.1.0/24\"\nUse simple static route for prefix pointing to single interface in the network",
                    "title": "Simple Static Route"
                }
            }
        },
        "viewsVolterraSoftwareType": {
            "type": "object",
            "description": "This is to specify volterra software version choice",
            "title": "Volterra Software Version",
            "x-displayname": "Volterra Software Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-volterra_sw_version_choice": "[\"default_sw_version\",\"volterra_software_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.VolterraSoftwareType",
            "properties": {
                "default_sw_version": {
                    "description": "Exclusive with [volterra_software_version]\nx-displayName: \"Latest SW Version\"\nWill assign latest available SW version",
                    "title": "Default SW Version",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": "Exclusive with [default_sw_version]\nx-displayName: \"Volterra Software Version\"\nx-example: \"crt-20210329-1002\"\nVolterra Software Version is optional parameter, which allows to specify target SW version for particular site e.g. crt-20210329-1002.",
                    "title": "Volterra Software Version"
                }
            }
        },
        "viewsazure_vnet_siteCreateSpecType": {
            "type": "object",
            "description": "Shape of the Azure Vnet site specification",
            "title": "CreateSpecType",
            "x-displayname": "Create Azure Vnet site",
            "x-ves-oneof-field-deployment": "[\"assisted\",\"azure_cred\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-region_choice": "[\"alternate_region\",\"azure_region\"]",
            "x-ves-oneof-field-site_type": "[\"ingress_egress_gw\",\"ingress_egress_gw_ar\",\"ingress_gw\",\"ingress_gw_ar\",\"voltstack_cluster\",\"voltstack_cluster_ar\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.CreateSpecType",
            "properties": {
                "address": {
                    "type": "string",
                    "description": " Site's geographical address that can be used determine its latitude and longitude.\n\nExample: - \"123 Street, city, country, postal code\"-",
                    "x-displayname": "Geographical Address",
                    "x-ves-example": "123 Street, city, country, postal code"
                },
                "alternate_region": {
                    "type": "string",
                    "description": "Exclusive with [azure_region]\n"
                },
                "assisted": {
                    "description": "Exclusive with [azure_cred]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "azure_cred": {
                    "description": "Exclusive with [assisted]\n",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "azure_region": {
                    "type": "string",
                    "description": "Exclusive with [alternate_region]\n"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Co-ordinates"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " Disk size to be used for this instance in GiB. 80 is 80 GiB\n\nExample: - \"80\"-",
                    "format": "int64",
                    "x-displayname": "Cloud Disk Size",
                    "x-ves-example": "80"
                },
                "ingress_egress_gw": {
                    "description": "Exclusive with [ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwType"
                },
                "ingress_egress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwARType"
                },
                "ingress_gw": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwType"
                },
                "ingress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwARType"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "machine_type": {
                    "type": "string",
                    "description": " Select Instance size based on performance needed\n\nExample: - \"Standard_D3_v2\"-",
                    "x-displayname": "Azure Machine Type for Node",
                    "x-ves-example": "Standard_D3_v2"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\n",
                    "format": "int64"
                },
                "os": {
                    "description": " Operating System Details",
                    "title": "Operating System",
                    "$ref": "#/definitions/viewsOperatingSystemType",
                    "x-displayname": "Operating System"
                },
                "resource_group": {
                    "type": "string",
                    "description": " Azure resource group for resources that will be created\n\nExample: - \"my-resources\"-\nRequired: YES",
                    "x-displayname": "Resource Group",
                    "x-ves-example": "my-resources",
                    "x-ves-required": "true"
                },
                "ssh_key": {
                    "type": "string",
                    "description": " Public SSH key for accessing the site.\n\nExample: - \"ssh-rsa AAAAB...\"-",
                    "x-displayname": "Public SSH key",
                    "x-ves-example": "ssh-rsa AAAAB..."
                },
                "sw": {
                    "description": " Volterra Software Details",
                    "title": "Volterra Software",
                    "$ref": "#/definitions/viewsVolterraSoftwareType",
                    "x-displayname": "Volterra Software"
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\n",
                    "format": "int64"
                },
                "vnet": {
                    "description": " Choice of using existing Vnet or create new Vnet\nRequired: YES",
                    "$ref": "#/definitions/viewsAzureVnetChoiceType",
                    "x-displayname": "Vnet",
                    "x-ves-required": "true"
                },
                "voltstack_cluster": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterType"
                },
                "voltstack_cluster_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterARType"
                }
            }
        },
        "viewsazure_vnet_siteGetSpecType": {
            "type": "object",
            "description": "Shape of the Azure Vnet site specification",
            "title": "GetSpecType",
            "x-displayname": "Get Azure Vnet site",
            "x-ves-oneof-field-deployment": "[\"assisted\",\"azure_cred\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-region_choice": "[\"alternate_region\",\"azure_region\"]",
            "x-ves-oneof-field-site_type": "[\"ingress_egress_gw\",\"ingress_egress_gw_ar\",\"ingress_gw\",\"ingress_gw_ar\",\"voltstack_cluster\",\"voltstack_cluster_ar\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.GetSpecType",
            "properties": {
                "address": {
                    "type": "string",
                    "description": " Site's geographical address that can be used determine its latitude and longitude.\n\nExample: - \"123 Street, city, country, postal code\"-",
                    "x-displayname": "Geographical Address",
                    "x-ves-example": "123 Street, city, country, postal code"
                },
                "alternate_region": {
                    "type": "string",
                    "description": "Exclusive with [azure_region]\n"
                },
                "assisted": {
                    "description": "Exclusive with [azure_cred]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "azure_cred": {
                    "description": "Exclusive with [assisted]\n",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "azure_region": {
                    "type": "string",
                    "description": "Exclusive with [alternate_region]\n"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Co-ordinates"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " Disk size to be used for this instance in GiB. 80 is 80 GiB\n\nExample: - \"80\"-",
                    "format": "int64",
                    "x-displayname": "Cloud Disk Size",
                    "x-ves-example": "80"
                },
                "ingress_egress_gw": {
                    "description": "Exclusive with [ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwType"
                },
                "ingress_egress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwARType"
                },
                "ingress_gw": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwType"
                },
                "ingress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw voltstack_cluster voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwARType"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "machine_type": {
                    "type": "string",
                    "description": " Select Instance size based on performance needed\n\nExample: - \"Standard_D3_v2\"-",
                    "x-displayname": "Azure Machine Type for Node",
                    "x-ves-example": "Standard_D3_v2"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\n",
                    "format": "int64"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version for this site.\n\nExample: - \"value\"-",
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value"
                },
                "resource_group": {
                    "type": "string",
                    "description": " Azure resource group for resources that will be created\n\nExample: - \"my-resources\"-\nRequired: YES",
                    "x-displayname": "Resource Group",
                    "x-ves-example": "my-resources",
                    "x-ves-required": "true"
                },
                "site_state": {
                    "$ref": "#/definitions/siteSiteState"
                },
                "ssh_key": {
                    "type": "string",
                    "description": " Public SSH key for accessing the site.\n\nExample: - \"ssh-rsa AAAAB...\"-",
                    "x-displayname": "Public SSH key",
                    "x-ves-example": "ssh-rsa AAAAB..."
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\n",
                    "format": "int64"
                },
                "vip_params_per_az": {
                    "type": "array",
                    "description": " VIP Parameters Per AZ.",
                    "items": {
                        "$ref": "#/definitions/sitePublishVIPParamsPerAz"
                    },
                    "x-displayname": "VIP Params Per AZ"
                },
                "vnet": {
                    "description": " Choice of using existing Vnet or create new Vnet\nRequired: YES",
                    "$ref": "#/definitions/viewsAzureVnetChoiceType",
                    "x-displayname": "Vnet",
                    "x-ves-required": "true"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " Desired Volterra software version for this site, a string matching released set of software components.\n\nExample: - \"value\"-",
                    "x-displayname": "Software Version",
                    "x-ves-example": "value"
                },
                "voltstack_cluster": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster_ar]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterType"
                },
                "voltstack_cluster_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster]\n",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterARType"
                }
            }
        },
        "viewsazure_vnet_siteGlobalSpecType": {
            "type": "object",
            "description": "Shape of the Azure Vnet site specification",
            "title": "GlobalSpecType",
            "x-displayname": "Global Specification",
            "x-ves-oneof-field-deployment": "[\"assisted\",\"azure_cred\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-region_choice": "[\"alternate_region\",\"azure_region\"]",
            "x-ves-oneof-field-site_type": "[\"ingress_egress_gw\",\"ingress_egress_gw_ar\",\"ingress_gw\",\"ingress_gw_ar\",\"voltstack_cluster\",\"voltstack_cluster_ar\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.GlobalSpecType",
            "properties": {
                "address": {
                    "type": "string",
                    "description": " Site's geographical address that can be used determine its latitude and longitude.\n\nExample: - \"123 Street, city, country, postal code\"-",
                    "title": "address",
                    "x-displayname": "Geographical Address",
                    "x-ves-example": "123 Street, city, country, postal code"
                },
                "alternate_region": {
                    "type": "string",
                    "description": "Exclusive with [azure_region]\nx-displayName: \"Alternate Azure Region Name\"\nx-example: \"northcentralus\"\nName of the azure region which does not support availability zones.",
                    "title": "Alternate Azure Region Name"
                },
                "assisted": {
                    "description": "Exclusive with [azure_cred]\nx-displayName: \"Assisted Deployment\"\nIn assisted deployment get Azure parameters generated in status of this objects and run volterra provided terraform script.",
                    "title": "Assisted Deployment",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "azure_cred": {
                    "description": "Exclusive with [assisted]\nx-displayName: \"Automatic Deployment\"\nReference to Azure credentials for automatic deployment",
                    "title": "Automatic Deployment",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "azure_region": {
                    "type": "string",
                    "description": "Exclusive with [alternate_region]\nx-displayName: \"Recommended Azure Region Name\"\nx-example: \"eastus\"\nName of the azure region which supports availability zones.",
                    "title": "Recommended Azure Region Name"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "title": "coordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Co-ordinates"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " Disk size to be used for this instance in GiB. 80 is 80 GiB\n\nExample: - \"80\"-",
                    "title": "Cloud Disk size",
                    "format": "int64",
                    "x-displayname": "Cloud Disk Size",
                    "x-ves-example": "80"
                },
                "ingress_egress_gw": {
                    "description": "Exclusive with [ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress/Egress Gateway (Two Interface) on Recommended Region\"\nTwo interface site is useful when site is used as ingress/egress gateway to the Vnet.",
                    "title": "Ingress/Egress Gateway on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwType"
                },
                "ingress_egress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress/Egress Gateway (Two Interface) on Alternate Region\"\nTwo interface site is useful when site is used as ingress/egress gateway to the Vnet.",
                    "title": "Ingress/Egress Gateway on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwARType"
                },
                "ingress_gw": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress Gateway (One Interface) on Recommended Region\"\nOne interface site is useful when site is only used as ingress gateway to the Vnet.",
                    "title": "Ingress Gateway on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwType"
                },
                "ingress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress Gateway (One Interface) on Alternate Region\"\nOne interface site is useful when site is only used as ingress gateway to the Vnet.",
                    "title": "Ingress Gateway on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwARType"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\nx-displayName: \"Enable Logs Streaming\"\nSelect log receiver for logs streaming",
                    "title": "Disable Logs Streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\nx-displayName: \"Disable Logs Streaming\"\nLogs Streaming is disabled",
                    "title": "Disable Logs Receiver",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "machine_type": {
                    "type": "string",
                    "description": " Select Instance size based on performance needed\n\nExample: - \"Standard_D3_v2\"-",
                    "title": "Machine Type",
                    "x-displayname": "Azure Machine Type for Node",
                    "x-ves-example": "Standard_D3_v2"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\nx-displayName: \"No Worker Nodes\"\nWorker nodes is set to zero",
                    "title": "No Worker Nodes",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\nx-displayName: \"Desired Worker Nodes Per AZ\"\nx-example: \"2\"\nDesired Worker Nodes Per AZ. Max limit is up to 21",
                    "title": "Desired Worker Nodes Per AZ",
                    "format": "int64"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version for this site.\n\nExample: - \"value\"-",
                    "title": "operating_system_version",
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value"
                },
                "os": {
                    "description": " Operating System Details",
                    "title": "Operating System",
                    "$ref": "#/definitions/viewsOperatingSystemType",
                    "x-displayname": "Operating System"
                },
                "resource_group": {
                    "type": "string",
                    "description": " Azure resource group for resources that will be created\n\nExample: - \"my-resources\"-\nRequired: YES",
                    "title": "Resource Group",
                    "x-displayname": "Resource Group",
                    "x-ves-example": "my-resources",
                    "x-ves-required": "true"
                },
                "ssh_key": {
                    "type": "string",
                    "description": " Public SSH key for accessing the site.\n\nExample: - \"ssh-rsa AAAAB...\"-",
                    "title": "Public SSH key",
                    "x-displayname": "Public SSH key",
                    "x-ves-example": "ssh-rsa AAAAB..."
                },
                "sw": {
                    "description": " Volterra Software Details",
                    "title": "Volterra Software",
                    "$ref": "#/definitions/viewsVolterraSoftwareType",
                    "x-displayname": "Volterra Software"
                },
                "tf_params": {
                    "description": " Reference to view internal object",
                    "title": "Reference to terraform parameters",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Terraform Parameters"
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\nx-displayName: \"Total Number of Worker Nodes for a Site\"\nx-example: \"1\"\nTotal number of worker nodes to be deployed across all AZ's used in the Site",
                    "title": "Total Number of Worker Nodes for a Site",
                    "format": "int64"
                },
                "view_internal": {
                    "description": " Reference to view internal object",
                    "title": "view_internal",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "View Internal"
                },
                "vip_params_per_az": {
                    "type": "array",
                    "description": " VIP Parameters Per AZ.",
                    "title": "VIP Params Per Az",
                    "items": {
                        "$ref": "#/definitions/sitePublishVIPParamsPerAz"
                    },
                    "x-displayname": "VIP Params Per AZ"
                },
                "vnet": {
                    "description": " Choice of using existing Vnet or create new Vnet\nRequired: YES",
                    "title": "Vnet",
                    "$ref": "#/definitions/viewsAzureVnetChoiceType",
                    "x-displayname": "Vnet",
                    "x-ves-required": "true"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " Desired Volterra software version for this site, a string matching released set of software components.\n\nExample: - \"value\"-",
                    "title": "volterra_software_version",
                    "x-displayname": "Software Version",
                    "x-ves-example": "value"
                },
                "voltstack_cluster": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster_ar]\nx-displayName: \"Voltstack Cluster (One Interface) on Recommended Region\"\nVoltstack Cluster using single interface, useful for deploying K8s cluster.",
                    "title": "Voltstack Cluster on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterType"
                },
                "voltstack_cluster_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster]\nx-displayName: \"Voltstack Cluster (One Interface) on Alternate Region\"\nVoltstack Cluster using single interface, useful for deploying K8s cluster.",
                    "title": "Voltstack Cluster on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterARType"
                }
            }
        },
        "viewsazure_vnet_siteReplaceSpecType": {
            "type": "object",
            "description": "Shape of the Azure Vnet site replace specification",
            "title": "ReplaceSpecType",
            "x-displayname": "Replace Azure Vnet site",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-site_type": "[\"ingress_egress_gw\",\"ingress_egress_gw_ar\",\"ingress_gw\",\"ingress_gw_ar\",\"voltstack_cluster\",\"voltstack_cluster_ar\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.azure_vnet_site.ReplaceSpecType",
            "properties": {
                "address": {
                    "type": "string",
                    "description": " Site's geographical address that can be used determine its latitude and longitude.\n\nExample: - \"123 Street, city, country, postal code\"-",
                    "x-displayname": "Geographical Address",
                    "x-ves-example": "123 Street, city, country, postal code"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Co-ordinates"
                },
                "ingress_egress_gw": {
                    "description": "Exclusive with [ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress Egress Gateway on Recommended Region\"\nIngress-egress gateway choice can not be changed, edit networking config.",
                    "title": "Ingress Egress Gateway on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwReplaceType"
                },
                "ingress_egress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_gw ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress/Egress Gateway (Two Interface) on Alternate Region\"\nTwo interface site is useful when site is used as ingress/egress gateway to the Vnet.",
                    "title": "Ingress/Egress Gateway on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressEgressGwARReplaceType"
                },
                "ingress_gw": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw_ar voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress Gateway on Recommended Region\"\nIngress gateway choice can not be changed (no config available for editing)",
                    "title": "Ingress Gateway on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwReplaceType"
                },
                "ingress_gw_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw voltstack_cluster voltstack_cluster_ar]\nx-displayName: \"Ingress Gateway (One Interface) on Alternate Region\"\nOne interface site is useful when site is only used as ingress gateway to the Vnet.",
                    "title": "Ingress Gateway on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetIngressGwARReplaceType"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\n",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\n",
                    "format": "int64"
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\n",
                    "format": "int64"
                },
                "voltstack_cluster": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster_ar]\nx-displayName: \"Voltstack Cluster (One Interface) on Recommended Region\"\nVoltstack Cluster using single interface, useful for deploying K8s cluster.",
                    "title": "Voltstack Cluster on Recommended Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterReplaceType"
                },
                "voltstack_cluster_ar": {
                    "description": "Exclusive with [ingress_egress_gw ingress_egress_gw_ar ingress_gw ingress_gw_ar voltstack_cluster]\nx-displayName: \"Voltstack Cluster (One Interface) on Alternate Region\"\nVoltstack Cluster using single interface, useful for deploying K8s cluster.",
                    "title": "Voltstack Cluster on Alternate Region",
                    "$ref": "#/definitions/azure_vnet_siteAzureVnetVoltstackClusterARReplaceType"
                }
            }
        }
    },
    "x-displayname": "Configure Azure Vnet Site",
    "x-ves-proto-file": "ves.io/schema/views/azure_vnet_site/public_crudapi.proto"
}`

// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package common_waf

import (
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/svcfw"
)

func initializeValidatorRegistry(vr map[string]db.Validator) {
	vr["ves.io.schema.views.common_waf.APIEndpointProtectionRule"] = APIEndpointProtectionRuleValidator()
	vr["ves.io.schema.views.common_waf.APIGroupProtectionRule"] = APIGroupProtectionRuleValidator()
	vr["ves.io.schema.views.common_waf.APIGroups"] = APIGroupsValidator()
	vr["ves.io.schema.views.common_waf.APIProtectionRuleAction"] = APIProtectionRuleActionValidator()
	vr["ves.io.schema.views.common_waf.APIProtectionRules"] = APIProtectionRulesValidator()
	vr["ves.io.schema.views.common_waf.APIRateLimit"] = APIRateLimitValidator()
	vr["ves.io.schema.views.common_waf.APISpecificationSettings"] = APISpecificationSettingsValidator()
	vr["ves.io.schema.views.common_waf.ApiDefinitionList"] = ApiDefinitionListValidator()
	vr["ves.io.schema.views.common_waf.ApiDiscoverySetting"] = ApiDiscoverySettingValidator()
	vr["ves.io.schema.views.common_waf.ApiEndpointDetails"] = ApiEndpointDetailsValidator()
	vr["ves.io.schema.views.common_waf.ApiEndpointRule"] = ApiEndpointRuleValidator()
	vr["ves.io.schema.views.common_waf.Audiences"] = AudiencesValidator()
	vr["ves.io.schema.views.common_waf.BasePathsType"] = BasePathsTypeValidator()
	vr["ves.io.schema.views.common_waf.BypassRateLimitingRule"] = BypassRateLimitingRuleValidator()
	vr["ves.io.schema.views.common_waf.BypassRateLimitingRules"] = BypassRateLimitingRulesValidator()
	vr["ves.io.schema.views.common_waf.ChallengeRule"] = ChallengeRuleValidator()
	vr["ves.io.schema.views.common_waf.ChallengeRuleList"] = ChallengeRuleListValidator()
	vr["ves.io.schema.views.common_waf.CustomFallThroughMode"] = CustomFallThroughModeValidator()
	vr["ves.io.schema.views.common_waf.CustomIpAllowedList"] = CustomIpAllowedListValidator()
	vr["ves.io.schema.views.common_waf.EnableChallenge"] = EnableChallengeValidator()
	vr["ves.io.schema.views.common_waf.FallThroughRule"] = FallThroughRuleValidator()
	vr["ves.io.schema.views.common_waf.HttpHeaderMatcherList"] = HttpHeaderMatcherListValidator()
	vr["ves.io.schema.views.common_waf.IPThreatCategoryListType"] = IPThreatCategoryListTypeValidator()
	vr["ves.io.schema.views.common_waf.InlineRateLimiter"] = InlineRateLimiterValidator()
	vr["ves.io.schema.views.common_waf.JWKS"] = JWKSValidator()
	vr["ves.io.schema.views.common_waf.JWTValidation"] = JWTValidationValidator()
	vr["ves.io.schema.views.common_waf.MandatoryClaims"] = MandatoryClaimsValidator()
	vr["ves.io.schema.views.common_waf.OpenApiFallThroughMode"] = OpenApiFallThroughModeValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationAllSpecEndpointsSettings"] = OpenApiValidationAllSpecEndpointsSettingsValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationCommonSettings"] = OpenApiValidationCommonSettingsValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationMode"] = OpenApiValidationModeValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationModeActive"] = OpenApiValidationModeActiveValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationModeActiveResponse"] = OpenApiValidationModeActiveResponseValidator()
	vr["ves.io.schema.views.common_waf.OpenApiValidationRule"] = OpenApiValidationRuleValidator()
	vr["ves.io.schema.views.common_waf.PolicyBasedChallenge"] = PolicyBasedChallengeValidator()
	vr["ves.io.schema.views.common_waf.RateLimitConfigType"] = RateLimitConfigTypeValidator()
	vr["ves.io.schema.views.common_waf.ReservedClaims"] = ReservedClaimsValidator()
	vr["ves.io.schema.views.common_waf.ServerUrlRule"] = ServerUrlRuleValidator()
	vr["ves.io.schema.views.common_waf.ServicePolicyList"] = ServicePolicyListValidator()
	vr["ves.io.schema.views.common_waf.SimpleClientSrcRule"] = SimpleClientSrcRuleValidator()
	vr["ves.io.schema.views.common_waf.Target"] = TargetValidator()
	vr["ves.io.schema.views.common_waf.TokenLocation"] = TokenLocationValidator()
	vr["ves.io.schema.views.common_waf.ValidateApiBySpecRule"] = ValidateApiBySpecRuleValidator()
	vr["ves.io.schema.views.common_waf.ValidationPropertySetting"] = ValidationPropertySettingValidator()
	vr["ves.io.schema.views.common_waf.ValidationSettingForHeaders"] = ValidationSettingForHeadersValidator()
	vr["ves.io.schema.views.common_waf.ValidationSettingForQueryParameters"] = ValidationSettingForQueryParametersValidator()

}

func initializeEntryRegistry(mdr *svcfw.MDRegistry) {

}

func initializeRPCRegistry(mdr *svcfw.MDRegistry) {

}

func initializeAPIGwServiceSlugsRegistry(sm map[string]string) {

}

func initializeP0PolicyRegistry(sm map[string]svcfw.P0PolicyInfo) {

}

func initializeCRUDServiceRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	var (
		csr       *svcfw.CRUDServiceRegistry
		customCSR *svcfw.CustomServiceRegistry
	)
	_, _ = csr, customCSR

}

func InitializeMDRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	initializeEntryRegistry(mdr)
	initializeValidatorRegistry(mdr.ValidatorRegistry)

	initializeCRUDServiceRegistry(mdr, isExternal)
	if isExternal {
		return
	}

	initializeRPCRegistry(mdr)
	initializeAPIGwServiceSlugsRegistry(mdr.APIGwServiceSlugs)
	initializeP0PolicyRegistry(mdr.P0PolicyRegistry)

}

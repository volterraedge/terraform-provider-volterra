//
// Copyright (c) 2018 Volterra, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.
//

package crudapi

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	object "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views/voltstack_site"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// augment methods on Object<Oper>Req from api.pb.go

// EntryConverter
func (r *ObjectCreateReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectCreateReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// create setters in object from request for oneof fields

// EntryConverter
func (r *ObjectReplaceReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectReplaceReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// create setters in object from request for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// CLIENT side

func NewObjectCreateReq(e db.Entry) (*ObjectCreateReq, error) {
	r := &ObjectCreateReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewObjectReplaceReq(e db.Entry) (*ObjectReplaceReq, error) {
	r := &ObjectReplaceReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	uid, err := e.Key()
	if err != nil {
		// See if uid can be got from Metadata.Uid
		obj := e.(*object.DBObject)
		uid = obj.GetMetadata().GetUid()

	}
	r.ObjectUid = uid
	return r, nil
}

func NewObjectGetReq(uid string, opts ...server.CRUDCallOpt) *ObjectGetReq {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}

	req := &ObjectGetReq{ObjectUid: uid, AllBackrefs: ccOpts.AllBR, BackrefTypes: ccOpts.TypesBR}
	req.IncludeReferredId = ccOpts.IncludeReferredID
	return req
}

func NewObjectListReq(opts ...server.CRUDCallOpt) *ObjectListReq {
	return &ObjectListReq{}
}

func NewObjectDeleteReq(uid string) *ObjectDeleteReq {
	return &ObjectDeleteReq{ObjectUid: uid}
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Getting from grpcClient")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp == nil {
		return nil, errors.ErrOrNil(merr)
	}
	respDetail := server.GetResponse{}
	respDetail.Entry = object.NewDBObject(nil)
	gRsp.ToObject(respDetail.Entry)
	respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	return &respDetail, errors.ErrOrNil(merr)

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	req := NewObjectListReq()
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields

	req.IncludeReferredId = cco.IncludeReferredID
	if cco.OutResourceVersion != nil {
		req.ResourceVersion = true
	}
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	return rsp, err
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {

	req := NewObjectListReq()
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields

	req.IncludeReferredId = cco.IncludeReferredID
	stream, err := c.grpcClient.ListStream(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Listing with grpc client")
	}
	lc := &crudAPIGrpcListStreamClient{stream}
	return lc, nil

}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req := NewObjectDeleteReq(key)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

type crudAPIGrpcListStreamClient struct {
	stream API_ListStreamClient
}

func (lc *crudAPIGrpcListStreamClient) RecvIDs() ([]string, error) {
	idSet := []string{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return idSet, err
	}
	for _, li := range rsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err
}

func (lc *crudAPIGrpcListStreamClient) RecvItems() ([]server.ListItem, error) {
	sliSet := []server.ListItem{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return sliSet, err
	}
	for _, li := range rsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.voltstack_site.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)
	jsn, err := req.ToJSON()
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Create")
	}

	hReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &ObjectCreateRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	o := object.NewDBObject(nil)
	rspo.ToObject(o)
	return o, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	rReq, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if e != nil && cco.ReplaceJSONReq != "" {
		return fmt.Errorf("Both entry and WithReplaceJSONRequest() specified")
	}
	if e == nil && cco.ReplaceJSONReq == "" {
		return fmt.Errorf("Neither entry nor WithReplaceJSONRequest() specified")
	}

	var jsn, objUID string
	if e != nil {
		rReq.ResourceVersion = cco.ResourceVersion
		jsn, err = rReq.ToJSON()
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		objUID = rReq.ObjectUid
	} else {
		jsn = cco.ReplaceJSONReq
		reqMap := make(map[string]interface{})
		if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
			return errors.Wrapf(err, "Unmarshaling ReplaceJSONReq")
		}
		md, ok := reqMap["metadata"].(map[string]interface{})
		if !ok {
			return fmt.Errorf("ReplaceJSONReq does not have 'metadata'")
		}
		if val, ok := md["uid"].(string); ok {
			objUID = val
		}
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.voltstack_site.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, objUID)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	rspo := &ObjectReplaceRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.voltstack_site.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, req.ObjectUid)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &ObjectGetRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		o := object.NewDBObject(nil)
		gRsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.voltstack_site.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	for _, fVal := range cco.TenantFilter {
		q.Add("tenant_filter", fVal)
	}
	for _, fVal := range cco.NamespaceFilter {
		q.Add("namespace_filter", fVal)
	}
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}

	if cco.IncludeReferredID {
		q.Add("include_referred_id", "true")
	}

	if cco.OutResourceVersion != nil {
		q.Add("resource_version", "true")
	}
	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ObjectListRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.GetMetadata().GetResourceVersion()
	}
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq := NewObjectDeleteReq(key)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.voltstack_site.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, dReq.ObjectUid)

	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	rspo := &ObjectDeleteRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	crcl := &crudAPIRestClient{baseURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	crudCl *crudAPIInprocClient
}

func (c *APIInprocClient) Create(ctx context.Context, req *ObjectCreateReq, opts ...grpc.CallOption) (*ObjectCreateRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	return oah.Create(ctx, req)
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ObjectReplaceReq, opts ...grpc.CallOption) (*ObjectReplaceRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	return oah.Replace(ctx, req)
}

func (c *APIInprocClient) Get(ctx context.Context, req *ObjectGetReq, opts ...grpc.CallOption) (*ObjectGetRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	return oah.Get(ctx, req)
}

func (c *APIInprocClient) List(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (*ObjectListRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	return oah.List(ctx, req)
}

func (c *APIInprocClient) ListStream(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (API_ListStreamClient, error) {
	return nil, fmt.Errorf("ListStream Not implemented")
}

func (c *APIInprocClient) Delete(ctx context.Context, req *ObjectDeleteReq, opts ...grpc.CallOption) (*ObjectDeleteRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	return oah.Delete(ctx, req)
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	crudCl := newCRUDAPIInprocClient(svc)
	return &APIInprocClient{crudCl}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	svc svcfw.Service
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	rsp, err := oah.Create(ctx, req)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := oah.Replace(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req := NewObjectGetReq(key, opts...)
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewObjectListReq()
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	if cco.OutResourceVersion != nil {
		req.ResourceVersion = true
	}
	rsp, err := oah.List(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.voltstack_site.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.voltstack_site.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewObjectDeleteReq(key)
	rsp, err := oah.Delete(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	crcl := &crudAPIInprocClient{svc: svc}
	return crcl
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.views.voltstack_site.crudapi.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.views.voltstack_site.crudapi.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *ObjectCreateReq) (*ObjectCreateRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.voltstack_site.crudapi.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private create request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.voltstack_site.crudapi.API.Create"), zap.Error(err))
			}
		}
	}
	obj := object.NewDBObject(nil)
	req.ToObject(obj)
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}

	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Create")).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Create with NewObjectCreateRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ObjectReplaceReq) (*ObjectReplaceRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		return nil, fmt.Errorf("Nil spec in Replace Request")
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.voltstack_site.crudapi.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private replace request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.voltstack_site.crudapi.API.Replace"), zap.Error(err))
			}
		}
	}
	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Replace")).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Replace with NewObjectReplaceRsp").Error())
	}
	return rsp, nil

}

func (s *APISrv) Get(ctx context.Context, req *ObjectGetReq) (*ObjectGetRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.voltstack_site.crudapi.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private get request")
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceGetRequest{IsPublic: false, UID: key, AllBackRefs: req.AllBackrefs, BackRefTypes: req.BackrefTypes}
	rsrcReq.OmitReferredID = !req.IncludeReferredId
	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Get")).Err()
	}
	rsp, err := NewObjectGetRsp(req, rsrcRsp)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Get with NewObjectGetRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ObjectListReq) (*ObjectListRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.voltstack_site.crudapi.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private list request")
			}
		}
	}
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:       req.TenantFilter,
		NamespaceFilter:    req.NamespaceFilter,
		LabelFilter:        req.LabelFilter,
		RspStreamed:        false,
		GetResourceVersion: req.ResourceVersion,
		OmitReferredID:     !req.IncludeReferredId,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "List"))
	}
	rsp, err := NewObjectListRsp(req, rsrcRsp.Items)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	rsp.Metadata.ResourceVersion = rsrcRsp.ResourceVersion
	return rsp, errors.ErrOrNil(merr)
}

func (s *APISrv) ListStream(req *ObjectListReq, stream API_ListStreamServer) error {
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:    req.TenantFilter,
		NamespaceFilter: req.NamespaceFilter,
		LabelFilter:     req.LabelFilter,
		RspStreamed:     true,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(stream.Context(), rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListStream"))
	}
	streamSvr := &crudAPIListStreamServer{stream}
	for item := range rsrcRsp.ItemsCh {
		if err := streamSvr.SendResource(req, item); err != nil {
			merr = multierror.Append(merr, errors.Wrap(err, "Stream-Send"))
			continue
		}
	}
	return errors.ErrOrNil(merr)
}

func (s *APISrv) Delete(ctx context.Context, req *ObjectDeleteReq) (*ObjectDeleteRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.voltstack_site.crudapi.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private delete request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.voltstack_site.crudapi.API.Delete"), zap.Error(err))
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Delete")).Err()
	}
	return &ObjectDeleteRsp{}, nil
}

// Assert that APISrv implements both the generated gRPC APIServer interface and the
// stdlib CRUDServer interface
var (
	_ APIServer = &APISrv{}
)

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.crudapi.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.crudapi.API", strings.Join(sl[:len(sl)-1], "."))
}

// implements both stdlib.server.ListStreamServer and API_ListStreamServer
type crudAPIListStreamServer struct {
	stream API_ListStreamServer
}

func (lc *crudAPIListStreamServer) Context() context.Context {
	return lc.stream.Context()
}

func (lc *crudAPIListStreamServer) SendResource(r *ObjectListReq, item *server.ResourceListResponseItem) error {
	lRsp, err := NewObjectListRsp(r, []*server.ResourceListResponseItem{item})
	if err != nil {
		return errors.Wrap(err, "SendResource with NewObjectListRsp")
	}
	if err := lc.Send(lRsp); err != nil {
		return errors.Wrap(err, "ListStreamServer.SendResource()")
	}
	return nil
}

func (lc *crudAPIListStreamServer) Send(o *ObjectListRsp) error {
	if err := lc.stream.Send(o); err != nil {
		return errors.Wrap(err, "ListStreamServer.Send()")
	}
	return nil
}

// Implement GetReq interface
func (r *ObjectGetReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectGetReq) GetBackrefParam() (bool, []string) {
	return r.AllBackrefs, r.BackrefTypes
}

// Implement DeleteReq interface
func (r *ObjectDeleteReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectCreateRsp) Key() string {
	return r.ObjectUid
}

func (r *ObjectGetRsp) GetBackrefs(ef db.NewEntryFunc) ([]db.Entry, error) {
	brEnts := []db.Entry{}
	bRefs := r.GetEntBackrefs()
	for _, br := range bRefs {
		// convert schema.ves.io/ves.io.examplesvc.objectone.Object to ves.io.examplesvc.objectone.Object
		sl := strings.Split(br.TypeUrl, "/")
		ot := sl[len(sl)-1]
		ent, err := ef(ot, db.OpWithSerializedBytes(br.Value))
		if err != nil {
			return nil, errors.Wrap(err, "NewEntry")
		}
		brEnts = append(brEnts, ent)
	}

	return brEnts, nil
}

// Implement server.ListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjUid() string {
	return l.ObjectUid
}

// Implement server.SROListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ObjectListRspItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ObjectListRspItem) GetObjName() string {
	return l.Name
}

func (l *ObjectListRspItem) GetObjLabels() map[string]string {
	return l.Labels
}

// New<oper>Rsp, New<oper>RspFromJSON
func NewObjectCreateRsp(e db.Entry) (*ObjectCreateRsp, error) {
	rspo := &ObjectCreateRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectCreateRsp")
	}
	key, err := e.Key()
	if err != nil {
		return nil, errors.Wrap(err, "CreateRsp getting Key()")
	}
	rspo.ObjectUid = key
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectReplaceRsp(e db.Entry) (*ObjectReplaceRsp, error) {
	rspo := &ObjectReplaceRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectReplaceRsp")
	}
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectGetRsp(r *ObjectGetReq, rsrcRsp *server.ResourceGetResponse) (*ObjectGetRsp, error) {
	rspo := &ObjectGetRsp{}
	e := rsrcRsp.Entry
	brEntries := rsrcRsp.BackRefs
	if e == nil {
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *object.DBObject in NewObjectGetRsp")
	}
	rspo.ResourceVersion = rsrcRsp.ResourceVersion
	rspo.FromObject(o)
	// Backref
	getBackrefsFunc := func() ([]*google_protobuf.Any, error) {
		var merr *multierror.Error
		var entBackrefs []*google_protobuf.Any
		for _, brEnt := range brEntries {
			brSer, err := brEnt.MarshalBytes()
			if err != nil {
				merr = multierror.Append(merr, err)
				continue
			}
			entBackrefs = append(entBackrefs, &google_protobuf.Any{TypeUrl: "schema.ves.io/" + brEnt.Type(), Value: brSer})
		}
		return entBackrefs, errors.ErrOrNil(merr)
	}
	entBackrefs, err := getBackrefsFunc()
	if err != nil {
		return nil, err
	}
	rspo.EntBackrefs = entBackrefs
	d, err := o.GetDB()
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	statusObjs, err := object.FindObjectStatus(context.Background(), d, o.GetObjUid())
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	rspo.Status = statusObjs
	return rspo, nil
}

func NewObjectListRsp(req *ObjectListReq, rsrcRspItems []*server.ResourceListResponseItem) (*ObjectListRsp, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ObjectListReq")
	}
	var errs error
	o := &ObjectListRsp{}
	o.Metadata = &ves_io_schema.ListMetaType{}
	o.Uids = []string{}
	o.Items = []*ObjectListRspItem{}
	for _, rsrcItem := range rsrcRspItems {
		if rsrcItem == nil {
			errs = multierror.Append(errs, fmt.Errorf("ResourceListResponseItem is nil"))
			continue
		}
		e := rsrcItem.Entry
		dbObj, ok := e.(*object.DBObject)
		if !ok {
			errs = multierror.Append(errs, fmt.Errorf("Expected %T, got %T: %v", &object.DBObject{}, e, e))
			continue
		}
		key, err := dbObj.Key()
		if err != nil {
			errs = multierror.Append(errs, errors.WithMessagef(err, "Key() %v FAILED", dbObj))
			continue
		}

		tenant := dbObj.GetSystemMetadata().GetTenant()
		namespace := dbObj.GetMetadata().GetNamespace()
		name := dbObj.GetMetadata().GetName()
		labels := dbObj.GetMetadata().GetLabels()

		// TODO: DEPRECATE setting to o.Uids
		o.Uids = append(o.Uids, key)

		item := &ObjectListRspItem{
			ObjectUid: key,
			Tenant:    tenant,
			Namespace: namespace,
			Name:      name,
			Labels:    labels,
		}
		if len(req.ReportFields) > 0 {
			item.FromObject(e)
		}
		o.Items = append(o.Items, item)
	}
	return o, errs
}

func NewObjectDeleteRsp(ec ErrorCode) (*ObjectDeleteRsp, error) {
	return &ObjectDeleteRsp{Err: ec}, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "ves.io/schema/views/voltstack_site/crudapi/api.proto",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": null,
    "paths": {
        "/ves.io.schema.views.voltstack_site/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Get"
            },
            "delete": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-List"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.List"
            },
            "post": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/Objects/stream": {
            "get": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.ListStream",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "$ref": "#/x-stream-definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-ListStream"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.ListStream"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/introspect/read/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Get"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/introspect/read/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-List"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.List"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/introspect/write/Object/{object_uid}": {
            "delete": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.voltstack_site/introspect/write/Objects": {
            "post": {
                "operationId": "ves.io.schema.views.voltstack_site.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-voltstack_site-crudapi-API-Create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.voltstack_site.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "voltstack_site",
            "x-ves-object-type": "ves.io.schema.views.voltstack_site.Object",
            "x-ves-proto-service": "ves.io.schema.views.voltstack_site.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        }
    },
    "definitions": {
        "bgpFamilyInet": {
            "type": "object",
            "description": "Parameters for inet family.",
            "title": "FamilyInet",
            "x-displayname": "BGP Family Inet",
            "x-ves-oneof-field-enable_choice": "[\"disable\",\"enable\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.FamilyInet",
            "properties": {
                "disable": {
                    "description": "Exclusive with [enable]\nx-displayName: \"Disable IPv4 Unicast\"\nDisable the IPv4 Unicast family.",
                    "title": "disable",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable": {
                    "description": "Exclusive with [disable]\nx-displayName: \"Enable IPv4 Unicast\"\nEnable the IPv4 Unicast family.",
                    "title": "enable",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "bgpFamilyInet6vpn": {
            "type": "object",
            "description": "Parameters for inet6vpn family.",
            "title": "FamilyInet6vpn",
            "x-displayname": "BGP Family Inet6vpn",
            "x-ves-oneof-field-enable_choice": "[\"disable\",\"enable\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.FamilyInet6vpn",
            "properties": {
                "disable": {
                    "description": "Exclusive with [enable]\nx-displayName: \"Disable IPv6 VPN Unicast\"\nDisable the IPv6 Unicast family.",
                    "title": "disable",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable": {
                    "description": "Exclusive with [disable]\nx-displayName: \"Enable IPv6 VPN Unicast\"\nEnable the IPv6 Unicast family.",
                    "title": "enable",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "bgpFamilyInetvpn": {
            "type": "object",
            "description": "Parameters for inetvpn family.",
            "title": "FamilyInetvpn",
            "x-displayname": "BGP Family Inetvpn",
            "x-ves-oneof-field-enable_choice": "[\"disable\",\"enable\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.FamilyInetvpn",
            "properties": {
                "disable": {
                    "description": "Exclusive with [enable]\nx-displayName: \"Disable IPv4 VPN Unicast\"\nDisable the IPv4 Unicast family.",
                    "title": "disable",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable": {
                    "description": "Exclusive with [disable]\nx-displayName: \"Enable IPv4 VPN Unicast\"\nEnable the IPv4 Unicast family.",
                    "title": "enable",
                    "$ref": "#/definitions/bgpFamilyInetvpnParameters"
                }
            }
        },
        "bgpFamilyInetvpnParameters": {
            "type": "object",
            "description": "Parameters for inetvpn family.",
            "title": "FamilyInetvpnParameters",
            "x-displayname": "BGP Family Inetvpn",
            "x-ves-oneof-field-sr_choice": "[\"disable\",\"enable\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.FamilyInetvpnParameters",
            "properties": {
                "disable": {
                    "description": "Exclusive with [enable]\nx-displayName: \"Disable IPv4 VPN Unicast\"\nDisable the IPv4 Unicast family.",
                    "title": "disable",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable": {
                    "description": "Exclusive with [disable]\nx-displayName: \"Enable IPv4 VPN Unicast\"\nEnable the IPv4 Unicast family.",
                    "title": "enable",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "bgpFamilyRtarget": {
            "type": "object",
            "description": "Parameters for rtarget family.",
            "title": "FamilyRtarget",
            "x-displayname": "BGP Family Route Target",
            "x-ves-oneof-field-enable_choice": "[\"disable\",\"enable\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.FamilyRtarget",
            "properties": {
                "disable": {
                    "description": "Exclusive with [enable]\nx-displayName: \"Disable Route Target\"\nDisable the Route Target family.",
                    "title": "disable",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable": {
                    "description": "Exclusive with [disable]\nx-displayName: \"Enable Route Target\"\nEnable the Route Target family.",
                    "title": "enable",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "bgpInterfaceList": {
            "type": "object",
            "description": "List of network interfaces.",
            "title": "InterfaceList",
            "x-displayname": "Interface List",
            "x-ves-proto-message": "ves.io.schema.bgp.InterfaceList",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "description": " List of network interfaces.\nRequired: YES",
                    "title": "interface_list",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Interface List",
                    "x-ves-required": "true"
                }
            }
        },
        "bgpPeer": {
            "type": "object",
            "description": "BGP Peer parameters",
            "title": "Peer",
            "x-displayname": "BGP Peer",
            "x-ves-displayorder": "1,2",
            "x-ves-oneof-field-type_choice": "[\"external\",\"internal\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.Peer",
            "properties": {
                "external": {
                    "description": "Exclusive with [internal]\nx-displayName: \"External\"\nExternal BGP peer.",
                    "title": "external",
                    "$ref": "#/definitions/bgpPeerExternal"
                },
                "internal": {
                    "description": "Exclusive with [external]\nx-displayName: \"External\"\nExternal BGP peer.",
                    "title": "external",
                    "$ref": "#/definitions/bgpPeerInternal"
                },
                "metadata": {
                    "description": " Common attributes for the peer including name and description.\nRequired: YES",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaMessageMetaType",
                    "x-displayname": "Metadata",
                    "x-ves-required": "true"
                },
                "target_service": {
                    "type": "string",
                    "description": " Specify whether this peer should be configured in \"phobos\" or \"frr\".",
                    "title": "target_service",
                    "x-displayname": "Target Service"
                }
            }
        },
        "bgpPeerExternal": {
            "type": "object",
            "description": "External BGP Peer parameters.",
            "title": "PeerExternal",
            "x-displayname": "External BGP Peer",
            "x-ves-displayorder": "1,2,10,11",
            "x-ves-oneof-field-address_choice": "[\"address\",\"default_gateway\",\"from_site\",\"subnet_begin_offset\",\"subnet_end_offset\"]",
            "x-ves-oneof-field-interface_choice": "[\"inside_interfaces\",\"interface\",\"interface_list\",\"outside_interfaces\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.PeerExternal",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Exclusive with [default_gateway from_site subnet_begin_offset subnet_end_offset]\nx-displayName: \"Peer Address\"\nSpecify peer address.",
                    "title": "address"
                },
                "asn": {
                    "type": "integer",
                    "description": " Autonomous System Number for BGP peer\n\nExample: - 64512-\nRequired: YES",
                    "title": "ASN",
                    "format": "int64",
                    "x-displayname": "ASN",
                    "x-ves-required": "true"
                },
                "default_gateway": {
                    "description": "Exclusive with [address from_site subnet_begin_offset subnet_end_offset]\nx-displayName: \"Default Gateway\"\nUse the default gateway address.",
                    "title": "default_gateway",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "family_inet": {
                    "description": " Parameters for IPv4 Unicast family.",
                    "title": "family_inet",
                    "$ref": "#/definitions/bgpFamilyInet",
                    "x-displayname": "Family IPv4 Unicast"
                },
                "from_site": {
                    "description": "Exclusive with [address default_gateway subnet_begin_offset subnet_end_offset]\nx-displayName: \"Address From Site Object\"\nUse the address specified in the site object.",
                    "title": "from_site",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "inside_interfaces": {
                    "description": "Exclusive with [interface interface_list outside_interfaces]\nx-displayName: \"Site Local Inside Interfaces\"\nAll interfaces in the site local inside network.",
                    "title": "inside_interfaces",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "interface": {
                    "description": "Exclusive with [inside_interfaces interface_list outside_interfaces]\nx-displayName: \"Interface\"\nSpecify interface.",
                    "title": "interface",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "interface_list": {
                    "description": "Exclusive with [inside_interfaces interface outside_interfaces]\nx-displayName: \"Interface List\"\nList of network interfaces.",
                    "title": "interface_list",
                    "$ref": "#/definitions/bgpInterfaceList"
                },
                "outside_interfaces": {
                    "description": "Exclusive with [inside_interfaces interface interface_list]\nx-displayName: \"Site Local Interfaces\"\nAll interfaces in the site local outside network.",
                    "title": "outside_interfaces",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "port": {
                    "type": "integer",
                    "description": " Peer TCP port number.\n\nExample: - 179-",
                    "title": "Peer Port",
                    "format": "int64",
                    "x-displayname": "Peer Port"
                },
                "subnet_begin_offset": {
                    "type": "integer",
                    "description": "Exclusive with [address default_gateway from_site subnet_end_offset]\nx-displayName: \"Offset From Beginning Of Subnet\"\nCalculate peer address using offset from the beginning of the subnet.",
                    "title": "subnet_begin_offset",
                    "format": "int64"
                },
                "subnet_end_offset": {
                    "type": "integer",
                    "description": "Exclusive with [address default_gateway from_site subnet_begin_offset]\nx-displayName: \"Offset From End Of Subnet\"\nCalculate peer address using offset from the end of the subnet.",
                    "title": "subnet_end_offset",
                    "format": "int64"
                }
            }
        },
        "bgpPeerInternal": {
            "type": "object",
            "description": "Internal BGP Peer parameters.",
            "title": "PeerInternal",
            "x-displayname": "Internal BGP Peer",
            "x-ves-displayorder": "2,10,11",
            "x-ves-oneof-field-address_choice": "[\"address\",\"dns_name\",\"from_site\"]",
            "x-ves-oneof-field-mtls_choice": "[\"disable_mtls\",\"enable_mtls\"]",
            "x-ves-proto-message": "ves.io.schema.bgp.PeerInternal",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Exclusive with [dns_name from_site]\nx-displayName: \"Peer Address\"\nSpecify peer address.",
                    "title": "address"
                },
                "disable_mtls": {
                    "description": "Exclusive with [enable_mtls]\nx-displayName: \"Disable MTLS\"\nDisable MTLS",
                    "title": "disable_mtls",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "dns_name": {
                    "type": "string",
                    "description": "Exclusive with [address from_site]\nx-displayName: \"Use address for DNS name\"\nUse the addresse by resolving the given DNS name.",
                    "title": "dns_name"
                },
                "enable_mtls": {
                    "description": "Exclusive with [disable_mtls]\nx-displayName: \"Enable MTLS\"\nEnable MTLS",
                    "title": "enable_mtls",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "family_inet6vpn": {
                    "description": " Parameters for IPv6 VPN Unicast family.",
                    "title": "family_inet6vpn",
                    "$ref": "#/definitions/bgpFamilyInet6vpn",
                    "x-displayname": "Family IPv6 VPN Unicast"
                },
                "family_inetvpn": {
                    "description": " Parameters for IPv4 VPN Unicast family.",
                    "title": "family_inetvpn",
                    "$ref": "#/definitions/bgpFamilyInetvpn",
                    "x-displayname": "Family IPv4 VPN Unicast"
                },
                "family_rtarget": {
                    "description": " Parameters for Route Target family.",
                    "title": "family_rtarget",
                    "$ref": "#/definitions/bgpFamilyRtarget",
                    "x-displayname": "Family Route Target"
                },
                "from_site": {
                    "description": "Exclusive with [address dns_name]\nx-displayName: \"Use address from site object\"\nUse the address specified in the site object.",
                    "title": "from_site",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "port": {
                    "type": "integer",
                    "description": " Peer TCP port number.\n\nExample: - 179-",
                    "title": "port",
                    "format": "int64",
                    "x-displayname": "Peer Port"
                }
            }
        },
        "crudapiErrorCode": {
            "type": "string",
            "enum": [
                "EOK",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN"
            ],
            "default": "EOK",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.voltstack_site.crudapi.ErrorCode"
        },
        "crudapiObjectCreateReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectCreateReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectCreateRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectCreateRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectDeleteRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectDeleteRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                }
            }
        },
        "crudapiObjectGetRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectGetRsp",
            "properties": {
                "ent_backrefs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/voltstack_siteStatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectListRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectListRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/crudapiObjectListRspItem"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/schemaListMetaType"
                },
                "uids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "crudapiObjectListRspItem": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectListRspItem",
            "properties": {
                "labels": {
                    "type": "object"
                },
                "metadata": {
                    "title": "If ObjectListReq has any specified report_fields, it will appear in below fields",
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/voltstack_siteStatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "crudapiObjectReplaceReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectReplaceReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                }
            }
        },
        "crudapiObjectReplaceRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.crudapi.ObjectReplaceRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/voltstack_siteSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "fleetBGPConfiguration": {
            "type": "object",
            "description": "BGP configuration parameters",
            "title": "BGP Configuration",
            "x-displayname": "BGP Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.BGPConfiguration",
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": " Autonomous System Number\n\nExample: - 64512-\nRequired: YES",
                    "title": "ASN",
                    "format": "int64",
                    "x-displayname": "ASN",
                    "x-ves-required": "true"
                },
                "peers": {
                    "type": "array",
                    "description": " BGP parameters for peer",
                    "title": "BGP Peers",
                    "items": {
                        "$ref": "#/definitions/bgpPeer"
                    },
                    "x-displayname": "Peers"
                }
            }
        },
        "fleetBondLacpType": {
            "type": "object",
            "description": "x-displayName: \"LACP parameters\nLACP parameters for the bond device",
            "title": "LACP parameters",
            "x-ves-proto-message": "ves.io.schema.fleet.BondLacpType",
            "properties": {
                "rate": {
                    "type": "integer",
                    "description": " Interval in seconds to transmit LACP packets\n\nExample: - \"30\"-",
                    "title": "Interval",
                    "format": "int64",
                    "x-displayname": "LACP Packet Interval",
                    "x-ves-example": "30"
                }
            }
        },
        "fleetDeviceNetappBackendOntapSanChapType": {
            "type": "object",
            "description": "Device NetApp Backend ONTAP SAN CHAP configuration options for enabled CHAP",
            "title": "Device NetApp Backend ONTAP SAN CHAP configuration",
            "x-displayname": "Device NetApp Backend ONTAP SAN CHAP Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.DeviceNetappBackendOntapSanChapType",
            "properties": {
                "chap_initiator_secret": {
                    "description": " CHAP initiator secret. Required if useCHAP=true",
                    "title": "CHAP Intiator Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "CHAP Intiator Secret"
                },
                "chap_target_initiator_secret": {
                    "description": " CHAP target initiator secret. Required if useCHAP=true",
                    "title": "CHAP Target Initiator Secret",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "CHAP Target Initiator Secret"
                },
                "chap_target_username": {
                    "type": "string",
                    "description": " Target username. Required if useCHAP=true",
                    "title": "CHAP Target Username",
                    "x-displayname": "CHAP Target Username"
                },
                "chap_username": {
                    "type": "string",
                    "description": " Inbound username. Required if useCHAP=true",
                    "title": "CHAP Username",
                    "x-displayname": "CHAP Username"
                }
            }
        },
        "fleetFlashArrayEndpoint": {
            "type": "object",
            "description": "For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"",
            "title": "Flash Array Endpoint",
            "x-displayname": "Flash Array Endpoint",
            "x-ves-oneof-field-mgmt_endpoint": "[\"mgmt_dns_name\",\"mgmt_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashArrayEndpoint",
            "properties": {
                "api_token": {
                    "description": " Please Enter API TOken. Token to connect to management interface",
                    "title": "API Token",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "API Token"
                },
                "labels": {
                    "type": "object",
                    "description": " The labels are optional, and can be any key-value pair for use with the PSO \"fleet\" provisioner.\n\nExample: - \"{\"rack\"\"22\"}\"-",
                    "title": "Labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "{\"rack\": \"22\"}"
                },
                "mgmt_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_ip]\nx-displayName: \"Management Endpoint Name\"\nx-example: \"storage.local\"\nManagement Endpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "dns_name"
                },
                "mgmt_ip": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_dns_name]\nx-displayName: \"Management Endpoint IP Address\"\nx-example: \"10.5.2.4\"\nManagement Endpoint is reachable at the given ip address",
                    "title": "Management Endpoint IP Address"
                }
            }
        },
        "fleetFlashArrayType": {
            "type": "object",
            "description": "Specify what storage flash arrays should be managed the plugin",
            "title": "Flash Arrays",
            "x-displayname": "Flash Arrays",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashArrayType",
            "properties": {
                "default_fs_opt": {
                    "type": "string",
                    "description": " Block volume default mkfs options. Not recommended to change!\n\nExample: - \"-q\"-",
                    "title": "Default Filesystem Options",
                    "x-displayname": "Default Filesystem Options",
                    "x-ves-example": "-q"
                },
                "default_fs_type": {
                    "type": "string",
                    "description": " Block volume default filesystem type. Not recommended to change!\n\nExample: - \"xfs\"-\nRequired: YES",
                    "title": "Default Filesystem Type",
                    "x-displayname": "Default Filesystem Type",
                    "x-ves-example": "xfs",
                    "x-ves-required": "true"
                },
                "default_mount_opts": {
                    "type": "array",
                    "description": " Block volume default filesystem mount options. Not recommended to change!\n\nExample: - \"[- discart]\"-",
                    "title": "Default Mount Options",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Default Mount Options",
                    "x-ves-example": "[- discart]"
                },
                "disable_preempt_attachments": {
                    "type": "boolean",
                    "description": " Enable/Disable attachment preemption!",
                    "title": "Disable Preempt Attachments",
                    "format": "boolean",
                    "x-displayname": "Disable Preempt Attachments"
                },
                "flash_arrays": {
                    "type": "array",
                    "description": " For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"\nRequired: YES",
                    "title": "Flash Arrays",
                    "items": {
                        "$ref": "#/definitions/fleetFlashArrayEndpoint"
                    },
                    "x-displayname": "Flash Arrays",
                    "x-ves-required": "true"
                },
                "iscsi_login_timeout": {
                    "type": "integer",
                    "description": " x-exmple: \"20\"\n iSCSI login timeout in seconds. Not recommended to change!\nRequired: YES",
                    "title": "iSCSI Login Timeout",
                    "format": "int32",
                    "x-displayname": "iSCSI Login Timeout",
                    "x-ves-required": "true"
                },
                "san_type": {
                    "type": "string",
                    "description": " Block volume access protocol, either ISCSI or FC\n\nExample: - \"ISCSI\"-\nRequired: YES",
                    "title": "SAN Type",
                    "x-displayname": "SAN Type",
                    "x-ves-example": "ISCSI",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetFlashBladeEndpoint": {
            "type": "object",
            "description": "For FlashBlades you must set the \"mgmt_endpoint\", \"api_token\" and nfs_endpoint",
            "title": "Flash Blade Endpoint",
            "x-displayname": "Flash Blade Endpoint",
            "x-ves-oneof-field-mgmt_endpoint": "[\"mgmt_dns_name\",\"mgmt_ip\"]",
            "x-ves-oneof-field-nfs_endpoint": "[\"nfs_endpoint_dns_name\",\"nfs_endpoint_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashBladeEndpoint",
            "properties": {
                "api_token": {
                    "description": " Please Enter API TOken. Token to connect to management interface",
                    "title": "API Token",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "API Token"
                },
                "lables": {
                    "type": "object",
                    "description": " The labels are optional, and can be any key-value pair for use with the PSO \"fleet\" provisioner.\n\nExample: - \"{\"rack\"\"22\"}\"-",
                    "title": "Labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "{\"rack\": \"22\"}"
                },
                "mgmt_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_ip]\nx-displayName: \"Management Endpoint Name\"\nx-example: \"storage.local\"\nManagement Endpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "dns_name"
                },
                "mgmt_ip": {
                    "type": "string",
                    "description": "Exclusive with [mgmt_dns_name]\nx-displayName: \"Management Endpoint IP Address\"\nx-example: \"10.5.2.4\"\nManagement Endpoint is reachable at the given ip address",
                    "title": "Management Endpoint IP Address"
                },
                "nfs_endpoint_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [nfs_endpoint_ip]\nx-displayName: \"NFS DNS Name\"\nx-example: \"nfs.storage.local\"\nEndpoint's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "NFS DNS Name"
                },
                "nfs_endpoint_ip": {
                    "type": "string",
                    "description": "Exclusive with [nfs_endpoint_dns_name]\nx-displayName: \"NFS IP Address\"\nx-example: \"10.5.2.4\"\nEndpoint is reachable at the given ip address",
                    "title": "NFS IP Address"
                }
            }
        },
        "fleetFlashBladeType": {
            "type": "object",
            "description": "Specify what storage flash blades should be managed the plugin",
            "title": "Flash Blades",
            "x-displayname": "Flash Blades",
            "x-ves-proto-message": "ves.io.schema.fleet.FlashBladeType",
            "properties": {
                "enable_snapshot_directory": {
                    "type": "boolean",
                    "description": " Enable/Disable FlashBlade snapshots",
                    "title": "Enable Snapshot Directory",
                    "format": "boolean",
                    "x-displayname": "Enable Snapshot Directory"
                },
                "export_rules": {
                    "type": "string",
                    "description": " NFS Export rules\n\nExample: - \"*(rw,no_root_squash)\"-",
                    "title": "NFS Export Rules",
                    "x-displayname": "NFS Export Rules",
                    "x-ves-example": "*(rw,no_root_squash)"
                },
                "flash_blades": {
                    "type": "array",
                    "description": " For FlashBlades you must set the \"mgmt_endpoint\", \"api_token\" and nfs_endpoint\nRequired: YES",
                    "title": "Flash Blades",
                    "items": {
                        "$ref": "#/definitions/fleetFlashBladeEndpoint"
                    },
                    "x-displayname": "Flash Blades",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetFleetBondDeviceType": {
            "type": "object",
            "description": "Bond devices configuration for fleet",
            "title": "Bond Device",
            "x-displayname": "Bond Device",
            "x-ves-oneof-field-lacp_choice": "[\"active_backup\",\"lacp\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetBondDeviceType",
            "properties": {
                "active_backup": {
                    "description": "Exclusive with [lacp]\nx-displayName: \"Active/Backup\"\nConfigure active/backup based bond device",
                    "title": "Active/Backup",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "devices": {
                    "type": "array",
                    "description": " Ethernet devices that will make up this bond\nRequired: YES",
                    "title": "Member Ethernet Devices",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Member Ethernet Devices",
                    "x-ves-required": "true"
                },
                "lacp": {
                    "description": "Exclusive with [active_backup]\nx-displayName: \"LACP (802.3ad)\"\nConfigure LACP (802.3ad) based bond device",
                    "title": "LACP (802.3ad)",
                    "$ref": "#/definitions/fleetBondLacpType"
                },
                "link_polling_interval": {
                    "type": "integer",
                    "description": " Link polling interval in millisecond\n\nExample: - \"1000\"-\nRequired: YES",
                    "title": "Link Polling Interval",
                    "format": "int64",
                    "x-displayname": "Link Polling Interval",
                    "x-ves-example": "1000",
                    "x-ves-required": "true"
                },
                "link_up_delay": {
                    "type": "integer",
                    "description": " Milliseconds wait before link is declared up\n\nExample: - \"200\"-\nRequired: YES",
                    "title": "Link Up Delay",
                    "format": "int64",
                    "x-displayname": "Link Up Delay",
                    "x-ves-example": "200",
                    "x-ves-required": "true"
                },
                "name": {
                    "type": "string",
                    "description": " Bond device name \n\nExample: - \"bond0\"-\nRequired: YES",
                    "title": "Bond Device",
                    "x-displayname": "Bond Device Name",
                    "x-ves-example": "bond0",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetFleetBondDevicesListType": {
            "type": "object",
            "description": "List of bond devices for this fleet",
            "title": "Bond Devices List",
            "x-displayname": "Bond Devices List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetBondDevicesListType",
            "properties": {
                "bond_devices": {
                    "type": "array",
                    "description": " List of bond devices for this fleet\nRequired: YES",
                    "title": "Bond Devices List",
                    "items": {
                        "$ref": "#/definitions/fleetFleetBondDeviceType"
                    },
                    "x-displayname": "Bond Devices List",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetFleetStorageClassListType": {
            "type": "object",
            "description": "Add additional custom storage classes in kubernetes for this fleet",
            "title": "Custom Storage Class List",
            "x-displayname": "Custom Storage Class List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageClassListType",
            "properties": {
                "storage_classes": {
                    "type": "array",
                    "description": " List of custom storage classes",
                    "title": "List of Storage Classes",
                    "items": {
                        "$ref": "#/definitions/fleetFleetStorageClassType"
                    },
                    "x-displayname": "List of Storage Classes"
                }
            }
        },
        "fleetFleetStorageClassType": {
            "type": "object",
            "description": "Configuration of custom storage class",
            "title": "Custom Storage Class",
            "x-displayname": "Custom Storage Class",
            "x-ves-oneof-field-device_choice": "[\"custom_storage\",\"netapp_trident\",\"openebs_enterprise\",\"pure_service_orchestrator\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageClassType",
            "properties": {
                "advanced_storage_parameters": {
                    "type": "object",
                    "description": " Map of parameter name and string value",
                    "title": "Advanced Parameters",
                    "x-displayname": "Advanced Parameters"
                },
                "allow_volume_expansion": {
                    "type": "boolean",
                    "description": " Allow volume expansion.",
                    "title": "Allow Volume Expansion",
                    "format": "boolean",
                    "x-displayname": "Allow Volume Expansion"
                },
                "custom_storage": {
                    "description": "Exclusive with [netapp_trident openebs_enterprise pure_service_orchestrator]\nx-displayName: \"Custom Storage\"\nStorage configuration for Custom Storage",
                    "title": "Custom Storage",
                    "$ref": "#/definitions/fleetStorageClassCustomType"
                },
                "default_storage_class": {
                    "type": "boolean",
                    "description": " Make this storage class default storage class for the K8s cluster",
                    "title": "Default Storage Class",
                    "format": "boolean",
                    "x-displayname": "Default Storage Class"
                },
                "description": {
                    "type": "string",
                    "description": " x-example \"Volume from my fast storage\"\n Description for this storage class",
                    "title": "Storage Class Description",
                    "x-displayname": "Storage Class Description"
                },
                "netapp_trident": {
                    "description": "Exclusive with [custom_storage openebs_enterprise pure_service_orchestrator]\nx-displayName: \"NetApp Trident\"\nStorage class Device configuration for NetApp Trident",
                    "title": "NetApp Trident",
                    "$ref": "#/definitions/fleetStorageClassNetappTridentType"
                },
                "openebs_enterprise": {
                    "description": "Exclusive with [custom_storage netapp_trident pure_service_orchestrator]\nx-displayName: \"OpenEBS Enterprise\"\nStorage class Device configuration for OpenEBS Enterprise",
                    "title": "OpenEBS Enterprise",
                    "$ref": "#/definitions/fleetStorageClassOpenebsEnterpriseType"
                },
                "pure_service_orchestrator": {
                    "description": "Exclusive with [custom_storage netapp_trident openebs_enterprise]\nx-displayName: \"Pure Storage Service Orchestrator\"\nStorage class Device configuration for Pure Service Orchestrator",
                    "title": "Pure Storage Service Orchestrator",
                    "$ref": "#/definitions/fleetStorageClassPureServiceOrchestratorType"
                },
                "reclaim_policy": {
                    "type": "string",
                    "description": " Reclaim Policy\n\nExample: - \"Delete\"-",
                    "title": "Reclaim Policy",
                    "x-displayname": "Reclaim Policy",
                    "x-ves-example": "Delete"
                },
                "storage_class_name": {
                    "type": "string",
                    "description": " Name of the storage class as it will appear in K8s.\n\nExample: - \"premium\"-\nRequired: YES",
                    "title": "Storage Class Name",
                    "x-displayname": "Storage Class Name",
                    "x-ves-example": "premium",
                    "x-ves-required": "true"
                },
                "storage_device": {
                    "type": "string",
                    "description": " x-example \"DellEMC-isilon_F800-0\"\n Storage device that this class will use. The Device name defined at previous step.\nRequired: YES",
                    "title": "Storage Device",
                    "x-displayname": "Storage Device",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetFleetStorageDeviceListType": {
            "type": "object",
            "description": "Add additional custom storage classes in kubernetes for this fleet",
            "title": "Custom Storage Device List",
            "x-displayname": "Custom Storage Device List",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageDeviceListType",
            "properties": {
                "storage_devices": {
                    "type": "array",
                    "description": " List of custom storage devices",
                    "title": "List of Storage Devices",
                    "items": {
                        "$ref": "#/definitions/fleetFleetStorageDeviceType"
                    },
                    "x-displayname": "List of Storage Devices"
                }
            }
        },
        "fleetFleetStorageDeviceType": {
            "type": "object",
            "description": "Configuration of storage device",
            "title": "Storage Device",
            "x-displayname": "Storage Device",
            "x-ves-oneof-field-device_choice": "[\"custom_storage\",\"netapp_trident\",\"openebs_enterprise\",\"pure_service_orchestrator\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetStorageDeviceType",
            "properties": {
                "advanced_advanced_parameters": {
                    "type": "object",
                    "description": " Map of parameter name and string value",
                    "title": "Advanced Parameters",
                    "x-displayname": "Advanced Parameters"
                },
                "custom_storage": {
                    "description": "Exclusive with [netapp_trident openebs_enterprise pure_service_orchestrator]\nx-displayName: \"Custom Storage\"\nDevice configuration for Custom Storage",
                    "title": "Custom Storage",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "netapp_trident": {
                    "description": "Exclusive with [custom_storage openebs_enterprise pure_service_orchestrator]\nx-displayName: \"NetApp Trident\"\nDevice configuration for NetApp Trident",
                    "title": "NetApp Trident",
                    "$ref": "#/definitions/fleetStorageDeviceNetappTridentType"
                },
                "openebs_enterprise": {
                    "description": "Exclusive with [custom_storage netapp_trident pure_service_orchestrator]\nx-displayName: \"OpenEBS Enterprise\"\nDevice configuration for Pure Storage Service Orchestrator",
                    "title": "OpenEBS Enterprise",
                    "$ref": "#/definitions/fleetStorageDeviceOpenebsEnterpriseType"
                },
                "pure_service_orchestrator": {
                    "description": "Exclusive with [custom_storage netapp_trident openebs_enterprise]\nx-displayName: \"Pure Storage Service Orchestrator\"\nDevice configuration for Pure Storage Service Orchestrator",
                    "title": "Pure Storage Service Orchestrator",
                    "$ref": "#/definitions/fleetStorageDevicePureStorageServiceOrchestratorType"
                },
                "storage_device": {
                    "type": "string",
                    "description": " x-example \"DellEMC-isilon-F800-0\"\n Storage device and device unit \nRequired: YES",
                    "title": "Storage Device",
                    "x-displayname": "Storage Device",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetLocalControlPlaneType": {
            "type": "object",
            "description": "Enable local control plane for L3VPN, SRV6, EVPN etc",
            "title": "Local Control Plane",
            "x-displayname": "Local Control Plane",
            "x-ves-oneof-field-network_choice": "[\"inside_vn\",\"outside_vn\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.LocalControlPlaneType",
            "properties": {
                "bgp_config": {
                    "description": " BGP configuration for local control plane",
                    "title": "BGP configuration",
                    "$ref": "#/definitions/fleetBGPConfiguration",
                    "x-displayname": "BGP Configuration"
                },
                "inside_vn": {
                    "description": "Exclusive with [outside_vn]\nx-displayName: \"Inside Network\"\nLocal control plane will work on inside network",
                    "title": "Inside Network",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "outside_vn": {
                    "description": "Exclusive with [inside_vn]\nx-displayName: \"Outside Network\"\nLocal control plane will work on outside network",
                    "title": "Outside Network",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "fleetOntapVirtualStoragePoolType": {
            "type": "object",
            "description": "ONTAP Virtual Storage Pool definition",
            "title": "Backend ONTAP Virtual Storage Pool",
            "x-displayname": "Backend ONTAP Virtual Storage Pool",
            "x-ves-proto-message": "ves.io.schema.fleet.OntapVirtualStoragePoolType",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class label match selection.\n\nExample: - \"{\"department\":\"finance\", \"creditpoints\":\"6000\"}\"-",
                    "title": "Storage Pool Labels",
                    "x-displayname": "Storage Pool Labels",
                    "x-ves-example": "{\"department\":\"finance\", \"creditpoints\":\"6000\"}"
                },
                "volume_defaults": {
                    "description": " List of QoS volume default types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                },
                "zone": {
                    "type": "string",
                    "description": " Virtual Storage Pool zone definition.\n\nExample: - \"us_east_1b\"-",
                    "title": "Pool Zone",
                    "x-displayname": "Virtual Pool Zone",
                    "x-ves-example": "us_east_1b"
                }
            }
        },
        "fleetOntapVolumeDefaults": {
            "type": "object",
            "description": "It controls how each volume is provisioned by default using these options in a special section of the configuration.",
            "title": "Backend OnTap Volume Defaults",
            "x-displayname": "Backend OnTap Volume Defaults",
            "x-ves-oneof-field-qos_policy_choice": "[\"adaptive_qos_policy\",\"no_qos\",\"qos_policy\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.OntapVolumeDefaults",
            "properties": {
                "adaptive_qos_policy": {
                    "type": "string",
                    "description": "Exclusive with [no_qos qos_policy]\nx-displayName: \"Adaptive QoS Policy name\"\nEnter Adaptive QoS Policy Name",
                    "title": "Storage Server IP address"
                },
                "encryption": {
                    "type": "boolean",
                    "description": " Enable NetApp volume encryption.\n\nExample: - \"false\"-",
                    "title": "Enable Encryption",
                    "format": "boolean",
                    "x-displayname": "Enable Encryption",
                    "x-ves-example": "false"
                },
                "export_policy": {
                    "type": "string",
                    "description": " Export policy to use.\n\nExample: - \"default\"-",
                    "title": "Export Policy",
                    "x-displayname": "Export Policy",
                    "x-ves-example": "default"
                },
                "no_qos": {
                    "description": "Exclusive with [adaptive_qos_policy qos_policy]\nx-displayName: \"No QoS\"\nNo QoS configured",
                    "title": "No QoS",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "qos_policy": {
                    "type": "string",
                    "description": "Exclusive with [adaptive_qos_policy no_qos]\nx-displayName: \"QoS Policy Name\"\nEnter QoS Policy Name",
                    "title": "QoS Policy Name"
                },
                "security_style": {
                    "type": "string",
                    "description": " Security style for new volumes.\n\nExample: - \"unix\"-",
                    "title": "Security Style",
                    "x-displayname": "Security Style",
                    "x-ves-example": "unix"
                },
                "snapshot_dir": {
                    "type": "boolean",
                    "description": " Access to the .snapshot directory.",
                    "title": "Access to Snapshot Directory",
                    "format": "boolean",
                    "x-displayname": "Access to Snapshot Directory"
                },
                "snapshot_policy": {
                    "type": "string",
                    "description": " Snapshot policy to use\n\nExample: - \"none\"-",
                    "title": "Snapshot Policy",
                    "x-displayname": "Snapshot Policy",
                    "x-ves-example": "none"
                },
                "snapshot_reserve": {
                    "type": "string",
                    "description": " Percentage of volume reserved for snapshots. \"0\" if snapshot policy is \"none\", else \"\"\n\nExample: - \"10\"-",
                    "title": "Snapshot Rerserved",
                    "x-displayname": "Snapshot Reserved",
                    "x-ves-example": "10"
                },
                "space_reserve": {
                    "type": "string",
                    "description": " Space reservation mode; “none” (thin) or “volume” (thick)\n\nExample: - \"thick\"-",
                    "title": "Space Reservation Mode",
                    "x-displayname": "Space Reservation Mode",
                    "x-ves-example": "thick"
                },
                "split_on_clone": {
                    "type": "boolean",
                    "description": " Split a clone from its parent upon creation.\n\nExample: - \"false\"-",
                    "title": "Split on Clone",
                    "format": "boolean",
                    "x-displayname": "Split on Clone",
                    "x-ves-example": "false"
                },
                "tiering_policy": {
                    "type": "string",
                    "description": " Tiering policy to use. \"none\" is default.\n\nExample: - \"snapshot-only\"-",
                    "title": "Tiering Policy",
                    "x-displayname": "Tiering Policy",
                    "x-ves-example": "snapshot-only"
                },
                "unix_permissions": {
                    "type": "integer",
                    "description": " Unix permission mode for new volumes. All allowed 777\n\nExample: - \"777\"-",
                    "title": "Unix Mode Permissions",
                    "format": "int32",
                    "x-displayname": "Unix Mode Permissions",
                    "x-ves-example": "777"
                }
            }
        },
        "fleetOpenebsMayastorPoolType": {
            "type": "object",
            "description": "Configuration for OpenEBS Mayastor Pool. When a Mayastor Node (MSN) allocates storage capacity for a Persistent Volume (PV) it does so from a construct named a Mayastor Pool (MSP).\nEach MSN may have zero, one, or more such pools associated with it.  The ownership of a pool by a MSN is exclusive.\nIn the current version of Mayastor, a pool may have only a single block device member, which constitutes the entire data persistence layer for that pool.\nEach MSP include a unique name for the pool, the host name of the MSN on which it is hosted and a reference to a disk device which is accessible from that node (for inclusion within the pool).\nThe pool definition allows the reference to its member disk to adhere to one of a number of possible schemes, each associated with a specific access\nmechanism/transport/device type and differentiated by corresponding performance and/or attachment locality.",
            "title": "OpenEBS Mayastor Pool",
            "x-displayname": "OpenEBS Mayastor Pool",
            "x-ves-proto-message": "ves.io.schema.fleet.OpenebsMayastorPoolType",
            "properties": {
                "node": {
                    "type": "string",
                    "description": " Enter k8s node name of Mayastor Node (MSN) where this pool is or going to be located.\n\nExample: - \"master-0\"-\nRequired: YES",
                    "title": "Node Name",
                    "x-displayname": "Node Name",
                    "x-ves-example": "master-0",
                    "x-ves-required": "true"
                },
                "pool_disk_devices": {
                    "type": "array",
                    "description": " List of Disk Devices on Mayastore Node (MSN). Once Mayastor has created a pool it is assumed that it henceforth has exclusive use of the associated\n disk device; it should not be partitioned, formatted, or shared with another application or process.  Any existing data on the device will be destroyed.\n It supports various types such as \"/dev/sdb\", \"nvme://nqn.2014-08.com.vendor:nvme:nvm-subsystem-sn-d78432\" or \"iscsi://iqn.2000-08.com.datacore.com:cloudvm41-2\".\n\nExample: - \"/dev/sdb\"-\nRequired: YES",
                    "title": "List of Disk Devices",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "List of  Disk Devices",
                    "x-ves-example": "/dev/sdb",
                    "x-ves-required": "true"
                },
                "pool_name": {
                    "type": "string",
                    "description": " Enter Mayastor Pool Name\n\nExample: - \"maya-pool-01\"-\nRequired: YES",
                    "title": "Mayastor Pool Name",
                    "x-displayname": "Mayastor Pool Name",
                    "x-ves-example": "maya-pool-01",
                    "x-ves-required": "true"
                }
            }
        },
        "fleetPsoArrayConfiguration": {
            "type": "object",
            "description": "Device configuration for PSO Arrays",
            "title": "Arrays Configuration",
            "x-displayname": "Arrays Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.PsoArrayConfiguration",
            "properties": {
                "flash_array": {
                    "description": " Specify what storage flash arrays should be managed the plugin\n For FlashArrays you must set the \"mgmt_endpoint\" and \"api_token\"",
                    "title": "Flash Arrays",
                    "$ref": "#/definitions/fleetFlashArrayType",
                    "x-displayname": "Flash Arrays"
                },
                "flash_blade": {
                    "description": " Specify what storage flash blades should be managed the plugin",
                    "title": "Flash Blade",
                    "$ref": "#/definitions/fleetFlashBladeType",
                    "x-displayname": "Flash Blade"
                }
            }
        },
        "fleetStorageClassCustomType": {
            "type": "object",
            "description": "Custom Storage Class allows to insert Kubernetes storageclass definition which will be applied into given site.",
            "title": "Custom StorageClass",
            "x-displayname": "Custom StorageClass",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassCustomType",
            "properties": {
                "yaml": {
                    "type": "string",
                    "description": " K8s YAML for StorageClass",
                    "title": "Storage Class YAML",
                    "x-displayname": "Storage Class YAML"
                }
            }
        },
        "fleetStorageClassNetappTridentType": {
            "type": "object",
            "description": "Storage class Device configuration for NetApp Trident",
            "title": "NetApp Trident Storage",
            "x-displayname": "NetApp Trident Storage",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassNetappTridentType",
            "properties": {
                "selector": {
                    "type": "object",
                    "description": " Using the Selector field, each StorageClass calls out which virtual pool(s) may be used to host a volume.\n The volume will have the aspects defined in the chosen virtual pool.\n\nExample: - \"protection=silver; creditpoints=20000\"-",
                    "title": "Selector",
                    "x-displayname": "Selector",
                    "x-ves-example": "protection=silver; creditpoints=20000"
                },
                "storage_pools": {
                    "type": "string",
                    "description": " The storagePools parameter is used to further restrict the set of pools that match any specified attributes\n\nExample: - \"backend-name1:.*;backend-name2:storagePoolListName\"-",
                    "title": "Storage Pools",
                    "x-displayname": "Storage Pools",
                    "x-ves-example": "backend-name1:.*;backend-name2:storagePoolListName"
                }
            }
        },
        "fleetStorageClassOpenebsEnterpriseType": {
            "type": "object",
            "description": "Storage class Device configuration for OpenEBS Enterprise",
            "title": "OpenEBS Enterprise",
            "x-displayname": "OpenEBS Enterprise",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassOpenebsEnterpriseType",
            "properties": {
                "protocol": {
                    "type": "string",
                    "description": " Defines type of transport protocol used to mount the PV to the worker node hosting the associated application pod (NVMe-oF)\n\nExample: - \"nvmf\"-",
                    "title": "Protocol",
                    "x-displayname": "Protocol",
                    "x-ves-example": "nvmf"
                },
                "replication": {
                    "type": "integer",
                    "description": " Replication sets the replication factor of the PV, i.e. the number of data replicas to be maintained for it such as 1 or 3.\n\nExample: - \"1\"-",
                    "title": "Replication",
                    "format": "int32",
                    "x-displayname": "Replication",
                    "x-ves-example": "1"
                }
            }
        },
        "fleetStorageClassPureServiceOrchestratorType": {
            "type": "object",
            "description": "Storage class Device configuration for Pure Service Orchestrator",
            "title": "Pure Storage Service Orchestrator",
            "x-displayname": "Pure Storage Service Orchestrator",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageClassPureServiceOrchestratorType",
            "properties": {
                "backend": {
                    "type": "string",
                    "description": " Defines type of Pure storage backend block or file.\n The volume will have the aspects defined in the chosen virtual pool.\n\nExample: - \"block\"-",
                    "title": "Backend",
                    "x-displayname": "Backend",
                    "x-ves-example": "block"
                },
                "bandwidth_limit": {
                    "type": "string",
                    "description": " It must be between 1 MB/s and 512 GB/s. Enter the size as a number (bytes must be multiple of 512) or number with a single character unit symbol.\n Valid unit symbols are K, M, G, representing KiB, MiB, and GiB.\n\nExample: - \"1G\"-",
                    "title": "Bandwidth Limit",
                    "x-displayname": "Bandwidth Limit",
                    "x-ves-example": "1G"
                },
                "iops_limit": {
                    "type": "integer",
                    "description": " Enable IOPS limitation. It must be between 100 and 100 million. If value is 0, IOPS limit is not defined.\n\nExample: - \"3000\"-",
                    "title": "IOPS Limit",
                    "format": "int64",
                    "x-displayname": "IOPS Limit",
                    "x-ves-example": "3000"
                }
            }
        },
        "fleetStorageDeviceNetappBackendOntapNasType": {
            "type": "object",
            "description": "Configuration of storage backend for NetApp ONTAP NAS",
            "title": "Storage Backend NetApp ONTAP NAS",
            "x-displayname": "Storage Backend NetApp ONTAP NAS",
            "x-ves-oneof-field-data_lif": "[\"data_lif_dns_name\",\"data_lif_ip\"]",
            "x-ves-oneof-field-management_lif": "[\"management_lif_dns_name\",\"management_lif_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappBackendOntapNasType",
            "properties": {
                "auto_export_cidrs": {
                    "description": " List of CIDRs to filter Kubernetes’ node IPs against when autoExportPolicy is enabled\n\nExample: - \"0.0.0.0/0\"-",
                    "title": "Auto Export CIDRs",
                    "$ref": "#/definitions/viewsPrefixStringListType",
                    "x-displayname": "Auto Export CIDRs",
                    "x-ves-example": "0.0.0.0/0"
                },
                "auto_export_policy": {
                    "type": "boolean",
                    "description": " Enable automatic export policy creation and updating",
                    "title": "Auto Export Policy",
                    "format": "boolean",
                    "x-displayname": "Auto Export Policy"
                },
                "backend_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name. Driver is name + \"_\" + dataLIF",
                    "title": "Storage Backend Name",
                    "x-displayname": "Storage Backend Name"
                },
                "client_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of client certificate. Used for certificate-based auth.",
                    "title": "Client Certificate",
                    "x-displayname": "Client Certificate"
                },
                "client_private_key": {
                    "description": " Please Enter value of client private key. Used for certificate-based auth.",
                    "title": "Client Private Key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Client Private Key"
                },
                "data_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_ip]\nx-displayName: \"Backend Data LIF Name\"\nx-example: \"storage.local\"\nBackend Data LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "Backend Data LIF Name"
                },
                "data_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_dns_name]\nx-displayName: \"Backend Data LIF IP Address\"\nx-example: \"10.5.2.4\"\nBackend Data LIF IP Address is reachable at the given ip address",
                    "title": "Backend Data LIF IP Address"
                },
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class selection.\n\nExample: - \"{\"store\":\"nas_store\"}\"-",
                    "title": "Backend Labels",
                    "x-displayname": "Backend Labels",
                    "x-ves-example": "{\"store\":\"nas_store\"}"
                },
                "limit_aggregate_usage": {
                    "type": "string",
                    "description": " Fail provisioning if usage is above this percentage. Not enforced by default.\n\nExample: - \"80%\"-",
                    "title": "Limit Aggregate Usage",
                    "x-displayname": "Limit Aggregate Usage",
                    "x-ves-example": "80%"
                },
                "limit_volume_size": {
                    "type": "string",
                    "description": " Fail provisioning if requested volume size is above this value. Not enforced by default.\n\nExample: - \"50Gi\"-",
                    "title": "Limit Volume Size",
                    "x-displayname": "Limit Volume Size",
                    "x-ves-example": "50Gi"
                },
                "management_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_ip]\nx-displayName: \"Backend Management LIF Name\"\nx-example: \"storage.local\"\nBackend Management LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "Backend Management LIF Name"
                },
                "management_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_dns_name]\nx-displayName: \"Backend Management LIF IP Address\"\nx-example: \"10.5.2.4\"\nBackend Management LIF IP Address is reachable at the given ip address",
                    "title": "Backend Management LIF IP Address"
                },
                "nfs_mount_options": {
                    "type": "string",
                    "description": " Comma-separated list of NFS mount options. Not enforced by default.\n\nExample: - \"nfsvers=4\"-",
                    "title": "NFS Mount Options",
                    "x-displayname": "NFS Mount Options",
                    "x-ves-example": "nfsvers=4"
                },
                "password": {
                    "description": " Please Enter you password. Password to connect to the cluster/SVM",
                    "title": "Password",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Password"
                },
                "region": {
                    "type": "string",
                    "description": " Virtual Pool Region\n\nExample: - \"us_east_1b\"-",
                    "title": "Backend Region",
                    "x-displayname": "Backend Region",
                    "x-ves-example": "us_east_1b"
                },
                "storage": {
                    "type": "array",
                    "description": " List of Virtual Storage Pool definitions which are referred back by Storage Class label match selection.",
                    "title": "Virtual Storage Pools",
                    "items": {
                        "$ref": "#/definitions/fleetOntapVirtualStoragePoolType"
                    },
                    "x-displayname": "Virtual Storage Pools"
                },
                "storage_driver_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name\n\nExample: - \"ontap-nas\"-\nRequired: YES",
                    "title": "Storage Backend Driver",
                    "x-displayname": "Storage Backend Driver",
                    "x-ves-example": "ontap-nas",
                    "x-ves-required": "true"
                },
                "storage_prefix": {
                    "type": "string",
                    "description": " Prefix used when provisioning new volumes in the SVM. Once set this cannot be updated\n\nExample: - \"trident\"-",
                    "title": "Storage Prefix",
                    "x-displayname": "Storage Prefix",
                    "x-ves-example": "trident"
                },
                "svm": {
                    "type": "string",
                    "description": " Storage virtual machine to use. Derived if an SVM managementLIF is specified\n\nExample: - \"trident_svm\"-",
                    "title": "Backend SVM",
                    "x-displayname": "Backend SVM",
                    "x-ves-example": "trident_svm"
                },
                "trusted_ca_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of trusted CA certificate. Optional. Used for certificate-based auth..",
                    "title": "Trusted CA Certificate",
                    "x-displayname": "Trusted CA Certificate"
                },
                "username": {
                    "type": "string",
                    "description": " Username to connect to the cluster/SVM\n\nExample: - \"cluster-admin\"-\nRequired: YES",
                    "title": "Username",
                    "x-displayname": "Username",
                    "x-ves-example": "cluster-admin",
                    "x-ves-required": "true"
                },
                "volume_defaults": {
                    "description": " List of QoS volume defaults types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                }
            }
        },
        "fleetStorageDeviceNetappBackendOntapSanType": {
            "type": "object",
            "description": "Configuration of storage backend for NetApp ONTAP SAN",
            "title": "Storage Backend NetApp ONTAP SAN",
            "x-displayname": "Storage Backend NetApp ONTAP SAN",
            "x-ves-oneof-field-chap_choice": "[\"no_chap\",\"use_chap\"]",
            "x-ves-oneof-field-data_lif": "[\"data_lif_dns_name\",\"data_lif_ip\"]",
            "x-ves-oneof-field-management_lif": "[\"management_lif_dns_name\",\"management_lif_ip\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappBackendOntapSanType",
            "properties": {
                "client_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of client certificate. Used for certificate-based auth.",
                    "title": "Client Certificate",
                    "x-displayname": "Client Certificate"
                },
                "client_private_key": {
                    "description": " Please Enter value of client private key. Used for certificate-based auth.",
                    "title": "Client Private Key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Client Private Key"
                },
                "data_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_ip]\nx-displayName: \"Backend Data LIF Name\"\nx-example: \"storage.local\"\nBackend Data LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "Backend Data LIF Name"
                },
                "data_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [data_lif_dns_name]\nx-displayName: \"Backend Data LIF IP Address\"\nx-example: \"10.5.2.4\"\nBackend Data LIF IP Address is reachable at the given ip address",
                    "title": "Backend Data LIF IP Address"
                },
                "igroup_name": {
                    "type": "string",
                    "description": " Name of the igroup for SAN volumes to use",
                    "title": "iGroup Name",
                    "x-displayname": "iGroup Name"
                },
                "labels": {
                    "type": "object",
                    "description": " List of labels for Storage Device used in NetApp ONTAP. It is used for storage class selection.\n\nExample: - \"{\"store\":\"nas_store\"}\"-",
                    "title": "Backend Labels",
                    "x-displayname": "Backend Labels",
                    "x-ves-example": "{\"store\":\"nas_store\"}"
                },
                "limit_aggregate_usage": {
                    "type": "integer",
                    "description": " Fail provisioning if usage is above this percentage. Not enforced by default.\n\nExample: - \"80\"-",
                    "title": "Limit Aggregate Usage",
                    "format": "int64",
                    "x-displayname": "Limit Aggregate Usage",
                    "x-ves-example": "80"
                },
                "limit_volume_size": {
                    "type": "integer",
                    "description": " Fail provisioning if requested volume size in GBi is above this value. Not enforced by default.\n\nExample: - \"50\"-",
                    "title": "Limit Volume Size",
                    "format": "int32",
                    "x-displayname": "Limit Volume Size",
                    "x-ves-example": "50"
                },
                "management_lif_dns_name": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_ip]\nx-displayName: \"Backend Management LIF Name\"\nx-example: \"storage.local\"\nBackend Management LIF IP Address's ip address is discovered using DNS name resolution. The name given here is fully qualified domain name.",
                    "title": "Backend Management LIF Name"
                },
                "management_lif_ip": {
                    "type": "string",
                    "description": "Exclusive with [management_lif_dns_name]\nx-displayName: \"Backend Management LIF IP Address\"\nx-example: \"10.5.2.4\"\nBackend Management LIF IP Address is reachable at the given ip address",
                    "title": "Backend Management LIF IP Address"
                },
                "no_chap": {
                    "description": "Exclusive with [use_chap]\nx-displayName: \"CHAP Disabled\"\nCHAP disabled",
                    "title": "CHAP Disabled",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "password": {
                    "description": " Please Enter you password. Password to connect to the cluster/SVM",
                    "title": "Password",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Password"
                },
                "region": {
                    "type": "string",
                    "description": " Virtual Pool Region\n\nExample: - \"us_east_1b\"-",
                    "title": "Backend Region",
                    "x-displayname": "Backend Region",
                    "x-ves-example": "us_east_1b"
                },
                "storage": {
                    "type": "array",
                    "description": " List of Virtual Storage Pool definitions which are referred back by Storage Class label match selection.",
                    "title": "Virtual Storage Pools",
                    "items": {
                        "$ref": "#/definitions/fleetOntapVirtualStoragePoolType"
                    },
                    "x-displayname": "Virtual Storage Pools"
                },
                "storage_driver_name": {
                    "type": "string",
                    "description": " Configuration of Backend Name\n\nExample: - \"ontap-nas\"-\nRequired: YES",
                    "title": "Storage Backend Driver",
                    "x-displayname": "Storage Backend Driver",
                    "x-ves-example": "ontap-nas",
                    "x-ves-required": "true"
                },
                "storage_prefix": {
                    "type": "string",
                    "description": " Prefix used when provisioning new volumes in the SVM. Once set this cannot be updated\n\nExample: - \"trident\"-",
                    "title": "Storage Prefix",
                    "x-displayname": "Storage Prefix",
                    "x-ves-example": "trident"
                },
                "svm": {
                    "type": "string",
                    "description": " Storage virtual machine to use. Derived if an SVM managementLIF is specified\n\nExample: - \"trident_svm\"-",
                    "title": "Backend SVM",
                    "x-displayname": "Backend SVM",
                    "x-ves-example": "trident_svm"
                },
                "trusted_ca_certificate": {
                    "type": "string",
                    "description": " Please Enter Base64-encoded value of trusted CA certificate. Optional. Used for certificate-based auth..",
                    "title": "Trusted CA Certificate",
                    "x-displayname": "Trusted CA Certificate"
                },
                "use_chap": {
                    "description": "Exclusive with [no_chap]\nx-displayName: \"Use Device NetApp Backend ONTAP SAN CHAP\"\nDevice NetApp Backend ONTAP SAN CHAP configuration options for enabled CHAP",
                    "title": "Use Device NetApp Backend ONTAP SAN CHAP configuration",
                    "$ref": "#/definitions/fleetDeviceNetappBackendOntapSanChapType"
                },
                "username": {
                    "type": "string",
                    "description": " Username to connect to the cluster/SVM\n\nExample: - \"cluster-admin\"-\nRequired: YES",
                    "title": "Username",
                    "x-displayname": "Username",
                    "x-ves-example": "cluster-admin",
                    "x-ves-required": "true"
                },
                "volume_defaults": {
                    "description": " List of QoS volume defaults types",
                    "title": "Backend Volume Defaults",
                    "$ref": "#/definitions/fleetOntapVolumeDefaults",
                    "x-displayname": "Backend Volume Defaults"
                }
            }
        },
        "fleetStorageDeviceNetappTridentType": {
            "type": "object",
            "description": "Device configuration for NetApp Trident Storage",
            "title": "NetApp Trident",
            "x-displayname": "NetApp Trident",
            "x-ves-oneof-field-backend_choice": "[\"netapp_backend_ontap_nas\",\"netapp_backend_ontap_san\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceNetappTridentType",
            "properties": {
                "netapp_backend_ontap_nas": {
                    "description": "Exclusive with [netapp_backend_ontap_san]\nx-displayName: \"ONTAP NAS\"\nBackend configuration for ONTAP NAS",
                    "title": "ONTAP NAS",
                    "$ref": "#/definitions/fleetStorageDeviceNetappBackendOntapNasType"
                },
                "netapp_backend_ontap_san": {
                    "description": "Exclusive with [netapp_backend_ontap_nas]\nx-displayName: \"ONTAP SAN\"\nBackend configuration for ONTAP SAN",
                    "title": "ONTAP SAN",
                    "$ref": "#/definitions/fleetStorageDeviceNetappBackendOntapSanType"
                }
            }
        },
        "fleetStorageDeviceOpenebsEnterpriseType": {
            "type": "object",
            "description": "Device configuration for OpenEBS Enterprise",
            "title": "OpenEBS Enterprise",
            "x-displayname": "OpenEBS Enterprise",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDeviceOpenebsEnterpriseType",
            "properties": {
                "mayastor_pools": {
                    "type": "array",
                    "description": " List of  Mayastor Pools. When a Mayastor Node (MSN) allocates storage capacity for a Persistent Volume (PV) it does so from a construct named a Mayastor Pool (MSP).\n Each MSN may have zero, one, or more such pools associated with it.  The ownership of a pool by a MSN is exclusive.\n In the current version of Mayastor, a pool may have only a single block device member, which constitutes the entire data persistence layer for that pool.\n Each MSP include a unique name for the pool, the host name of the MSN on which it is hosted and a reference to a disk device which is accessible from that node (for inclusion within the pool).\n The pool definition allows the reference to its member disk to adhere to one of a number of possible schemes, each associated with a specific access\n mechanism/transport/device type and differentiated by corresponding performance and/or attachment locality.",
                    "title": "List of  Mayastor Pools",
                    "items": {
                        "$ref": "#/definitions/fleetOpenebsMayastorPoolType"
                    },
                    "x-displayname": "List of  Mayastor Pools"
                }
            }
        },
        "fleetStorageDevicePureStorageServiceOrchestratorType": {
            "type": "object",
            "description": "Device configuration for Pure Storage Service Orchestrator",
            "title": "Pure Storage Service Orchestrator",
            "x-displayname": "Pure Storage Service Orchestrator",
            "x-ves-proto-message": "ves.io.schema.fleet.StorageDevicePureStorageServiceOrchestratorType",
            "properties": {
                "arrays": {
                    "description": " This section configure PSO storage arrays\nRequired: YES",
                    "title": "Arrays Configuration",
                    "$ref": "#/definitions/fleetPsoArrayConfiguration",
                    "x-displayname": "Arrays Configuration",
                    "x-ves-required": "true"
                },
                "cluster_id": {
                    "type": "string",
                    "description": " clusterID is added as a prefix for all volumes created by this PSO installation.\n clusterID is also used to identify the volumes used by the datastore, pso-db.\n clusterID MUST BE UNIQUE for multiple K8s clusters running on top of the same storage arrays.\n characters allowed: alphanumeric and underscores\n\nExample: - \"cluster1\"-\nRequired: YES",
                    "title": "Cluster ID",
                    "x-displayname": "Cluster ID",
                    "x-ves-example": "cluster1",
                    "x-ves-required": "true"
                },
                "enable_storage_topology": {
                    "type": "boolean",
                    "description": " This option is to enable/disable the csi topology feature for pso-csi",
                    "title": "Enable Storage Topology",
                    "format": "boolean",
                    "x-displayname": "Enable Storage Topology"
                },
                "enable_strict_topology": {
                    "type": "boolean",
                    "description": " This option is to enable/disable the strict csi topology feature for pso-csi",
                    "title": "Enable Strict Topology",
                    "format": "boolean",
                    "x-displayname": "Enable Strict Topology"
                }
            }
        },
        "fleetVGPUConfiguration": {
            "type": "object",
            "description": "Licensing configuration for NVIDIA vGPU",
            "title": "vGPU Configuration",
            "x-displayname": "vGPU Configuration",
            "x-ves-proto-message": "ves.io.schema.fleet.VGPUConfiguration",
            "properties": {
                "feature_type": {
                    "description": " Set Feature to be enabled\nRequired: YES",
                    "title": "Feature Type",
                    "$ref": "#/definitions/fleetVGPUFeatureType",
                    "x-displayname": "Feature Type",
                    "x-ves-required": "true"
                },
                "server_address": {
                    "type": "string",
                    "description": " Set License Server Address\n\nExample: - \"gridlicense1.example.com\"-",
                    "title": "License Server Address",
                    "x-displayname": "License Server Address",
                    "x-ves-example": "gridlicense1.example.com"
                },
                "server_port": {
                    "type": "integer",
                    "description": " Set License Server port number",
                    "title": "License Server Port Number",
                    "format": "int64",
                    "x-displayname": "License Server Port Number"
                }
            }
        },
        "fleetVGPUFeatureType": {
            "type": "string",
            "description": "Set feature to be enabled\n\nOperate with a degraded vGPU performance\nEnable NVIDIA vGPU\nEnable NVIDIA RTX Virtual Workstation\nEnable NVIDIA Virtual Compute Server",
            "title": "vGPU Feature Type",
            "enum": [
                "UNLICENSED",
                "VGPU",
                "VWS",
                "VCS"
            ],
            "default": "UNLICENSED",
            "x-displayname": "Feature Type",
            "x-ves-proto-enum": "ves.io.schema.fleet.VGPUFeatureType"
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "network_firewallActiveForwardProxyPoliciesType": {
            "type": "object",
            "description": "List of Forward Proxy Policies",
            "title": "Active Forward Proxy Policies Type",
            "x-displayname": "Active Forward Proxy Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType",
            "properties": {
                "forward_proxy_policies": {
                    "type": "array",
                    "description": " List of Forward Proxy Policies\nRequired: YES",
                    "title": "Forward Proxy Policies",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Forward Proxy Policies",
                    "x-ves-required": "true"
                }
            }
        },
        "network_firewallActiveNetworkPoliciesType": {
            "type": "object",
            "description": "List of network policy views.",
            "title": "Active Network Policies Type",
            "x-displayname": "Active Network Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveNetworkPoliciesType",
            "properties": {
                "network_policies": {
                    "type": "array",
                    "description": " Ordered List of Network Policies active for this network firewall\nRequired: YES",
                    "title": "Network Policy",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Network Policy",
                    "x-ves-required": "true"
                }
            }
        },
        "network_interfaceDHCPInterfaceIPType": {
            "type": "object",
            "description": "Map of Interface IP assignments per node",
            "title": "Interface IP Assignments",
            "x-displayname": "Interface IP Assignments",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPInterfaceIPType",
            "properties": {
                "interface_ip_map": {
                    "type": "object",
                    "description": " Map of Site:Node to IP address.",
                    "title": "Site:Node to IP mapping",
                    "x-displayname": "Site:Node to IP Mapping"
                }
            }
        },
        "network_interfaceDHCPNetworkType": {
            "type": "object",
            "description": "DHCP network configuration",
            "title": "DHCP Network",
            "x-displayname": "DHCP Network",
            "x-ves-displayorder": "1,12,4,5,9",
            "x-ves-oneof-field-dns_choice": "[\"dns_address\",\"same_as_dgw\"]",
            "x-ves-oneof-field-gateway_choice": "[\"dgw_address\",\"first_address\",\"last_address\"]",
            "x-ves-oneof-field-network_prefix_choice": "[\"network_prefix\",\"network_prefix_allocator\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPNetworkType",
            "properties": {
                "dgw_address": {
                    "type": "string",
                    "description": "Exclusive with [first_address last_address]\nx-displayName: \"Configured Address\"\nx-example: \"10.1.1.10\"\nConfigured address from the network prefix is chosen as default gateway.",
                    "title": "Configured Address"
                },
                "dns_address": {
                    "type": "string",
                    "description": "Exclusive with [same_as_dgw]\nx-displayName: \"Configured Address\"\nx-example: \"10.1.1.11\"\nConfigured address is chosen as DNS server address in DHCP response.",
                    "title": "Configured Address"
                },
                "first_address": {
                    "description": "Exclusive with [dgw_address last_address]\nx-displayName: \"First Address of Network\"\nFirst usable address from the network prefix is chosen as default gateway",
                    "title": "First Address",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "last_address": {
                    "description": "Exclusive with [dgw_address first_address]\nx-displayName: \"Last Address of Network\"\nLast usable address from the network prefix is chosen as default gateway",
                    "title": "Last Address",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "network_prefix": {
                    "type": "string",
                    "description": "Exclusive with [network_prefix_allocator]\nx-displayName: \"Network Prefix\"\nx-example: \"10.1.1.0/24\"\nNetwork Prefix for a single site.",
                    "title": "Network Prefix"
                },
                "network_prefix_allocator": {
                    "description": "Exclusive with [network_prefix]\nx-displayName: \"Prefix Allocator a Fleet\"\nNetwork Prefix for a Fleet is derived from address allocator rules. \nPrefix length from address allocator scheme is used to calculate offsets",
                    "title": "Network Prefix for a Fleet",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "pool_settings": {
                    "description": " Controls how DHCP pools are handled\nRequired: YES",
                    "title": "DHCP Pool Settings",
                    "$ref": "#/definitions/network_interfaceDHCPPoolSettingType",
                    "x-displayname": "DHCP Pool Settings",
                    "x-ves-required": "true"
                },
                "pools": {
                    "type": "array",
                    "description": " List of non overlapping ip address ranges.",
                    "title": "DHCP pools",
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPPoolType"
                    },
                    "x-displayname": "DHCP Pools"
                },
                "same_as_dgw": {
                    "description": "Exclusive with [dns_address]\nx-displayName: \"Default Gateway Address\"\nDNS server address is same as default gateway address",
                    "title": "Default Gateway Address",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "network_interfaceDHCPPoolSettingType": {
            "type": "string",
            "description": "Identifies the how to pick the network for Interface.\n\nAddress ranges in DHCP pool list are allocation list\nAddress ranges in DHCP pool list are exclude list",
            "title": "DHCP POOL SETTING",
            "enum": [
                "INCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS",
                "EXCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS"
            ],
            "default": "INCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS",
            "x-displayname": "Interface Network Type",
            "x-ves-proto-enum": "ves.io.schema.network_interface.DHCPPoolSettingType"
        },
        "network_interfaceDHCPPoolType": {
            "type": "object",
            "description": "DHCP pool is a range of IP addresses (start ip and end ip).",
            "title": "DHCP IP Range",
            "x-displayname": "DHCP IP Range",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPPoolType",
            "properties": {
                "end_ip": {
                    "type": "string",
                    "description": " Ending IP of the pool range.\n In case of address allocator, offset is derived based on network prefix.\n 10.1.1.200 with prefix length of 24, end offset is 0.0.0.200\n\nExample: - \"10.1.1.200\"-",
                    "title": "End IP",
                    "x-displayname": "Ending IP",
                    "x-ves-example": "10.1.1.200"
                },
                "exclude": {
                    "type": "boolean",
                    "description": " If exclude is true, IP addresses are not assigned from this range.",
                    "title": "Exclude",
                    "format": "boolean",
                    "x-displayname": "Exclude"
                },
                "start_ip": {
                    "type": "string",
                    "description": " Starting IP of the pool range. \n In case of address allocator, offset is derived based on network prefix.\n 10.1.1.5 with prefix length of 24, start offset is 0.0.0.5\n\nExample: - \"10.1.1.5\"-",
                    "title": "Start IP",
                    "x-displayname": "Starting IP",
                    "x-ves-example": "10.1.1.5"
                }
            }
        },
        "network_interfaceDHCPServerParametersType": {
            "type": "object",
            "x-ves-oneof-field-interfaces_addressing_choice": "[\"automatic_from_end\",\"automatic_from_start\",\"interface_ip_map\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPServerParametersType",
            "properties": {
                "automatic_from_end": {
                    "description": "Exclusive with [automatic_from_start interface_ip_map]\nx-displayName: \"Automatic End\"\nAssign automatically from End of the first network in the list",
                    "title": "Automatic End",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "automatic_from_start": {
                    "description": "Exclusive with [automatic_from_end interface_ip_map]\nx-displayName: \"Automatic Start\"\nAssign automatically from start of the first network in the list",
                    "title": "Automatic Start",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "dhcp_networks": {
                    "type": "array",
                    "description": " List of networks from which DHCP server can allocate ip addresses\nRequired: YES",
                    "title": "DHCP Networks",
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPNetworkType"
                    },
                    "x-displayname": "DHCP Networks",
                    "x-ves-required": "true"
                },
                "dhcp_option82_tag": {
                    "type": "string",
                    "description": " Optional tag that can be given to this configuration\n\nExample: - \"network_red\"-",
                    "title": "Option 82 Tag",
                    "x-displayname": "Option 82 Tag",
                    "x-ves-example": "network_red"
                },
                "fixed_ip_map": {
                    "type": "object",
                    "description": " Fixed MAC address to ip assignments, Key: Mac address, Value: IP Address",
                    "title": "Fixed IP Assignments",
                    "x-displayname": "Fixed MAC address to IP Assignments"
                },
                "interface_ip_map": {
                    "description": "Exclusive with [automatic_from_end automatic_from_start]\nx-displayName: \"Configured\"\nConfigured address for every node",
                    "title": "Configured Address",
                    "$ref": "#/definitions/network_interfaceDHCPInterfaceIPType"
                }
            }
        },
        "network_interfaceDedicatedInterfaceType": {
            "type": "object",
            "description": "Dedicated Interface Configuration",
            "title": "Dedicated Interface",
            "x-displayname": "Dedicated Interface",
            "x-ves-oneof-field-monitoring_choice": "[\"monitor\",\"monitor_disabled\"]",
            "x-ves-oneof-field-node_choice": "[\"cluster\",\"node\"]",
            "x-ves-oneof-field-primary_choice": "[\"is_primary\",\"not_primary\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DedicatedInterfaceType",
            "properties": {
                "cluster": {
                    "description": "Exclusive with [node]\nx-displayName: \"Cluster, All Node of the site\"\nConfiguration will apply to given device on all nodes of the site.",
                    "title": "Cluster",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "device": {
                    "type": "string",
                    "description": " Name of the device for which interface is configured. Use wwan0 for 4G/LTE.\n\nExample: - \"eth0\"-\nRequired: YES",
                    "title": "Device",
                    "x-displayname": "Interface Device",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true"
                },
                "is_primary": {
                    "description": "Exclusive with [not_primary]\nx-displayName: \"Interface is Primary\"\nThis interface is primary",
                    "title": "Interface is Primary",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "monitor": {
                    "description": "Exclusive with [monitor_disabled]\nx-displayName: \"Enabled\"\nLink Quality Monitoring parameters. Choosing the option will enable link quality monitoring.",
                    "title": "Monitoring enabled",
                    "$ref": "#/definitions/network_interfaceLinkQualityMonitorConfig"
                },
                "monitor_disabled": {
                    "description": "Exclusive with [monitor]\nx-displayName: \"Disabled\"\nLink quality monitoring disabled on the interface.",
                    "title": "Monitoring disabled",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "mtu": {
                    "type": "integer",
                    "description": " Maximum packet size (Maximum Transfer Unit) of the interface\n When configured, mtu must be between 512 and 16384\n\nExample: - \"1450\"-",
                    "title": "Maximum Packet Size (MTU)",
                    "format": "int64",
                    "x-displayname": "Maximum Packet Size (MTU)",
                    "x-ves-example": "1450"
                },
                "node": {
                    "type": "string",
                    "description": "Exclusive with [cluster]\nx-displayName: \"Specific Node\"\nConfiguration will apply to a device on the given node of the site.",
                    "title": "Node"
                },
                "not_primary": {
                    "description": "Exclusive with [is_primary]\nx-displayName: \"Interface is Not Primary\"\nThis interface is not primary",
                    "title": "Interface is Not Primary",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "priority": {
                    "type": "integer",
                    "description": " Priority of the network interface when multiple network interfaces are present in outside network\n Greater the value, higher the priority\n\nExample: - \"42\"-",
                    "title": "Priority",
                    "format": "int64",
                    "x-displayname": "Priority",
                    "x-ves-example": "42"
                }
            }
        },
        "network_interfaceDedicatedManagementInterfaceType": {
            "type": "object",
            "description": "Dedicated Interface Configuration",
            "title": "Dedicated Management Interface",
            "x-displayname": "Dedicated Management Interface",
            "x-ves-oneof-field-node_choice": "[\"cluster\",\"node\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DedicatedManagementInterfaceType",
            "properties": {
                "cluster": {
                    "description": "Exclusive with [node]\nx-displayName: \"Cluster, All Node of the site\"\nConfiguration will apply to given device on all nodes of the site.",
                    "title": "Cluster",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "device": {
                    "type": "string",
                    "description": " Name of the device for which interface is configured \n\nExample: - \"eth0\"-\nRequired: YES",
                    "title": "Device",
                    "x-displayname": "Interface Device",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true"
                },
                "mtu": {
                    "type": "integer",
                    "description": " Maximum packet size (Maximum Transfer Unit) of the interface\n When configured, mtu must be between 512 and 16384\n\nExample: - \"1450\"-",
                    "title": "Maximum Packet Size (MTU)",
                    "format": "int64",
                    "x-displayname": "Maximum Packet Size (MTU)",
                    "x-ves-example": "1450"
                },
                "node": {
                    "type": "string",
                    "description": "Exclusive with [cluster]\nx-displayName: \"Specific Node\"\nConfiguration will apply to a device on the given node of the site.",
                    "title": "Node"
                }
            }
        },
        "network_interfaceEthernetInterfaceType": {
            "type": "object",
            "description": "Ethernet Interface Configuration",
            "title": "Ethernet Interface",
            "x-displayname": "Ethernet Interface",
            "x-ves-oneof-field-address_choice": "[\"dhcp_client\",\"dhcp_server\",\"static_ip\"]",
            "x-ves-oneof-field-ipv6_address_choice": "[\"no_ipv6_address\",\"static_ipv6_address\"]",
            "x-ves-oneof-field-monitoring_choice": "[\"monitor\",\"monitor_disabled\"]",
            "x-ves-oneof-field-network_choice": "[\"inside_network\",\"site_local_inside_network\",\"site_local_network\",\"srv6_network\",\"storage_network\"]",
            "x-ves-oneof-field-node_choice": "[\"cluster\",\"node\"]",
            "x-ves-oneof-field-primary_choice": "[\"is_primary\",\"not_primary\"]",
            "x-ves-oneof-field-vlan_choice": "[\"untagged\",\"vlan_id\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.EthernetInterfaceType",
            "properties": {
                "cluster": {
                    "description": "Exclusive with [node]\nx-displayName: \"Cluster, All Nodes of the Site\"\nConfiguration will apply to given device on all nodes of the site.",
                    "title": "Node Independent",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "device": {
                    "type": "string",
                    "description": " Interface configuration for the ethernet device \n\nExample: - \"eth0\"-\nRequired: YES",
                    "title": "Device",
                    "x-displayname": "Ethernet Device",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true"
                },
                "dhcp_client": {
                    "description": "Exclusive with [dhcp_server static_ip]\nx-displayName: \"DHCP Client\"\nInterface gets it IP address from external DHCP server",
                    "title": "DHCP Client",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "dhcp_server": {
                    "description": "Exclusive with [dhcp_client static_ip]\nx-displayName: \"DHCP server\"\nDHCP Server is configured for this interface, Interface IP from DHCP server configuration.",
                    "title": "DHCP Server",
                    "$ref": "#/definitions/network_interfaceDHCPServerParametersType"
                },
                "inside_network": {
                    "description": "Exclusive with [site_local_inside_network site_local_network srv6_network storage_network]\nx-displayName: \"Inside Network\"\nInterface belongs to user configured inside network",
                    "title": "Inside Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "is_primary": {
                    "description": "Exclusive with [not_primary]\nx-displayName: \"Interface is Primary\"\nThis interface is primary",
                    "title": "Interface is Primary",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "monitor": {
                    "description": "Exclusive with [monitor_disabled]\nx-displayName: \"Enabled\"\nLink Quality Monitoring parameters. Choosing the option will enable link quality monitoring.",
                    "title": "Monitoring enabled",
                    "$ref": "#/definitions/network_interfaceLinkQualityMonitorConfig"
                },
                "monitor_disabled": {
                    "description": "Exclusive with [monitor]\nx-displayName: \"Disabled\"\nLink quality monitoring disabled on the interface.",
                    "title": "Monitoring disabled",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "mtu": {
                    "type": "integer",
                    "description": " Maximum packet size (Maximum Transfer Unit) of the interface\n When configured, mtu must be between 512 and 16384\n\nExample: - \"1450\"-",
                    "title": "Maximum Packet Size (MTU)",
                    "format": "int64",
                    "x-displayname": "Maximum Packet Size (MTU)",
                    "x-ves-example": "1450"
                },
                "no_ipv6_address": {
                    "description": "Exclusive with [static_ipv6_address]\nx-displayName: \"No IPv6 Address\"\nInterface does not have an IPv6 Address.",
                    "title": "no_ipv6_address",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "node": {
                    "type": "string",
                    "description": "Exclusive with [cluster]\nx-displayName: \"Specific Node\"\nConfiguration will apply to a device on the given node.",
                    "title": "Node"
                },
                "not_primary": {
                    "description": "Exclusive with [is_primary]\nx-displayName: \"Interface is Not Primary\"\nThis interface is not primary",
                    "title": "Interface is Not Primary",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "priority": {
                    "type": "integer",
                    "description": " Priority of the network interface when multiple network interfaces are present in outside network\n Greater the value, higher the priority\n\nExample: - \"42\"-",
                    "title": "Priority",
                    "format": "int64",
                    "x-displayname": "Priority",
                    "x-ves-example": "42"
                },
                "site_local_inside_network": {
                    "description": "Exclusive with [inside_network site_local_network srv6_network storage_network]\nx-displayName: \"Site Local Network Inside\"\nInterface belongs to site local network inside",
                    "title": "Site Local Network Inside",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "site_local_network": {
                    "description": "Exclusive with [inside_network site_local_inside_network srv6_network storage_network]\nx-displayName: \"Site Local Network (Outside)\"\nInterface belongs to site local network (outside)",
                    "title": "Site Local Network",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "srv6_network": {
                    "description": "Exclusive with [inside_network site_local_inside_network site_local_network storage_network]\nx-displayName: \"Per Site Srv6 Network\"\nInterface belongs to per site srv6 network",
                    "title": "Per Site Srv6 Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "static_ip": {
                    "description": "Exclusive with [dhcp_client dhcp_server]\nx-displayName: \"Static IP\"\nInterface IP is configured statically",
                    "title": "Static IP",
                    "$ref": "#/definitions/network_interfaceStaticIPParametersType"
                },
                "static_ipv6_address": {
                    "description": "Exclusive with [no_ipv6_address]\nx-displayName: \"Static IP\"\nInterface IP is configured statically",
                    "title": "Static IP",
                    "$ref": "#/definitions/network_interfaceStaticIPParametersType"
                },
                "storage_network": {
                    "description": "Exclusive with [inside_network site_local_inside_network site_local_network srv6_network]\nx-displayName: \"Storage Network\"\nInterface belongs to site local network inside",
                    "title": "Storage Network",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "untagged": {
                    "description": "Exclusive with [vlan_id]\nx-displayName: \"Untagged\"\nConfigure a untagged ethernet interface",
                    "title": "Untagged",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "vlan_id": {
                    "type": "integer",
                    "description": "Exclusive with [untagged]\nx-displayName: \"VLAN Id\"\nConfigure a VLAN tagged ethernet interface",
                    "title": "VLAN Id",
                    "format": "int64"
                }
            }
        },
        "network_interfaceLinkQualityMonitorConfig": {
            "type": "object",
            "description": "Link Quality Monitoring configuration for a network interface.",
            "title": "Link Quality Monitoring Configuration",
            "x-displayname": "Link Quality Monitoring Configuration",
            "x-ves-proto-message": "ves.io.schema.network_interface.LinkQualityMonitorConfig"
        },
        "network_interfaceStaticIPParametersType": {
            "type": "object",
            "description": "Configure Static IP parameters",
            "title": "Static IP Parameters",
            "x-displayname": "Static IP Parameters",
            "x-ves-oneof-field-network_prefix_choice": "[\"cluster_static_ip\",\"fleet_static_ip\",\"node_static_ip\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIPParametersType",
            "properties": {
                "cluster_static_ip": {
                    "description": "Exclusive with [fleet_static_ip node_static_ip]\nx-displayName: \"Cluster, All Nodes of the  Site\"\nStatic IP configuration for a specific node",
                    "title": "Node Specific",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersClusterType"
                },
                "fleet_static_ip": {
                    "description": "Exclusive with [cluster_static_ip node_static_ip]\nx-displayName: \"Fleet, All Nodes of All Sites in Fleet\"\nStatic IP configuration for the fleet",
                    "title": "Fleet",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersFleetType"
                },
                "node_static_ip": {
                    "description": "Exclusive with [cluster_static_ip fleet_static_ip]\nx-displayName: \"Specific Node\"\nStatic IP configuration for the Node",
                    "title": "Node",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersNodeType"
                }
            }
        },
        "network_interfaceStaticIpParametersClusterType": {
            "type": "object",
            "description": "Configure Static IP parameters  for cluster",
            "title": "Static IP Parameters",
            "x-displayname": "Cluster: Static IP Parameters",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIpParametersClusterType",
            "properties": {
                "interface_ip_map": {
                    "type": "object",
                    "description": " Map of Node to Static ip configuration value, Key:Node, Value:IP Address",
                    "title": "Site:Node to IP mapping",
                    "x-displayname": "Node to IP Mapping"
                }
            }
        },
        "network_interfaceStaticIpParametersFleetType": {
            "type": "object",
            "description": "Configure Static IP parameters",
            "title": "Static IP Parameters",
            "x-displayname": "Fleet: Static IP Parameters",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIpParametersFleetType",
            "properties": {
                "default_gw": {
                    "type": "string",
                    "description": " IP address offset of the default gateway, prefix len is used to calculate offset\n\nExample: - \"192.168.20.1\"-",
                    "title": "Default Gateway",
                    "x-displayname": "Default Gateway",
                    "x-ves-example": "192.168.20.1"
                },
                "dns_server": {
                    "type": "string",
                    "description": " IP address offset of the DNS server, prefix len is used to calculate offset\n\nExample: - \"192.168.20.1\"-",
                    "title": "DNS Server",
                    "x-displayname": "DNS Server",
                    "x-ves-example": "192.168.20.1"
                },
                "network_prefix_allocator": {
                    "description": " Static IP configuration for the fleet",
                    "title": "Fleet",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Fleet address allocator"
                }
            }
        },
        "network_interfaceStaticIpParametersNodeType": {
            "type": "object",
            "description": "Configure Static IP parameters for a node",
            "title": "Static IP Parameters",
            "x-displayname": "Node: Static IP Parameters",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIpParametersNodeType",
            "properties": {
                "default_gw": {
                    "type": "string",
                    "description": " IP address of the default gateway.\n\nExample: - \"192.168.20.1\"-",
                    "title": "Default Gateway",
                    "x-displayname": "Default Gateway",
                    "x-ves-example": "192.168.20.1"
                },
                "dns_server": {
                    "type": "string",
                    "description": " IP address of the DNS server\n\nExample: - \"192.168.20.1\"-",
                    "title": "DNS Server",
                    "x-displayname": "DNS Server",
                    "x-ves-example": "192.168.20.1"
                },
                "ip_address": {
                    "type": "string",
                    "description": " IP address of the interface and prefix length\n\nExample: - \"192.168.20.1/24\"-\nRequired: YES",
                    "title": "Default Gateway",
                    "x-displayname": "IP address/Prefix Length",
                    "x-ves-example": "192.168.20.1/24",
                    "x-ves-required": "true"
                }
            }
        },
        "network_interfaceTunnelInterfaceType": {
            "type": "object",
            "description": "Tunnel Interface Configuration",
            "title": "Tunnel Interface",
            "x-displayname": "Tunnel Interface",
            "x-ves-oneof-field-network_choice": "[\"inside_network\",\"site_local_inside_network\",\"site_local_network\"]",
            "x-ves-oneof-field-node_choice": "[\"cluster\",\"node\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.TunnelInterfaceType",
            "properties": {
                "cluster": {
                    "description": "Exclusive with [node]\nx-displayName: \"Cluster, All Nodes of the Site\"\nConfiguration will apply to given device on all nodes of the site",
                    "title": "Node Independent",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "inside_network": {
                    "description": "Exclusive with [site_local_inside_network site_local_network]\nx-displayName: \"Inside Network\"\nInterface belongs to user configured inside network",
                    "title": "Inside Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "mtu": {
                    "type": "integer",
                    "description": " Maximum packet size (Maximum Transfer Unit) of the interface\n When configured, mtu must be between 512 and 16384\n\nExample: - \"1450\"-",
                    "title": "Maximum Packet Size (MTU)",
                    "format": "int64",
                    "x-displayname": "Maximum Packet Size (MTU)",
                    "x-ves-example": "1450"
                },
                "node": {
                    "type": "string",
                    "description": "Exclusive with [cluster]\nx-displayName: \"Specific Node\"\nConfiguration will apply to a given device on the given node.",
                    "title": "Node"
                },
                "priority": {
                    "type": "integer",
                    "description": " Priority of the network interface when multiple network interfaces are present in outside network\n Greater the value, higher the priority\n\nExample: - \"42\"-",
                    "title": "Priority",
                    "format": "int64",
                    "x-displayname": "Priority",
                    "x-ves-example": "42"
                },
                "site_local_inside_network": {
                    "description": "Exclusive with [inside_network site_local_network]\nx-displayName: \"Site Local Network Inside\"\nInterface belongs to site local network inside",
                    "title": "Site Local Network Inside",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "site_local_network": {
                    "description": "Exclusive with [inside_network site_local_inside_network]\nx-displayName: \"Site Local Network (Outside)\"\nInterface belongs to site local network (outside)",
                    "title": "Site Local Network",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "static_ip": {
                    "description": " Interface IP is configured statically\nRequired: YES",
                    "title": "Static IP",
                    "$ref": "#/definitions/network_interfaceStaticIPParametersType",
                    "x-displayname": "Static IP",
                    "x-ves-required": "true"
                },
                "tunnel": {
                    "description": " Tunnel Configuration for this Interface\nRequired: YES",
                    "title": "Tunnel",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Tunnel",
                    "x-ves-required": "true"
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "runtimeStreamError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "grpc_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by Volterra Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider"
                }
            }
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.  \n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "URL",
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed. \n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed"
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational"
                }
            }
        },
        "schemaDomainType": {
            "type": "object",
            "description": "Domains names",
            "title": "Domains",
            "x-displayname": "Domains",
            "x-ves-oneof-field-domain_choice": "[\"exact_value\",\"regex_value\",\"suffix_value\"]",
            "x-ves-proto-message": "ves.io.schema.DomainType",
            "properties": {
                "exact_value": {
                    "type": "string",
                    "description": "Exclusive with [regex_value suffix_value]\nx-displayName: \"Exact Value\"\nx-example: \"abc.zyz.com\"\nExact domain name.",
                    "title": "exact value"
                },
                "regex_value": {
                    "type": "string",
                    "description": "Exclusive with [exact_value suffix_value]\nx-displayName: \"Regex Values of Domains\"\nx-example: \"([a-z]([-a-z0-9]*[a-z0-9])?)\\.com$'\"\nRegular Expression value for the domain name",
                    "title": "regex values of Domains"
                },
                "suffix_value": {
                    "type": "string",
                    "description": "Exclusive with [exact_value regex_value]\nx-displayName: \"Suffix Value\"\nx-example: \"xyz.com\"\nSuffix of domain name e.g \"xyz.com\" will match \"*.xyz.com\" and \"xyz.com\"",
                    "title": "suffix value"
                }
            }
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaForwardProxyConfigType": {
            "type": "object",
            "description": "Fine tune forward proxy behavior\n\nFew configurations allowed are\n\n  White listed ports and ip prefixes:\n    Forward proxy does application protocol detection and server name(SNI) detection by peeking into\n    the traffic on the incoming downstream connection. Few protocols doesn't have client sending\n    the first data. In such cases, protocol and SNI detection fails. This configuration allows,\n    skipping protocol and SNI detection for whitelisted ip-prefix-list and ports\n  connection_timeout:\n    The timeout for new network connections to upstream server.\n  max_connect_attempts:\n    Maximum number of attempts made to make new network connection to upstream server.",
            "title": "ForwardProxyConfigType",
            "x-displayname": "Forward Proxy Configuration",
            "x-ves-oneof-field-tls_interception_choice": "[\"no_interception\",\"tls_intercept\"]",
            "x-ves-proto-message": "ves.io.schema.ForwardProxyConfigType",
            "properties": {
                "connection_timeout": {
                    "type": "integer",
                    "description": " The timeout for new network connections to upstream server.\n This is specified in milliseconds. The default value is 2000 (2 seconds)\n\nExample: - \"4000\"-",
                    "title": "connection_timeout",
                    "format": "int64",
                    "x-displayname": "Connection Timeout",
                    "x-ves-example": "4000"
                },
                "max_connect_attempts": {
                    "type": "integer",
                    "description": " Specifies the allowed number of retries on connect failure to upstream server. Defaults to 1.\n\nExample: - 3-",
                    "title": "max_connect_attempts",
                    "format": "int64",
                    "x-displayname": "Number of connect attempts"
                },
                "no_interception": {
                    "description": "Exclusive with [tls_intercept]\nx-displayName: \"No TLS Interception\"\nNo TLS interception is enabled for this network connector",
                    "title": "No TLS interception",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "tls_intercept": {
                    "description": "Exclusive with [no_interception]\nx-displayName: \"TLS Interception\"\nSpecify TLS interception configuration for the network connector",
                    "title": "TLS Interception",
                    "$ref": "#/definitions/schemaTlsInterceptionType"
                },
                "white_listed_ports": {
                    "type": "array",
                    "description": " Traffic to these destination TCP ports is not subjected to protocol parsing\n Example \"tmate\" server port\n\nExample: - [22, 9400]-",
                    "title": "Port list",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-displayname": "TCP Ports to Skip Protocol Parsing"
                },
                "white_listed_prefixes": {
                    "type": "array",
                    "description": " Traffic to these destination ip prefixes is not subjected to protocol parsing\n Example \"tmate\" server ip\n\nExample: - \"['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']\"-",
                    "title": "IP prefix list",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Prefixes to Skip Protocol Parsing",
                    "x-ves-example": "['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']"
                }
            }
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaListMetaType": {
            "type": "object",
            "description": "ListMetaType is metadata that all lists must have.",
            "title": "ListMetaType",
            "x-displayname": "List Metadata",
            "x-ves-proto-message": "ves.io.schema.ListMetaType",
            "properties": {
                "resource_version": {
                    "type": "string",
                    "description": " An opaque value that represents the revision of the store at the time the list API is\n performed. It can be used in subsequent watch API to receive all changes after the list\n API, or in a replace API to make the replace conditional on the object still being at\n that revision\n\nExample: - \"181255\"-",
                    "title": "resource_version",
                    "x-displayname": "Resource Version",
                    "x-ves-example": "181255"
                }
            }
        },
        "schemaMessageMetaType": {
            "type": "object",
            "description": "MessageMetaType is metadata (common attributes) of a message that only certain messages\nhave. This information is propagated to the metadata of a child object that gets created\nfrom the containing message during view processing.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "MessageMetaType",
            "x-displayname": "Message Metadata",
            "x-ves-proto-message": "ves.io.schema.MessageMetaType",
            "properties": {
                "description": {
                    "type": "string",
                    "description": " Human readable description.\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object that corresponds to the containing message.\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of the message.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaObjectMetaType": {
            "type": "object",
            "description": "ObjectMetaType is metadata(common attributes) of an object that all configuration objects will have.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "ObjectMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. Object create will fail if \n provided by the client and the value exists in the system. Typically generated by the\n server on successful creation of an object and is not allowed to change once populated.\n Shadowed by SystemObjectMeta's uid field.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaRouteAttrType": {
            "type": "string",
            "description": "Defines attributes associated with route\n\nIgnore attribute\nAdvertise route in all supported routing protocols\nAdd route into host OS - route in host OS will point to interface corresponding to the\nvirtual network. Host OS must have an interface in the virtual network.\nUse the route for forwarding decision - adds route into data plane\nmodules with configured next-hop\nMerge Route if they already exist",
            "title": "Route Attribute",
            "enum": [
                "ROUTE_ATTR_NO_OP",
                "ROUTE_ATTR_ADVERTISE",
                "ROUTE_ATTR_INSTALL_HOST",
                "ROUTE_ATTR_INSTALL_FORWARDING",
                "ROUTE_ATTR_MERGE_ONLY"
            ],
            "default": "ROUTE_ATTR_NO_OP",
            "x-displayname": "Route Attribute",
            "x-ves-proto-enum": "ves.io.schema.RouteAttrType"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "SecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\nNo Encoding\n - EncodingBase64: Base64\n\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone",
            "x-displayname": "Secret Encoding",
            "x-ves-proto-enum": "ves.io.schema.SecretEncodingType"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\",\"vault_secret_info\",\"wingman_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Blindfold Secret\"\nBlindfold Secret is used for the secrets managed by Volterra Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType"
                },
                "blindfold_secret_info_internal": {
                    "description": " Blindfold Secret Internal is used for the putting re-encrypted blindfold secret",
                    "title": "Blindfold Secret Internal",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret Internal"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Clear Secret\"\nClear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType"
                },
                "secret_encoding_type": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is given to any Secret Management System.\n this will be set if the secret is encoded and not plaintext BEFORE it is encrypted and put it in SecretType.\n Note - Do NOT set this field for Clear Secret with string:/// scheme.\n e.g. if a secret is base64 encoded and then put into vault.",
                    "title": "secret_encoding_type",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "vault_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info wingman_secret_info]\nx-displayName: \"Vault Secret\"\nVault Secret is used for the secrets managed by Hashicorp Vault",
                    "title": "Vault Secret",
                    "$ref": "#/definitions/schemaVaultSecretInfoType"
                },
                "wingman_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info vault_secret_info]\nx-displayName: \"Bootstrap Secret\"\nSecret is given as bootstrap secret in Volterra Security Sidecar",
                    "title": "Wingman Secret",
                    "$ref": "#/definitions/schemaWingmanSecretInfoType"
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status \n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Oriong of this status exchanged by VTRP. ",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Propagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Publish",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectMetaType": {
            "type": "object",
            "description": "SystemObjectMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "value"
                },
                "creator_cookie": {
                    "type": "string",
                    "description": " This can used by the creator of the object for later audit for e.g. by storing the\n version identifying information of the object so at future it can be determined if\n version present at remote end is current or stale.\n\nExample: - \"value\"-",
                    "title": "creator_cookie",
                    "x-displayname": "Creator Cookie",
                    "x-ves-example": "value"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "value"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n \n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n \n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "namespace": {
                    "type": "array",
                    "description": " The namespace this object belongs to. This is populated by the service based on the\n metadata.namespace field when an object is created.",
                    "title": "namespace",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Namespace Reference"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "sre_disable": {
                    "type": "boolean",
                    "description": " This should be set to true If VES/SRE operator wants to suppress an object from being\n presented to business-logic of a daemon(e.g. due to bad-form/issue-causing Object).\n This is meant only to be used in temporary situations for operational continuity till\n a fix is rolled out in business-logic.\n\nExample: - \"true\"-",
                    "title": "sre_disable",
                    "format": "boolean",
                    "x-displayname": "SRE Disable",
                    "x-ves-example": "true"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "trace_info": {
                    "type": "string",
                    "description": " trace_info holds information(\u003ctrace-id\u003e:\u003cspan-id\u003e:\u003cparent-span-id\u003e) of the request doing\n the object modification. This can be used on the watch side to create subsequent spans.\n This information can be used to co-relate activities across services (modulo state compression)\n for a synchronous API.\n\nExample: - \"value\"-",
                    "title": "trace_info",
                    "x-displayname": "Trace Info",
                    "x-ves-example": "value"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Indicate origin of this object.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaTlsCertificateType": {
            "type": "object",
            "description": "Handle to fetch certificate and key",
            "title": "TlsCertificateType",
            "x-displayname": "TLS Certificate",
            "x-ves-displayorder": "1,4,5",
            "x-ves-proto-message": "ves.io.schema.TlsCertificateType",
            "properties": {
                "certificate_url": {
                    "type": "string",
                    "description": " TLS certificate.\n Certificate or certificate chain in PEM format including the PEM headers.\nRequired: YES",
                    "title": "certificate_url",
                    "x-displayname": "Certificate URL",
                    "x-ves-required": "true"
                },
                "description": {
                    "type": "string",
                    "description": " Description for the certificate",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "private_key": {
                    "description": " TLS Private Key data in unencrypted PEM format including the PEM headers. The data may be optionally secured using BlindFold. TLS key has to match the accompanying certificate.\nRequired: YES",
                    "title": "private_key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Private Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaTlsInterceptionPolicy": {
            "type": "object",
            "description": "Policy to enable or disable TLS interception.",
            "title": "TlsInterceptionPolicy",
            "x-displayname": "TLS Interception Policy",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionPolicy",
            "properties": {
                "interception_rules": {
                    "type": "array",
                    "description": " List of ordered rules to enable or disable for TLS interception\nRequired: YES",
                    "title": "Interception Rules",
                    "items": {
                        "$ref": "#/definitions/schemaTlsInterceptionRule"
                    },
                    "x-displayname": "TLS Interception Rules",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaTlsInterceptionRule": {
            "type": "object",
            "description": "x-required\nRule to enable or disable TLS interception based on domain match",
            "title": "TlsInterceptionRule",
            "x-displayname": "TLS Interception Rule",
            "x-ves-oneof-field-enable_disable_choice": "[\"disable_interception\",\"enable_interception\"]",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionRule",
            "properties": {
                "disable_interception": {
                    "description": "Exclusive with [enable_interception]\nx-displayName: \"Disable Interception\"\nDisable Interception",
                    "title": "Disable Interception",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "domain_match": {
                    "description": " Domain value or regular expression to match\nRequired: YES",
                    "title": "Domain Match",
                    "$ref": "#/definitions/schemaDomainType",
                    "x-displayname": "Match Domain",
                    "x-ves-required": "true"
                },
                "enable_interception": {
                    "description": "Exclusive with [disable_interception]\nx-displayName: \"Enable Interception\"\nEnable Interception",
                    "title": "Enable Interception",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "schemaTlsInterceptionType": {
            "type": "object",
            "description": "Configuration to enable TLS interception",
            "title": "TlsInterceptionType",
            "x-displayname": "Configuration for TLS interception",
            "x-ves-oneof-field-interception_policy_choice": "[\"enable_for_all_domains\",\"policy\"]",
            "x-ves-oneof-field-signing_cert_choice": "[\"custom_certificate\",\"volterra_certificate\"]",
            "x-ves-oneof-field-trusted_ca_choice": "[\"trusted_ca_url\",\"volterra_trusted_ca\"]",
            "x-ves-proto-message": "ves.io.schema.TlsInterceptionType",
            "properties": {
                "custom_certificate": {
                    "description": "Exclusive with [volterra_certificate]\nx-displayName: \"Custom Signing Certificate\"\nCertificates for generating intermediate certificate for TLS interception.",
                    "title": "Custom Signing Certificate",
                    "$ref": "#/definitions/schemaTlsCertificateType"
                },
                "enable_for_all_domains": {
                    "description": "Exclusive with [policy]\nx-displayName: \"Enable For All Domains\"\nEnable interception for all domains",
                    "title": "Enable For All Domains",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "policy": {
                    "description": "Exclusive with [enable_for_all_domains]\nx-displayName: \"Enable/Disable for Specific Domains\"\nPolicy to enable/disable specific domains, with implicit enable all domains",
                    "title": "Policy for specific domains",
                    "$ref": "#/definitions/schemaTlsInterceptionPolicy"
                },
                "trusted_ca_url": {
                    "type": "string",
                    "description": "Exclusive with [volterra_trusted_ca]\nx-displayName: \"Custom Trusted CA List\"\nCustom trusted CA certificates for validating upstream server certificate",
                    "title": "Custom List"
                },
                "volterra_certificate": {
                    "description": "Exclusive with [custom_certificate]\nx-displayName: \"Volterra Signing Certificate\"\nVolterra certificates for generating intermediate certificate for TLS interception.",
                    "title": "Volterra Signing Certificate",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "volterra_trusted_ca": {
                    "description": "Exclusive with [trusted_ca_url]\nx-displayName: \"Default Trusted CA List\"\nDefault volterra trusted CA list for validating upstream server certificate",
                    "title": "Volterra List",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "VaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "x-displayname": "Vault Secret",
            "x-ves-displayorder": "1,2,3,4,5",
            "x-ves-proto-message": "ves.io.schema.VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key of the individual secret. Vault Secrets are stored as key-value pair.\n If user is only interested in one value from the map, this field should be set to the corresponding key.\n If not provided entire secret will be returned.\n\nExample: - \"key_pem\"-",
                    "title": "Key",
                    "x-displayname": "Key",
                    "x-ves-example": "key_pem"
                },
                "location": {
                    "type": "string",
                    "description": " Path to secret in Vault.\n\nExample: - \"v1/data/vhost_key\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "v1/data/vhost_key",
                    "x-ves-required": "true"
                },
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Vault.\n\nExample: - \"vault-vh-provider\"-\nRequired: YES",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "vault-vh-provider",
                    "x-ves-required": "true"
                },
                "secret_encoding": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "version": {
                    "type": "integer",
                    "description": " Version of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\n If not provided latest version will be returned.\n\nExample: - \"1\"-",
                    "title": "Version",
                    "format": "int64",
                    "x-displayname": "Version",
                    "x-ves-example": "1"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaVipVrrpType": {
            "type": "string",
            "description": "VRRP advertisement mode for VIP\n\nInvalid VRRP mode\nVRRP advertisement enabled for virtual-ip\nVRRP advertisement disabled for virtual-ip",
            "title": "VipVrrpType",
            "enum": [
                "VIP_VRRP_INVALID",
                "VIP_VRRP_ENABLE",
                "VIP_VRRP_DISABLE"
            ],
            "default": "VIP_VRRP_INVALID",
            "x-displayname": "VRRP Virtual-IP",
            "x-ves-proto-enum": "ves.io.schema.VipVrrpType"
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "WingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "x-displayname": "Wingman Secret",
            "x-ves-proto-message": "ves.io.schema.WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " Name of the secret.\n\nExample: - \"ChargeBack-API-Key\"-\nRequired: YES",
                    "title": "Name",
                    "x-displayname": "Name",
                    "x-ves-example": "ChargeBack-API-Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaviewsGlobalNetworkConnectionListType": {
            "type": "object",
            "description": "List of global network connections",
            "title": "Global Network Connection List",
            "x-displayname": "Global Network Connection List",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionListType",
            "properties": {
                "global_network_connections": {
                    "type": "array",
                    "description": " Global network connections\nRequired: YES",
                    "title": "Global Network Connections",
                    "items": {
                        "$ref": "#/definitions/schemaviewsGlobalNetworkConnectionType"
                    },
                    "x-displayname": "Global Network Connections",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaviewsGlobalNetworkConnectionType": {
            "type": "object",
            "description": "Global network connection",
            "title": "Global Network Connection",
            "x-displayname": "Global Network Connection",
            "x-ves-oneof-field-connection_choice": "[\"sli_to_global_dr\",\"slo_to_global_dr\"]",
            "x-ves-oneof-field-forward_proxy_choice": "[\"disable_forward_proxy\",\"enable_forward_proxy\"]",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionType",
            "properties": {
                "disable_forward_proxy": {
                    "description": "Exclusive with [enable_forward_proxy]\nx-displayName: \"Disable Forward Proxy\"\nForward Proxy is disabled for this connector",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_forward_proxy": {
                    "description": "Exclusive with [disable_forward_proxy]\nx-displayName: \"Enable Forward Proxy\"\nForward Proxy is enabled for this connector",
                    "title": "Enable Forward Proxy",
                    "$ref": "#/definitions/schemaForwardProxyConfigType"
                },
                "sli_to_global_dr": {
                    "description": "Exclusive with [slo_to_global_dr]\nx-displayName: \"Direct, Site Local Inside to a Global Network\"\nSite local inside is connected directly to a given global network",
                    "title": "Site Local Inside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType"
                },
                "slo_to_global_dr": {
                    "description": "Exclusive with [sli_to_global_dr]\nx-displayName: \"Direct, Site Local Outside to a Global Network\"\nSite local outside is connected directly to a given global network",
                    "title": "Site Local Outside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType"
                }
            }
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                }
            }
        },
        "siteCoordinates": {
            "type": "object",
            "description": "Coordinates of the site which provides the site physical location",
            "title": "Site Coordinates",
            "x-displayname": "Site Coordinates",
            "x-ves-proto-message": "ves.io.schema.site.Coordinates",
            "properties": {
                "latitude": {
                    "type": "number",
                    "description": " Latitude of the site location",
                    "title": "latitude",
                    "format": "float",
                    "x-displayname": "Latitude"
                },
                "longitude": {
                    "type": "number",
                    "description": " longitude of site location",
                    "title": "longitude",
                    "format": "float",
                    "x-displayname": "Longitude"
                }
            }
        },
        "viewsGlobalConnectorType": {
            "type": "object",
            "description": "Global network reference for direct connection",
            "title": "Global Network",
            "x-displayname": "Global Network",
            "x-ves-proto-message": "ves.io.schema.views.GlobalConnectorType",
            "properties": {
                "global_vn": {
                    "description": " Select Virtual Network of Global Type\nRequired: YES",
                    "title": "Virtual Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Global Virtual Network",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsOperatingSystemType": {
            "type": "object",
            "description": "This is to specify volterra operating version choice",
            "title": "Operating System Version",
            "x-displayname": "Operating System Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-operating_system_version_choice": "[\"default_os_version\",\"operating_system_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.OperatingSystemType",
            "properties": {
                "default_os_version": {
                    "description": "Exclusive with [operating_system_version]\nx-displayName: \"Latest OS Version\"\nWill assign latest available OS version",
                    "title": "Default OS Version",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": "Exclusive with [default_os_version]\nx-displayName: \"Operating System Version\"\nx-example: \"7.2009.10\"\nOperating System Version is optional parameter, which allows to specify target OS version for particular site e.g. 7.2009.10.",
                    "title": "Operating System Version"
                }
            }
        },
        "viewsPrefixStringListType": {
            "type": "object",
            "description": "x-example: \"192.168.20.0/24\"\nList of IPv4 prefixes that represent an endpoint",
            "title": "ipv4 prefix list",
            "x-displayname": "IPv4 Prefix List",
            "x-ves-proto-message": "ves.io.schema.views.PrefixStringListType",
            "properties": {
                "prefixes": {
                    "type": "array",
                    "description": " List of IPv4 prefixes that represent an endpoint\n\nExample: - \"192.168.20.0/24\"-\nRequired: YES",
                    "title": "ipv4 prefix list",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IPv4 Prefix List",
                    "x-ves-example": "192.168.20.0/24",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsVolterraSoftwareType": {
            "type": "object",
            "description": "This is to specify volterra software version choice",
            "title": "Volterra Software Version",
            "x-displayname": "Volterra Software Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-volterra_sw_version_choice": "[\"default_sw_version\",\"volterra_software_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.VolterraSoftwareType",
            "properties": {
                "default_sw_version": {
                    "description": "Exclusive with [volterra_software_version]\nx-displayName: \"Latest SW Version\"\nWill assign latest available SW version",
                    "title": "Default SW Version",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": "Exclusive with [default_sw_version]\nx-displayName: \"Volterra Software Version\"\nx-example: \"crt-20210329-1002\"\nVolterra Software Version is optional parameter, which allows to specify target SW version for particular site e.g. crt-20210329-1002.",
                    "title": "Volterra Software Version"
                }
            }
        },
        "viewsvoltstack_siteGlobalSpecType": {
            "type": "object",
            "description": "Shape of the voltstack site specification",
            "title": "GlobalSpecType",
            "x-displayname": "Global Specification",
            "x-ves-oneof-field-bond_choice": "[\"bond_device_list\",\"no_bond_devices\"]",
            "x-ves-oneof-field-gpu_choice": "[\"disable_gpu\",\"enable_gpu\",\"enable_vgpu\"]",
            "x-ves-oneof-field-k8s_cluster_choice": "[\"k8s_cluster\",\"no_k8s_cluster\"]",
            "x-ves-oneof-field-local_control_plane_choice": "[\"local_control_plane\",\"no_local_control_plane\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-network_cfg_choice": "[\"custom_network_config\",\"default_network_config\"]",
            "x-ves-oneof-field-storage_cfg_choice": "[\"custom_storage_config\",\"default_storage_config\"]",
            "x-ves-oneof-field-usb_policy_choice": "[\"allow_all_usb\",\"deny_all_usb\",\"usb_policy\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.GlobalSpecType",
            "properties": {
                "address": {
                    "type": "string",
                    "description": " Site's geographical address that can be used determine its latitude and longitude.\n\nExample: - \"123 Street, city, country, postal code\"-",
                    "title": "address",
                    "x-displayname": "Geographical Address",
                    "x-ves-example": "123 Street, city, country, postal code"
                },
                "allow_all_usb": {
                    "description": "Exclusive with [deny_all_usb usb_policy]\nx-displayName: \"Allow All USB Devices\"\nAll USB devices are allowed",
                    "title": "Allow All USB Devices",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "bond_device_list": {
                    "description": "Exclusive with [no_bond_devices]\nx-displayName: \"Configure Bond Interfaces\"\nConfigure Bond Devices for this voltstack site",
                    "title": "Configure Bond Devices",
                    "$ref": "#/definitions/fleetFleetBondDevicesListType"
                },
                "coordinates": {
                    "description": " Coordinates of the site, longitude and latitude",
                    "title": "coordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Coordinates"
                },
                "custom_network_config": {
                    "description": "Exclusive with [default_network_config]\nx-displayName: \"Custom Network Configuration\"\nUse custom networking configuration",
                    "title": "Custom Network Configuration",
                    "$ref": "#/definitions/voltstack_siteVssNetworkConfiguration"
                },
                "custom_storage_config": {
                    "description": "Exclusive with [default_storage_config]\nx-displayName: \"Custom Storage Configuration\"\nUse custom storage configuration",
                    "title": "Custom Storage Configuration",
                    "$ref": "#/definitions/voltstack_siteVssStorageConfiguration"
                },
                "default_network_config": {
                    "description": "Exclusive with [custom_network_config]\nx-displayName: \"Default Network Configuration\"\nUse default networking configuration based on certified hardware.",
                    "title": "Default Network Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_storage_config": {
                    "description": "Exclusive with [custom_storage_config]\nx-displayName: \"Default Storage Configuration\"\nUse default storage configuration",
                    "title": "Default Storage Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "deny_all_usb": {
                    "description": "Exclusive with [allow_all_usb usb_policy]\nx-displayName: \"Deny All USB Devices\"\nAll USB devices are denied",
                    "title": "Deny All USB Devices",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_gpu": {
                    "description": "Exclusive with [enable_gpu enable_vgpu]\nx-displayName: \"GPU Disabled\"\nGPU is not enabled for this Site",
                    "title": "GPU Disabled",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_gpu": {
                    "description": "Exclusive with [disable_gpu enable_vgpu]\nx-displayName: \"GPU Enabled\"\nGPU is enabled for this Site",
                    "title": "GPU Enabled",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_vgpu": {
                    "description": "Exclusive with [disable_gpu enable_gpu]\nx-displayName: \"vGPU Enabled\"\nEnable NVIDIA vGPU hosted on VMware",
                    "title": "vGPU Enabled",
                    "$ref": "#/definitions/fleetVGPUConfiguration"
                },
                "k8s_cluster": {
                    "description": "Exclusive with [no_k8s_cluster]\nx-displayName: \"Enable Site Local K8s API access\"\nSite Local K8s API access is enabled, using k8s_cluster object",
                    "title": "Enable Site Local K8s API access",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "local_control_plane": {
                    "description": "Exclusive with [no_local_control_plane]\nx-displayName: \"Enable Site Local Control Plane\"\nSite Local control plane is enabled",
                    "title": "Enable Site Local Control Plane",
                    "$ref": "#/definitions/fleetLocalControlPlaneType"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\nx-displayName: \"Enable Logs Streaming\"\nSelect log receiver for logs streaming",
                    "title": "Disable Logs Streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\nx-displayName: \"Disable Logs Streaming\"\nLogs Streaming is disabled",
                    "title": "Disable Logs Receiver",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "master_nodes": {
                    "type": "array",
                    "description": " Names of master nodes\n\nExample: - \"master-0\"-\nRequired: YES",
                    "title": "Master Nodes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Master Nodes",
                    "x-ves-example": "master-0",
                    "x-ves-required": "true"
                },
                "no_bond_devices": {
                    "description": "Exclusive with [bond_device_list]\nx-displayName: \"No Bond Devices\"\nNo Bond Devices configured for this voltstack site",
                    "title": "No Bond Devices",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_k8s_cluster": {
                    "description": "Exclusive with [k8s_cluster]\nx-displayName: \"Disable Site Local K8s API access\"\nSite Local K8s API access is disabled",
                    "title": "Disable Site Local K8s API access",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_local_control_plane": {
                    "description": "Exclusive with [local_control_plane]\nx-displayName: \"Disable Site Local Control Plane\"\nSite Local control plane is disabled",
                    "title": "Disable Site Local Control Plane",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Desired Operating System version that should be installed on the site\n\nExample: - \"value\"-",
                    "title": "Operating System Version",
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value"
                },
                "os": {
                    "description": " Operating System Details",
                    "title": "Operating System",
                    "$ref": "#/definitions/viewsOperatingSystemType",
                    "x-displayname": "Operating System"
                },
                "sw": {
                    "description": " Volterra Software Details",
                    "title": "Volterra Software",
                    "$ref": "#/definitions/viewsVolterraSoftwareType",
                    "x-displayname": "Volterra Software"
                },
                "usb_policy": {
                    "description": "Exclusive with [allow_all_usb deny_all_usb]\nx-displayName: \"USB Device Policy\"\nAllow only specific USB devices",
                    "title": "USB Device Policy",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "view_internal": {
                    "description": " Reference to view internal object",
                    "title": "view_internal",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "View Internal"
                },
                "volterra_certified_hw": {
                    "type": "string",
                    "description": " Name for generic server certified hardware to form this voltstack site.\n\nExample: - \"isv-8000-series-voltstack-combo\"-\nRequired: YES",
                    "title": "Generic Server Certified Hardware",
                    "x-displayname": "Generic Server Certified Hardware",
                    "x-ves-example": "isv-8000-series-voltstack-combo",
                    "x-ves-required": "true"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " Desired volterra software version that should be installed on the site\n\nExample: - \"value\"-",
                    "title": "Software Version",
                    "x-displayname": "Software Version",
                    "x-ves-example": "value"
                },
                "worker_nodes": {
                    "type": "array",
                    "description": " Names of worker nodes\n\nExample: - \"worker-0\"-",
                    "title": "Worker Nodes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Worker Nodes",
                    "x-ves-example": "worker-0"
                }
            }
        },
        "virtual_networkStaticRouteViewType": {
            "type": "object",
            "description": "Defines a static route, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static Route",
            "x-displayname": "Static Route",
            "x-ves-oneof-field-next_hop_choice": "[\"default_gateway\",\"interface\",\"ip_address\"]",
            "x-ves-proto-message": "ves.io.schema.virtual_network.StaticRouteViewType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of attributes that control forwarding, dynamic routing and control plane(host) reachability ",
                    "title": "Attributes",
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes"
                },
                "default_gateway": {
                    "description": "Exclusive with [interface ip_address]\nx-displayName: \"Default Gateway\"\nTraffic matching the ip prefixes is sent to default gateway",
                    "title": "Default Gateway",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "interface": {
                    "description": "Exclusive with [default_gateway ip_address]\nx-displayName: \"Interface\"\nTraffic matching the ip prefixes is sent to the interface",
                    "title": "Interface",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "ip_address": {
                    "type": "string",
                    "description": "Exclusive with [default_gateway interface]\nx-displayName: \"IP Address\"\nTraffic matching the ip prefixes is sent to IP Address",
                    "title": "IP Address"
                },
                "ip_prefixes": {
                    "type": "array",
                    "description": " List of route prefixes that have common next hop and attributes\nRequired: YES",
                    "title": "IP Prefixes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Prefixes",
                    "x-ves-required": "true"
                }
            }
        },
        "voltstack_siteInterface": {
            "type": "object",
            "description": "Interface definition",
            "title": "Interface",
            "x-displayname": "Interface",
            "x-ves-oneof-field-interface_choice": "[\"dedicated_interface\",\"dedicated_management_interface\",\"ethernet_interface\",\"tunnel_interface\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.Interface",
            "properties": {
                "dedicated_interface": {
                    "description": "Exclusive with [dedicated_management_interface ethernet_interface tunnel_interface]\nx-displayName: \"Dedicated Interface\"\nConfiguration can be used to set labels, MTU and priority for dedicated interfaces.\nNetworking configuration for dedicated interface is configured locally on site e.g. (outside/inside)Ethernet",
                    "title": "Bootstrap Local Interface",
                    "$ref": "#/definitions/network_interfaceDedicatedInterfaceType"
                },
                "dedicated_management_interface": {
                    "description": "Exclusive with [dedicated_interface ethernet_interface tunnel_interface]\nx-displayName: \"Dedicated Management Interface\"\nFallback management interfaces can be made into dedicated management interface",
                    "title": "Dedicated Management Interface",
                    "$ref": "#/definitions/network_interfaceDedicatedManagementInterfaceType"
                },
                "description": {
                    "type": "string",
                    "description": " Description for this Interface",
                    "title": "Interface Description",
                    "x-displayname": "Interface Description"
                },
                "ethernet_interface": {
                    "description": "Exclusive with [dedicated_interface dedicated_management_interface tunnel_interface]\nx-displayName: \"Ethernet Interface\"\nEthernet interface configuration.",
                    "title": "Ethernet Interface",
                    "$ref": "#/definitions/network_interfaceEthernetInterfaceType"
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Interface, these labels can be used in network policy",
                    "title": "Interface labels",
                    "x-displayname": "Interface Labels"
                },
                "tunnel_interface": {
                    "description": "Exclusive with [dedicated_interface dedicated_management_interface ethernet_interface]\nx-displayName: \"Tunnel Interface\"\nTunnel interface, Ipsec tunnels to other networking devices.",
                    "title": "Tunnel Interface Template",
                    "$ref": "#/definitions/network_interfaceTunnelInterfaceType"
                }
            }
        },
        "voltstack_siteInterfaceListType": {
            "type": "object",
            "description": "Configure network interfaces for this voltstack",
            "title": "List of Interfaces",
            "x-displayname": "List of Interface",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.InterfaceListType",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "description": " Configure network interfaces for this voltstack\nRequired: YES",
                    "title": "List of Interfaces",
                    "items": {
                        "$ref": "#/definitions/voltstack_siteInterface"
                    },
                    "x-displayname": "List of Interface",
                    "x-ves-required": "true"
                }
            }
        },
        "voltstack_siteSliVnConfiguration": {
            "type": "object",
            "description": "Site local inside network configuration",
            "title": "SLI Virtual Network Configuration",
            "x-displayname": "Site Local Inside Network Configuration",
            "x-ves-oneof-field-static_route_choice": "[\"no_static_routes\",\"static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.SliVnConfiguration",
            "properties": {
                "no_static_routes": {
                    "description": "Exclusive with [static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for site local inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "static_routes": {
                    "description": "Exclusive with [no_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for site local inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/voltstack_siteStaticRoutesListType"
                }
            }
        },
        "voltstack_siteSpecType": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.SpecType",
            "properties": {
                "gc_spec": {
                    "title": "gc_spec",
                    "$ref": "#/definitions/viewsvoltstack_siteGlobalSpecType",
                    "x-displayname": "GC Spec"
                }
            }
        },
        "voltstack_siteStaticRoutesListType": {
            "type": "object",
            "description": "List of static routes",
            "title": "Static Routes List",
            "x-displayname": "Static Routes List",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.StaticRoutesListType",
            "properties": {
                "static_routes": {
                    "type": "array",
                    "description": " List of static routes\nRequired: YES",
                    "title": "static_routes",
                    "items": {
                        "$ref": "#/definitions/virtual_networkStaticRouteViewType"
                    },
                    "x-displayname": "Static Routes",
                    "x-ves-required": "true"
                }
            }
        },
        "voltstack_siteStatusObject": {
            "type": "object",
            "description": "Most recently observed status of object",
            "title": "StatusObject",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions represent the normalized status values for configuration object",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " Volterra voltstack site Site object direct reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                }
            }
        },
        "voltstack_siteStorageInterfaceListType": {
            "type": "object",
            "description": "Configure storage interfaces for this voltstack",
            "title": "List of Interfaces",
            "x-displayname": "List of Interface",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.StorageInterfaceListType",
            "properties": {
                "storage_interfaces": {
                    "type": "array",
                    "description": " Configure storage interfaces for this voltstack\nRequired: YES",
                    "title": "List of Interfaces",
                    "items": {
                        "$ref": "#/definitions/voltstack_siteStorageInterfaceType"
                    },
                    "x-displayname": "List of Interface",
                    "x-ves-required": "true"
                }
            }
        },
        "voltstack_siteStorageInterfaceType": {
            "type": "object",
            "description": "Configure storage interface for this voltstack",
            "title": "Storage Interfaces",
            "x-displayname": "Storage Interface",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.StorageInterfaceType",
            "properties": {
                "description": {
                    "type": "string",
                    "description": " Description for this Interface",
                    "title": "Interface Description",
                    "x-displayname": "Interface Description"
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Interface, these labels can be used in network policy",
                    "title": "Interface labels",
                    "x-displayname": "Interface Labels"
                },
                "storage_interface": {
                    "description": " Configure storage interface for this voltstack\nRequired: YES",
                    "title": "Interface",
                    "$ref": "#/definitions/network_interfaceEthernetInterfaceType",
                    "x-displayname": "Interface",
                    "x-ves-required": "true"
                }
            }
        },
        "voltstack_siteVnConfiguration": {
            "type": "object",
            "description": "Site local network configuration",
            "title": "Virtual Network Configuration",
            "x-displayname": "Site Local Network Configuration",
            "x-ves-oneof-field-dc_cluster_group_choice": "[\"dc_cluster_group\",\"no_dc_cluster_group\"]",
            "x-ves-oneof-field-static_route_choice": "[\"no_static_routes\",\"static_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.VnConfiguration",
            "properties": {
                "dc_cluster_group": {
                    "description": "Exclusive with [no_dc_cluster_group]\nx-displayName: \"Member of DC Cluster Group\"\nThis site is member of dc cluster group via network",
                    "title": "Member of DC cluster Group",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this network, these labels can be used in network policy",
                    "title": "Network labels",
                    "x-displayname": "Network Labels"
                },
                "no_dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group]\nx-displayName: \"Not a Member\"\nThis site is not a member of dc cluster group",
                    "title": "Not a Member",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_static_routes": {
                    "description": "Exclusive with [static_routes]\nx-displayName: \"Disable Static Routes\"\nStatic Routes disabled for site local network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "static_routes": {
                    "description": "Exclusive with [no_static_routes]\nx-displayName: \"Manage Static routes\"\nManage static routes for site local network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/voltstack_siteStaticRoutesListType"
                }
            }
        },
        "voltstack_siteVssNetworkConfiguration": {
            "type": "object",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-interface_choice": "[\"default_interface_config\",\"interface_list\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-sli_choice": "[\"default_sli_config\",\"sli_config\"]",
            "x-ves-oneof-field-slo_choice": "[\"default_config\",\"slo_config\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.VssNetworkConfiguration",
            "properties": {
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\nx-displayName: \"Enable Forward Proxy and Manage Policies\"\nEnable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType"
                },
                "active_network_policies": {
                    "description": "Exclusive with [no_network_policy]\nx-displayName: \"Active Network Policies\"\nNetwork Policies active for  this site.",
                    "title": "Manage Network Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType"
                },
                "bgp_peer_address": {
                    "type": "string",
                    "description": " Optional bgp peer address that can be used as parameter for BGP configuration when BGP is configured\n to fetch BGP peer address from site Object. This can be used to change peer address per site in fleet.\n\nExample: - \"10.1.1.1\"-",
                    "title": "bgp_peer_address",
                    "x-displayname": "BGP Peer Address",
                    "x-ves-example": "10.1.1.1"
                },
                "bgp_router_id": {
                    "type": "string",
                    "description": " Optional bgp router id that can be used as parameter for BGP configuration when BGP is configured to\n fetch BGP router ID from site object.\n\nExample: - \"10.1.1.1\"-",
                    "title": "bgp_router_id",
                    "x-displayname": "BGP Router ID",
                    "x-ves-example": "10.1.1.1"
                },
                "default_config": {
                    "description": "Exclusive with [slo_config]\nx-displayName: \"Default Configuration\"\nUse default configuration for site local network",
                    "title": "Default Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_interface_config": {
                    "description": "Exclusive with [interface_list]\nx-displayName: \"Bootstrap Interface Configuration\"\nInterface configuration is done based on certified hardware for this site",
                    "title": "Bootstrap Interface Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_sli_config": {
                    "description": "Exclusive with [sli_config]\nx-displayName: \"Default Configuration\"\nUse default configuration for site local network",
                    "title": "Default Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\nx-displayName: \"Enable Forward Proxy with Allow All Policy\"\nEnable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\nx-displayName: \"Connect Global Networks\"\nList of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/schemaviewsGlobalNetworkConnectionListType"
                },
                "interface_list": {
                    "description": "Exclusive with [default_interface_config]\nx-displayName: \"List of Interface\"\nAdd all interfaces belonging to this site",
                    "title": "List of Interfaces",
                    "$ref": "#/definitions/voltstack_siteInterfaceListType"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\nx-displayName: \"Disable Forward Proxy\"\nDisable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\nx-displayName: \"Do Not Connect Global Networks\"\nNo global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_network_policies]\nx-displayName: \"Disable Network Policy\"\nNetwork Policy is disabled for this site.",
                    "title": "Do Not Manage Network Policy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "outside_nameserver": {
                    "type": "string",
                    "description": " Optional DNS server IP to be used for name resolution in local network\n\nExample: - \"10.1.1.1\"-",
                    "title": "outside_nameserver",
                    "x-displayname": "DNS Server for Local Network",
                    "x-ves-example": "10.1.1.1"
                },
                "outside_vip": {
                    "type": "string",
                    "description": " Optional common virtual IP  across all nodes to be used as automatic VIP for site local network.\n\nExample: - \"10.1.1.1\"-",
                    "title": "Common VIP",
                    "x-displayname": "Common VIP",
                    "x-ves-example": "10.1.1.1"
                },
                "site_to_site_tunnel_ip": {
                    "type": "string",
                    "description": " Optional, VIP in the site_to_site_network_type configured above used for terminating IPSec/SSL tunnels created with SiteMeshGroup.\n\nExample: - \"10.1.1.1\"-",
                    "title": "site_to_site_tunnel_ip",
                    "x-displayname": "Site To Site Tunnel IP",
                    "x-ves-example": "10.1.1.1"
                },
                "sli_config": {
                    "description": "Exclusive with [default_sli_config]\nx-displayName: \"Configure Site Local Inside Network\"\nConfiguration for site local inside network",
                    "title": "Configure Site Local Inside Network",
                    "$ref": "#/definitions/voltstack_siteSliVnConfiguration"
                },
                "slo_config": {
                    "description": "Exclusive with [default_config]\nx-displayName: \"Configure Site Local Network\"\nConfiguration for site local network",
                    "title": "Configure Site Local Network",
                    "$ref": "#/definitions/voltstack_siteVnConfiguration"
                },
                "tunnel_dead_timeout": {
                    "type": "integer",
                    "description": " Time interval, in millisec, within which any ipsec / ssl connection from the site going down is detected.\n When not set (== 0), a default value of 10000 msec will be used.\n\nExample: - \"0\"-",
                    "title": "tunnel_dead_timeout",
                    "format": "int64",
                    "x-displayname": "Tunnel Dead Timeout (msec)",
                    "x-ves-example": "0"
                },
                "vip_vrrp_mode": {
                    "description": " Optional VIP VRRP advertisement mode. This controls the ARP behavior for  Common VIP\n addresses, when it is configured. When turned on, the Master VER would advertise gratuitous ARPs and\n would respond to ARP queries for these addresses. When turned off, ARP responses are not given by VER.\n\n If BGP is configured, common VIP addresses will be advertised by BGP. This is\n irrespective of the vrrp mode.\n\n When Outside VIP / Inside VIP are configured, it is recommended to turn on vrrp and also configure BGP.",
                    "title": "vip_vrrp_mode",
                    "$ref": "#/definitions/schemaVipVrrpType",
                    "x-displayname": "VIP Advertisement Mode"
                }
            }
        },
        "voltstack_siteVssStorageConfiguration": {
            "type": "object",
            "x-ves-oneof-field-static_route_choice": "[\"no_static_routes\",\"static_routes\"]",
            "x-ves-oneof-field-storage_class_choice": "[\"default_storage_class\",\"storage_class_list\"]",
            "x-ves-oneof-field-storage_device_choice": "[\"no_storage_device\",\"storage_device_list\"]",
            "x-ves-oneof-field-storage_interface_choice": "[\"no_storage_interfaces\",\"storage_interface_list\"]",
            "x-ves-proto-message": "ves.io.schema.views.voltstack_site.VssStorageConfiguration",
            "properties": {
                "default_storage_class": {
                    "description": "Exclusive with [storage_class_list]\nx-displayName: \"Default Storage Class\"\nUse only default storage class in kubernetes",
                    "title": "Default Storage Class",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_static_routes": {
                    "description": "Exclusive with [static_routes]\nx-displayName: \"No Static Routes\"\nStatic Routes not required for storage network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_storage_device": {
                    "description": "Exclusive with [storage_device_list]\nx-displayName: \"No Storage Devices\"\nThis site does not have any storage devices",
                    "title": "No Storage Devices",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_storage_interfaces": {
                    "description": "Exclusive with [storage_interface_list]\nx-displayName: \"No Storage Interfaces\"\nThis site does not have any storage interfaces",
                    "title": "No Storage Interfaces",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "static_routes": {
                    "description": "Exclusive with [no_static_routes]\nx-displayName: \"Manage Storage Static Routes\"\nManage static routes for storage network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/voltstack_siteStaticRoutesListType"
                },
                "storage_class_list": {
                    "description": "Exclusive with [default_storage_class]\nx-displayName: \"Add Custom Storage Class\"\nAdd additional custom storage classes in kubernetes",
                    "title": "Custom Storage Class",
                    "$ref": "#/definitions/fleetFleetStorageClassListType"
                },
                "storage_device_list": {
                    "description": "Exclusive with [no_storage_device]\nx-displayName: \"List of Storage Devices\"\nAdd all storage devices belonging to this site",
                    "title": "List of Storage Interfaces",
                    "$ref": "#/definitions/fleetFleetStorageDeviceListType"
                },
                "storage_interface_list": {
                    "description": "Exclusive with [no_storage_interfaces]\nx-displayName: \"List of Storage Interface\"\nAdd all storage interfaces belonging to this site",
                    "title": "List of Storage Interfaces",
                    "$ref": "#/definitions/voltstack_siteStorageInterfaceListType"
                }
            }
        }
    },
    "x-displayname": "",
    "x-stream-definitions": {
        "crudapiObjectListRsp": {
            "properties": {
                "error": {
                    "$ref": "#/definitions/runtimeStreamError"
                },
                "result": {
                    "$ref": "#/definitions/crudapiObjectListRsp"
                }
            },
            "title": "Stream result of crudapiObjectListRsp",
            "type": "object"
        }
    },
    "x-ves-proto-file": "ves.io/schema/views/voltstack_site/crudapi/api.proto"
}`

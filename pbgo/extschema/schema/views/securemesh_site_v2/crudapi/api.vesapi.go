// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package crudapi

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	object "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views/securemesh_site_v2"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// augment methods on Object<Oper>Req from api.pb.go

// EntryConverter
func (r *ObjectCreateReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectCreateReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// db.Redactor
func (r *ObjectCreateReq) Redact(ctx context.Context) error {
	spec := r.GetSpec()
	if r, ok := interface{}(spec).(db.Redactor); ok {
		return r.Redact(ctx)
	}
	return nil
}

// create setters in object from request for oneof fields

// EntryConverter
func (r *ObjectReplaceReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectReplaceReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// db.Redactor
func (r *ObjectReplaceReq) Redact(ctx context.Context) error {
	spec := r.GetSpec()
	if r, ok := interface{}(spec).(db.Redactor); ok {
		return r.Redact(ctx)
	}
	return nil
}

// create setters in object from request for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// CLIENT side

func NewObjectCreateReq(e db.Entry) (*ObjectCreateReq, error) {
	r := &ObjectCreateReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewObjectReplaceReq(e db.Entry) (*ObjectReplaceReq, error) {
	r := &ObjectReplaceReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	uid, err := e.Key()
	if err != nil {
		// See if uid can be got from Metadata.Uid
		obj := e.(*object.DBObject)
		uid = obj.GetMetadata().GetUid()

	}
	r.ObjectUid = uid
	return r, nil
}

func NewObjectGetReq(uid string, opts ...server.CRUDCallOpt) *ObjectGetReq {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	req := &ObjectGetReq{ObjectUid: uid, AllBackrefs: ccOpts.AllBR, BackrefTypes: ccOpts.TypesBR}
	req.IncludeReferredId = ccOpts.IncludeReferredID
	return req
}

func newObjectListReqFrom(cco *server.CrudCallOpts) (*ObjectListReq, error) {
	r := &ObjectListReq{
		TenantFilter:      cco.TenantFilter,
		NamespaceFilter:   cco.NamespaceFilter,
		ReportFields:      cco.ReportFields,
		IncludeReferredId: cco.IncludeReferredID,
	}
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		r.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	if cco.OutResourceVersion != nil {
		r.ResourceVersion = true
	}
	if cco.PageStart != "" {
		r.PageStart = cco.PageStart
	}
	if cco.PageLimit != 0 {
		r.PageLimit = cco.PageLimit
	}
	return r, nil
}

func NewObjectDeleteReq(uid string) *ObjectDeleteReq {
	return &ObjectDeleteReq{ObjectUid: uid}
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Getting from grpcClient")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp == nil {
		return nil, errors.ErrOrNil(merr)
	}
	respDetail := server.GetResponse{}
	respDetail.Entry = object.NewDBObject(nil)
	gRsp.ToObject(respDetail.Entry)
	respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	return &respDetail, errors.ErrOrNil(merr)

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := newObjectListReqFrom(cco)
	if err != nil {
		return nil, err
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	if cco.OutNextPage != nil {
		*cco.OutNextPage = rsp.GetNextPage()
	}
	return rsp, err
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := newObjectListReqFrom(cco)
	if err != nil {
		return nil, err
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	stream, err := c.grpcClient.ListStream(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Listing with grpc client")
	}
	lc := &crudAPIGrpcListStreamClient{stream}
	return lc, nil

}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req := NewObjectDeleteReq(key)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

type crudAPIGrpcListStreamClient struct {
	stream API_ListStreamClient
}

func (lc *crudAPIGrpcListStreamClient) RecvIDs() ([]string, error) {
	idSet := []string{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return idSet, err
	}
	for _, li := range rsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err
}

func (lc *crudAPIGrpcListStreamClient) RecvItems() ([]server.ListItem, error) {
	sliSet := []server.ListItem{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return sliSet, err
	}
	for _, li := range rsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if e != nil && cco.RequestJSON != "" {
		return nil, fmt.Errorf("Both entry and WithRequestJSON() specified")
	}
	if e == nil && cco.RequestJSON == "" {
		return nil, fmt.Errorf("Neither entry nor WithRequestJSON() specified")
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.securemesh_site_v2.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		req, err := NewObjectCreateReq(e)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new create request")
		}
		j, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "RestClient Create")
		}
		jsn = j
	}

	hReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &ObjectCreateRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	o := object.NewDBObject(nil)
	rspo.ToObject(o)
	return o, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if e != nil && cco.RequestJSON != "" {
		return fmt.Errorf("Both entry and WithRequestJSON() specified")
	}
	if e == nil && cco.RequestJSON == "" {
		return fmt.Errorf("Neither entry nor WithRequestJSON() specified")
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		rReq, err := NewObjectReplaceReq(e)
		if err != nil {
			return errors.Wrap(err, "Creating new replace request")
		}
		rReq.ResourceVersion = cco.ResourceVersion
		j, err := codec.ToJSON(rReq, codec.ToWithUseProtoFieldName())
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		jsn = j
	}

	var objUID string
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return errors.Wrapf(err, "Unmarshaling ReplaceJSONReq")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}
	if val, ok := md["uid"].(string); ok {
		objUID = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.uid'", jsn)
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.securemesh_site_v2.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, objUID)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	rspo := &ObjectReplaceRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.securemesh_site_v2.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, req.ObjectUid)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &ObjectGetRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		o := object.NewDBObject(nil)
		gRsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.securemesh_site_v2.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	for _, fVal := range cco.TenantFilter {
		q.Add("tenant_filter", fVal)
	}
	for _, fVal := range cco.NamespaceFilter {
		q.Add("namespace_filter", fVal)
	}
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}

	if cco.IncludeReferredID {
		q.Add("include_referred_id", "true")
	}

	if cco.OutResourceVersion != nil {
		q.Add("resource_version", "true")
	}
	if cco.PageStart != "" {
		q.Add("page_start", cco.PageStart)
	}
	if cco.PageLimit != 0 {
		q.Add("page_limit", fmt.Sprintf("%d", cco.PageLimit))
	}

	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ObjectListRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.GetMetadata().GetResourceVersion()
	}
	if cco.OutNextPage != nil {
		*cco.OutNextPage = rspo.GetNextPage()
	}
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq := NewObjectDeleteReq(key)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.securemesh_site_v2.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, dReq.ObjectUid)

	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	rspo := &ObjectDeleteRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	var bURL string
	if strings.HasSuffix(baseURL, "/") {
		bURL = baseURL[:len(baseURL)-1]
	} else {
		bURL = baseURL
	}
	crcl := &crudAPIRestClient{bURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	svc svcfw.Service
}

func (c *APIInprocClient) Create(ctx context.Context, req *ObjectCreateReq, opts ...grpc.CallOption) (*ObjectCreateRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.securemesh_site_v2.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.securemesh_site_v2.crudapi")
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create")
	return oah.Create(ctx, req)
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ObjectReplaceReq, opts ...grpc.CallOption) (*ObjectReplaceRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.securemesh_site_v2.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.securemesh_site_v2.crudapi")
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace")
	return oah.Replace(ctx, req)
}

func (c *APIInprocClient) Get(ctx context.Context, req *ObjectGetReq, opts ...grpc.CallOption) (*ObjectGetRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.securemesh_site_v2.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.securemesh_site_v2.crudapi")
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.securemesh_site_v2.crudapi.API.Get")
	return oah.Get(ctx, req)
}

func (c *APIInprocClient) List(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (*ObjectListRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.securemesh_site_v2.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.securemesh_site_v2.crudapi")
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.securemesh_site_v2.crudapi.API.List")
	return oah.List(ctx, req)
}

func (c *APIInprocClient) ListStream(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (API_ListStreamClient, error) {
	return nil, fmt.Errorf("ListStream Not implemented")
}

func (c *APIInprocClient) Delete(ctx context.Context, req *ObjectDeleteReq, opts ...grpc.CallOption) (*ObjectDeleteRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.securemesh_site_v2.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.securemesh_site_v2.crudapi")
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete")
	return oah.Delete(ctx, req)
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	return &APIInprocClient{svc: svc}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	cl APIClient
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	rsp, err := c.cl.Create(ctx, req)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.cl.Replace(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req := NewObjectGetReq(key, opts...)
	rsp, err := c.cl.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := newObjectListReqFrom(cco)
	if err != nil {
		return nil, err
	}
	rsp, err := c.cl.List(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	if cco.OutNextPage != nil {
		*cco.OutNextPage = rsp.GetNextPage()
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewObjectDeleteReq(key)
	rsp, err := c.cl.Delete(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	return &crudAPIInprocClient{cl: NewAPIInprocClient(svc)}
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.views.securemesh_site_v2.crudapi.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.views.securemesh_site_v2.crudapi.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *ObjectCreateReq) (*ObjectCreateRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		return nil, errors.Wrapf(err, "Filling oneof default choice")
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.securemesh_site_v2.crudapi.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private create request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create"), zap.Error(err))
			}
		}
	}
	obj := object.NewDBObject(nil)
	req.ToObject(obj)
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}

	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Create")).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Create with NewObjectCreateRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ObjectReplaceReq) (*ObjectReplaceRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		return nil, fmt.Errorf("Nil spec in Replace Request")
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		return nil, errors.Wrapf(err, "Filling oneof default choice")
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private replace request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace"), zap.Error(err))
			}
		}
	}
	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Replace")).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Replace with NewObjectReplaceRsp").Error())
	}
	return rsp, nil

}

func (s *APISrv) Get(ctx context.Context, req *ObjectGetReq) (*ObjectGetRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.securemesh_site_v2.crudapi.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private get request")
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceGetRequest{IsPublic: false, UID: key, AllBackRefs: req.AllBackrefs, BackRefTypes: req.BackrefTypes}
	rsrcReq.OmitReferredID = !req.IncludeReferredId
	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Get")).Err()
	}
	rsp, err := NewObjectGetRsp(req, rsrcRsp)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Get with NewObjectGetRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ObjectListReq) (*ObjectListRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.securemesh_site_v2.crudapi.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private list request")
			}
		}
	}
	var merr error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:       req.TenantFilter,
		NamespaceFilter:    req.NamespaceFilter,
		LabelFilter:        req.LabelFilter,
		RspStreamed:        false,
		GetResourceVersion: req.ResourceVersion,
		OmitReferredID:     !req.IncludeReferredId,
		PageStart:          req.PageStart,
		PageLimit:          req.PageLimit,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "List"))
	}
	rsp, err := NewObjectListRsp(req, rsrcRsp.Items)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	rsp.Metadata.ResourceVersion = rsrcRsp.ResourceVersion
	rsp.NextPage = rsrcRsp.NextPage
	return rsp, merr
}

func (s *APISrv) ListStream(req *ObjectListReq, stream API_ListStreamServer) error {
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:    req.TenantFilter,
		NamespaceFilter: req.NamespaceFilter,
		LabelFilter:     req.LabelFilter,
		RspStreamed:     true,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(stream.Context(), rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListStream"))
	}
	streamSvr := &crudAPIListStreamServer{stream}
	for item := range rsrcRsp.ItemsCh {
		if err := streamSvr.SendResource(req, item); err != nil {
			merr = multierror.Append(merr, errors.Wrap(err, "Stream-Send"))
			continue
		}
	}
	return errors.ErrOrNil(merr)
}

func (s *APISrv) Delete(ctx context.Context, req *ObjectDeleteReq) (*ObjectDeleteRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private delete request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete"), zap.Error(err))
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Delete")).Err()
	}
	return &ObjectDeleteRsp{}, nil
}

// Assert that APISrv implements both the generated gRPC APIServer interface and the
// stdlib CRUDServer interface
var (
	_ APIServer = &APISrv{}
)

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.crudapi.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.crudapi.API", strings.Join(sl[:len(sl)-1], "."))
}

// implements both stdlib.server.ListStreamServer and API_ListStreamServer
type crudAPIListStreamServer struct {
	stream API_ListStreamServer
}

func (lc *crudAPIListStreamServer) Context() context.Context {
	return lc.stream.Context()
}

func (lc *crudAPIListStreamServer) SendResource(r *ObjectListReq, item *server.ResourceListResponseItem) error {
	lRsp, err := NewObjectListRsp(r, []*server.ResourceListResponseItem{item})
	if err != nil {
		return errors.Wrap(err, "SendResource with NewObjectListRsp")
	}
	if err := lc.Send(lRsp); err != nil {
		return errors.Wrap(err, "ListStreamServer.SendResource()")
	}
	return nil
}

func (lc *crudAPIListStreamServer) Send(o *ObjectListRsp) error {
	if err := lc.stream.Send(o); err != nil {
		return errors.Wrap(err, "ListStreamServer.Send()")
	}
	return nil
}

// Implement GetReq interface
func (r *ObjectGetReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectGetReq) GetBackrefParam() (bool, []string) {
	return r.AllBackrefs, r.BackrefTypes
}

// Implement DeleteReq interface
func (r *ObjectDeleteReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectCreateRsp) Key() string {
	return r.ObjectUid
}

func (r *ObjectGetRsp) GetBackrefs(ef db.NewEntryFunc) ([]db.Entry, error) {
	brEnts := []db.Entry{}
	bRefs := r.GetEntBackrefs()
	for _, br := range bRefs {
		// convert schema.ves.io/ves.io.examplesvc.objectone.Object to ves.io.examplesvc.objectone.Object
		sl := strings.Split(br.TypeUrl, "/")
		ot := sl[len(sl)-1]
		ent, err := ef(ot, db.OpWithSerializedBytes(br.Value))
		if err != nil {
			return nil, errors.Wrap(err, "NewEntry")
		}
		brEnts = append(brEnts, ent)
	}

	return brEnts, nil
}

// Implement server.ListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjUid() string {
	return l.ObjectUid
}

// Implement server.SROListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ObjectListRspItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ObjectListRspItem) GetObjName() string {
	return l.Name
}

func (l *ObjectListRspItem) GetObjLabels() map[string]string {
	return l.Labels
}

// New<oper>Rsp, New<oper>RspFromJSON
func NewObjectCreateRsp(e db.Entry) (*ObjectCreateRsp, error) {
	rspo := &ObjectCreateRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectCreateRsp")
	}
	key, err := e.Key()
	if err != nil {
		return nil, errors.Wrap(err, "CreateRsp getting Key()")
	}
	rspo.ObjectUid = key
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectReplaceRsp(e db.Entry) (*ObjectReplaceRsp, error) {
	rspo := &ObjectReplaceRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectReplaceRsp")
	}
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectGetRsp(r *ObjectGetReq, rsrcRsp *server.ResourceGetResponse) (*ObjectGetRsp, error) {
	rspo := &ObjectGetRsp{}
	e := rsrcRsp.Entry
	brEntries := rsrcRsp.BackRefs
	if e == nil {
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *object.DBObject in NewObjectGetRsp")
	}
	rspo.ResourceVersion = rsrcRsp.ResourceVersion
	rspo.FromObject(o)
	// Backref
	getBackrefsFunc := func() ([]*google_protobuf.Any, error) {
		var merr *multierror.Error
		var entBackrefs []*google_protobuf.Any
		for _, brEnt := range brEntries {
			brSer, err := brEnt.MarshalBytes()
			if err != nil {
				merr = multierror.Append(merr, err)
				continue
			}
			entBackrefs = append(entBackrefs, &google_protobuf.Any{TypeUrl: "schema.ves.io/" + brEnt.Type(), Value: brSer})
		}
		return entBackrefs, errors.ErrOrNil(merr)
	}
	entBackrefs, err := getBackrefsFunc()
	if err != nil {
		return nil, err
	}
	rspo.EntBackrefs = entBackrefs
	d, err := o.GetDB()
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	statusObjs, err := object.FindObjectStatus(context.Background(), d, o.GetObjUid())
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	rspo.Status = statusObjs
	return rspo, nil
}

func NewObjectListRsp(req *ObjectListReq, rsrcRspItems []*server.ResourceListResponseItem) (*ObjectListRsp, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ObjectListReq")
	}
	var errs error
	o := &ObjectListRsp{}
	o.Metadata = &ves_io_schema.ListMetaType{}
	o.Uids = []string{}
	o.Items = []*ObjectListRspItem{}
	for _, rsrcItem := range rsrcRspItems {
		if rsrcItem == nil {
			errs = multierror.Append(errs, fmt.Errorf("ResourceListResponseItem is nil"))
			continue
		}
		e := rsrcItem.Entry
		dbObj, ok := e.(*object.DBObject)
		if !ok {
			errs = multierror.Append(errs, fmt.Errorf("Expected %T, got %T: %v", &object.DBObject{}, e, e))
			continue
		}
		key, err := dbObj.Key()
		if err != nil {
			errs = multierror.Append(errs, errors.WithMessagef(err, "Key() %v FAILED", dbObj))
			continue
		}

		tenant := dbObj.GetSystemMetadata().GetTenant()
		namespace := dbObj.GetMetadata().GetNamespace()
		name := dbObj.GetMetadata().GetName()
		labels := dbObj.GetMetadata().GetLabels()

		// TODO: DEPRECATE setting to o.Uids
		o.Uids = append(o.Uids, key)

		item := &ObjectListRspItem{
			ObjectUid: key,
			Tenant:    tenant,
			Namespace: namespace,
			Name:      name,
			Labels:    labels,
		}
		if len(req.ReportFields) > 0 {
			item.FromObject(e)
		}
		o.Items = append(o.Items, item)
	}
	return o, errs
}

func NewObjectDeleteRsp(ec ErrorCode) (*ObjectDeleteRsp, error) {
	return &ObjectDeleteRsp{Err: ec}, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "ves.io/schema/views/securemesh_site_v2/crudapi/api.proto",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/ves.io.schema.views.securemesh_site_v2/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Get"
            },
            "delete": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "page_start",
                        "description": "The value for PageStart indicating from very first entry. This will be ignored unless page_limit\nis also defined.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_limit",
                        "description": "The maximum number of items to return in a single page. If this is greater than 0, and page_start is unset,\nthe first page will be returned.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-list"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.List"
            },
            "post": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/Objects/stream": {
            "get": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.ListStream",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "$ref": "#/x-stream-definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "page_start",
                        "description": "The value for PageStart indicating from very first entry. This will be ignored unless page_limit\nis also defined.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_limit",
                        "description": "The maximum number of items to return in a single page. If this is greater than 0, and page_start is unset,\nthe first page will be returned.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-liststream"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.ListStream"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/introspect/read/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Get"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/introspect/read/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "page_start",
                        "description": "The value for PageStart indicating from very first entry. This will be ignored unless page_limit\nis also defined.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_limit",
                        "description": "The maximum number of items to return in a single page. If this is greater than 0, and page_start is unset,\nthe first page will be returned.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-list"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.List"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/introspect/write/Object/{object_uid}": {
            "delete": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.securemesh_site_v2/introspect/write/Objects": {
            "post": {
                "operationId": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://docs.cloud.f5.com/docs-v2/platform/reference/api-ref/ves-io-schema-views-securemesh_site_v2-crudapi-api-create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.securemesh_site_v2.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "securemesh_site_v2",
            "x-ves-object-type": "ves.io.schema.views.securemesh_site_v2.Object",
            "x-ves-proto-service": "ves.io.schema.views.securemesh_site_v2.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        }
    },
    "definitions": {
        "crudapiObjectCreateReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectCreateReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectCreateRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectCreateRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/securemesh_site_v2crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectDeleteRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectDeleteRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/securemesh_site_v2crudapiErrorCode"
                }
            }
        },
        "crudapiObjectGetRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectGetRsp",
            "properties": {
                "ent_backrefs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "err": {
                    "$ref": "#/definitions/securemesh_site_v2crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/securemesh_site_v2StatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectListRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectListRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/securemesh_site_v2crudapiErrorCode"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/crudapiObjectListRspItem"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/schemaListMetaType"
                },
                "next_page": {
                    "type": "string",
                    "title": "Will only be set if request included a page_limit and there are more pages beyond the current page"
                },
                "uids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "crudapiObjectListRspItem": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectListRspItem",
            "properties": {
                "labels": {
                    "type": "object"
                },
                "metadata": {
                    "title": "If ObjectListReq has any specified report_fields, it will appear in below fields",
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/securemesh_site_v2StatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "crudapiObjectReplaceReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectReplaceReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                }
            }
        },
        "crudapiObjectReplaceRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.crudapi.ObjectReplaceRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/securemesh_site_v2crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/securemesh_site_v2SpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "fleetBlockedServices": {
            "type": "object",
            "description": "Disable a node local service on this site.",
            "title": "Disable Node Local Service",
            "x-displayname": "Disable Node Local Service",
            "x-ves-oneof-field-blocked_services_value_type_choice": "[\"dns\",\"ssh\",\"web_user_interface\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.BlockedServices",
            "properties": {
                "dns": {
                    "description": "Exclusive with [ssh web_user_interface]\n Matches DNS port 53",
                    "title": "DNS",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "DNS"
                },
                "network_type": {
                    "description": " Site Local VRF on which this service will be disabled\n\nValidation Rules:\n  ves.io.schema.rules.enum.in: [0,1]\n",
                    "title": "network_type",
                    "$ref": "#/definitions/schemaVirtualNetworkType",
                    "x-displayname": "Site Local VRF",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.in": "[0,1]"
                    }
                },
                "ssh": {
                    "description": "Exclusive with [dns web_user_interface]\n",
                    "title": "SSH",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "SSH"
                },
                "web_user_interface": {
                    "description": "Exclusive with [dns ssh]\n",
                    "title": "Web UI",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Web UI"
                }
            }
        },
        "fleetBlockedServicesListType": {
            "type": "object",
            "description": "Disable node local services on this site. Note: The chosen services will get disabled on all nodes in the site.",
            "title": "Disable Node Local Services",
            "x-displayname": "Disable Node Local Services",
            "x-ves-proto-message": "ves.io.schema.fleet.BlockedServicesListType",
            "properties": {
                "blocked_sevice": {
                    "type": "array",
                    "description": "\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Disable Node Local Services",
                    "items": {
                        "$ref": "#/definitions/fleetBlockedServices"
                    },
                    "x-displayname": "Disable Node Local Services",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "fleetBondLacpType": {
            "type": "object",
            "description": "LACP parameters for the bond device",
            "title": "LACP parameters",
            "x-displayname": "LACP parameters",
            "x-ves-proto-message": "ves.io.schema.fleet.BondLacpType",
            "properties": {
                "rate": {
                    "type": "integer",
                    "description": " Interval in seconds to transmit LACP packets\n\nExample: - \"30\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 30\n",
                    "title": "Interval",
                    "format": "int64",
                    "x-displayname": "LACP Packet Interval",
                    "x-ves-example": "30",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "30"
                    }
                }
            }
        },
        "fleetFleetBondDeviceType": {
            "type": "object",
            "description": "Bond devices configuration for fleet",
            "title": "Bond Device",
            "x-displayname": "Bond Device",
            "x-ves-oneof-field-lacp_choice": "[\"active_backup\",\"lacp\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.FleetBondDeviceType",
            "properties": {
                "active_backup": {
                    "description": "Exclusive with [lacp]\n Configure active/backup based bond device",
                    "title": "Active/Backup",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Active/Backup"
                },
                "devices": {
                    "type": "array",
                    "description": " Ethernet devices that will make up this bond\n\nExample: - \"eth0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.max_len: 64\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Member Ethernet Devices",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "x-displayname": "Member Ethernet Devices",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.max_len": "64",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "lacp": {
                    "description": "Exclusive with [active_backup]\n Configure LACP (802.3ad) based bond device",
                    "title": "LACP (802.3ad)",
                    "$ref": "#/definitions/fleetBondLacpType",
                    "x-displayname": "LACP (802.3ad)"
                },
                "link_polling_interval": {
                    "type": "integer",
                    "description": " Link polling interval in milliseconds\n\nExample: - \"1000\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 500\n  ves.io.schema.rules.uint32.lte: 5000\n",
                    "title": "Link Polling Interval",
                    "format": "int64",
                    "x-displayname": "Link Polling Interval",
                    "x-ves-example": "1000",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "500",
                        "ves.io.schema.rules.uint32.lte": "5000"
                    }
                },
                "link_up_delay": {
                    "type": "integer",
                    "description": " Milliseconds wait before link is declared up\n\nExample: - \"200\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 1000\n",
                    "title": "Link Up Delay",
                    "format": "int64",
                    "x-displayname": "Link Up Delay",
                    "x-ves-example": "200",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "1000"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Name for the Bond. Ex 'bond0'\n\nExample: - \"bond0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "Bond Device",
                    "maxLength": 64,
                    "x-displayname": "Bond Device Name",
                    "x-ves-example": "bond0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                }
            }
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "network_firewallActiveEnhancedFirewallPoliciesType": {
            "type": "object",
            "description": "List of Enhanced Firewall Policies\nThese policies use session-based rules and provide all options available under firewall policies\nwith an additional option for service insertion.",
            "title": "Active Enhanced Firewall Policies Type",
            "x-displayname": "Active Enhanced Network Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveEnhancedFirewallPoliciesType",
            "properties": {
                "enhanced_firewall_policies": {
                    "type": "array",
                    "description": " Ordered List of Enhanced Firewall Policies active\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Enhanced Firewall Policy",
                    "minItems": 1,
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Enhanced Firewall Policy",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "network_firewallActiveForwardProxyPoliciesType": {
            "type": "object",
            "description": "Ordered List of Forward Proxy Policies active",
            "title": "Active Forward Proxy Policies Type",
            "x-displayname": "Active Forward Proxy Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType",
            "properties": {
                "forward_proxy_policies": {
                    "type": "array",
                    "description": " Ordered List of Forward Proxy Policies active\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Forward Proxy Policies",
                    "minItems": 1,
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Forward Proxy Policies",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "network_interfaceDHCPIPV6NetworkType": {
            "type": "object",
            "description": "DHCP IPV6 network type configuration",
            "title": "DHCPIPV6NetworkType",
            "x-displayname": "DHCPIPV6NetworkType",
            "x-ves-displayorder": "1,5,4",
            "x-ves-oneof-field-network_prefix_choice": "[\"network_prefix\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPIPV6NetworkType",
            "properties": {
                "network_prefix": {
                    "type": "string",
                    "description": "Exclusive with []\n Network Prefix to be used for IPV6 address auto configuration\n\nExample: - \"2001::0/64\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6_prefix: true\n",
                    "title": "Network Prefix",
                    "x-displayname": "Network Prefix",
                    "x-ves-example": "2001::0/64",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6_prefix": "true"
                    }
                },
                "pool_settings": {
                    "description": " Controls how DHCPV6 pools are handled\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "DHCP Pool Settings",
                    "$ref": "#/definitions/network_interfaceDHCPPoolSettingType",
                    "x-displayname": "DHCP Pool Settings",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "pools": {
                    "type": "array",
                    "description": " List of non overlapping ip address ranges.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "DHCP pools",
                    "maxItems": 16,
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPIPV6PoolType"
                    },
                    "x-displayname": "DHCP Pools",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "network_interfaceDHCPIPV6PoolType": {
            "type": "object",
            "description": "DHCP IPV6 pool is a range of IP addresses (start ip and end ip).",
            "title": "DHCP IPV6 Range",
            "x-displayname": "DHCP IPV6 Range",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPIPV6PoolType",
            "properties": {
                "end_ip": {
                    "type": "string",
                    "description": " Ending IPV6 address of the pool range.\n In case of address allocator, offset is derived based on network prefix.\n\nExample: - \"2001::200\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "End IP",
                    "x-displayname": "Ending IPV6",
                    "x-ves-example": "2001::200",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                },
                "start_ip": {
                    "type": "string",
                    "description": " Starting IPV6 address of the pool range.\n In case of address allocator, offset is derived based on network prefix.\n 2001::1 with prefix length of 64, start offset is 5\n\nExample: - \"2001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Start IPV6",
                    "x-displayname": "Starting IPV6",
                    "x-ves-example": "2001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "network_interfaceDHCPIPV6StatefulServer": {
            "type": "object",
            "title": "DHCPIPV6StatefulServer",
            "x-displayname": "DHCPIPV6 Stateful Server",
            "x-ves-oneof-field-interfaces_addressing_choice": "[\"automatic_from_end\",\"automatic_from_start\",\"interface_ip_map\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPIPV6StatefulServer",
            "properties": {
                "automatic_from_end": {
                    "description": "Exclusive with [automatic_from_start interface_ip_map]\n Assign automatically from End of the first network in the list",
                    "title": "Automatic End",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Automatic End"
                },
                "automatic_from_start": {
                    "description": "Exclusive with [automatic_from_end interface_ip_map]\n Assign automatically from start of the first network in the list",
                    "title": "Automatic Start",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Automatic Start"
                },
                "dhcp_networks": {
                    "type": "array",
                    "description": " List of networks from which DHCP server can allocate ip addresses\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 1\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "DHCP IPV6 Networks",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPIPV6NetworkType"
                    },
                    "x-displayname": "DHCP IPV6 Networks",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "1",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "fixed_ip_map": {
                    "type": "object",
                    "description": " Fixed MAC address to ipv6 assignments, Key: Mac address, Value: IPV6 Address\n Assign fixed IPv6 addresses based on the MAC Address of the DHCP Client.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.mac: true\n  ves.io.schema.rules.map.max_pairs: 128\n  ves.io.schema.rules.map.unique_values: true\n  ves.io.schema.rules.map.values.string.ipv6: true\n",
                    "title": "Fixed IPV6 Assignments",
                    "x-displayname": "Fixed MAC Address to IPV6 Assignments",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.mac": "true",
                        "ves.io.schema.rules.map.max_pairs": "128",
                        "ves.io.schema.rules.map.unique_values": "true",
                        "ves.io.schema.rules.map.values.string.ipv6": "true"
                    }
                },
                "interface_ip_map": {
                    "description": "Exclusive with [automatic_from_end automatic_from_start]\n Configured address for every node",
                    "title": "Configured Address",
                    "$ref": "#/definitions/network_interfaceDHCPInterfaceIPV6Type",
                    "x-displayname": "Configured"
                }
            }
        },
        "network_interfaceDHCPInterfaceIPType": {
            "type": "object",
            "description": "Specify static IPv4 addresses per node.",
            "title": "Interface IPv4 Assignments",
            "x-displayname": "Interface IPv4 Assignments",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPInterfaceIPType",
            "properties": {
                "interface_ip_map": {
                    "type": "object",
                    "description": " Specify static IPv4 addresses per site:node.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 64\n  ves.io.schema.rules.map.values.string.ipv4: true\n",
                    "title": "Site:Node to IP mapping",
                    "x-displayname": "Site:Node to IPv4 Address Mapping",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "64",
                        "ves.io.schema.rules.map.values.string.ipv4": "true"
                    }
                }
            }
        },
        "network_interfaceDHCPInterfaceIPV6Type": {
            "type": "object",
            "description": "Map of Interface IPV6 assignments per node",
            "title": "Interface IPV6 Assignments",
            "x-displayname": "Interface IPV6 Assignments",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPInterfaceIPV6Type",
            "properties": {
                "interface_ip_map": {
                    "type": "object",
                    "description": " Map of Site:Node to IPV6 address.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 64\n  ves.io.schema.rules.map.values.string.ipv6: true\n",
                    "title": "Site:Node to IPV6 mapping",
                    "x-displayname": "Site:Node to IPV6 Mapping",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "64",
                        "ves.io.schema.rules.map.values.string.ipv6": "true"
                    }
                }
            }
        },
        "network_interfaceDHCPNetworkType": {
            "type": "object",
            "description": "DHCP network configuration",
            "title": "DHCP Network",
            "x-displayname": "DHCP Network",
            "x-ves-displayorder": "1,12,4,5,9",
            "x-ves-oneof-field-dns_choice": "[\"dns_address\",\"same_as_dgw\"]",
            "x-ves-oneof-field-gateway_choice": "[\"dgw_address\",\"first_address\",\"last_address\"]",
            "x-ves-oneof-field-network_prefix_choice": "[\"network_prefix\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPNetworkType",
            "properties": {
                "dgw_address": {
                    "type": "string",
                    "description": "Exclusive with [first_address last_address]\n Enter a IPv4 address from the network prefix to be used as the default gateway.\n\nExample: - \"10.1.1.10\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Configured Address",
                    "x-displayname": "Static IPv4 Configuration",
                    "x-ves-example": "10.1.1.10",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "dns_address": {
                    "type": "string",
                    "description": "Exclusive with [same_as_dgw]\n Enter a IPv4 address from the network prefix to be used as the DNS server.\n\nExample: - \"10.1.1.11\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Configured Address",
                    "x-displayname": "Static IPv4 Configuration",
                    "x-ves-example": "10.1.1.11",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "first_address": {
                    "description": "Exclusive with [dgw_address last_address]\n First usable address from the network prefix is chosen as default gateway",
                    "title": "First Address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "First Address of Network"
                },
                "last_address": {
                    "description": "Exclusive with [dgw_address first_address]\n Last usable address from the network prefix is chosen as default gateway",
                    "title": "Last Address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Last Address of Network"
                },
                "network_prefix": {
                    "type": "string",
                    "description": "Exclusive with []\n Set the network prefix for the site. ex: 10.1.1.0/24\n\nExample: - \"10.1.1.0/24\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4_prefix: true\n",
                    "title": "Network Prefix",
                    "x-displayname": "Network Prefix",
                    "x-ves-example": "10.1.1.0/24",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4_prefix": "true"
                    }
                },
                "pool_settings": {
                    "description": " Controls how DHCP pools are handled\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "DHCP Pool Settings",
                    "$ref": "#/definitions/network_interfaceDHCPPoolSettingType",
                    "x-displayname": "DHCP Pool Settings",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "pools": {
                    "type": "array",
                    "description": " List of non overlapping ip address ranges.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "DHCP pools",
                    "maxItems": 16,
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPPoolType"
                    },
                    "x-displayname": "DHCP Pools",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "same_as_dgw": {
                    "description": "Exclusive with [dns_address]\n DNS server address is same as default gateway address",
                    "title": "Default Gateway Address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Default Gateway Address"
                }
            }
        },
        "network_interfaceDHCPPoolSettingType": {
            "type": "string",
            "description": "Identifies the how to pick the network for Interface.\n\nAddress ranges in DHCP pool list are used for IP Address allocation\nAddress ranges in DHCP pool list are excluded from IP Address allocation",
            "title": "DHCP POOL SETTING",
            "enum": [
                "INCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS",
                "EXCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS"
            ],
            "default": "INCLUDE_IP_ADDRESSES_FROM_DHCP_POOLS",
            "x-displayname": "Interface Network Type",
            "x-ves-proto-enum": "ves.io.schema.network_interface.DHCPPoolSettingType"
        },
        "network_interfaceDHCPPoolType": {
            "type": "object",
            "description": "DHCP pool is a range of IP addresses (start ip and end ip).",
            "title": "DHCP IP Range",
            "x-displayname": "DHCP IP Range",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPPoolType",
            "properties": {
                "end_ip": {
                    "type": "string",
                    "description": " Ending IP of the pool range.\n In case of address allocator, offset is derived based on network prefix.\n 10.1.1.200 with prefix length of 24, end offset is 0.0.0.200\n\nExample: - \"10.1.1.200\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "End IP",
                    "x-displayname": "Ending IP",
                    "x-ves-example": "10.1.1.200",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "start_ip": {
                    "type": "string",
                    "description": " Starting IP of the pool range.\n In case of address allocator, offset is derived based on network prefix.\n 10.1.1.5 with prefix length of 24, start offset is 0.0.0.5\n\nExample: - \"10.1.1.5\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Start IP",
                    "x-displayname": "Starting IP",
                    "x-ves-example": "10.1.1.5",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                }
            }
        },
        "network_interfaceDHCPServerParametersType": {
            "type": "object",
            "title": "DHCPServerParametersType",
            "x-displayname": "DHCPServerParametersType",
            "x-ves-oneof-field-interfaces_addressing_choice": "[\"automatic_from_end\",\"automatic_from_start\",\"interface_ip_map\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.DHCPServerParametersType",
            "properties": {
                "automatic_from_end": {
                    "description": "Exclusive with [automatic_from_start interface_ip_map]\n Assign automatically from end of the first network in the DHCP Network list",
                    "title": "Automatic End",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Automatic End"
                },
                "automatic_from_start": {
                    "description": "Exclusive with [automatic_from_end interface_ip_map]\n Assign automatically from start of the first network in the DHCP Network list",
                    "title": "Automatic Start",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Automatic Start"
                },
                "dhcp_networks": {
                    "type": "array",
                    "description": " List of networks from which DHCP Server can allocate IPv4 Addresses\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 1\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "DHCP Networks",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/network_interfaceDHCPNetworkType"
                    },
                    "x-displayname": "DHCP Networks",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "1",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "fixed_ip_map": {
                    "type": "object",
                    "description": " Assign fixed IPv4 addresses based on the MAC Address of the DHCP Client.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.mac: true\n  ves.io.schema.rules.map.max_pairs: 128\n  ves.io.schema.rules.map.unique_values: true\n  ves.io.schema.rules.map.values.string.ipv4: true\n",
                    "title": "Fixed IP Assignments",
                    "x-displayname": "Fixed MAC Address to IPv4 Assignments",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.mac": "true",
                        "ves.io.schema.rules.map.max_pairs": "128",
                        "ves.io.schema.rules.map.unique_values": "true",
                        "ves.io.schema.rules.map.values.string.ipv4": "true"
                    }
                },
                "interface_ip_map": {
                    "description": "Exclusive with [automatic_from_end automatic_from_start]\n Statically configure a IPv4 address for every node",
                    "title": "Static IPv4 Configuration",
                    "$ref": "#/definitions/network_interfaceDHCPInterfaceIPType",
                    "x-displayname": "Static IPv4 Configuration"
                }
            }
        },
        "network_interfaceIPV6AutoConfigRouterType": {
            "type": "object",
            "title": "IPV6AutoConfigRouterType",
            "x-displayname": "IPV6AutoConfigRouterType",
            "x-ves-oneof-field-address_choice": "[\"network_prefix\",\"stateful\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.IPV6AutoConfigRouterType",
            "properties": {
                "dns_config": {
                    "description": " Dns information that needs to added in the RouterAdvetisement",
                    "title": "Dns Information",
                    "$ref": "#/definitions/network_interfaceIPV6DnsConfig",
                    "x-displayname": "DNS Information"
                },
                "network_prefix": {
                    "type": "string",
                    "description": "Exclusive with [stateful]\n Nework prefix that is used as Prefix information\n Allowed only /64 prefix length as per RFC 4862\n\nExample: - \"2001::0/64\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6_prefix: true\n  ves.io.schema.rules.string.pattern: .*::/64$\n",
                    "title": "Prefix Info",
                    "x-displayname": "Network Prefix",
                    "x-ves-example": "2001::0/64",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6_prefix": "true",
                        "ves.io.schema.rules.string.pattern": ".*::/64$"
                    }
                },
                "stateful": {
                    "description": "Exclusive with [network_prefix]\n Use stateful dhcp server which provides the IPV6 address to clients\n works along with Router Advertisement' Managed flag",
                    "title": "Stateful DHCP IPV6 server",
                    "$ref": "#/definitions/network_interfaceDHCPIPV6StatefulServer",
                    "x-displayname": "StateFul DHCPIPV6 server"
                }
            }
        },
        "network_interfaceIPV6AutoConfigType": {
            "type": "object",
            "title": "IPV6AutoConfigType",
            "x-displayname": "IPV6AutoConfigType",
            "x-ves-oneof-field-autoconfig_choice": "[\"host\",\"router\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.IPV6AutoConfigType",
            "properties": {
                "host": {
                    "description": "Exclusive with [router]\n System behaves like auto config host and receives the auto configuration parameters from other\n auto configuration routers. This is similar to a DHCP Client.",
                    "title": "host",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Auto Config Host"
                },
                "router": {
                    "description": "Exclusive with [host]\n System behaves like auto config Router and provides auto config parameters. This is similar to a DHCP Server.",
                    "title": "router",
                    "$ref": "#/definitions/network_interfaceIPV6AutoConfigRouterType",
                    "x-displayname": "Auto Config Router"
                }
            }
        },
        "network_interfaceIPV6DnsConfig": {
            "type": "object",
            "title": "IPV6DnsConfig",
            "x-displayname": "IPV6DnsConfig",
            "x-ves-oneof-field-dns_choice": "[\"configured_list\",\"local_dns\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.IPV6DnsConfig",
            "properties": {
                "configured_list": {
                    "description": "Exclusive with [local_dns]\n Configured address outside network range - external dns server",
                    "title": "Configured Address List",
                    "$ref": "#/definitions/network_interfaceIPV6DnsList",
                    "x-displayname": "Configured Address List"
                },
                "local_dns": {
                    "description": "Exclusive with [configured_list]\n Choose the address from the network prefix range as dns server",
                    "title": "Local Dns Address",
                    "$ref": "#/definitions/network_interfaceIPV6LocalDnsAddress",
                    "x-displayname": "Local DNS Address"
                }
            }
        },
        "network_interfaceIPV6DnsList": {
            "type": "object",
            "title": "IPV6DnsList",
            "x-displayname": "IPV6DnsList",
            "x-ves-proto-message": "ves.io.schema.network_interface.IPV6DnsList",
            "properties": {
                "dns_list": {
                    "type": "array",
                    "description": " List of IPV6 Addresses acting as Dns servers\n\nExample: - \"2001::11\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Dns List",
                    "minItems": 1,
                    "maxItems": 4,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Dns List",
                    "x-ves-example": "2001::11",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true",
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "network_interfaceIPV6LocalDnsAddress": {
            "type": "object",
            "title": "IPV6LocalDnsAddress",
            "x-displayname": "IPV6LocalDnsAddress",
            "x-ves-oneof-field-local_dns_choice": "[\"configured_address\",\"first_address\",\"last_address\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.IPV6LocalDnsAddress",
            "properties": {
                "configured_address": {
                    "type": "string",
                    "description": "Exclusive with [first_address last_address]\n Configured address from the network prefix is chosen as dns server\n\nExample: - \"2001::10\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Configured Address",
                    "x-displayname": "Configured Address",
                    "x-ves-example": "2001::10",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                },
                "first_address": {
                    "description": "Exclusive with [configured_address last_address]\n First usable address from the network prefix is chosen as dns server",
                    "title": "First Address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "First Address of Network"
                },
                "last_address": {
                    "description": "Exclusive with [configured_address first_address]\n Last usable address from the network prefix is chosen as dns server",
                    "title": "Last Address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Last Address of Network"
                }
            }
        },
        "network_interfaceLinkQualityMonitorConfig": {
            "type": "object",
            "description": "Link Quality Monitoring configuration for a network interface.",
            "title": "Link Quality Monitoring Configuration",
            "x-displayname": "Link Quality Monitoring Configuration",
            "x-ves-proto-message": "ves.io.schema.network_interface.LinkQualityMonitorConfig"
        },
        "network_interfaceStaticIPParametersType": {
            "type": "object",
            "description": "Configure Static IP parameters",
            "title": "Static IP Parameters",
            "x-displayname": "Static IP Parameters",
            "x-ves-oneof-field-network_prefix_choice": "[\"cluster_static_ip\",\"node_static_ip\"]",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIPParametersType",
            "properties": {
                "cluster_static_ip": {
                    "description": "Exclusive with [node_static_ip]\n Static IP configuration for a specific node",
                    "title": "Node Specific",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersClusterType",
                    "x-displayname": "Cluster, All Nodes of the Site"
                },
                "node_static_ip": {
                    "description": "Exclusive with [cluster_static_ip]\n Static IP configuration for the Node",
                    "title": "Node",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersNodeType",
                    "x-displayname": "Specific Node"
                }
            }
        },
        "network_interfaceStaticIpParametersClusterType": {
            "type": "object",
            "description": "Configure Static IP parameters  for cluster",
            "title": "Static IP Parameters",
            "x-displayname": "Cluster: Static IP Parameters",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIpParametersClusterType",
            "properties": {
                "interface_ip_map": {
                    "type": "object",
                    "description": " Map of Node to Static ip configuration value, Key:Node, Value:IP Address\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 128\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 128\n",
                    "title": "Site:Node to IP mapping",
                    "x-displayname": "Node to IP Mapping",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "128",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "128"
                    }
                }
            }
        },
        "network_interfaceStaticIpParametersFleetType": {
            "type": "object",
            "description": "x-displayName: \"Fleet: Static IP Parameters\"\nConfigure Static IP parameters",
            "title": "Static IP Parameters",
            "properties": {
                "default_gw": {
                    "type": "string",
                    "description": "x-displayName: \"Default Gateway\"\nx-example: \"192.168.20.1\"\nIP address offset of the default gateway, prefix len is used to calculate offset",
                    "title": "Default Gateway"
                },
                "dns_server": {
                    "type": "string",
                    "description": "x-displayName: \"DNS Server\"\nx-example: \"192.168.20.1\"\nIP address offset of the DNS server, prefix len is used to calculate offset",
                    "title": "DNS Server"
                },
                "network_prefix_allocator": {
                    "description": "x-displayName: \"Fleet address allocator\"\nStatic IP configuration for the fleet",
                    "title": "Fleet",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                }
            }
        },
        "network_interfaceStaticIpParametersNodeType": {
            "type": "object",
            "description": "Configure Static IP parameters for a node",
            "title": "Static IP Parameters",
            "x-displayname": "Node: Static IP Parameters",
            "x-ves-proto-message": "ves.io.schema.network_interface.StaticIpParametersNodeType",
            "properties": {
                "default_gw": {
                    "type": "string",
                    "description": " IP address of the default gateway.\n\nExample: - \"192.168.20.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ip: true\n",
                    "title": "Default Gateway",
                    "x-displayname": "Default Gateway",
                    "x-ves-example": "192.168.20.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ip": "true"
                    }
                },
                "ip_address": {
                    "type": "string",
                    "description": " IP address of the interface and prefix length\n\nExample: - \"192.168.20.1/24\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.ip_prefix: true\n",
                    "title": "Default Gateway",
                    "x-displayname": "IP address/Prefix Length",
                    "x-ves-example": "192.168.20.1/24",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.ip_prefix": "true"
                    }
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "runtimeStreamError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "grpc_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed.\n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]\n",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]"
                    }
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Validation\\\",\\\"Operational\\\"]\n",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Validation\\\",\\\"Operational\\\"]"
                    }
                }
            }
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaListMetaType": {
            "type": "object",
            "description": "ListMetaType is metadata that all lists must have.",
            "title": "ListMetaType",
            "x-displayname": "List Metadata",
            "x-ves-proto-message": "ves.io.schema.ListMetaType"
        },
        "schemaObjectMetaType": {
            "type": "object",
            "description": "ObjectMetaType is metadata(common attributes) of an object that all configuration objects will have.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "ObjectMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1200\n",
                    "title": "description",
                    "maxLength": 1200,
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1200"
                    }
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. Object create will fail if\n provided by the client and the value exists in the system. Typically generated by the\n server on successful creation of an object and is not allowed to change once populated.\n Shadowed by SystemObjectMeta's uid field.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaRouteAttrType": {
            "type": "string",
            "description": "Defines attributes associated with route\n\nIgnore attribute\nAdvertise route in all supported routing protocols\nAdd route into host OS - route in host OS will point to interface corresponding to the virtual network.\nHost OS must have an interface in the virtual network.\nUse the route for forwarding decision - adds route into data plane\nmodules with configured next-hop\nMerge Route if they already exist",
            "title": "Route Attribute",
            "enum": [
                "ROUTE_ATTR_NO_OP",
                "ROUTE_ATTR_ADVERTISE",
                "ROUTE_ATTR_INSTALL_HOST",
                "ROUTE_ATTR_INSTALL_FORWARDING",
                "ROUTE_ATTR_MERGE_ONLY"
            ],
            "default": "ROUTE_ATTR_NO_OP",
            "x-displayname": "Route Attribute",
            "x-ves-proto-enum": "ves.io.schema.RouteAttrType"
        },
        "schemaSiteToSiteTunnelType": {
            "type": "string",
            "description": "Tunnel encapsulation to be used between sites\n\nTunnel can operate in both IPsec and SSL, with IPsec being prefered over SSL.\nTunnel is of type IPsec\nTunnel is of type SSL",
            "title": "Site to site tunnel type",
            "enum": [
                "SITE_TO_SITE_TUNNEL_IPSEC_OR_SSL",
                "SITE_TO_SITE_TUNNEL_IPSEC",
                "SITE_TO_SITE_TUNNEL_SSL"
            ],
            "default": "SITE_TO_SITE_TUNNEL_IPSEC_OR_SSL",
            "x-displayname": "Tunnel type",
            "x-ves-proto-enum": "ves.io.schema.SiteToSiteTunnelType"
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status\n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Origin of this status exchanged by VTRP.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do Not Publish\n\nDo not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Publish\n\nPropagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Status Publish Type",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectMetaType": {
            "type": "object",
            "description": "SystemObjectMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "value"
                },
                "creator_cookie": {
                    "type": "string",
                    "description": " This can used by the creator of the object for later audit for e.g. by storing the\n version identifying information of the object so at future it can be determined if\n version present at remote end is current or stale.\n\nExample: - \"value\"-",
                    "title": "creator_cookie",
                    "x-displayname": "Creator Cookie",
                    "x-ves-example": "value"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "value"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n\n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n\n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the operator or software. Values here can be interpreted\n by software(backend or frontend) to enable certain behavior e.g. things marked as soft-deleted(restorable).\n\nExample: - \"'ves.io/soft-deleted''true'\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "'ves.io/soft-deleted': 'true'"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "namespace": {
                    "type": "array",
                    "description": " The namespace this object belongs to. This is populated by the service based on the\n metadata.namespace field when an object is created.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "title": "namespace",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Namespace Reference",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "sre_disable": {
                    "type": "boolean",
                    "description": " This should be set to true If VES/SRE operator wants to suppress an object from being\n presented to business-logic of a daemon(e.g. due to bad-form/issue-causing Object).\n This is meant only to be used in temporary situations for operational continuity till\n a fix is rolled out in business-logic.\n\nExample: - \"true\"-",
                    "title": "sre_disable",
                    "format": "boolean",
                    "x-displayname": "SRE Disable",
                    "x-ves-example": "true"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "trace_info": {
                    "type": "string",
                    "description": " trace_info holds information(\u003ctrace-id\u003e:\u003cspan-id\u003e:\u003cparent-span-id\u003e) of the request doing\n the object modification. This can be used on the watch side to create subsequent spans.\n This information can be used to co-relate activities across services (modulo state compression)\n for a synchronous API.\n\nExample: - \"value\"-",
                    "title": "trace_info",
                    "x-displayname": "Trace Info",
                    "x-ves-example": "value"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Indicate origin of this object.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaVipVrrpType": {
            "type": "string",
            "description": "VRRP advertisement mode for VIP\n\nInvalid VRRP mode",
            "title": "VipVrrpType",
            "enum": [
                "VIP_VRRP_INVALID",
                "VIP_VRRP_ENABLE",
                "VIP_VRRP_DISABLE"
            ],
            "default": "VIP_VRRP_INVALID",
            "x-displayname": "VRRP Virtual-IP",
            "x-ves-proto-enum": "ves.io.schema.VipVrrpType"
        },
        "schemaVirtualNetworkType": {
            "type": "string",
            "description": "Different types of virtual networks understood by the system\n\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL provides connectivity to public (outside) network.\nThis is an insecure network and is connected to public internet via NAT Gateways/firwalls\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created automatically and present on all sites\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE is a private network inside site.\nIt is a secure network and is not connected to public network.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created during provisioning of site\nUser defined per-site virtual network. Scope of this virtual network is limited to the site.\nThis is not yet supported\nVirtual-network of type VIRTUAL_NETWORK_PUBLIC directly conects to the public internet.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on RE sites only\nIt is an internally created by the system. They must not be created by user\nVirtual Neworks with global scope across different sites in F5XC domain.\nAn example global virtual-network called \"AIN Network\" is created for every tenant.\nfor volterra fabric\n\nConstraints:\nIt is currently only supported as internally created by the system.\nvK8s service network for a given tenant. Used to advertise a virtual host only to vk8s pods for that tenant\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVER internal network for the site. It can only be used for virtual hosts with SMA_PROXY type proxy\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE represents both\nVIRTUAL_NETWORK_SITE_LOCAL and VIRTUAL_NETWORK_SITE_LOCAL_INSIDE\n\nConstraints:\nThis network type is only meaningful in an advertise policy\nWhen virtual-network of type VIRTUAL_NETWORK_IP_AUTO is selected for\nan endpoint, VER will try to determine the network based on the provided\nIP address\n\nConstraints:\nThis network type is only meaningful in an endpoint\n\nVoltADN Private Network is used on volterra RE(s) to connect to customer private networks\nThis network is created by opening a support ticket\n\nThis network is per site srv6 network\nVER IP Fabric network for the site.\nThis Virtual network type is used for exposing virtual host on IP Fabric network on the VER site or\nfor endpoint in IP Fabric network\nConstraints:\nIt is an internally created by the system. Must not be created by user\nNetwork internally created for a segment\nConstraints:\nIt is an internally created by the system. Must not be created by user",
            "title": "VirtualNetworkType",
            "enum": [
                "VIRTUAL_NETWORK_SITE_LOCAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE",
                "VIRTUAL_NETWORK_PER_SITE",
                "VIRTUAL_NETWORK_PUBLIC",
                "VIRTUAL_NETWORK_GLOBAL",
                "VIRTUAL_NETWORK_SITE_SERVICE",
                "VIRTUAL_NETWORK_VER_INTERNAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE",
                "VIRTUAL_NETWORK_IP_AUTO",
                "VIRTUAL_NETWORK_VOLTADN_PRIVATE_NETWORK",
                "VIRTUAL_NETWORK_SRV6_NETWORK",
                "VIRTUAL_NETWORK_IP_FABRIC",
                "VIRTUAL_NETWORK_SEGMENT"
            ],
            "default": "VIRTUAL_NETWORK_SITE_LOCAL",
            "x-displayname": "Virtual Network Type",
            "x-ves-proto-enum": "ves.io.schema.VirtualNetworkType"
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 128\n  ves.io.schema.rules.string.min_bytes: 1\n",
                    "title": "name",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "128",
                        "ves.io.schema.rules.string.min_bytes": "1"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "namespace",
                    "maxLength": 64,
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "tenant",
                    "maxLength": 64,
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                }
            }
        },
        "securemesh_site_v2AWSProviderType": {
            "type": "object",
            "description": "AWS Provider Type",
            "title": "AWS Provider Type",
            "x-displayname": "AWS Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.AWSProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2AzureProviderType": {
            "type": "object",
            "description": "Azure Provider Type",
            "title": "Azure Provider Type",
            "x-displayname": "Azure Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.AzureProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2BaremetalProviderType": {
            "type": "object",
            "description": "Baremetal Provider Type",
            "title": "Baremetal Provider Type",
            "x-displayname": "Baremetal Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.BaremetalProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2GCPProviderType": {
            "type": "object",
            "description": "GCP Provider Type",
            "title": "GCP Provider Type",
            "x-displayname": "GCP Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.GCPProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2Interface": {
            "type": "object",
            "description": "Interface definition",
            "title": "Interface",
            "x-displayname": "Interface",
            "x-ves-oneof-field-address_choice": "[\"dhcp_client\",\"dhcp_server\",\"no_ipv4_address\",\"static_ip\"]",
            "x-ves-oneof-field-interface_choice": "[\"bond_interface\",\"ethernet_interface\",\"vlan_interface\"]",
            "x-ves-oneof-field-ipv6_address_choice": "[\"no_ipv6_address\",\"static_ipv6_address\"]",
            "x-ves-oneof-field-monitoring_choice": "[\"monitor\",\"monitor_disabled\"]",
            "x-ves-oneof-field-site_to_site_connectivity_interface_choice": "[\"site_to_site_connectivity_interface_disabled\",\"site_to_site_connectivity_interface_enabled\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.Interface",
            "properties": {
                "bond_interface": {
                    "description": "Exclusive with [ethernet_interface vlan_interface]\n",
                    "title": "Bond Interface",
                    "$ref": "#/definitions/fleetFleetBondDeviceType",
                    "x-displayname": "Bond Interface"
                },
                "description": {
                    "type": "string",
                    "description": " Description for this Interface\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Interface Description",
                    "maxLength": 256,
                    "x-displayname": "Interface Description",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "dhcp_client": {
                    "description": "Exclusive with [dhcp_server no_ipv4_address static_ip]\n Interface gets it's IP address from an external DHCP server.",
                    "title": "DHCP Client",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "DHCP Client"
                },
                "dhcp_server": {
                    "description": "Exclusive with [dhcp_client no_ipv4_address static_ip]\n DHCP Server is configured for this interface, Interface IP is derived from DHCP server configuration.",
                    "title": "DHCP Server",
                    "$ref": "#/definitions/network_interfaceDHCPServerParametersType",
                    "x-displayname": "DHCP server"
                },
                "ethernet_interface": {
                    "description": "Exclusive with [bond_interface vlan_interface]\n",
                    "title": "Ethernet Interface",
                    "$ref": "#/definitions/viewssecuremesh_site_v2EthernetInterfaceType",
                    "x-displayname": "Ethernet Interface"
                },
                "ipv6_auto_config": {
                    "description": " Interface IPv6 address will be configured via Auto Configuration.",
                    "title": "IPV6 Auto configuration",
                    "$ref": "#/definitions/network_interfaceIPV6AutoConfigType",
                    "x-displayname": "IPv6 via AutoConfiguration"
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Interface, these labels can be used in firewall policy\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 16\n  ves.io.schema.rules.map.values.string.max_len: 64\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Interface labels",
                    "x-displayname": "Interface Labels",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "16",
                        "ves.io.schema.rules.map.values.string.max_len": "64",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "monitor": {
                    "description": "Exclusive with [monitor_disabled]\n",
                    "title": "Monitoring enabled",
                    "$ref": "#/definitions/network_interfaceLinkQualityMonitorConfig",
                    "x-displayname": "Enabled"
                },
                "monitor_disabled": {
                    "description": "Exclusive with [monitor]\n",
                    "title": "Monitoring disabled",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "mtu": {
                    "type": "integer",
                    "description": " Maximum packet size (Maximum Transfer Unit) of the interface\n When configured, mtu must be between 512 and 16384\n\nExample: - \"1450\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.ranges: 0,512-16384\n",
                    "title": "Maximum Packet Size (MTU)",
                    "format": "int64",
                    "x-displayname": "Maximum Packet Size (MTU)",
                    "x-ves-example": "1450",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.ranges": "0,512-16384"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Name of this Interface\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Interface Name",
                    "maxLength": 256,
                    "x-displayname": "Interface Name",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "network_option": {
                    "description": " Select virtual network (VRF) for this interface.\n There are 2 kinds of VRFs, local VRFs which are local to the site and global VRFs which extend into multiple sites.\n A site can have 2 Local VRFs, Site Local Outside (SLO), which is required for every site and Site Local Inside (SLI) which is optional.\n Global VRFs are configured via Networking \u003e Segments. A site can have multple Network Segments (global VRFs).\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Select VRF",
                    "$ref": "#/definitions/securemesh_site_v2NetworkSelectType",
                    "x-displayname": "Select VRF",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "no_ipv4_address": {
                    "description": "Exclusive with [dhcp_client dhcp_server static_ip]\n Interface does not have an IPv4 Address.",
                    "title": "Disabled",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "no_ipv6_address": {
                    "description": "Exclusive with [static_ipv6_address]\n Interface does not have an IPv6 Address.",
                    "title": "no_ipv6_address",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "priority": {
                    "type": "integer",
                    "description": " For a node, if multiple interfaces are configured in a VRF, interfaces with highest priority will be used as active\n and interfaces with lower priority will be used as backup.\n If multiple interfaces have the same priority, ECMP will be used.\n Greater the value, higher the priority\n\nExample: - \"42\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 255\n",
                    "title": "Priority",
                    "format": "int64",
                    "x-displayname": "Priority",
                    "x-ves-example": "42",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "255"
                    }
                },
                "site_to_site_connectivity_interface_disabled": {
                    "description": "Exclusive with [site_to_site_connectivity_interface_enabled]\n Do not use this interface for site to site connectivity.",
                    "title": "Disabled",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "site_to_site_connectivity_interface_enabled": {
                    "description": "Exclusive with [site_to_site_connectivity_interface_disabled]\n Use this this interface for site to site connectivity.",
                    "title": "Enabled",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enabled"
                },
                "static_ip": {
                    "description": "Exclusive with [dhcp_client dhcp_server no_ipv4_address]\n Interface IP address is configured statically.",
                    "title": "Static IP",
                    "$ref": "#/definitions/network_interfaceStaticIpParametersNodeType",
                    "x-displayname": "Static IP"
                },
                "static_ipv6_address": {
                    "description": "Exclusive with [no_ipv6_address]\n Interface IPv6 address is configured statically.",
                    "title": "Static IP",
                    "$ref": "#/definitions/network_interfaceStaticIPParametersType",
                    "x-displayname": "Static IPv6"
                },
                "vlan_interface": {
                    "description": "Exclusive with [bond_interface ethernet_interface]\n",
                    "title": "VLAN Interface",
                    "$ref": "#/definitions/securemesh_site_v2VlanInterfaceType",
                    "x-displayname": "VLAN Interface"
                }
            }
        },
        "securemesh_site_v2KVMProviderType": {
            "type": "object",
            "description": "KVM Provider Type",
            "title": "KVM Provider Type",
            "x-displayname": "KVM Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.KVMProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2LoadBalancingSettingsType": {
            "type": "object",
            "description": "This section contains settings on the site that relate to Load Balancing functionality.",
            "title": "Load Balancing Settings",
            "x-displayname": "Load Balancing Settings",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.LoadBalancingSettingsType",
            "properties": {
                "vip_vrrp_mode": {
                    "description": " This controls the ARP behavior for Common VIP\n addresses, when it is configured. When turned on, a Control node would advertise gratuitous ARPs and\n would respond to ARP queries for these addresses. When turned off, ARP responses are not given.\n\n If BGP is configured, irrespective of the VRRP Mode, common VIP addresses will be advertised by BGP.\n\n When VIP is configured on both Site Local Outside (SLO) and Site Local Inside (SLI) Local VRF on the site, it is recommended to turn on VRRP and also configure BGP.",
                    "title": "vip_vrrp_mode",
                    "$ref": "#/definitions/schemaVipVrrpType",
                    "x-displayname": "VRRP Mode"
                }
            }
        },
        "securemesh_site_v2LocalVRFSettingType": {
            "type": "object",
            "description": "There can be two local VRFs on each site.\nThe Site Local Outside (SLO) local VRF is used to connect WAN side workloads to this site and to connect the site to F5 Distributed Cloud for management. All sites are required to have an SLO local VRF.\nThe Site Local Inside (SLI) local VRF is used to connect LAN side workloads to this site. SLI local VRF is optional.",
            "title": "Local VRF Settings",
            "x-displayname": "Local VRF Settings",
            "x-ves-oneof-field-sli_choice": "[\"default_sli_config\",\"sli_config\"]",
            "x-ves-oneof-field-slo_choice": "[\"default_config\",\"slo_config\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.LocalVRFSettingType",
            "properties": {
                "default_config": {
                    "description": "Exclusive with [slo_config]\n",
                    "title": "Default Configuration",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Default Configuration"
                },
                "default_sli_config": {
                    "description": "Exclusive with [sli_config]\n",
                    "title": "Default Configuration",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Default Configuration"
                },
                "sli_config": {
                    "description": "Exclusive with [default_sli_config]\n Configure properties such as static routes, DNS and common VIP for Load Balancing on the Site Local Inside (SLI) local VRF.",
                    "title": "Configure Site Local Inside Network",
                    "$ref": "#/definitions/securemesh_site_v2VirtualNetworkConfiguration",
                    "x-displayname": "Configure Site Local Inside Network"
                },
                "slo_config": {
                    "description": "Exclusive with [default_config]\n Configure properties such as static routes, DNS and common VIP for Load Balancing on the Site Local Outside (SLO) local VRF.",
                    "title": "Configure Site Local Network",
                    "$ref": "#/definitions/securemesh_site_v2VirtualNetworkConfiguration",
                    "x-displayname": "Configure Site Local Outside Network"
                }
            }
        },
        "securemesh_site_v2NetworkSelectType": {
            "type": "object",
            "description": "x-required\nSelect virtual network (VRF) for this interface.\nThere are 2 kinds of VRFs, local VRFs which are local to the site and global VRFs which extend into multiple sites.\nA site can have 2 Local VRFs, Site Local Outside (SLO), which is required for every site and Site Local Inside (SLI) which is optional.\nGlobal VRFs are configured via Networking \u003e Segments. A site can have multple Network Segments (global VRFs).",
            "title": "NetworkSelectType",
            "x-displayname": "Network Select",
            "x-ves-oneof-field-network_choice": "[\"segment_network\",\"site_local_inside_network\",\"site_local_network\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.NetworkSelectType",
            "properties": {
                "segment_network": {
                    "description": "Exclusive with [site_local_inside_network site_local_network]\n",
                    "title": "Segment",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Segment (Global VRF)"
                },
                "site_local_inside_network": {
                    "description": "Exclusive with [segment_network site_local_network]\n",
                    "title": "Site Local Network Inside",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Site Local Inside (Local VRF)"
                },
                "site_local_network": {
                    "description": "Exclusive with [segment_network site_local_inside_network]\n",
                    "title": "Site Local Network",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Site Local Outside (Local VRF)"
                }
            }
        },
        "securemesh_site_v2NodeList": {
            "type": "object",
            "description": "This section will show nodes associated with this site. Note: For sites that are not orchestrated by F5XC, create nodes in the chosen provider.\nOnce a node is created and registers with the site, it will be shown in this section.",
            "title": "NodeList",
            "x-displayname": "List of Nodes",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.NodeList",
            "properties": {
                "node_list": {
                    "type": "array",
                    "description": " This section will show nodes associated with this site. Note: For sites that are not orchestrated by F5XC, create nodes in the chosen provider.\n Once a node is created and registers with the site, it will be shown in this section.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Nodes",
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/viewssecuremesh_site_v2Node"
                    },
                    "x-displayname": "Nodes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "securemesh_site_v2OCIProviderType": {
            "type": "object",
            "description": "OCI Provider Type",
            "title": "OCI Provider Type",
            "x-displayname": "OCI Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.OCIProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2RSeriesProviderType": {
            "type": "object",
            "description": "RSeries Provider Type",
            "title": "RSeries Provider Type",
            "x-displayname": "RSeries Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.RSeriesProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2SiteMeshGroupType": {
            "type": "object",
            "description": "Select how the site mesh group will be connected. By default, public IPs of the control nodes of the site will be used.",
            "title": "Site Mesh Group Type",
            "x-displayname": "Site Mesh Group Type",
            "x-ves-oneof-field-site_mesh_group_choice": "[\"no_site_mesh_group\",\"site_mesh_group\"]",
            "x-ves-oneof-field-site_mesh_group_ip_choice": "[\"sm_connection_public_ip\",\"sm_connection_pvt_ip\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.SiteMeshGroupType",
            "properties": {
                "no_site_mesh_group": {
                    "description": "Exclusive with [site_mesh_group]\n This site is not a member of Site Mesh group",
                    "title": "Not a Member",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Not a Member"
                },
                "site_mesh_group": {
                    "description": "Exclusive with [no_site_mesh_group]\n This site is member of Site Mesh Group via network",
                    "title": "Member of Site Mesh Group",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of Site Mesh Group"
                },
                "sm_connection_public_ip": {
                    "description": "Exclusive with [sm_connection_pvt_ip]\n This option will use the public IPs of the control nodes of this site to create IPsec\n tunnels to other sites which are part of the site mesh group.",
                    "title": "Site Mesh Group Connection Via Public Ip",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Site Mesh Group Connection Via Public Ip"
                },
                "sm_connection_pvt_ip": {
                    "description": "Exclusive with [sm_connection_public_ip]\n This option will use the private IPs of the control nodes of this site to create IPsec\n tunnels to other sites which are part of the site mesh group.\n These private IPs will be the IPs on the interfaces that belong to the Site Local Outside (SLO) Local VRF on the control nodes.\n If multiple interfaces on a control node belong to the Site Local Outside (SLO) Local VRF, the interface which has 'Use for Site to Site Connectivity' set will be used.",
                    "title": "Site Mesh Group Connection Via Private Ip",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Site Mesh Group Connection Via Private Ip"
                }
            }
        },
        "securemesh_site_v2SoftwareSettingsType": {
            "type": "object",
            "description": "Select OS and Software version for the site. All nodes in the site will run the same OS and Software version. These settings cannot be changed after the site is created.",
            "title": "F5XC Software Settings",
            "x-displayname": "F5XC Software Settings",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.SoftwareSettingsType",
            "properties": {
                "os": {
                    "description": " Select the Operating System version for the site. By default, latest available Operating System version will be used.",
                    "title": "Operating System",
                    "$ref": "#/definitions/viewsOperatingSystemType",
                    "x-displayname": "Operating System Version"
                },
                "sw": {
                    "description": " Select the F5XC Software Version for the site. By default, latest available F5XC Software Version will be used.\n Refer to release notes to find required released SW versions.",
                    "title": "F5XC Software Version",
                    "$ref": "#/definitions/viewsVolterraSoftwareType",
                    "x-displayname": "F5XC Software"
                }
            }
        },
        "securemesh_site_v2SpecType": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.SpecType",
            "properties": {
                "gc_spec": {
                    "title": "gc_spec",
                    "$ref": "#/definitions/viewssecuremesh_site_v2GlobalSpecType",
                    "x-displayname": "GC Spec"
                }
            }
        },
        "securemesh_site_v2StaticRoutesListType": {
            "type": "object",
            "title": "Static Routes List",
            "x-displayname": "Static Routes List",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.StaticRoutesListType",
            "properties": {
                "static_routes": {
                    "type": "array",
                    "description": "\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "static_routes",
                    "minItems": 1,
                    "maxItems": 16,
                    "items": {
                        "$ref": "#/definitions/virtual_networkStaticRouteViewType"
                    },
                    "x-displayname": "Static Routes",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "securemesh_site_v2StatusObject": {
            "type": "object",
            "description": "Most recently observed status of object",
            "title": "StatusObject",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions represent the normalized status values for configuration object",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " F5XC Secure Mesh Site object direct reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                }
            }
        },
        "securemesh_site_v2UpgradeSettingsType": {
            "type": "object",
            "description": "Specify how a site will be upgraded.",
            "title": "Upgrade Settings",
            "x-displayname": "Upgrade Settings",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.UpgradeSettingsType",
            "properties": {
                "kubernetes_upgrade_drain": {
                    "description": " Specify how worker nodes within a site will be upgraded.",
                    "title": "Enable Drain",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrain",
                    "x-displayname": "Node by Node Upgrade"
                }
            }
        },
        "securemesh_site_v2VMwareProviderType": {
            "type": "object",
            "description": "VMware Provider Type",
            "title": "VMware Provider Type",
            "x-displayname": "VMware Provider Type",
            "x-ves-oneof-field-orchestration_choice": "[\"not_managed\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.VMwareProviderType",
            "properties": {
                "not_managed": {
                    "description": "Exclusive with []\n F5 Distributed Cloud will not automate any provisioning (ex: node bringup) for this site.\n Customers will need to do this either via provider specific manual workflows\n or by using automation tools such as Terraform.",
                    "title": "Not Managed By F5XC",
                    "$ref": "#/definitions/securemesh_site_v2NodeList",
                    "x-displayname": "Not Managed By F5XC"
                }
            }
        },
        "securemesh_site_v2VirtualNetworkConfiguration": {
            "type": "object",
            "description": "Site local network configuration",
            "title": "Virtual Network Configuration",
            "x-displayname": "Site Local Network Configuration",
            "x-ves-oneof-field-static_route_choice": "[\"no_static_routes\",\"static_routes\"]",
            "x-ves-oneof-field-static_v6_route_choice": "[\"no_v6_static_routes\",\"static_v6_routes\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.VirtualNetworkConfiguration",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this network, these labels can be used in firewall policy\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.max_pairs: 16\n  ves.io.schema.rules.map.values.string.max_len: 64\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "Network labels",
                    "x-displayname": "Network Labels",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.max_pairs": "16",
                        "ves.io.schema.rules.map.values.string.max_len": "64",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "nameserver": {
                    "type": "string",
                    "description": " Optional DNS V4 server IP to be used for name resolution\n\nExample: - \"10.1.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "nameserver",
                    "x-displayname": "DNS V4 Server",
                    "x-ves-example": "10.1.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "nameserver_v6": {
                    "type": "string",
                    "description": " Optional DNS V6 server IP to be used for name resolution\n\nExample: - \"1001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "nameserver_v6",
                    "x-displayname": "DNS V6 Server",
                    "x-ves-example": "1001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                },
                "no_static_routes": {
                    "description": "Exclusive with [static_routes]\n Static IPv4 Routes disabled for this site local network (VRF).",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Static Routes"
                },
                "no_v6_static_routes": {
                    "description": "Exclusive with [static_v6_routes]\n Static IPv6 Routes disabled for this site local network (VRF).",
                    "title": "Do Not Manage IPv6 Static Routes",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable IPv6 Static Routes"
                },
                "static_routes": {
                    "description": "Exclusive with [no_static_routes]\n Manage IPv4 static routes for this site local network (VRF).",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/securemesh_site_v2StaticRoutesListType",
                    "x-displayname": "Manage Static routes"
                },
                "static_v6_routes": {
                    "description": "Exclusive with [no_v6_static_routes]\n Manage IPv6 static routes for this site local network (VRF).",
                    "title": "Manage IPv6 Static routes",
                    "$ref": "#/definitions/virtual_networkStaticV6RoutesListType",
                    "x-displayname": "Manage IPv6 Static routes"
                },
                "vip": {
                    "type": "string",
                    "description": " Optional common virtual V4 IP across all nodes to be used as automatic VIP.\n\nExample: - \"10.1.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Common V4 VIP",
                    "x-displayname": "Common V4 VIP",
                    "x-ves-example": "10.1.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "vip_v6": {
                    "type": "string",
                    "description": " Optional common virtual V6 IP across all nodes to be used as automatic VIP.\n\nExample: - \"2001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Common V6 VIP",
                    "x-displayname": "Common V6 VIP",
                    "x-ves-example": "2001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "securemesh_site_v2VlanInterfaceType": {
            "type": "object",
            "title": "Vlan Interface",
            "x-displayname": "Vlan Interface",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.VlanInterfaceType",
            "properties": {
                "device": {
                    "type": "string",
                    "description": " Select a parent interface from the dropdown.\n\nExample: - \"eth0\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "parent",
                    "minLength": 1,
                    "maxLength": 64,
                    "x-displayname": "Parent Interface",
                    "x-ves-example": "eth0",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "vlan_id": {
                    "type": "integer",
                    "description": " Configure the VLAN tag for this interface.\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 4095\n",
                    "title": "VLAN Id",
                    "format": "int64",
                    "x-displayname": "VLAN ID",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "4095"
                    }
                }
            }
        },
        "securemesh_site_v2crudapiErrorCode": {
            "type": "string",
            "enum": [
                "EOK",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN"
            ],
            "default": "EOK",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.securemesh_site_v2.crudapi.ErrorCode"
        },
        "siteCoordinates": {
            "type": "object",
            "description": "x-displayName: \"Site Coordinates\"\nCoordinates of the site which provides the site physical location",
            "title": "Site Coordinates",
            "properties": {
                "latitude": {
                    "type": "number",
                    "description": "x-displayName: \"Latitude\"\nx-example: \"10.0\"\nLatitude of the site location",
                    "title": "latitude",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "description": "x-displayName: \"Longitude\"\nx-example: \"20.0\"\nlongitude of site location",
                    "title": "longitude",
                    "format": "float"
                }
            }
        },
        "siteSiteState": {
            "type": "string",
            "description": "State of Site defines in which operational state site itself is.\n\nSite is online and operational.\nSite is in provisioning state. For instance during site deployment or switching to different connected Regional Edge.\nSite is in process of upgrade. It transition to ONLINE or FAILED state.\nSite is in Standby before goes to ONLINE. This is mainly for Regional Edge sites to do their verification before they go to ONLINE state.\nSite is in failed state. It failed during provisioning or upgrade phase. Site Status Objects contain more details.\nReregistration was requested\nReregistration is in progress and maurice is waiting for nodes\nSite deletion is in progress\nSite is waiting for registration",
            "title": "SiteState",
            "enum": [
                "ONLINE",
                "PROVISIONING",
                "UPGRADING",
                "STANDBY",
                "FAILED",
                "REREGISTRATION",
                "WAITINGNODES",
                "DECOMMISSIONING",
                "WAITING_FOR_REGISTRATION"
            ],
            "default": "ONLINE",
            "x-displayname": "Site State",
            "x-ves-proto-enum": "ves.io.schema.site.SiteState"
        },
        "viewsKubernetesUpgradeDrain": {
            "type": "object",
            "description": "Specify how worker nodes within a site will be upgraded.",
            "title": "Node by Node Upgrade",
            "x-displayname": "Node by Node Upgrade",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-kubernetes_upgrade_drain_enable_choice": "[\"disable_upgrade_drain\",\"enable_upgrade_drain\"]",
            "x-ves-proto-message": "ves.io.schema.views.KubernetesUpgradeDrain",
            "properties": {
                "disable_upgrade_drain": {
                    "description": "Exclusive with [enable_upgrade_drain]\n",
                    "title": "Disable upgrade drain",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Node by Node Upgrade"
                },
                "enable_upgrade_drain": {
                    "description": "Exclusive with [disable_upgrade_drain]\n",
                    "title": "Enable Node by Node Upgrade",
                    "$ref": "#/definitions/viewsKubernetesUpgradeDrainConfig",
                    "x-displayname": "Enable Node by Node Upgrade"
                }
            }
        },
        "viewsKubernetesUpgradeDrainConfig": {
            "type": "object",
            "description": "Specify batch upgrade settings for worker nodes within a site.",
            "title": "Enable Node by Node Upgrade",
            "x-displayname": "Enable Node by Node Upgrade",
            "x-ves-oneof-field-drain_max_unavailable_choice": "[\"drain_max_unavailable_node_count\"]",
            "x-ves-oneof-field-vega_upgrade_mode_toggle_choice": "[\"disable_vega_upgrade_mode\",\"enable_vega_upgrade_mode\"]",
            "x-ves-proto-message": "ves.io.schema.views.KubernetesUpgradeDrainConfig",
            "properties": {
                "disable_vega_upgrade_mode": {
                    "description": "Exclusive with [enable_vega_upgrade_mode]\n Disable Vega Upgrade Mode",
                    "title": "Disable Vega Upgrade Mode",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Vega Upgrade Mode"
                },
                "drain_max_unavailable_node_count": {
                    "type": "integer",
                    "description": "Exclusive with []\n\n\nExample: - \"1\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 5000\n",
                    "title": "Node Batch Size Count",
                    "format": "int64",
                    "x-displayname": "Node Batch Size Count",
                    "x-ves-example": "1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "5000"
                    }
                },
                "drain_node_timeout": {
                    "type": "integer",
                    "description": " Seconds to wait before initiating upgrade on the next set of nodes. Setting it to 0 will wait indefinitely for all services on nodes to be upgraded gracefully before proceeding to the next set of nodes.\n (Warning: It may block upgrade if services on a node cannot be gracefully upgraded. It is recommended to use the default value).\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 900\n",
                    "title": "Upgrade Wait Time",
                    "format": "int64",
                    "x-displayname": "Upgrade Wait Time",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "900"
                    }
                },
                "enable_vega_upgrade_mode": {
                    "description": "Exclusive with [disable_vega_upgrade_mode]\n Enable Vega Upgrade Mode\n When enabled, vega will inform RE to stop traffic to the specific node.",
                    "title": "Enable Vega Upgrade Mode",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enable Vega Upgrade Mode"
                }
            }
        },
        "viewsL3PerformanceEnhancementType": {
            "type": "object",
            "description": "x-required\nL3 enhanced performance mode options",
            "title": "L3 Mode Enhanced Performance options",
            "x-displayname": "L3 Mode Enhanced Performance",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"jumbo\",\"no_jumbo\"]",
            "x-ves-proto-message": "ves.io.schema.views.L3PerformanceEnhancementType",
            "properties": {
                "jumbo": {
                    "description": "Exclusive with [no_jumbo]\n",
                    "title": "L3 Mode Enhanced Performance with jumbo frame support(9000)",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enabled"
                },
                "no_jumbo": {
                    "description": "Exclusive with [jumbo]\n",
                    "title": "L3 Mode Enhanced Performance with no jumbo frame support",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                }
            }
        },
        "viewsOfflineSurvivabilityModeType": {
            "type": "object",
            "description": "Offline Survivability allows the Site to continue functioning normally without traffic loss during periods of connectivity loss to the Regional Edge (RE) or the Global Controller (GC).\nWhen this feature is enabled, a site can continue to function as is with existing configuration for upto 7 days, even when the site is offline.\nThe certificates needed to keep the services running on this site are signed using a local CA.\nSecrets would also be cached locally to handle the connectivity loss.\nWhen the mode is toggled, services will restart and traffic disruption will be seen.",
            "title": "Offline Survivability Mode",
            "x-displayname": "Offline Survivability Mode",
            "x-ves-oneof-field-offline_survivability_mode_choice": "[\"enable_offline_survivability_mode\",\"no_offline_survivability_mode\"]",
            "x-ves-proto-message": "ves.io.schema.views.OfflineSurvivabilityModeType",
            "properties": {
                "enable_offline_survivability_mode": {
                    "description": "Exclusive with [no_offline_survivability_mode]\n",
                    "title": "Enable Offline Survivability Mode",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enabled"
                },
                "no_offline_survivability_mode": {
                    "description": "Exclusive with [enable_offline_survivability_mode]\n",
                    "title": "Disable Offline Survivability Mode",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                }
            }
        },
        "viewsOperatingSystemType": {
            "type": "object",
            "description": "Select the F5XC Operating System Version for the site. By default, latest available OS Version will be used.\nRefer to release notes to find required released OS versions.",
            "title": "Operating System Version",
            "x-displayname": "Operating System Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-operating_system_version_choice": "[\"default_os_version\",\"operating_system_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.OperatingSystemType",
            "properties": {
                "default_os_version": {
                    "description": "Exclusive with [operating_system_version]\n Will assign latest available OS version",
                    "title": "Default OS Version",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Latest OS Version"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": "Exclusive with [default_os_version]\n Specify a OS version to be used e.g. 9.2024.6.\n\nExample: - \"9.2024.6\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "Operating System Version",
                    "maxLength": 20,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "9.2024.6",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                }
            }
        },
        "viewsPerformanceEnhancementModeType": {
            "type": "object",
            "description": "x-required\nOptimize the site for L3 or L7 traffic processing. L7 optimized is the default.",
            "title": "Performance Enhancement Choice",
            "x-displayname": "Performance Enhancement Mode",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"perf_mode_l3_enhanced\",\"perf_mode_l7_enhanced\"]",
            "x-ves-proto-message": "ves.io.schema.views.PerformanceEnhancementModeType",
            "properties": {
                "perf_mode_l3_enhanced": {
                    "description": "Exclusive with [perf_mode_l7_enhanced]\n Site optimized for L3 traffic processing",
                    "title": "L3 Mode Enhanced Performance",
                    "$ref": "#/definitions/viewsL3PerformanceEnhancementType",
                    "x-displayname": "L3 Enhanced"
                },
                "perf_mode_l7_enhanced": {
                    "description": "Exclusive with [perf_mode_l3_enhanced]\n Site optimized for L7 traffic processing",
                    "title": "Default Performance Mode",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "L7 Enhanced"
                }
            }
        },
        "viewsRegionalEdgeSelection": {
            "type": "object",
            "description": "Selection criteria to connect the site with F5 Distributed Cloud Regional Edge(s).",
            "title": "Regional Edge Selection",
            "x-displayname": "Regional Edge Selection",
            "x-ves-oneof-field-re_selection_choice": "[\"geo_proximity\",\"specific_re\"]",
            "x-ves-proto-message": "ves.io.schema.views.RegionalEdgeSelection",
            "properties": {
                "geo_proximity": {
                    "description": "Exclusive with [specific_re]\n Select REs in closest proximity to the site based on the public IP address of the control nodes of the site.",
                    "title": "Based on Geo-proximity",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Based on Geo-proximity"
                },
                "specific_re": {
                    "description": "Exclusive with [geo_proximity]\n Select specific REs. This is useful when a site needs to deterministically connect to a set of REs. A site will always be connected to 2 REs.",
                    "title": "Specific Geography",
                    "$ref": "#/definitions/viewsSpecificRE",
                    "x-displayname": "Specific Geography"
                }
            }
        },
        "viewsSpecificRE": {
            "type": "object",
            "description": "Select specific REs. This is useful when a site needs to deterministically connect to a set of REs. A site will always be connected to 2 REs.",
            "title": "Specific RE",
            "x-displayname": "Specific RE",
            "x-ves-proto-message": "ves.io.schema.views.SpecificRE",
            "properties": {
                "primary_re": {
                    "type": "string",
                    "description": " Select primary RE for this site.\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Primary RE Geography",
                    "minLength": 1,
                    "maxLength": 64,
                    "x-displayname": "Primary RE Geography",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                }
            }
        },
        "viewsVolterraSoftwareType": {
            "type": "object",
            "description": "Select the F5XC Software Version for the site. By default, latest available F5XC Software Version will be used.\nRefer to release notes to find required released SW versions.",
            "title": "F5XC Software Version",
            "x-displayname": "F5XC Software Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-volterra_sw_version_choice": "[\"default_sw_version\",\"volterra_software_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.VolterraSoftwareType",
            "properties": {
                "default_sw_version": {
                    "description": "Exclusive with [volterra_software_version]\n Will assign latest available F5XC Software Version",
                    "title": "Default SW Version",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Latest SW Version"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": "Exclusive with [default_sw_version]\n Specify a F5XC Software Version to be used e.g. crt-20210329-1002.\n\nExample: - \"crt-20210329-1002\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "F5XC Software Version",
                    "maxLength": 20,
                    "x-displayname": "F5XC Software Version",
                    "x-ves-example": "crt-20210329-1002",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                }
            }
        },
        "viewssecuremesh_site_v2EthernetInterfaceType": {
            "type": "object",
            "title": "Ethernet Interface",
            "x-displayname": "Ethernet Interface",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.EthernetInterfaceType",
            "properties": {
                "device": {
                    "type": "string",
                    "description": " Select an Ethernet device from the discovered interfaces to configure.\n Once configured, this interface will be part of this sites dataplane and can participate in the networking services configured on this site.\n\nExample: - \"ver1\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "Device",
                    "minLength": 1,
                    "maxLength": 64,
                    "x-displayname": "Ethernet Device",
                    "x-ves-example": "ver1",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "mac": {
                    "type": "string",
                    "description": "\n\nExample: - \"01:10:20:0a:bb:1c\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.mac: true\n",
                    "title": "Mac Address",
                    "x-displayname": "MAC Address",
                    "x-ves-example": "01:10:20:0a:bb:1c",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.mac": "true"
                    }
                }
            }
        },
        "viewssecuremesh_site_v2GlobalSpecType": {
            "type": "object",
            "description": "Shape of the Secure Mesh site specification",
            "title": "GlobalSpecType",
            "x-displayname": "Global Specification",
            "x-ves-oneof-field-blocked_services_choice": "[\"block_all_services\",\"blocked_services\"]",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_enhanced_firewall_policies\",\"no_network_policy\"]",
            "x-ves-oneof-field-node_ha_choice": "[\"disable_ha\",\"enable_ha\"]",
            "x-ves-oneof-field-provider_choice": "[\"aws\",\"azure\",\"baremetal\",\"gcp\",\"kvm\",\"oci\",\"rseries\",\"vmware\"]",
            "x-ves-oneof-field-s2s_connectivity_sli_choice": "[\"dc_cluster_group_sli\",\"no_s2s_connectivity_sli\"]",
            "x-ves-oneof-field-s2s_connectivity_slo_choice": "[\"dc_cluster_group_slo\",\"no_s2s_connectivity_slo\",\"site_mesh_group_on_slo\"]",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.GlobalSpecType",
            "properties": {
                "active_enhanced_firewall_policies": {
                    "description": "Exclusive with [no_network_policy]\n Enable Network Firewall for this site. Traffic will be processed in the order that Network Firewall Policies are added.",
                    "title": "Manage Enhanced Firewall Policy",
                    "$ref": "#/definitions/network_firewallActiveEnhancedFirewallPoliciesType",
                    "x-displayname": "Active Enhanced Firewall Policies"
                },
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [no_forward_proxy]\n Enable Forward Proxy for this site. Traffic will be processed in the order that Forward Proxy Policies are added.",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/network_firewallActiveForwardProxyPoliciesType",
                    "x-displayname": "Enable Forward Proxy and Manage Policies"
                },
                "aws": {
                    "description": "Exclusive with [azure baremetal gcp kvm oci rseries vmware]\n",
                    "title": "AWS",
                    "$ref": "#/definitions/securemesh_site_v2AWSProviderType",
                    "x-displayname": "AWS"
                },
                "azure": {
                    "description": "Exclusive with [aws baremetal gcp kvm oci rseries vmware]\n",
                    "title": "Azure",
                    "$ref": "#/definitions/securemesh_site_v2AzureProviderType",
                    "x-displayname": "Azure"
                },
                "baremetal": {
                    "description": "Exclusive with [aws azure gcp kvm oci rseries vmware]\n",
                    "title": "Baremetal",
                    "$ref": "#/definitions/securemesh_site_v2BaremetalProviderType",
                    "x-displayname": "Baremetal"
                },
                "block_all_services": {
                    "description": "Exclusive with [blocked_services]\n Enable WebUI, SSH and DNS on all nodes in this site.",
                    "title": "Enable all Node Local Services",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enable all Node Local Services"
                },
                "blocked_services": {
                    "description": "Exclusive with [block_all_services]\n Disable node local services on all nodes in this site.\n It is recommended to disable node local services after the nodes register or after configuration/deugging is complete.",
                    "title": "Disable Node Local Services",
                    "$ref": "#/definitions/fleetBlockedServicesListType",
                    "x-displayname": "Disable Node Local Services"
                },
                "dc_cluster_group_sli": {
                    "description": "Exclusive with [no_s2s_connectivity_sli]\n Use a DC Cluster Group to connect to other sites.",
                    "title": "Member of DC cluster Group",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC Cluster Group"
                },
                "dc_cluster_group_slo": {
                    "description": "Exclusive with [no_s2s_connectivity_slo site_mesh_group_on_slo]\n Use a DC Cluster Group to connect to other sites.",
                    "title": "Member of DC cluster Group",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC Cluster Group"
                },
                "disable_ha": {
                    "description": "Exclusive with [enable_ha]\n",
                    "title": "Disable",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable"
                },
                "enable_ha": {
                    "description": "Exclusive with [disable_ha]\n",
                    "title": "Enable",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Enable"
                },
                "gcp": {
                    "description": "Exclusive with [aws azure baremetal kvm oci rseries vmware]\n",
                    "title": "GCP",
                    "$ref": "#/definitions/securemesh_site_v2GCPProviderType",
                    "x-displayname": "GCP"
                },
                "kvm": {
                    "description": "Exclusive with [aws azure baremetal gcp oci rseries vmware]\n",
                    "title": "KVM",
                    "$ref": "#/definitions/securemesh_site_v2KVMProviderType",
                    "x-displayname": "KVM"
                },
                "load_balancing": {
                    "description": " This section contains settings on the site that relate to Load Balancing functionality.",
                    "title": "Load Balancing Settings",
                    "$ref": "#/definitions/securemesh_site_v2LoadBalancingSettingsType",
                    "x-displayname": "Load Balancing Settings"
                },
                "local_vrf": {
                    "description": " There can be two local VRFs on each site.\n The Site Local Outside (SLO) local VRF is used to connect WAN side workloads to this site and to connect the site to F5 Distributed Cloud for management. All sites are required to have an SLO local VRF.\n The Site Local Inside (SLI) local VRF is used to connect LAN side workloads to this site. SLI local VRF is optional.",
                    "title": "Local VRF Settings",
                    "$ref": "#/definitions/securemesh_site_v2LocalVRFSettingType",
                    "x-displayname": "Local VRF Settings"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "title": "Disable Logs Streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n",
                    "title": "Disable Logs Receiver",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies]\n Disable Forward Proxy for this site.",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Forward Proxy"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_enhanced_firewall_policies]\n Disable Network Firewall for this site.",
                    "title": "Do Not Manage Firewall Policy",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disable Firewall Policy"
                },
                "no_s2s_connectivity_sli": {
                    "description": "Exclusive with [dc_cluster_group_sli]\n",
                    "title": "Not Connected on SLI",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "no_s2s_connectivity_slo": {
                    "description": "Exclusive with [dc_cluster_group_slo site_mesh_group_on_slo]\n",
                    "title": "Not Connected on SLO",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Disabled"
                },
                "oci": {
                    "description": "Exclusive with [aws azure baremetal gcp kvm rseries vmware]\n",
                    "title": "OCI",
                    "$ref": "#/definitions/securemesh_site_v2OCIProviderType",
                    "x-displayname": "OCI"
                },
                "offline_survivability_mode": {
                    "description": " Offline Survivability allows the Site to continue functioning normally without traffic loss during periods of connectivity loss to the Regional Edge (RE) or the Global Controller (GC).\n When this feature is enabled, a site can continue to function as is with existing configuration for upto 7 days, even when the site is offline.\n The certificates needed to keep the services running on this site are signed using a local CA.\n Secrets would also be cached locally to handle any connectivity loss.\n When the mode is toggled, services will restart and traffic disruption will be seen.",
                    "title": "Offline Survivability Mode",
                    "$ref": "#/definitions/viewsOfflineSurvivabilityModeType",
                    "x-displayname": "Offline Survivability Mode"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": " Select the Operating System version for the site. By default, latest available Operating System version will be used.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Operating System Version",
                    "maxLength": 256,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "performance_enhancement_mode": {
                    "description": " Optimize the site for L3 or L7 traffic processing. By default, the site is optimized for L7 traffic processing.",
                    "title": "Performance Enhancement Choice",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "re_select": {
                    "description": " Selection criteria to connect the site with F5 Distributed Cloud Regional Edge(s).",
                    "title": "Regional Edge Selection",
                    "$ref": "#/definitions/viewsRegionalEdgeSelection",
                    "x-displayname": "Regional Edge Selection"
                },
                "rseries": {
                    "description": "Exclusive with [aws azure baremetal gcp kvm oci vmware]\n",
                    "title": "F5 rSeries",
                    "$ref": "#/definitions/securemesh_site_v2RSeriesProviderType",
                    "x-displayname": "F5 rSeries"
                },
                "site_mesh_group_on_slo": {
                    "description": "Exclusive with [dc_cluster_group_slo no_s2s_connectivity_slo]\n Use a Site Mesh Group to connect to other sites.",
                    "title": "Site Mesh Group",
                    "$ref": "#/definitions/securemesh_site_v2SiteMeshGroupType",
                    "x-displayname": "Site Mesh Group"
                },
                "site_state": {
                    "description": " State of the site deployment",
                    "title": "SiteState",
                    "$ref": "#/definitions/siteSiteState",
                    "x-displayname": "SiteState"
                },
                "software_settings": {
                    "description": " Select OS and Software version for the site. All nodes in the site will run the same OS and Software version. These settings cannot be changed after the site is created.",
                    "title": "F5XC Software Settings",
                    "$ref": "#/definitions/securemesh_site_v2SoftwareSettingsType",
                    "x-displayname": "F5XC Software Settings"
                },
                "tunnel_dead_timeout": {
                    "type": "integer",
                    "description": " Time interval, in millisec, within which any ipsec / ssl connection from the site going down is detected.\n When not set (== 0), a default value of 10000 msec will be used.\n\nExample: - \"0\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 180000\n",
                    "title": "tunnel_dead_timeout",
                    "format": "int64",
                    "x-displayname": "Tunnel Dead Timeout (msec)",
                    "x-ves-example": "0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "180000"
                    }
                },
                "tunnel_type": {
                    "description": " Select the type of tunnel to be used for traffic between the site and REs. By default, IPsec will be preferred with SSL as backup.",
                    "title": "Site to site tunnel type",
                    "$ref": "#/definitions/schemaSiteToSiteTunnelType",
                    "x-displayname": "Tunnel Type"
                },
                "upgrade_settings": {
                    "description": " Specify how a site will be upgraded.",
                    "title": "Upgrade Settings",
                    "$ref": "#/definitions/securemesh_site_v2UpgradeSettingsType",
                    "x-displayname": "Upgrade Settings"
                },
                "vmware": {
                    "description": "Exclusive with [aws azure baremetal gcp kvm oci rseries]\n",
                    "title": "VMWare",
                    "$ref": "#/definitions/securemesh_site_v2VMwareProviderType",
                    "x-displayname": "VMWare"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": " Select the F5XC Software Version for the site. By default, latest available F5XC Software Version will be used.\n Refer to release notes to find required released SW versions.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Software Version",
                    "maxLength": 256,
                    "x-displayname": "Software Version",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                }
            }
        },
        "viewssecuremesh_site_v2Node": {
            "type": "object",
            "description": "Node definition",
            "title": "Node",
            "x-displayname": "Node",
            "x-ves-proto-message": "ves.io.schema.views.securemesh_site_v2.Node",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname for this Node\n\nExample: - \"Control\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Hostname",
                    "maxLength": 256,
                    "x-displayname": "Hostname",
                    "x-ves-example": "Control",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "interface_list": {
                    "type": "array",
                    "description": " Manage interfaces belonging to this node\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Interfaces",
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/securemesh_site_v2Interface"
                    },
                    "x-displayname": "Interfaces",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "public_ip": {
                    "type": "string",
                    "description": " Public IP for this Node\n\nExample: - \"1.1.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Public IP",
                    "maxLength": 256,
                    "x-displayname": "Public IP",
                    "x-ves-example": "1.1.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "type": {
                    "type": "string",
                    "description": " Type for this Node, can be Control or Worker\n\nExample: - \"Control\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Control\\\",\\\"Worker\\\"]\n",
                    "title": "Type",
                    "x-displayname": "Type",
                    "x-ves-example": "Control",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Control\\\",\\\"Worker\\\"]"
                    }
                }
            }
        },
        "virtual_networkStaticRouteViewType": {
            "type": "object",
            "description": "Defines a static route, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static Route",
            "x-displayname": "Static Route",
            "x-ves-oneof-field-next_hop_choice": "[\"default_gateway\",\"interface\",\"ip_address\"]",
            "x-ves-proto-message": "ves.io.schema.virtual_network.StaticRouteViewType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of attributes that control forwarding, dynamic routing and control plane (host) reachability\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Attributes",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "default_gateway": {
                    "description": "Exclusive with [interface ip_address]\n Traffic matching the ip prefixes is sent to the default gateway",
                    "title": "Default Gateway",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Default Gateway"
                },
                "interface": {
                    "description": "Exclusive with [default_gateway ip_address]\n Traffic matching the ip prefixes is sent to this interface",
                    "title": "Interface",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Interface"
                },
                "ip_address": {
                    "type": "string",
                    "description": "Exclusive with [default_gateway interface]\n Traffic matching the ip prefixes is sent to this IP Address\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "IP Address",
                    "x-displayname": "IP Address",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "ip_prefixes": {
                    "type": "array",
                    "description": " List of route prefixes that have common next hop and attributes\n\nExample: - \"10.0.0.0/24\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ipv4_prefix: true\n  ves.io.schema.rules.repeated.max_items: 256\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "IP Prefixes",
                    "minItems": 1,
                    "maxItems": 256,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Prefixes",
                    "x-ves-example": "10.0.0.0/24",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "256",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "virtual_networkStaticV6RouteViewType": {
            "type": "object",
            "description": "Defines a static route of IPv6 prefixes, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static IPv6 Route",
            "x-displayname": "Static IPv6 Route",
            "x-ves-oneof-field-next_hop_choice": "[\"default_gateway\",\"interface\",\"ip_address\"]",
            "x-ves-proto-message": "ves.io.schema.virtual_network.StaticV6RouteViewType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of attributes that control forwarding, dynamic routing and control plane (host) reachability\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Attributes",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "default_gateway": {
                    "description": "Exclusive with [interface ip_address]\n Traffic matching the ip prefixes is sent to the default gateway",
                    "title": "Default Gateway",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "Default Gateway"
                },
                "interface": {
                    "description": "Exclusive with [default_gateway ip_address]\n Traffic matching the ip prefixes is sent to this interface",
                    "title": "Interface",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Interface"
                },
                "ip_address": {
                    "type": "string",
                    "description": "Exclusive with [default_gateway interface]\n Traffic matching the ip prefixes is sent to this IP Address\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "IP Address",
                    "x-displayname": "IP Address",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                },
                "ip_prefixes": {
                    "type": "array",
                    "description": " List of IPv6 route prefixes that have common next hop and attributes\n\nExample: - \"2001::/92\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ipv6_prefix: true\n  ves.io.schema.rules.repeated.max_items: 256\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "IPv6 Prefixes",
                    "minItems": 1,
                    "maxItems": 256,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IPv6 Prefixes",
                    "x-ves-example": "2001::/92",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ipv6_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "256",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "virtual_networkStaticV6RoutesListType": {
            "type": "object",
            "description": "List of IPv6 static routes",
            "title": "Static IPv6 Routes List",
            "x-displayname": "Static IPv6 Routes List",
            "x-ves-proto-message": "ves.io.schema.virtual_network.StaticV6RoutesListType",
            "properties": {
                "static_routes": {
                    "type": "array",
                    "description": " List of IPv6 static routes\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "static_routes",
                    "minItems": 1,
                    "maxItems": 16,
                    "items": {
                        "$ref": "#/definitions/virtual_networkStaticV6RouteViewType"
                    },
                    "x-displayname": "Static IPv6 Routes",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        }
    },
    "x-displayname": "",
    "x-stream-definitions": {
        "crudapiObjectListRsp": {
            "properties": {
                "error": {
                    "$ref": "#/definitions/runtimeStreamError"
                },
                "result": {
                    "$ref": "#/definitions/crudapiObjectListRsp"
                }
            },
            "title": "Stream result of crudapiObjectListRsp",
            "type": "object"
        }
    },
    "x-ves-proto-file": "ves.io/schema/views/securemesh_site_v2/crudapi/api.proto"
}`

//
// Copyright (c) 2018 Volterra, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.
//

package crudapi

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	object "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views/http_loadbalancer"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// augment methods on Object<Oper>Req from api.pb.go

// EntryConverter
func (r *ObjectCreateReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectCreateReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// create setters in object from request for oneof fields

// EntryConverter
func (r *ObjectReplaceReq) FromEntry(e db.Entry) {
	r.FromObject(e)
}

func (r *ObjectReplaceReq) ToEntry(e db.Entry) {
	r.ToObject(e)
}

// create setters in object from request for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// create setters in response from object for oneof fields

// CLIENT side

func NewObjectCreateReq(e db.Entry) (*ObjectCreateReq, error) {
	r := &ObjectCreateReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewObjectReplaceReq(e db.Entry) (*ObjectReplaceReq, error) {
	r := &ObjectReplaceReq{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	uid, err := e.Key()
	if err != nil {
		// See if uid can be got from Metadata.Uid
		obj := e.(*object.DBObject)
		uid = obj.GetMetadata().GetUid()

	}
	r.ObjectUid = uid
	return r, nil
}

func NewObjectGetReq(uid string, opts ...server.CRUDCallOpt) *ObjectGetReq {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}

	req := &ObjectGetReq{ObjectUid: uid, AllBackrefs: ccOpts.AllBR, BackrefTypes: ccOpts.TypesBR}
	req.IncludeReferredId = ccOpts.IncludeReferredID
	return req
}

func NewObjectListReq(opts ...server.CRUDCallOpt) *ObjectListReq {
	return &ObjectListReq{}
}

func NewObjectDeleteReq(uid string) *ObjectDeleteReq {
	return &ObjectDeleteReq{ObjectUid: uid}
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Getting from grpcClient")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp == nil {
		return nil, errors.ErrOrNil(merr)
	}
	respDetail := server.GetResponse{}
	respDetail.Entry = object.NewDBObject(nil)
	gRsp.ToObject(respDetail.Entry)
	respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	return &respDetail, errors.ErrOrNil(merr)

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	req := NewObjectListReq()
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields

	req.IncludeReferredId = cco.IncludeReferredID
	if cco.OutResourceVersion != nil {
		req.ResourceVersion = true
	}
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	return rsp, err
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {

	req := NewObjectListReq()
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields

	req.IncludeReferredId = cco.IncludeReferredID
	stream, err := c.grpcClient.ListStream(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Listing with grpc client")
	}
	lc := &crudAPIGrpcListStreamClient{stream}
	return lc, nil

}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req := NewObjectDeleteReq(key)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

type crudAPIGrpcListStreamClient struct {
	stream API_ListStreamClient
}

func (lc *crudAPIGrpcListStreamClient) RecvIDs() ([]string, error) {
	idSet := []string{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return idSet, err
	}
	for _, li := range rsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err
}

func (lc *crudAPIGrpcListStreamClient) RecvItems() ([]server.ListItem, error) {
	sliSet := []server.ListItem{}
	rsp, err := lc.stream.Recv()
	if rsp == nil {
		return sliSet, err
	}
	for _, li := range rsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.http_loadbalancer.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)
	jsn, err := req.ToJSON()
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Create")
	}

	hReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &ObjectCreateRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	o := object.NewDBObject(nil)
	rspo.ToObject(o)
	return o, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	rReq, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if e != nil && cco.ReplaceJSONReq != "" {
		return fmt.Errorf("Both entry and WithReplaceJSONRequest() specified")
	}
	if e == nil && cco.ReplaceJSONReq == "" {
		return fmt.Errorf("Neither entry nor WithReplaceJSONRequest() specified")
	}

	var jsn, objUID string
	if e != nil {
		rReq.ResourceVersion = cco.ResourceVersion
		jsn, err = rReq.ToJSON()
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		objUID = rReq.ObjectUid
	} else {
		jsn = cco.ReplaceJSONReq
		reqMap := make(map[string]interface{})
		if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
			return errors.Wrapf(err, "Unmarshaling ReplaceJSONReq")
		}
		md, ok := reqMap["metadata"].(map[string]interface{})
		if !ok {
			return fmt.Errorf("ReplaceJSONReq does not have 'metadata'")
		}
		if val, ok := md["uid"].(string); ok {
			objUID = val
		}
	}

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.http_loadbalancer.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, objUID)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	rspo := &ObjectReplaceRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	req := NewObjectGetReq(key, opts...)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.http_loadbalancer.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, req.ObjectUid)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &ObjectGetRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		o := object.NewDBObject(nil)
		gRsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.http_loadbalancer.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Objects", c.baseURL, t)

	hReq, err := http.NewRequest(http.MethodGet, url, nil)
	if err != nil {
		return nil, err
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	for _, fVal := range cco.TenantFilter {
		q.Add("tenant_filter", fVal)
	}
	for _, fVal := range cco.NamespaceFilter {
		q.Add("namespace_filter", fVal)
	}
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}

	if cco.IncludeReferredID {
		q.Add("include_referred_id", "true")
	}

	if cco.OutResourceVersion != nil {
		q.Add("resource_version", "true")
	}
	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}
	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ObjectListRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.GetMetadata().GetResourceVersion()
	}
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq := NewObjectDeleteReq(key)

	// convert ves.io.examplesvc.objectone.crudapi to ves.io.examplesvc.objectone
	sl := strings.Split("ves.io.schema.views.http_loadbalancer.crudapi", ".")
	t := strings.Join(sl[:len(sl)-1], ".")
	url := fmt.Sprintf("%s/%s/Object/%s", c.baseURL, t, dReq.ObjectUid)

	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}

	rspo := &ObjectDeleteRsp{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	crcl := &crudAPIRestClient{baseURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	crudCl *crudAPIInprocClient
}

func (c *APIInprocClient) Create(ctx context.Context, req *ObjectCreateReq, opts ...grpc.CallOption) (*ObjectCreateRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	return oah.Create(ctx, req)
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ObjectReplaceReq, opts ...grpc.CallOption) (*ObjectReplaceRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	return oah.Replace(ctx, req)
}

func (c *APIInprocClient) Get(ctx context.Context, req *ObjectGetReq, opts ...grpc.CallOption) (*ObjectGetRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	return oah.Get(ctx, req)
}

func (c *APIInprocClient) List(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (*ObjectListRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	return oah.List(ctx, req)
}

func (c *APIInprocClient) ListStream(ctx context.Context, req *ObjectListReq, opts ...grpc.CallOption) (API_ListStreamClient, error) {
	return nil, fmt.Errorf("ListStream Not implemented")
}

func (c *APIInprocClient) Delete(ctx context.Context, req *ObjectDeleteReq, opts ...grpc.CallOption) (*ObjectDeleteRsp, error) {
	ah := c.crudCl.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	return oah.Delete(ctx, req)
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	crudCl := newCRUDAPIInprocClient(svc)
	return &APIInprocClient{crudCl}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	svc svcfw.Service
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewObjectCreateReq(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}

	rsp, err := oah.Create(ctx, req)
	if rsp != nil {
		if cco.OutCallResponse != nil {
			cco.OutCallResponse.ProtoMsg = rsp
		}
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	req, err := NewObjectReplaceReq(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := oah.Replace(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*ObjectGetRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req := NewObjectGetReq(key, opts...)
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	rsp, err := c.GetRaw(ctx, key, opts...)
	if rsp != nil {
		o := object.NewDBObject(nil)
		rsp.ToObject(o)
		return o, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	var merr *multierror.Error
	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	if gRsp != nil {
		respDetail.Entry = object.NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		respDetail.BackRefs, err = gRsp.GetBackrefs(nef)
		if err != nil {
			merr = multierror.Append(merr, err)
		}
		return &respDetail, errors.ErrOrNil(merr)
	}

	return nil, errors.ErrOrNil(merr)

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetObjectUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ObjectListRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return nil, fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewObjectListReq()
	req.TenantFilter = cco.TenantFilter
	req.NamespaceFilter = cco.NamespaceFilter
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	if cco.OutResourceVersion != nil {
		req.ResourceVersion = true
	}
	rsp, err := oah.List(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.GetMetadata().GetResourceVersion()
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	ah := c.svc.GetAPIHandler("ves.io.schema.views.http_loadbalancer.crudapi.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		return fmt.Errorf("No CRUD Server for ves.io.schema.views.http_loadbalancer.crudapi")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewObjectDeleteReq(key)
	rsp, err := oah.Delete(ctx, req)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	crcl := &crudAPIInprocClient{svc: svc}
	return crcl
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.views.http_loadbalancer.crudapi.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.views.http_loadbalancer.crudapi.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *ObjectCreateReq) (*ObjectCreateRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.http_loadbalancer.crudapi.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private create request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.http_loadbalancer.crudapi.API.Create"), zap.Error(err))
			}
		}
	}
	obj := object.NewDBObject(nil)
	req.ToObject(obj)
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}

	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Create")).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Create with NewObjectCreateRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ObjectReplaceReq) (*ObjectReplaceRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		return nil, fmt.Errorf("Nil spec in Replace Request")
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.http_loadbalancer.crudapi.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private replace request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.http_loadbalancer.crudapi.API.Replace"), zap.Error(err))
			}
		}
	}
	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Replace")).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Replace with NewObjectReplaceRsp").Error())
	}
	return rsp, nil

}

func (s *APISrv) Get(ctx context.Context, req *ObjectGetReq) (*ObjectGetRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.http_loadbalancer.crudapi.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private get request")
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceGetRequest{IsPublic: false, UID: key, AllBackRefs: req.AllBackrefs, BackRefTypes: req.BackrefTypes}
	rsrcReq.OmitReferredID = !req.IncludeReferredId
	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Get")).Err()
	}
	rsp, err := NewObjectGetRsp(req, rsrcRsp)
	if err != nil {
		return nil, status.Error(codes.ResourceExhausted, errors.Wrap(err, "Get with NewObjectGetRsp").Error())
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ObjectListReq) (*ObjectListRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.http_loadbalancer.crudapi.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				return nil, errors.Wrap(err, "Validating private list request")
			}
		}
	}
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:       req.TenantFilter,
		NamespaceFilter:    req.NamespaceFilter,
		LabelFilter:        req.LabelFilter,
		RspStreamed:        false,
		GetResourceVersion: req.ResourceVersion,
		OmitReferredID:     !req.IncludeReferredId,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "List"))
	}
	rsp, err := NewObjectListRsp(req, rsrcRsp.Items)
	if err != nil {
		merr = multierror.Append(merr, err)
	}
	rsp.Metadata.ResourceVersion = rsrcRsp.ResourceVersion
	return rsp, errors.ErrOrNil(merr)
}

func (s *APISrv) ListStream(req *ObjectListReq, stream API_ListStreamServer) error {
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		TenantFilter:    req.TenantFilter,
		NamespaceFilter: req.NamespaceFilter,
		LabelFilter:     req.LabelFilter,
		RspStreamed:     true,
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(stream.Context(), rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListStream"))
	}
	streamSvr := &crudAPIListStreamServer{stream}
	for item := range rsrcRsp.ItemsCh {
		if err := streamSvr.SendResource(req, item); err != nil {
			merr = multierror.Append(merr, errors.Wrap(err, "Stream-Send"))
			continue
		}
	}
	return errors.ErrOrNil(merr)
}

func (s *APISrv) Delete(ctx context.Context, req *ObjectDeleteReq) (*ObjectDeleteRsp, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.http_loadbalancer.crudapi.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					return nil, errors.Wrap(err, "Validating private delete request")
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.http_loadbalancer.crudapi.API.Delete"), zap.Error(err))
			}
		}
	}
	key := req.ToUid()
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		return nil, server.GRPCStatusFromError(errors.Wrap(err, "Delete")).Err()
	}
	return &ObjectDeleteRsp{}, nil
}

// Assert that APISrv implements both the generated gRPC APIServer interface and the
// stdlib CRUDServer interface
var (
	_ APIServer = &APISrv{}
)

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.crudapi.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.crudapi.API", strings.Join(sl[:len(sl)-1], "."))
}

// implements both stdlib.server.ListStreamServer and API_ListStreamServer
type crudAPIListStreamServer struct {
	stream API_ListStreamServer
}

func (lc *crudAPIListStreamServer) Context() context.Context {
	return lc.stream.Context()
}

func (lc *crudAPIListStreamServer) SendResource(r *ObjectListReq, item *server.ResourceListResponseItem) error {
	lRsp, err := NewObjectListRsp(r, []*server.ResourceListResponseItem{item})
	if err != nil {
		return errors.Wrap(err, "SendResource with NewObjectListRsp")
	}
	if err := lc.Send(lRsp); err != nil {
		return errors.Wrap(err, "ListStreamServer.SendResource()")
	}
	return nil
}

func (lc *crudAPIListStreamServer) Send(o *ObjectListRsp) error {
	if err := lc.stream.Send(o); err != nil {
		return errors.Wrap(err, "ListStreamServer.Send()")
	}
	return nil
}

// Implement GetReq interface
func (r *ObjectGetReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectGetReq) GetBackrefParam() (bool, []string) {
	return r.AllBackrefs, r.BackrefTypes
}

// Implement DeleteReq interface
func (r *ObjectDeleteReq) ToUid() string {
	return r.ObjectUid
}

func (r *ObjectCreateRsp) Key() string {
	return r.ObjectUid
}

func (r *ObjectGetRsp) GetBackrefs(ef db.NewEntryFunc) ([]db.Entry, error) {
	brEnts := []db.Entry{}
	bRefs := r.GetEntBackrefs()
	for _, br := range bRefs {
		// convert schema.ves.io/ves.io.examplesvc.objectone.Object to ves.io.examplesvc.objectone.Object
		sl := strings.Split(br.TypeUrl, "/")
		ot := sl[len(sl)-1]
		ent, err := ef(ot, db.OpWithSerializedBytes(br.Value))
		if err != nil {
			return nil, errors.Wrap(err, "NewEntry")
		}
		brEnts = append(brEnts, ent)
	}

	return brEnts, nil
}

// Implement server.ListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjUid() string {
	return l.ObjectUid
}

// Implement server.SROListItem interface on ObjectListRspItem
func (l *ObjectListRspItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ObjectListRspItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ObjectListRspItem) GetObjName() string {
	return l.Name
}

func (l *ObjectListRspItem) GetObjLabels() map[string]string {
	return l.Labels
}

// New<oper>Rsp, New<oper>RspFromJSON
func NewObjectCreateRsp(e db.Entry) (*ObjectCreateRsp, error) {
	rspo := &ObjectCreateRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectCreateRsp")
	}
	key, err := e.Key()
	if err != nil {
		return nil, errors.Wrap(err, "CreateRsp getting Key()")
	}
	rspo.ObjectUid = key
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectReplaceRsp(e db.Entry) (*ObjectReplaceRsp, error) {
	rspo := &ObjectReplaceRsp{}
	switch e.(type) {
	case nil:
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("Entry not of type *object.DBObject in NewObjectReplaceRsp")
	}
	rspo.FromObject(o)
	return rspo, nil
}

func NewObjectGetRsp(r *ObjectGetReq, rsrcRsp *server.ResourceGetResponse) (*ObjectGetRsp, error) {
	rspo := &ObjectGetRsp{}
	e := rsrcRsp.Entry
	brEntries := rsrcRsp.BackRefs
	if e == nil {
		return rspo, nil
	}
	o, ok := e.(*object.DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *object.DBObject in NewObjectGetRsp")
	}
	rspo.ResourceVersion = rsrcRsp.ResourceVersion
	rspo.FromObject(o)
	// Backref
	getBackrefsFunc := func() ([]*google_protobuf.Any, error) {
		var merr *multierror.Error
		var entBackrefs []*google_protobuf.Any
		for _, brEnt := range brEntries {
			brSer, err := brEnt.MarshalBytes()
			if err != nil {
				merr = multierror.Append(merr, err)
				continue
			}
			entBackrefs = append(entBackrefs, &google_protobuf.Any{TypeUrl: "schema.ves.io/" + brEnt.Type(), Value: brSer})
		}
		return entBackrefs, errors.ErrOrNil(merr)
	}
	entBackrefs, err := getBackrefsFunc()
	if err != nil {
		return nil, err
	}
	rspo.EntBackrefs = entBackrefs
	d, err := o.GetDB()
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	statusObjs, err := object.FindObjectStatus(context.Background(), d, o.GetObjUid())
	if err != nil {
		return nil, errors.Wrap(err, "GetRsp")
	}
	rspo.Status = statusObjs
	return rspo, nil
}

func NewObjectListRsp(req *ObjectListReq, rsrcRspItems []*server.ResourceListResponseItem) (*ObjectListRsp, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ObjectListReq")
	}
	var errs error
	o := &ObjectListRsp{}
	o.Metadata = &ves_io_schema.ListMetaType{}
	o.Uids = []string{}
	o.Items = []*ObjectListRspItem{}
	for _, rsrcItem := range rsrcRspItems {
		if rsrcItem == nil {
			errs = multierror.Append(errs, fmt.Errorf("ResourceListResponseItem is nil"))
			continue
		}
		e := rsrcItem.Entry
		dbObj, ok := e.(*object.DBObject)
		if !ok {
			errs = multierror.Append(errs, fmt.Errorf("Expected %T, got %T: %v", &object.DBObject{}, e, e))
			continue
		}
		key, err := dbObj.Key()
		if err != nil {
			errs = multierror.Append(errs, errors.WithMessagef(err, "Key() %v FAILED", dbObj))
			continue
		}

		tenant := dbObj.GetSystemMetadata().GetTenant()
		namespace := dbObj.GetMetadata().GetNamespace()
		name := dbObj.GetMetadata().GetName()
		labels := dbObj.GetMetadata().GetLabels()

		// TODO: DEPRECATE setting to o.Uids
		o.Uids = append(o.Uids, key)

		item := &ObjectListRspItem{
			ObjectUid: key,
			Tenant:    tenant,
			Namespace: namespace,
			Name:      name,
			Labels:    labels,
		}
		if len(req.ReportFields) > 0 {
			item.FromObject(e)
		}
		o.Items = append(o.Items, item)
	}
	return o, errs
}

func NewObjectDeleteRsp(ec ErrorCode) (*ObjectDeleteRsp, error) {
	return &ObjectDeleteRsp{Err: ec}, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "ves.io/schema/views/http_loadbalancer/crudapi/api.proto",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": null,
    "paths": {
        "/ves.io.schema.views.http_loadbalancer/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Get"
            },
            "delete": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-List"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.List"
            },
            "post": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/Objects/stream": {
            "get": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.ListStream",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "$ref": "#/x-stream-definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-ListStream"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.ListStream"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/introspect/read/Object/{object_uid}": {
            "get": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectGetRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "all_backrefs",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "backref_types",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Get"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/introspect/read/Objects": {
            "get": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectListRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tenant_filter",
                        "description": "Filters executed on server-side - all types of filters ANDed\nTenants to scope the listing of objects - if empty all tenants considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "namespace_filter",
                        "description": "Namespaces to scope the listing of objects - if empty all namespaces considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "label_filter",
                        "description": "k8s style label selector expression.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "report_fields",
                        "description": "TODO: currently even if one specified implementation will return all fields.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "resource_version",
                        "description": "Get the resource_version associated with the list.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "include_referred_id",
                        "description": "in case of ref-by-name whether to report referred's uid.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-List"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.List"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/introspect/write/Object/{object_uid}": {
            "delete": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectDeleteRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Delete"
            },
            "put": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "object_uid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectReplaceReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Replace"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        },
        "/ves.io.schema.views.http_loadbalancer/introspect/write/Objects": {
            "post": {
                "operationId": "ves.io.schema.views.http_loadbalancer.crudapi.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/crudapiObjectCreateReq"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-http_loadbalancer-crudapi-API-Create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.http_loadbalancer.crudapi.API.Create"
            },
            "x-displayname": "",
            "x-ves-object-kind": "http_loadbalancer",
            "x-ves-object-type": "ves.io.schema.views.http_loadbalancer.Object",
            "x-ves-proto-service": "ves.io.schema.views.http_loadbalancer.crudapi.API",
            "x-ves-proto-service-type": "AUTO_CRUD"
        }
    },
    "definitions": {
        "crudapiErrorCode": {
            "type": "string",
            "enum": [
                "EOK",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN"
            ],
            "default": "EOK",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.http_loadbalancer.crudapi.ErrorCode"
        },
        "crudapiObjectCreateReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectCreateReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectCreateRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectCreateRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectDeleteRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectDeleteRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                }
            }
        },
        "crudapiObjectGetRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectGetRsp",
            "properties": {
                "ent_backrefs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerStatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "crudapiObjectListRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectListRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/crudapiObjectListRspItem"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/schemaListMetaType"
                },
                "uids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "crudapiObjectListRspItem": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectListRspItem",
            "properties": {
                "labels": {
                    "type": "object"
                },
                "metadata": {
                    "title": "If ObjectListReq has any specified report_fields, it will appear in below fields",
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "object_uid": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerStatusObject"
                    }
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "crudapiObjectReplaceReq": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectReplaceReq",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "object_uid": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                }
            }
        },
        "crudapiObjectReplaceRsp": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.crudapi.ObjectReplaceRsp",
            "properties": {
                "err": {
                    "$ref": "#/definitions/crudapiErrorCode"
                },
                "metadata": {
                    "$ref": "#/definitions/schemaObjectMetaType"
                },
                "spec": {
                    "$ref": "#/definitions/viewshttp_loadbalancerSpecType"
                },
                "system_metadata": {
                    "$ref": "#/definitions/schemaSystemObjectMetaType"
                }
            }
        },
        "http_loadbalancerAdvancedOptionsType": {
            "type": "object",
            "description": "This defines various options to define a route",
            "title": "Advanced options",
            "x-displayname": "Advanced Options",
            "x-ves-oneof-field-path_normalize_choice": "[\"disable_path_normalize\",\"enable_path_normalize\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.AdvancedOptionsType",
            "properties": {
                "buffer_policy": {
                    "description": " Some upstream applications are not capable of handling streamed data and high network latency.\n This config enables buffering the entire request before sending to upstream application. We can\n specify the maximum buffer size and buffer interval with this config.",
                    "title": "Buffer configuration for requests",
                    "$ref": "#/definitions/schemaBufferConfigType",
                    "x-displayname": "Buffer Policy"
                },
                "compression_params": {
                    "description": " Enables loadbalancer to compress dispatched data from an upstream service upon client request.\n Only GZIP compression is supported",
                    "title": "Compression configuration",
                    "$ref": "#/definitions/virtual_hostCompressionType",
                    "x-displayname": "Compression Parameters"
                },
                "custom_errors": {
                    "type": "object",
                    "description": "\n Map of integer error codes as keys and string values that can be used to provide custom\n http pages for each error code.\n Key of the map can be either response code class or HTTP Error code. Response code classes\n for key is configured as follows\n 3 -- for 3xx response code class\n 4 -- for 4xx response code class\n 5 -- for 5xx response code class\n Value of the map is string which represents custom HTTP responses.\n Specific response code takes preference when both response code and response code class\n matches for a request.",
                    "title": "Custom Errors",
                    "x-displayname": "Custom Error Responses"
                },
                "disable_default_error_pages": {
                    "type": "boolean",
                    "description": " Disable the use of default Volterra error pages.",
                    "title": "Disable the use of default Volterra error pages",
                    "format": "boolean",
                    "x-displayname": "Disable Default Error Pages"
                },
                "disable_path_normalize": {
                    "description": "Exclusive with [enable_path_normalize]\nx-displayName: \"Disable path normalization\"\nPath normalization is disabled",
                    "title": "Disable Path normalization",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_path_normalize": {
                    "description": "Exclusive with [disable_path_normalize]\nx-displayName: \"Enable path normalization\"\nPath normalization is enabled",
                    "title": "Enable Path normalization",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "idle_timeout": {
                    "type": "integer",
                    "description": " The amount of time that a stream can exist without upstream or downstream activity, in milliseconds.\n The stream is terminated with a HTTP 408 (Request Timeout) error code if no upstream response header has been\n received, otherwise the stream is reset.\n\nExample: - \"2000\"-",
                    "title": "Idle timeout",
                    "format": "int64",
                    "x-displayname": "Idle Timeout",
                    "x-ves-example": "2000"
                },
                "javascript_info": {
                    "description": " Custom JavaScript Configuration. Custom JavaScript code can be executed at various stages of request processing.",
                    "title": "javascript_info",
                    "$ref": "#/definitions/virtual_hostJavaScriptConfigType",
                    "x-displayname": "Javascript Info"
                },
                "jwt": {
                    "type": "array",
                    "description": " This HTTP filter specifies how to verify JSON Web Token (JWT). It will verify its signature,\n audiences and issuer",
                    "title": "JSON Web Token authentication (JWT) configuration for requests",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "JWT Config"
                },
                "max_request_header_size": {
                    "type": "integer",
                    "description": " The maximum request header size for downstream connections, in KiB.\n A HTTP 431 (Request Header Fields Too Large) error code is sent for requests that exceed this size.\n\n If multiple loadbalancers share the same advertise_policy, the highest value configured across all\n such loadbalancers is used for all the loadbalancers in question.",
                    "title": "Maximum request header size",
                    "format": "int64",
                    "x-displayname": "Maximum Request Header Size"
                },
                "request_headers_to_add": {
                    "type": "array",
                    "description": " Headers are key-value pairs to be added to HTTP request being routed towards upstream.\n Headers specified at this level are applied after headers from matched Route are applied",
                    "title": "Headers to add in request",
                    "items": {
                        "$ref": "#/definitions/schemaHeaderManipulationOptionType"
                    },
                    "x-displayname": "Add Request Headers"
                },
                "request_headers_to_remove": {
                    "type": "array",
                    "description": " List of keys of Headers to be removed from the HTTP request being sent towards upstream.\n\nExample: - \"host\"-",
                    "title": "Header to be removed from request",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Remove Request Headers",
                    "x-ves-example": "host"
                },
                "response_headers_to_add": {
                    "type": "array",
                    "description": " Headers are key-value pairs to be added to HTTP response being sent towards downstream.\n Headers specified at this level are applied after headers from matched Route are applied",
                    "title": "Headers to add in response",
                    "items": {
                        "$ref": "#/definitions/schemaHeaderManipulationOptionType"
                    },
                    "x-displayname": "Add Response Headers"
                },
                "response_headers_to_remove": {
                    "type": "array",
                    "description": " List of keys of Headers to be removed from the HTTP response being sent towards downstream.\n\nExample: - \"host\"-",
                    "title": "Header to be removed from response",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Remove Response Headers",
                    "x-ves-example": "host"
                }
            }
        },
        "http_loadbalancerChallengeRule": {
            "type": "object",
            "description": "Challenge rule",
            "title": "Challenge Rule",
            "x-displayname": "Challenge Rule",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ChallengeRule",
            "properties": {
                "metadata": {
                    "description": " Common attributes for the rule including name and description.\nRequired: YES",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaMessageMetaType",
                    "x-displayname": "Metadata",
                    "x-ves-required": "true"
                },
                "spec": {
                    "description": " Specification for the rule including match predicates and actions.\nRequired: YES",
                    "title": "spec",
                    "$ref": "#/definitions/service_policy_ruleChallengeRuleSpec",
                    "x-displayname": "Challenge Rule Specification",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerChallengeRuleList": {
            "type": "object",
            "description": "List of challenge rules to be used in policy based challenge",
            "title": "Challenge Rule List",
            "x-displayname": "Challenge Rule List",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ChallengeRuleList",
            "properties": {
                "rules": {
                    "type": "array",
                    "description": " Rules that specify the match conditions and challenge type to be launched.\n When a challenge type is selected to be always enabled,\n these rules can be used to disable challenge or launch a different challenge for requests that match the specified conditions",
                    "title": "Rules",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerChallengeRule"
                    },
                    "x-displayname": "Rules"
                }
            }
        },
        "http_loadbalancerCustomIpAllowedList": {
            "type": "object",
            "description": "IP Allowed list using existing ip_prefix_set objects",
            "title": "Custom IP Allowed List",
            "x-displayname": "Custom IP Allowed List",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.CustomIpAllowedList",
            "properties": {
                "rate_limiter_allowed_prefixes": {
                    "type": "array",
                    "description": " References to ip_prefix_set objects.\n Requests from source IP addresses that are covered by one of the allowed IP Prefixes are not subjected to rate limiting.\nRequired: YES",
                    "title": "rate_limiter_allowed_prefixes",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "List of IP Prefix Sets",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerDDoSClientSource": {
            "type": "object",
            "description": "DDoS Mitigation sources to be blocked",
            "title": "DDoSClientSource",
            "x-displayname": "DDoS Client Source Choice",
            "x-ves-displayorder": "1,3,5",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.DDoSClientSource",
            "properties": {
                "asn_list": {
                    "description": " Addresses that belong to the ASNs in the given list\n The ASN is obtained by performing a lookup for the source IPv4 Address in a GeoIP DB.",
                    "title": "asn_list",
                    "$ref": "#/definitions/policyAsnMatchList",
                    "x-displayname": "ASN List"
                },
                "country_list": {
                    "type": "array",
                    "description": " Sources that are located in one of the countries in the given list",
                    "title": "country_list",
                    "items": {
                        "$ref": "#/definitions/policyCountryCode"
                    },
                    "x-displayname": "Country List"
                },
                "tls_fingerprint_matcher": {
                    "description": " TLS JA3 fingerprints to be matched.\n The predicate evaluates to true if the TLS fingerprint matches any of the exact values or classes of known TLS fingerprints.",
                    "title": "TLS JA3 fingerprint matcher",
                    "$ref": "#/definitions/policyTlsFingerprintMatcherType",
                    "x-displayname": "TLS Fingerprint Matcher"
                }
            }
        },
        "http_loadbalancerDDoSMitigationRule": {
            "type": "object",
            "description": "DDoS Mitigation Rule specifies the sources to be blocked",
            "title": "DDoSMitigationRule",
            "x-displayname": "DDoS Mitigation Rule",
            "x-ves-displayorder": "1,2,7,10",
            "x-ves-oneof-field-mitigation_action": "[\"block\"]",
            "x-ves-oneof-field-mitigation_choice": "[\"ddos_client_source\",\"ip_prefix_list\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.DDoSMitigationRule",
            "properties": {
                "block": {
                    "description": "Exclusive with []\nx-displayName: \"Block User\"\nBlock user for a duration determined by the expiration time",
                    "title": "Block User",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "ddos_client_source": {
                    "description": "Exclusive with [ip_prefix_list]\nx-displayName: \"DDoS Client Source\"\nx-required\nCombination of Region, ASN and TLS Fingerprints",
                    "title": "ddos_client_source",
                    "$ref": "#/definitions/http_loadbalancerDDoSClientSource"
                },
                "expiration_timestamp": {
                    "type": "string",
                    "description": " The expiration_timestamp is the RFC 3339 format timestamp at which the containing rule is considered to be logically expired. The rule continues to exist in\n the configuration but is not applied anymore.\n\nExample: - \"2019-12-31:44:34.171543432Z\"-",
                    "title": "expiration timestamp",
                    "format": "date-time",
                    "x-displayname": "Expiration Timestamp",
                    "x-ves-example": "2019-12-31:44:34.171543432Z"
                },
                "ip_prefix_list": {
                    "description": "Exclusive with [ddos_client_source]\nx-displayName: \"IP Source\"\nx-required\nIPv4 prefix string.",
                    "title": "ip source",
                    "$ref": "#/definitions/policyPrefixMatchList"
                },
                "metadata": {
                    "description": " Common attributes for the rule including name and description.\nRequired: YES",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaMessageMetaType",
                    "x-displayname": "Metadata",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerDownstreamTlsValidationContext": {
            "type": "object",
            "description": "Validation context for downstream client TLS connections",
            "title": "DownstreamTlsValidationContext",
            "x-displayname": "Clients TLS validation context",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.DownstreamTlsValidationContext",
            "properties": {
                "trusted_ca_url": {
                    "type": "string",
                    "description": " The URL for a trust store\nRequired: YES",
                    "title": "trusted_ca_url",
                    "x-displayname": "Trusted CA",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerHashPolicyListType": {
            "type": "object",
            "description": "List of hash policy rules",
            "title": "Hash Policy List",
            "x-displayname": "Hash Policy List",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.HashPolicyListType",
            "properties": {
                "hash_policy": {
                    "type": "array",
                    "description": " Specifies a list of hash policies to use for ring hash load balancing. Each\n hash policy is evaluated individually and the combined result is used to\n route the request\nRequired: YES",
                    "title": "hash_policy",
                    "items": {
                        "$ref": "#/definitions/routeHashPolicyType"
                    },
                    "x-displayname": "Hash Policy",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerProxyTypeHttp": {
            "type": "object",
            "description": "Choice for selecting HTTP proxy",
            "title": "HTTP Choice",
            "x-displayname": "HTTP Choice",
            "x-ves-displayorder": "1",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ProxyTypeHttp",
            "properties": {
                "dns_volterra_managed": {
                    "type": "boolean",
                    "description": " DNS records for domains will be managed automatically by Volterra.\n This requires the domain to be delegated to Volterra using the Delegated Domain feature.",
                    "title": "Manage DNS Domain",
                    "format": "boolean",
                    "x-displayname": "Automatically Manage DNS Records"
                }
            }
        },
        "http_loadbalancerProxyTypeHttps": {
            "type": "object",
            "description": "Choice for selecting HTTP proxy with bring your own certificates",
            "title": "BYOC HTTPS Choice",
            "x-displayname": "BYOC HTTPS Choice",
            "x-ves-displayorder": "1,2,3,4",
            "x-ves-oneof-field-server_header_choice": "[\"append_server_name\",\"default_header\",\"pass_through\",\"server_name\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ProxyTypeHttps",
            "properties": {
                "add_hsts": {
                    "type": "boolean",
                    "description": " Add HTTP Strict-Transport-Security response header",
                    "title": "Add HSTS",
                    "format": "boolean",
                    "x-displayname": "Add HSTS Header"
                },
                "append_server_name": {
                    "type": "string",
                    "description": "Exclusive with [default_header pass_through server_name]\nx-displayName: \"Append Server Name if absent\"\nSpecifies the value to be used for Server header if it is not already present.\nIf Server Header is already present it is not overwritten. It is just passed.",
                    "title": "append_server_name"
                },
                "default_header": {
                    "description": "Exclusive with [append_server_name pass_through server_name]\nx-displayName: \"Default value for Server header\"\nSpecifies that the default value of \"volt-adc\" should be used for Server Header",
                    "title": "default_header",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "http_redirect": {
                    "type": "boolean",
                    "description": " Redirect HTTP traffic to corresponding HTTPS",
                    "title": "HTTP Redirect",
                    "format": "boolean",
                    "x-displayname": "HTTP Redirect to HTTPS"
                },
                "pass_through": {
                    "description": "Exclusive with [append_server_name default_header server_name]\nx-displayName: \"Pass existing Server header\"\nPasses existing Server Header as is. If server header is absent, nothing is\nappended.",
                    "title": "pass_through",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "server_name": {
                    "type": "string",
                    "description": "Exclusive with [append_server_name default_header pass_through]\nx-displayName: \"Server Name\"\nSpecifies the value to be used for Server header inserted in responses.\nThis will overwrite existing values if any for Server Header",
                    "title": "server_name"
                },
                "tls_parameters": {
                    "description": " TLS parameters for downstream connections.",
                    "$ref": "#/definitions/viewshttp_loadbalancerDownstreamTlsParamsType",
                    "x-displayname": "HTTP Loadbalancer TLS Parameters"
                }
            }
        },
        "http_loadbalancerProxyTypeHttpsAutoCerts": {
            "type": "object",
            "description": "Choice for selecting HTTP proxy with bring your own certificates",
            "title": "HTTPS with Auto Certs Choice",
            "x-displayname": "HTTPS with Auto Certs Choice",
            "x-ves-displayorder": "1,2,4,3,7",
            "x-ves-oneof-field-mtls_choice": "[\"no_mtls\",\"use_mtls\"]",
            "x-ves-oneof-field-server_header_choice": "[\"append_server_name\",\"default_header\",\"pass_through\",\"server_name\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ProxyTypeHttpsAutoCerts",
            "properties": {
                "add_hsts": {
                    "type": "boolean",
                    "description": " Add HTTP Strict-Transport-Security response header",
                    "title": "Add HSTS",
                    "format": "boolean",
                    "x-displayname": "Add HSTS Header"
                },
                "append_server_name": {
                    "type": "string",
                    "description": "Exclusive with [default_header pass_through server_name]\nx-displayName: \"Append Server Name if absent\"\nSpecifies the value to be used for Server header if it is not already present.\nIf Server Header is already present it is not overwritten. It is just passed.",
                    "title": "append_server_name"
                },
                "default_header": {
                    "description": "Exclusive with [append_server_name pass_through server_name]\nx-displayName: \"Default value for Server header\"\nSpecifies that the default value of \"volt-adc\" should be used for Server Header",
                    "title": "default_header",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "http_redirect": {
                    "type": "boolean",
                    "description": " Redirect HTTP traffic to corresponding HTTPS",
                    "title": "HTTP Redirect",
                    "format": "boolean",
                    "x-displayname": "HTTP Redirect to HTTPS"
                },
                "no_mtls": {
                    "description": "Exclusive with [use_mtls]\nx-displayName: \"No mTLS\"\nmTLS with clients is not enabled",
                    "title": "No mTLS",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "pass_through": {
                    "description": "Exclusive with [append_server_name default_header server_name]\nx-displayName: \"Pass existing Server header\"\nPasses existing Server Header as is. If server header is absent, nothing is\nappended.",
                    "title": "pass_through",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "server_name": {
                    "type": "string",
                    "description": "Exclusive with [append_server_name default_header pass_through]\nx-displayName: \"Server Name\"\nSpecifies the value to be used for Server header inserted in responses.\nThis will overwrite existing values if any for Server Header",
                    "title": "server_name"
                },
                "tls_config": {
                    "description": " Configuration for TLS parameters such as min/max TLS version and ciphers",
                    "title": "TLS Config",
                    "$ref": "#/definitions/viewsTlsConfig",
                    "x-displayname": "TLS Config"
                },
                "use_mtls": {
                    "description": "Exclusive with [no_mtls]\nx-displayName: \"mTLS\"\nmTLS with clients is enabled",
                    "title": "Use mTLS",
                    "$ref": "#/definitions/http_loadbalancerDownstreamTlsValidationContext"
                }
            }
        },
        "http_loadbalancerRateLimitConfigType": {
            "type": "object",
            "x-ves-oneof-field-ip_allowed_list_choice": "[\"custom_ip_allowed_list\",\"ip_allowed_list\",\"no_ip_allowed_list\"]",
            "x-ves-oneof-field-policy_choice": "[\"no_policies\",\"policies\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RateLimitConfigType",
            "properties": {
                "custom_ip_allowed_list": {
                    "description": "Exclusive with [ip_allowed_list no_ip_allowed_list]\nx-displayName: \"IP Allowed List using IP Prefix Set(s)\"\nIP Allowed list using existing ip_prefix_set objects.",
                    "title": "Custom IP list",
                    "$ref": "#/definitions/http_loadbalancerCustomIpAllowedList"
                },
                "ip_allowed_list": {
                    "description": "Exclusive with [custom_ip_allowed_list no_ip_allowed_list]\nx-displayName: \"IP Allowed List\"\nList of IP(s) for which rate limiting will be disabled.",
                    "title": "IP Allowed List",
                    "$ref": "#/definitions/viewsPrefixStringListType"
                },
                "no_ip_allowed_list": {
                    "description": "Exclusive with [custom_ip_allowed_list ip_allowed_list]\nx-displayName: \"No IP Allowed\"\nThere is no ip allowed list for rate limiting, all clients go through rate limiting.",
                    "title": "No IP Allowed List",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_policies": {
                    "description": "Exclusive with [policies]\nx-displayName: \"No Rate Limiter Policies\"\nDo not apply additional rate limiter policies.",
                    "title": "no_policies",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "policies": {
                    "description": "Exclusive with [no_policies]\nx-displayName: \"Rate Limiter Policies\"\nApply rate limiter policies to requests that are not from the IP Allowed List.\nThe policies are evaluated sequentially until a matching rule is identified. If there's a match, the rate limiting behavior is modified according\nto the action configured in the rule. If there's no match, the rate limiting configuration for the HTTP loadbalancer is honored.",
                    "title": "policies",
                    "$ref": "#/definitions/rate_limiter_policyPolicyList"
                },
                "rate_limiter": {
                    "description": " Requests to the virtual_host are rate limited based on the parameters specified in the rate_limiter.",
                    "title": "rate_limiter",
                    "$ref": "#/definitions/rate_limiterRateLimitValue",
                    "x-displayname": "Request Rate Limiter"
                }
            }
        },
        "http_loadbalancerRouteSimpleAdvancedOptions": {
            "type": "object",
            "description": "Configure advanced options for route like path rewrite, hash policy, etc.",
            "title": "Advanced Route Options",
            "x-displayname": "Advanced Route Options",
            "x-ves-oneof-field-buffer_choice": "[\"buffer_policy\",\"common_buffering\"]",
            "x-ves-oneof-field-cluster_retract_choice": "[\"do_not_retract_cluster\",\"retract_cluster\"]",
            "x-ves-oneof-field-hash_policy_choice": "[\"common_hash_policy\",\"specific_hash_policy\"]",
            "x-ves-oneof-field-mirroring_choice": "[\"disable_mirroring\",\"mirror_policy\"]",
            "x-ves-oneof-field-retry_policy_choice": "[\"default_retry_policy\",\"retry_policy\"]",
            "x-ves-oneof-field-rewrite_choice": "[\"disable_prefix_rewrite\",\"prefix_rewrite\"]",
            "x-ves-oneof-field-spdy_choice": "[\"disable_spdy\",\"enable_spdy\"]",
            "x-ves-oneof-field-waf_choice": "[\"app_firewall\",\"disable_waf\",\"waf\",\"waf_rule\"]",
            "x-ves-oneof-field-websocket_choice": "[\"disable_web_socket_config\",\"web_socket_config\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteSimpleAdvancedOptions",
            "properties": {
                "app_firewall": {
                    "description": "Exclusive with [disable_waf waf waf_rule]\nx-displayName: \"App Firewall\"\nReference to App Firewall configuration object",
                    "title": "app_firewall",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "buffer_policy": {
                    "description": "Exclusive with [common_buffering]\nx-displayName: \"Route Specific Buffering Configuration\"\nBuffering configuration for requests\nSome upstream applications are not capable of handling streamed data. This config\nenables buffering the entire request before sending to upstream application. We can\nspecify the maximum buffer size and buffer interval with this config.\nRoute level buffer configuration overrides any configuration at VirtualHost level.",
                    "title": "Route Specific Buffering Configuration",
                    "$ref": "#/definitions/schemaBufferConfigType"
                },
                "common_buffering": {
                    "description": "Exclusive with [buffer_policy]\nx-displayName: \"Common buffering Configuration\"\nUse common buffering configuration",
                    "title": "Common buffering Configuration",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "common_hash_policy": {
                    "description": "Exclusive with [specific_hash_policy]\nx-displayName: \"Use Load balancer Hash Policy\"\nUse Load balancer hash policy for this route",
                    "title": "Common Hash Policy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "cors_policy": {
                    "description": " Cross-Origin Resource Sharing requests configuration\n\n CORS is a mechanism that uses additional HTTP headers to tell a browser to let\n a web application running at one origin (domain) have permission to access selected\n resources from a server at a different origin",
                    "title": "cors_policy",
                    "$ref": "#/definitions/schemaCorsPolicy",
                    "x-displayname": "CORS Policy"
                },
                "default_retry_policy": {
                    "description": "Exclusive with [retry_policy]\nx-displayName: \"Use Default Retry Policy\"\nUse system default retry policy",
                    "title": "Use Default Retry Policy",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_location_add": {
                    "type": "boolean",
                    "description": " disables append of x-volterra-location = \u003cre-site-name\u003e at route level, if it is configured at\n virtual-host level. This configuration is ignored on CE sites.\n\nExample: - true-",
                    "title": "disable_location_add",
                    "format": "boolean",
                    "x-displayname": "Disable Location Addition"
                },
                "disable_mirroring": {
                    "description": "Exclusive with [mirror_policy]\nx-displayName: \"Disable Mirroring\"\nDisable Mirroring of request",
                    "title": "Disable Mirroring",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_prefix_rewrite": {
                    "description": "Exclusive with [prefix_rewrite]\nx-displayName: \"Disable Prefix Rewrite\"\nDo not rewrite the path prefix.",
                    "title": "Disable Prefix Rewrite",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_spdy": {
                    "description": "Exclusive with [enable_spdy]\nx-displayName: \"Disable SPDY\"\nSPDY upgrade is disabled",
                    "title": "Disable SPDY",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_waf": {
                    "description": "Exclusive with [app_firewall waf waf_rule]\nx-displayName: \"Disable WAF\"\nNo WAF configuration for this load balancer",
                    "title": "Disable WAF",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_web_socket_config": {
                    "description": "Exclusive with [web_socket_config]\nx-displayName: \"Disable Websocket\"\nWebsocket upgrade is disabled",
                    "title": "Disable Websocket",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "do_not_retract_cluster": {
                    "description": "Exclusive with [retract_cluster]\nx-displayName: \"Disable cluster retraction\"\nWhen this option is configured, cluster with no healthy\nendpoints is not retracted from route having weighted cluster\nconfiguration.",
                    "title": "do_not_retract_cluster",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_spdy": {
                    "description": "Exclusive with [disable_spdy]\nx-displayName: \"Enable SPDY\"\nSPDY upgrade is enabled",
                    "title": "Enable SPDY",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "endpoint_subsets": {
                    "type": "object",
                    "description": " Upstream origin pool may be configured to divide its origin servers into subsets based on metadata\n attached to the origin servers. Routes may then specify the metadata that a endpoint must match in\n order to be selected by the load balancer\n\n For origin servers which are discovered in K8S or Consul cluster, the label of the service is merged with\n endpoint's labels. In case of Consul, the label is derived from the \"Tag\" field.\n For labels that are common between configured endpoint and discovered service, labels from discovered service\n takes precedence.\n\n List of key-value pairs that will be used as matching metadata. Only those origin servers of\n upstream origin pool which match this metadata will be selected for load balancing",
                    "title": "Origin Servers Subset",
                    "x-displayname": "Origin Servers Subsets"
                },
                "mirror_policy": {
                    "description": "Exclusive with [disable_mirroring]\nx-displayName: \"Enable Mirroring\"\nMirrorPolicy is used for shadowing traffic from one cluster to another. The current\nimplementation is \"fire and forget,\" meaning it will not wait for the shadow cluster to\nrespond before returning the response from the primary cluster. All normal statistics are\ncollected for the shadow cluster making this feature useful for testing.\n\nDuring shadowing, the host/authority header is altered such that *-shadow* is appended. This is\nuseful for logging. For example, *cluster1* becomes *cluster1-shadow*.",
                    "title": "Enable Mirroring",
                    "$ref": "#/definitions/viewshttp_loadbalancerMirrorPolicyType"
                },
                "prefix_rewrite": {
                    "type": "string",
                    "description": "Exclusive with [disable_prefix_rewrite]\nx-displayName: \"Enable Prefix Rewrite\"\nx-example: \"/\"\nprefix_rewrite indicates that during forwarding, the matched prefix (or path) should be swapped\nwith its value. When using regex path matching, the entire path (not including\nthe query string) will be swapped with this value.",
                    "title": "prefix_rewrite"
                },
                "priority": {
                    "description": " Priority routing for each route. Different connection pools are used based on the priority of the route.\n Also, circuit-breaker configuration at destination cluster is chosen based on the route priority.",
                    "title": "priority",
                    "$ref": "#/definitions/schemaRoutingPriority",
                    "x-displayname": "Priority"
                },
                "request_headers_to_add": {
                    "type": "array",
                    "description": " Headers are key-value pairs to be added to HTTP request being routed towards upstream.",
                    "title": "Headers to add in request",
                    "items": {
                        "$ref": "#/definitions/schemaHeaderManipulationOptionType"
                    },
                    "x-displayname": "Add Request Headers"
                },
                "request_headers_to_remove": {
                    "type": "array",
                    "description": " List of keys of Headers to be removed from the HTTP request being sent towards upstream.\n\nExample: - \"host\"-",
                    "title": "Header to be removed from request",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Remove Request Headers",
                    "x-ves-example": "host"
                },
                "response_headers_to_add": {
                    "type": "array",
                    "description": " Headers are key-value pairs to be added to HTTP response being sent towards downstream.",
                    "title": "Headers to add in response",
                    "items": {
                        "$ref": "#/definitions/schemaHeaderManipulationOptionType"
                    },
                    "x-displayname": "Add Response Headers"
                },
                "response_headers_to_remove": {
                    "type": "array",
                    "description": " List of keys of Headers to be removed from the HTTP response being sent towards downstream.\n\nExample: - \"host\"-",
                    "title": "Header to be removed from response",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Remove Response Headers",
                    "x-ves-example": "host"
                },
                "retract_cluster": {
                    "description": "Exclusive with [do_not_retract_cluster]\nx-displayName: \"Retract cluster with no healthy endpoints\"\nWhen this option is enabled, weighted cluster will not be considered\nfor loadbalancing, if all its endpoints are unhealthy.\nSince the cluster with all unhealthy endpoints is removed, the traffic\nwill be distributed among remaining clusters as per their weight.\nAlso panic-threshold configuration is ignored for retracted cluster.\n\nThis option is ignored when single destination cluster is configured\nfor route",
                    "title": "retract_cluster",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "retry_policy": {
                    "description": "Exclusive with [default_retry_policy]\nx-displayName: \"Custom Retry Policy\"\nConfigure custom retry policy",
                    "title": "Use Default Retry Policy",
                    "$ref": "#/definitions/schemaRetryPolicyType"
                },
                "specific_hash_policy": {
                    "description": "Exclusive with [common_hash_policy]\nx-displayName: \"Route Specific Hash Policy\"\nConfigure hash policy specific for this route",
                    "title": "Route Specific Hash Policy",
                    "$ref": "#/definitions/http_loadbalancerHashPolicyListType"
                },
                "timeout": {
                    "type": "integer",
                    "description": " The timeout for the route including all retries, in milliseconds.\n Should be set to a high value or 0 (infinite timeout) for server-side streaming.\n\nExample: - 2000-",
                    "title": "timeout",
                    "format": "int64",
                    "x-displayname": "Timeout"
                },
                "waf": {
                    "description": "Exclusive with [app_firewall disable_waf waf_rule]\nx-displayName: \"Specify WAF Intent\"\nReference to WAF intent configuration object",
                    "title": "WAF",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "waf_rule": {
                    "description": "Exclusive with [app_firewall disable_waf waf]\nx-displayName: \"Specify WAF Rules\"\nReference to WAF Rules configuration object",
                    "title": "waf_rules",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "web_socket_config": {
                    "description": "Exclusive with [disable_web_socket_config]\nx-displayName: \"Enable Websocket\"\nUpgrade to Websocket for this route",
                    "title": "Websocket Configuration",
                    "$ref": "#/definitions/routeWebsocketConfigType"
                }
            }
        },
        "http_loadbalancerRouteTypeCustomRoute": {
            "type": "object",
            "description": "A custom route uses a route object created outside of this view.",
            "title": "RouteTypeCustomRoute",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteTypeCustomRoute",
            "properties": {
                "route_ref": {
                    "description": " Reference to a custom route object",
                    "title": "route_refs",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Reference to Custom Route"
                }
            }
        },
        "http_loadbalancerRouteTypeDirectResponse": {
            "type": "object",
            "description": "A direct response route matches on patch and/or HTTP method and responds directly to the matching traffic",
            "title": "RouteTypeDirectResponse",
            "x-ves-displayorder": "2,1,3",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteTypeDirectResponse",
            "properties": {
                "http_method": {
                    "description": " The name of the HTTP Method (GET, PUT, POST, etc)",
                    "title": "http_method",
                    "$ref": "#/definitions/schemaHttpMethod",
                    "x-displayname": "HTTP Method"
                },
                "path": {
                    "description": " URI path of route",
                    "title": "path",
                    "$ref": "#/definitions/ioschemaPathMatcherType",
                    "x-displayname": "Path"
                },
                "route_direct_response": {
                    "description": " Send direct response",
                    "title": "route_direct_response",
                    "$ref": "#/definitions/routeRouteDirectResponse",
                    "x-displayname": "Direct Response"
                }
            }
        },
        "http_loadbalancerRouteTypeRedirect": {
            "type": "object",
            "description": "A redirect route matches on patch and/or HTTP method and redirects the matching traffic to a different URL",
            "title": "RouteTypeRedirect",
            "x-ves-displayorder": "2,1,3",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteTypeRedirect",
            "properties": {
                "http_method": {
                    "description": " The name of the HTTP Method (GET, PUT, POST, etc)",
                    "title": "http_method",
                    "$ref": "#/definitions/schemaHttpMethod",
                    "x-displayname": "HTTP Method"
                },
                "path": {
                    "description": " URI path of route",
                    "title": "path",
                    "$ref": "#/definitions/ioschemaPathMatcherType",
                    "x-displayname": "Path"
                },
                "route_redirect": {
                    "description": " Send redirect response",
                    "title": "route_redirect",
                    "$ref": "#/definitions/routeRouteRedirect",
                    "x-displayname": "Redirect Parameters"
                }
            }
        },
        "http_loadbalancerRouteTypeSimple": {
            "type": "object",
            "description": "A simple route matches on path and/or HTTP method and forwards the matching traffic to the associated pools",
            "title": "RouteTypeSimple",
            "x-displayname": "Simple Route",
            "x-ves-displayorder": "2,1,3,4,8",
            "x-ves-oneof-field-host_rewrite_params": "[\"auto_host_rewrite\",\"disable_host_rewrite\",\"host_rewrite\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteTypeSimple",
            "properties": {
                "advanced_options": {
                    "description": " Configure Advanced per route options",
                    "title": "Advanced Options",
                    "$ref": "#/definitions/http_loadbalancerRouteSimpleAdvancedOptions",
                    "x-displayname": "Advanced Options"
                },
                "auto_host_rewrite": {
                    "description": "Exclusive with [disable_host_rewrite host_rewrite]\nx-displayName: \"Automatic Host Rewrite\"\nHost header will be swapped with hostname of upstream host chosen by the cluster",
                    "title": "Auto Host Rewrite",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_host_rewrite": {
                    "description": "Exclusive with [auto_host_rewrite host_rewrite]\nx-displayName: \"Disable Host Rewrite\"\nHost header is not modified",
                    "title": "Disable Host Rewrite",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "host_rewrite": {
                    "type": "string",
                    "description": "Exclusive with [auto_host_rewrite disable_host_rewrite]\nx-displayName: \"Host Rewrite Value\"\nx-example: \"one.volterra.com\"\nHost header will be swapped with this value",
                    "title": "HostRewrite"
                },
                "http_method": {
                    "description": " The name of the HTTP Method (GET, PUT, POST, etc)",
                    "title": "http_method",
                    "$ref": "#/definitions/schemaHttpMethod",
                    "x-displayname": "HTTP Method"
                },
                "origin_pools": {
                    "type": "array",
                    "description": " Origin Pools for this route",
                    "title": "Origin Pools",
                    "items": {
                        "$ref": "#/definitions/viewsOriginPoolWithWeight"
                    },
                    "x-displayname": "Origin Pools"
                },
                "path": {
                    "description": " URI path of route",
                    "title": "path",
                    "$ref": "#/definitions/ioschemaPathMatcherType",
                    "x-displayname": "Path"
                }
            }
        },
        "http_loadbalancerServicePolicyList": {
            "type": "object",
            "description": "List of service policies.",
            "title": "service policy list",
            "x-displayname": "Service Policy List",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.ServicePolicyList",
            "properties": {
                "policies": {
                    "type": "array",
                    "description": " An ordered list of references to service_policy objects.\nRequired: YES",
                    "title": "policies",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Policies",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerSimpleClientSrcRule": {
            "type": "object",
            "description": "Simple client source rule specifies the sources to be blocked or trusted (skip WAF)",
            "title": "SimpleClientSrcRule",
            "x-displayname": "Simple Client Src Rule",
            "x-ves-displayorder": "10,3,9",
            "x-ves-oneof-field-client_source_choice": "[\"as_number\",\"ip_prefix\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.SimpleClientSrcRule",
            "properties": {
                "as_number": {
                    "type": "integer",
                    "description": "Exclusive with [ip_prefix]\nx-displayName: \"AS Number\"\nx-required\nx-example: \"4683\"\nRFC 6793 defined 4-byte AS number",
                    "title": "as number",
                    "format": "int64"
                },
                "expiration_timestamp": {
                    "type": "string",
                    "description": " The expiration_timestamp is the RFC 3339 format timestamp at which the containing rule is considered to be logically expired. The rule continues to exist in\n the configuration but is not applied anymore.\n\nExample: - \"2019-12-31:44:34.171543432Z\"-",
                    "title": "expiration timestamp",
                    "format": "date-time",
                    "x-displayname": "Expiration Timestamp",
                    "x-ves-example": "2019-12-31:44:34.171543432Z"
                },
                "ip_prefix": {
                    "type": "string",
                    "description": "Exclusive with [as_number]\nx-displayName: \"IP Prefix\"\nx-example: \"192.168.20.0/24\"\nx-required\nIPv4 prefix string.",
                    "title": "ip prefix"
                },
                "metadata": {
                    "description": " Common attributes for the rule including name and description.\nRequired: YES",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaMessageMetaType",
                    "x-displayname": "Metadata",
                    "x-ves-required": "true"
                }
            }
        },
        "http_loadbalancerStatusObject": {
            "type": "object",
            "description": "Most recently observed status of object",
            "title": "StatusObject",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions represent the normalized status values for configuration object",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " HTTP loadbalancer view object direct reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                }
            }
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "ioschemaPathMatcherType": {
            "type": "object",
            "description": "Path match of the URI can be either be, Prefix match or exact match or regular expression match",
            "title": "PathMatcherType",
            "x-displayname": "Path to Match",
            "x-ves-displayorder": "4",
            "x-ves-oneof-field-path_match": "[\"path\",\"prefix\",\"regex\"]",
            "x-ves-proto-message": "ves.io.schema.PathMatcherType",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "Exclusive with [prefix regex]\nx-displayName: \"Path\"\nx-example: \"/logout\"\nExact path value to match",
                    "title": "path"
                },
                "prefix": {
                    "type": "string",
                    "description": "Exclusive with [path regex]\nx-displayName: \"Prefix\"\nx-example: \"/register/\"\nPath prefix to match",
                    "title": "prefix"
                },
                "regex": {
                    "type": "string",
                    "description": "Exclusive with [path prefix]\nx-displayName: \"Regex\"\nRegular expression of path match",
                    "title": "regex"
                }
            }
        },
        "policyAppFirewallDetectionControl": {
            "type": "object",
            "description": "App Firewall detection changes to be applied for this request",
            "title": "App Firewall Detection Control",
            "x-displayname": "App Firewall Detection Control",
            "x-ves-proto-message": "ves.io.schema.policy.AppFirewallDetectionControl",
            "properties": {
                "exclude_signature_contexts": {
                    "type": "array",
                    "description": " App Firewall signature contexts to be excluded for this request",
                    "title": "Exclude Signature Contexts",
                    "items": {
                        "$ref": "#/definitions/policyAppFirewallSignatureContext"
                    },
                    "x-displayname": "Exclude App Firewall Signature Contexts"
                },
                "exclude_violation_contexts": {
                    "type": "array",
                    "description": " App Firewall violation contexts to be excluded for this request",
                    "title": "Exclude Signature Contexts",
                    "items": {
                        "$ref": "#/definitions/policyAppFirewallViolationContext"
                    },
                    "x-displayname": "Exclude App Firewall Violation Contexts"
                }
            }
        },
        "policyAppFirewallSignatureContext": {
            "type": "object",
            "description": "App Firewall signature context changes to be applied for this request",
            "title": "App Firewall Signature Context",
            "x-displayname": "App Firewall Signature Context",
            "x-ves-proto-message": "ves.io.schema.policy.AppFirewallSignatureContext",
            "properties": {
                "signature_id": {
                    "type": "integer",
                    "description": " App Firewall signature ID\nRequired: YES",
                    "title": "SignatureID",
                    "format": "int64",
                    "x-displayname": "SignatureID",
                    "x-ves-required": "true"
                }
            }
        },
        "policyAppFirewallViolationContext": {
            "type": "object",
            "description": "App Firewall violation context changes to be applied for this request",
            "title": "App Firewall Violation Context",
            "x-displayname": "App Firewall Violation Context",
            "x-ves-proto-message": "ves.io.schema.policy.AppFirewallViolationContext",
            "properties": {
                "exclude_violation": {
                    "description": " App Firewall violation type\nRequired: YES",
                    "title": "ViolationType",
                    "$ref": "#/definitions/schemaAppFirewallViolationType",
                    "x-displayname": "Violation Type",
                    "x-ves-required": "true"
                }
            }
        },
        "policyArgMatcherType": {
            "type": "object",
            "description": "A argument matcher specifies the name of a single argument in the body and the criteria to match it.\nA argument matcher can check for one of the following:\n* Presence or absence of the argument\n* At least one of the values for the argument in the request satisfies the MatcherType item",
            "title": "ArgMatcherType",
            "x-displayname": "Argument Matcher",
            "x-ves-displayorder": "1,6,4",
            "x-ves-oneof-field-match": "[\"check_not_present\",\"check_present\",\"item\",\"presence\"]",
            "x-ves-proto-message": "ves.io.schema.policy.ArgMatcherType",
            "properties": {
                "check_not_present": {
                    "description": "Exclusive with [check_present item presence]\nx-displayName: \"Not Present\"\nCheck that the argument is not present.",
                    "title": "check_not_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "check_present": {
                    "description": "Exclusive with [check_not_present item presence]\nx-displayName: \"Present\"\nCheck that the argument is present.",
                    "title": "check_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert Match of the expression defined",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Matcher"
                },
                "item": {
                    "description": "Exclusive with [check_not_present check_present presence]\nx-displayName: \"Match Values\"\nCriteria for matching the values for the Arg. The match is successful if any of the values in the input satisfies the criteria in the matcher.",
                    "title": "item",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "name": {
                    "type": "string",
                    "description": " x-example: \"phones[_]\"\n x-example: \"cars.make.toyota.models[1]\"\n x-example: \"cars.make.honda.models[_]\"\n x-example: \"cars.make[_].models[_]\"\n A case-sensitive JSON path in the HTTP request body.\n\nExample: - \"name\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Argument Name",
                    "x-ves-example": "name",
                    "x-ves-required": "true"
                },
                "presence": {
                    "type": "boolean",
                    "description": "Exclusive with [check_not_present check_present item]\nx-displayName: \"Present Or Absent\"\nCheck if the arg is present or absent.",
                    "title": "presence",
                    "format": "boolean"
                }
            }
        },
        "policyAsnMatchList": {
            "type": "object",
            "description": "An unordered set of RFC 6793 defined 4-byte AS numbers that can be used to create allow or deny lists for use in network policy or service policy.",
            "title": "Asn Match List",
            "x-displayname": "ASN Match List",
            "x-ves-proto-message": "ves.io.schema.policy.AsnMatchList",
            "properties": {
                "as_numbers": {
                    "type": "array",
                    "description": " An unordered set of RFC 6793 defined 4-byte AS numbers that can be used to create allow or deny lists for use in network policy or service policy.\n\nExample: - \"[713, 7932, 847325, 4683, 15269, 1000001]\"-\nRequired: YES",
                    "title": "as numbers",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-displayname": "AS Numbers",
                    "x-ves-example": "[713, 7932, 847325, 4683, 15269, 1000001]",
                    "x-ves-required": "true"
                }
            }
        },
        "policyAsnMatcherType": {
            "type": "object",
            "description": "Match any AS number contained in the list of bgp_asn_sets.",
            "title": "asn matcher type",
            "x-displayname": "ASN Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.AsnMatcherType",
            "properties": {
                "asn_sets": {
                    "type": "array",
                    "description": " A list of references to bgp_asn_set objects.\nRequired: YES",
                    "title": "asn_sets",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "BGP ASN Sets",
                    "x-ves-required": "true"
                }
            }
        },
        "policyCookieMatcherType": {
            "type": "object",
            "description": "A cookie matcher specifies the name of a single cookie and the criteria to match it. The input has a list of values for each\ncookie in the request.\nA cookie matcher can check for one of the following:\n* Presence or absence of the cookie\n* At least one of the values for the cookie in the request satisfies the MatcherType item",
            "title": "CookieMatcherType",
            "x-displayname": "Cookie Matcher",
            "x-ves-displayorder": "1,6,4",
            "x-ves-oneof-field-match": "[\"check_not_present\",\"check_present\",\"item\",\"presence\"]",
            "x-ves-proto-message": "ves.io.schema.policy.CookieMatcherType",
            "properties": {
                "check_not_present": {
                    "description": "Exclusive with [check_present item presence]\nx-displayName: \"Not Present\"\nCheck that the cookie is not present.",
                    "title": "check_not_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "check_present": {
                    "description": "Exclusive with [check_not_present item presence]\nx-displayName: \"Present\"\nCheck that the cookie is present.",
                    "title": "check_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert Match of the expression defined",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Matcher"
                },
                "item": {
                    "description": "Exclusive with [check_not_present check_present presence]\nx-displayName: \"Match Values\"\nCriteria for matching the values for the cookie. The match is successful if any of the values in the input satisfies the criteria in the matcher.",
                    "title": "item",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "name": {
                    "type": "string",
                    "description": " A case-sensitive cookie name.\n\nExample: - \"Session\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Cookie Name",
                    "x-ves-example": "Session",
                    "x-ves-required": "true"
                },
                "presence": {
                    "type": "boolean",
                    "description": "Exclusive with [check_not_present check_present item]\nx-displayName: \"Present Or Absent\"\nCheck if the cookie is present or absent.",
                    "title": "presence",
                    "format": "boolean"
                }
            }
        },
        "policyCountryCode": {
            "type": "string",
            "description": "ISO 3166 Aplpha-2 country codes\n",
            "title": "CountryCode",
            "enum": [
                "COUNTRY_NONE",
                "COUNTRY_AD",
                "COUNTRY_AE",
                "COUNTRY_AF",
                "COUNTRY_AG",
                "COUNTRY_AI",
                "COUNTRY_AL",
                "COUNTRY_AM",
                "COUNTRY_AN",
                "COUNTRY_AO",
                "COUNTRY_AQ",
                "COUNTRY_AR",
                "COUNTRY_AS",
                "COUNTRY_AT",
                "COUNTRY_AU",
                "COUNTRY_AW",
                "COUNTRY_AX",
                "COUNTRY_AZ",
                "COUNTRY_BA",
                "COUNTRY_BB",
                "COUNTRY_BD",
                "COUNTRY_BE",
                "COUNTRY_BF",
                "COUNTRY_BG",
                "COUNTRY_BH",
                "COUNTRY_BI",
                "COUNTRY_BJ",
                "COUNTRY_BL",
                "COUNTRY_BM",
                "COUNTRY_BN",
                "COUNTRY_BO",
                "COUNTRY_BQ",
                "COUNTRY_BR",
                "COUNTRY_BS",
                "COUNTRY_BT",
                "COUNTRY_BV",
                "COUNTRY_BW",
                "COUNTRY_BY",
                "COUNTRY_BZ",
                "COUNTRY_CA",
                "COUNTRY_CC",
                "COUNTRY_CD",
                "COUNTRY_CF",
                "COUNTRY_CG",
                "COUNTRY_CH",
                "COUNTRY_CI",
                "COUNTRY_CK",
                "COUNTRY_CL",
                "COUNTRY_CM",
                "COUNTRY_CN",
                "COUNTRY_CO",
                "COUNTRY_CR",
                "COUNTRY_CS",
                "COUNTRY_CU",
                "COUNTRY_CV",
                "COUNTRY_CW",
                "COUNTRY_CX",
                "COUNTRY_CY",
                "COUNTRY_CZ",
                "COUNTRY_DE",
                "COUNTRY_DJ",
                "COUNTRY_DK",
                "COUNTRY_DM",
                "COUNTRY_DO",
                "COUNTRY_DZ",
                "COUNTRY_EC",
                "COUNTRY_EE",
                "COUNTRY_EG",
                "COUNTRY_EH",
                "COUNTRY_ER",
                "COUNTRY_ES",
                "COUNTRY_ET",
                "COUNTRY_FI",
                "COUNTRY_FJ",
                "COUNTRY_FK",
                "COUNTRY_FM",
                "COUNTRY_FO",
                "COUNTRY_FR",
                "COUNTRY_GA",
                "COUNTRY_GB",
                "COUNTRY_GD",
                "COUNTRY_GE",
                "COUNTRY_GF",
                "COUNTRY_GG",
                "COUNTRY_GH",
                "COUNTRY_GI",
                "COUNTRY_GL",
                "COUNTRY_GM",
                "COUNTRY_GN",
                "COUNTRY_GP",
                "COUNTRY_GQ",
                "COUNTRY_GR",
                "COUNTRY_GS",
                "COUNTRY_GT",
                "COUNTRY_GU",
                "COUNTRY_GW",
                "COUNTRY_GY",
                "COUNTRY_HK",
                "COUNTRY_HM",
                "COUNTRY_HN",
                "COUNTRY_HR",
                "COUNTRY_HT",
                "COUNTRY_HU",
                "COUNTRY_ID",
                "COUNTRY_IE",
                "COUNTRY_IL",
                "COUNTRY_IM",
                "COUNTRY_IN",
                "COUNTRY_IO",
                "COUNTRY_IQ",
                "COUNTRY_IR",
                "COUNTRY_IS",
                "COUNTRY_IT",
                "COUNTRY_JE",
                "COUNTRY_JM",
                "COUNTRY_JO",
                "COUNTRY_JP",
                "COUNTRY_KE",
                "COUNTRY_KG",
                "COUNTRY_KH",
                "COUNTRY_KI",
                "COUNTRY_KM",
                "COUNTRY_KN",
                "COUNTRY_KP",
                "COUNTRY_KR",
                "COUNTRY_KW",
                "COUNTRY_KY",
                "COUNTRY_KZ",
                "COUNTRY_LA",
                "COUNTRY_LB",
                "COUNTRY_LC",
                "COUNTRY_LI",
                "COUNTRY_LK",
                "COUNTRY_LR",
                "COUNTRY_LS",
                "COUNTRY_LT",
                "COUNTRY_LU",
                "COUNTRY_LV",
                "COUNTRY_LY",
                "COUNTRY_MA",
                "COUNTRY_MC",
                "COUNTRY_MD",
                "COUNTRY_ME",
                "COUNTRY_MF",
                "COUNTRY_MG",
                "COUNTRY_MH",
                "COUNTRY_MK",
                "COUNTRY_ML",
                "COUNTRY_MM",
                "COUNTRY_MN",
                "COUNTRY_MO",
                "COUNTRY_MP",
                "COUNTRY_MQ",
                "COUNTRY_MR",
                "COUNTRY_MS",
                "COUNTRY_MT",
                "COUNTRY_MU",
                "COUNTRY_MV",
                "COUNTRY_MW",
                "COUNTRY_MX",
                "COUNTRY_MY",
                "COUNTRY_MZ",
                "COUNTRY_NA",
                "COUNTRY_NC",
                "COUNTRY_NE",
                "COUNTRY_NF",
                "COUNTRY_NG",
                "COUNTRY_NI",
                "COUNTRY_NL",
                "COUNTRY_NO",
                "COUNTRY_NP",
                "COUNTRY_NR",
                "COUNTRY_NU",
                "COUNTRY_NZ",
                "COUNTRY_OM",
                "COUNTRY_PA",
                "COUNTRY_PE",
                "COUNTRY_PF",
                "COUNTRY_PG",
                "COUNTRY_PH",
                "COUNTRY_PK",
                "COUNTRY_PL",
                "COUNTRY_PM",
                "COUNTRY_PN",
                "COUNTRY_PR",
                "COUNTRY_PS",
                "COUNTRY_PT",
                "COUNTRY_PW",
                "COUNTRY_PY",
                "COUNTRY_QA",
                "COUNTRY_RE",
                "COUNTRY_RO",
                "COUNTRY_RS",
                "COUNTRY_RU",
                "COUNTRY_RW",
                "COUNTRY_SA",
                "COUNTRY_SB",
                "COUNTRY_SC",
                "COUNTRY_SD",
                "COUNTRY_SE",
                "COUNTRY_SG",
                "COUNTRY_SH",
                "COUNTRY_SI",
                "COUNTRY_SJ",
                "COUNTRY_SK",
                "COUNTRY_SL",
                "COUNTRY_SM",
                "COUNTRY_SN",
                "COUNTRY_SO",
                "COUNTRY_SR",
                "COUNTRY_SS",
                "COUNTRY_ST",
                "COUNTRY_SV",
                "COUNTRY_SX",
                "COUNTRY_SY",
                "COUNTRY_SZ",
                "COUNTRY_TC",
                "COUNTRY_TD",
                "COUNTRY_TF",
                "COUNTRY_TG",
                "COUNTRY_TH",
                "COUNTRY_TJ",
                "COUNTRY_TK",
                "COUNTRY_TL",
                "COUNTRY_TM",
                "COUNTRY_TN",
                "COUNTRY_TO",
                "COUNTRY_TR",
                "COUNTRY_TT",
                "COUNTRY_TV",
                "COUNTRY_TW",
                "COUNTRY_TZ",
                "COUNTRY_UA",
                "COUNTRY_UG",
                "COUNTRY_UM",
                "COUNTRY_US",
                "COUNTRY_UY",
                "COUNTRY_UZ",
                "COUNTRY_VA",
                "COUNTRY_VC",
                "COUNTRY_VE",
                "COUNTRY_VG",
                "COUNTRY_VI",
                "COUNTRY_VN",
                "COUNTRY_VU",
                "COUNTRY_WF",
                "COUNTRY_WS",
                "COUNTRY_XK",
                "COUNTRY_XT",
                "COUNTRY_YE",
                "COUNTRY_YT",
                "COUNTRY_ZA",
                "COUNTRY_ZM",
                "COUNTRY_ZW"
            ],
            "default": "COUNTRY_NONE",
            "x-displayname": "Country Code",
            "x-ves-proto-enum": "ves.io.schema.policy.CountryCode"
        },
        "policyHttpMethodMatcherType": {
            "type": "object",
            "description": "A http method matcher specifies a list of methods to match an input HTTP method. The match is considered successful if the input method is a member of the list.\nThe result of the match based on the method list is inverted if invert_matcher is true.",
            "title": "HttpMethodMatcherType",
            "x-displayname": "HTTP Method Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.HttpMethodMatcherType",
            "properties": {
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert the match result.",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Method Matcher"
                },
                "methods": {
                    "type": "array",
                    "description": " List of methods values to match against.\n\nExample: - \"['GET', 'POST', 'DELETE']\"-",
                    "title": "methods",
                    "items": {
                        "$ref": "#/definitions/schemaHttpMethod"
                    },
                    "x-displayname": "Method List",
                    "x-ves-example": "['GET', 'POST', 'DELETE']"
                }
            }
        },
        "policyIpMatcherType": {
            "type": "object",
            "description": "Match any ip prefix contained in the list of ip_prefix_sets.\nThe result of the match is inverted if invert_matcher is true.",
            "title": "ip matcher type",
            "x-displayname": "IP Prefix Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.IpMatcherType",
            "properties": {
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert the match result.",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert IP Matcher"
                },
                "prefix_sets": {
                    "type": "array",
                    "description": " A list of references to ip_prefix_set objects.\nRequired: YES",
                    "title": "prefix_sets",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "IP Prefix Sets",
                    "x-ves-required": "true"
                }
            }
        },
        "policyKnownTlsFingerprintClass": {
            "type": "string",
            "description": "Specifies known TLS fingerprint classes\n\n - TLS_FINGERPRINT_NONE: TLS_FINGERPRINT_NONE\n\nNo TLS fingerprint\n - ANY_MALICIOUS_FINGERPRINT: ANY_MALICIOUS_FINGERPRINT\n\nTLS fingerprints known to be associated with malicious clients\n - ADWARE: ADWARE\n\nTLS fingerprints known to be associated with adware\n - ADWIND: ADWIND\n\nTLS fingerprints known to be associated with adwind\n - DRIDEX: DRIDEX\n\nTLS fingerprints known to be associated with dridex\n - GOOTKIT: GOOTKIT\n\nTLS fingerprints known to be associated with gootkit\n - GOZI: GOZI\n\nTLS fingerprints known to be associated with gozi\n - JBIFROST: JBIFROST\n\nTLS fingerprints known to be associated with jbifrost\n - QUAKBOT: QUAKBOT\n\nTLS fingerprints known to be associated with quakbot\n - RANSOMWARE: RANSOMWARE\n\nTLS fingerprints known to be associated with ransomware\n - TROLDESH: TROLDESH\n\nTLS fingerprints known to be associated with troldesh\n - TOFSEE: TOFSEE\n\nTLS fingerprints known to be associated with tofsee\n - TORRENTLOCKER: TORRENTLOCKER\n\nTLS fingerprints known to be associated with torrentlocker\n - TRICKBOT: TRICKBOT\n\nTLS fingerprints known to be associated with trickbot",
            "title": "TLS known fingerprint class",
            "enum": [
                "TLS_FINGERPRINT_NONE",
                "ANY_MALICIOUS_FINGERPRINT",
                "ADWARE",
                "ADWIND",
                "DRIDEX",
                "GOOTKIT",
                "GOZI",
                "JBIFROST",
                "QUAKBOT",
                "RANSOMWARE",
                "TROLDESH",
                "TOFSEE",
                "TORRENTLOCKER",
                "TRICKBOT"
            ],
            "default": "TLS_FINGERPRINT_NONE",
            "x-displayname": "TLS known fingerprint class",
            "x-ves-proto-enum": "ves.io.schema.policy.KnownTlsFingerprintClass"
        },
        "policyMatcherType": {
            "type": "object",
            "description": "A matcher specifies multiple criteria for matching an input string. The match is considered successful if any of the criteria are satisfied. The set\nof supported match criteria includes a list of exact values and a list of regular expressions.",
            "title": "MatcherType",
            "x-displayname": "Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.MatcherType",
            "properties": {
                "exact_values": {
                    "type": "array",
                    "description": " A list of exact values to match the input against.\n\nExample: - \"['new york', 'london', 'sydney', 'tokyo', 'cairo']\"-",
                    "title": "exact values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Exact Values",
                    "x-ves-example": "['new york', 'london', 'sydney', 'tokyo', 'cairo']"
                },
                "regex_values": {
                    "type": "array",
                    "description": " A list of regular expressions to match the input against.\n\nExample: - \"['^new .*$', 'san f.*', '.* del .*']\"-",
                    "title": "regex values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Regex Values",
                    "x-ves-example": "['^new .*$', 'san f.*', '.* del .*']"
                },
                "transformers": {
                    "type": "array",
                    "description": " An ordered list of transformers (starting from index 0) to be applied to the path before matching. \n\nExample: - \"[BASE64_DECODE, LOWER_CASE]-",
                    "title": "transformers",
                    "items": {
                        "$ref": "#/definitions/policyTransformer"
                    },
                    "x-displayname": "Transformers"
                }
            }
        },
        "policyMatcherTypeBasic": {
            "type": "object",
            "description": "A matcher specifies multiple criteria for matching an input string. The match is considered successful if any of the criteria are satisfied. The set\nof supported match criteria includes a list of exact values and a list of regular expressions.",
            "title": "MatcherTypeBasic",
            "x-displayname": "Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.MatcherTypeBasic",
            "properties": {
                "exact_values": {
                    "type": "array",
                    "description": " A list of exact values to match the input against.\n\nExample: - \"['new york', 'london', 'sydney', 'tokyo', 'cairo']\"-",
                    "title": "exact values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Exact Values",
                    "x-ves-example": "['new york', 'london', 'sydney', 'tokyo', 'cairo']"
                },
                "regex_values": {
                    "type": "array",
                    "description": " A list of regular expressions to match the input against.\n\nExample: - \"['^new .*$', 'san f.*', '.* del .*']\"-",
                    "title": "regex values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Regex Values",
                    "x-ves-example": "['^new .*$', 'san f.*', '.* del .*']"
                }
            }
        },
        "policyPrefixMatchList": {
            "type": "object",
            "description": "List of IPv4 Prefix strings to match against.",
            "title": "Prefix Match List",
            "x-displayname": "IP Prefix Match List",
            "x-ves-proto-message": "ves.io.schema.policy.PrefixMatchList",
            "properties": {
                "invert_match": {
                    "type": "boolean",
                    "description": " Invert the match result.",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Match Result"
                },
                "ip_prefixes": {
                    "type": "array",
                    "description": " List of IPv4 prefix strings.\n\nExample: - \"192.168.20.0/24\"-\nRequired: YES",
                    "title": "ip prefixes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IP Prefix List",
                    "x-ves-example": "192.168.20.0/24",
                    "x-ves-required": "true"
                }
            }
        },
        "policySimpleWafExclusionRule": {
            "type": "object",
            "description": "Simple WAF exclusion rule specifies a simple set of match conditions to be matched to skip a list of WAF rule ids",
            "title": "SimpleWafExclusionRule",
            "x-displayname": "Simple WAF Exclusion Rule",
            "x-ves-displayorder": "10,3,6,7,8,9",
            "x-ves-oneof-field-domain_choice": "[\"any_domain\",\"domain_regex\"]",
            "x-ves-proto-message": "ves.io.schema.policy.SimpleWafExclusionRule",
            "properties": {
                "any_domain": {
                    "description": "Exclusive with [domain_regex]\nx-displayName: \"Any Domain\"\nApply this waf exclusion rule for any domain",
                    "title": "Any domain",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "app_firewall_detection_control": {
                    "description": " App Firewall detection changes to be applied for this request",
                    "title": "App Firewall Detection control",
                    "$ref": "#/definitions/policyAppFirewallDetectionControl",
                    "x-displayname": "App Firewall Detection Control"
                },
                "domain_regex": {
                    "type": "string",
                    "description": "Exclusive with [any_domain]\nx-displayName: \"Domain Regex\"\nx-example: \"*.mybloggingwebsite.org\"\nDomain to be matched",
                    "title": "Domain Regex"
                },
                "exclude_rule_ids": {
                    "type": "array",
                    "description": " WAF Rules to be excluded when match conditions are met\n\nExample: - \"[942260, 942200]\"-\nRequired: YES",
                    "title": "Exclude WAF Rules",
                    "items": {
                        "$ref": "#/definitions/waf_rule_listWafRuleID"
                    },
                    "x-displayname": "Exclude WAF Rules",
                    "x-ves-example": "[942260, 942200]",
                    "x-ves-required": "true"
                },
                "expiration_timestamp": {
                    "type": "string",
                    "description": " The expiration_timestamp is the RFC 3339 format timestamp at which the containing rule is considered to be logically expired. The rule continues to exist in\n the configuration but is not applied anymore.\n\nExample: - \"2019-12-31:44:34.171543432Z\"-",
                    "title": "expiration timestamp",
                    "format": "date-time",
                    "x-displayname": "Expiration Timestamp",
                    "x-ves-example": "2019-12-31:44:34.171543432Z"
                },
                "metadata": {
                    "description": " Common attributes for the rule including name and description.\nRequired: YES",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaMessageMetaType",
                    "x-displayname": "Metadata",
                    "x-ves-required": "true"
                },
                "methods": {
                    "type": "array",
                    "description": " methods to be matched\n\nExample: - \"GET\"-",
                    "title": "Methods",
                    "items": {
                        "$ref": "#/definitions/schemaHttpMethod"
                    },
                    "x-displayname": "Methods",
                    "x-ves-example": "GET"
                },
                "path_regex": {
                    "type": "string",
                    "description": " path regex to be matched\n\nExample: - \"/blog_id/.*\"-\nRequired: YES",
                    "title": "Path Regex",
                    "x-displayname": "Path Regex",
                    "x-ves-example": "/blog_id/.*",
                    "x-ves-required": "true"
                }
            }
        },
        "policyTlsFingerprintMatcherType": {
            "type": "object",
            "description": "A TLS fingerprint matcher specifies multiple criteria for matching a TLS fingerprint. The set of supported positve match criteria includes a list of known\nclasses of TLS fingerprints and a list of exact values. The match is considered successful if either of these positive criteria are satisfied and the input\nfingerprint is not one of the excluded values.",
            "title": "TlsFingerprintMatcherType",
            "x-displayname": "TLS Fingerprint Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.TlsFingerprintMatcherType",
            "properties": {
                "classes": {
                    "type": "array",
                    "description": " A list of known classes of TLS fingerprints to match the input TLS JA3 fingerprint against.\n\nExample: - \"['ADWARE', 'TRICKBOT']-",
                    "title": "classes",
                    "items": {
                        "$ref": "#/definitions/policyKnownTlsFingerprintClass"
                    },
                    "x-displayname": "TLS fingerprint classes"
                },
                "exact_values": {
                    "type": "array",
                    "description": " A list of exact TLS JA3 fingerprints to match the input TLS JA3 fingerprint against.\n\nExample: - \"['ed6dfd54b01ebe31b7a65b88abfa7297', '16efcf0e00504ddfedde13bfea997952', 'de364c46b0dfc283b5e38c79ceae3f8f']\"-",
                    "title": "exact values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Exact Values",
                    "x-ves-example": "['ed6dfd54b01ebe31b7a65b88abfa7297', '16efcf0e00504ddfedde13bfea997952', 'de364c46b0dfc283b5e38c79ceae3f8f']"
                },
                "excluded_values": {
                    "type": "array",
                    "description": " A list of TLS JA3 fingerprints to be excluded when matching the input TLS JA3 fingerprint. This can be used to skip known false positives when using one\n or more known TLS fingerprint classes in the enclosing matcher.\n\nExample: - \"['fb00055a1196aeea8d1bc609885ba953', 'b386946a5a44d1ddcc843bc75336dfce']\"-",
                    "title": "excluded values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Excluded Values",
                    "x-ves-example": "['fb00055a1196aeea8d1bc609885ba953', 'b386946a5a44d1ddcc843bc75336dfce']"
                }
            }
        },
        "policyTransformer": {
            "type": "string",
            "description": "Transformers to be applied on the part of the request before matching.\n\n - TRANSFORMER_NONE: transformer none\n\nNo transformers enabled\n - LOWER_CASE: lower case\n\nConvert string to lower case\n - UPPER_CASE: upper case\n\nConvert string to upper case\n - BASE64_DECODE: base64 decode\n\nDecode string assuming base64 encoding\n - NORMALIZE_PATH: normalize path\n\nNormalize URL path so that /a/b/../c will be transformed to /a/c\n - REMOVE_WHITESPACE: remove whitespace\n\nRemove whitespaces\n - URL_DECODE: URL decode\n\nDecode string assuming URL encoding as per rfc1738\n - TRIM_LEFT: trim left\n\nRemove whitespace from the left side of the input string\n - TRIM_RIGHT: trim right\n\nRemove whitespace from the right side of the input string\n - TRIM: trim\n\nRemove whitespace from the both sides of the input string",
            "title": "Transformer",
            "enum": [
                "TRANSFORMER_NONE",
                "LOWER_CASE",
                "UPPER_CASE",
                "BASE64_DECODE",
                "NORMALIZE_PATH",
                "REMOVE_WHITESPACE",
                "URL_DECODE",
                "TRIM_LEFT",
                "TRIM_RIGHT",
                "TRIM"
            ],
            "default": "TRANSFORMER_NONE",
            "x-displayname": "Transformer",
            "x-ves-proto-enum": "ves.io.schema.policy.Transformer"
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "protobufNullValue": {
            "type": "string",
            "description": "-NullValue- is a singleton enumeration to represent the null value for the\n-Value- type union.\n\n The JSON representation for -NullValue- is JSON -null-.\n\n - NULL_VALUE: Null value.",
            "enum": [
                "NULL_VALUE"
            ],
            "default": "NULL_VALUE"
        },
        "rate_limiterRateLimitPeriodUnit": {
            "type": "string",
            "description": "Unit for the period per which the rate limit is applied.\n\n - SECOND: Second\n\nRate limit period is 1 second\n - MINUTE: Minute\n\nRate limit period is 1 minute\n - HOUR: Hour\n\nRate limit period is 1 hour\n - DAY: Day\n\nRate limit period is 1 day",
            "title": "RateLimitPeriodUnit",
            "enum": [
                "SECOND",
                "MINUTE",
                "HOUR",
                "DAY"
            ],
            "default": "SECOND",
            "x-displayname": "Rate Limit Period Unit",
            "x-ves-proto-enum": "ves.io.schema.rate_limiter.RateLimitPeriodUnit"
        },
        "rate_limiterRateLimitValue": {
            "type": "object",
            "description": "A tuple consisting of a rate limit period unit and the total number of allowed requests for that period.",
            "title": "RateLimitValue",
            "x-displayname": "Rate Limit Value",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.rate_limiter.RateLimitValue",
            "properties": {
                "burst_multiplier": {
                    "type": "integer",
                    "description": " The maximum burst of requests to accommodate, expressed as a multiple of the rate.",
                    "title": "burst_multiplier",
                    "format": "int64",
                    "x-displayname": "Burst Multiplier"
                },
                "total_number": {
                    "type": "integer",
                    "description": " The total number of allowed requests for 1 unit (e.g. SECOND/MINUTE/HOUR etc.) of the specified period.\nRequired: YES",
                    "title": "total_number",
                    "format": "int64",
                    "x-displayname": "Number",
                    "x-ves-required": "true"
                },
                "unit": {
                    "description": " Unit for the period per which the rate limit is applied.\nRequired: YES",
                    "title": "unit",
                    "$ref": "#/definitions/rate_limiterRateLimitPeriodUnit",
                    "x-displayname": "Per Period",
                    "x-ves-required": "true"
                }
            }
        },
        "rate_limiter_policyPolicyList": {
            "type": "object",
            "description": "List of rate limiter policies to be applied.",
            "title": "Rate Limiter Policy List",
            "x-displayname": "Rate Limiter Policy List",
            "x-ves-proto-message": "ves.io.schema.views.rate_limiter_policy.PolicyList",
            "properties": {
                "policies": {
                    "type": "array",
                    "description": " Ordered list of rate limiter policies.\nRequired: YES",
                    "title": "Rate Limiter Policies",
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Rate Limiter Policies",
                    "x-ves-required": "true"
                }
            }
        },
        "routeCookieForHashing": {
            "type": "object",
            "description": "Two types of cookie affinity:\n\n1. Passive. Takes a cookie that's present in the cookies header and\n   hashes on its value.\n\n2. Generated. Generates and sets a cookie with an expiration (TTL)\n   on the first request from the client in its response to the client,\n   based on the endpoint the request gets sent to. The client then\n   presents this on the next and all subsequent requests. The hash of\n   this is sufficient to ensure these requests get sent to the same\n   endpoint. The cookie is generated by hashing the source and\n   destination ports and addresses so that multiple independent HTTP2\n   streams on the same connection will independently receive the same\n   cookie, even if they arrive simultaneously.",
            "title": "Cookie for hashing",
            "x-displayname": "Hashing using Cookie",
            "x-ves-proto-message": "ves.io.schema.route.CookieForHashing",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " The name of the cookie that will be used to obtain the hash key. If the\n cookie is not present and TTL below is not set, no hash will be\n produced\n\nExample: - \"userid\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "userid",
                    "x-ves-required": "true"
                },
                "path": {
                    "type": "string",
                    "description": " The name of the path for the cookie. If no path is specified here, no path\n will be set for the cookie\n\nExample: - \"/Users/userid/browser/cookies\"-",
                    "title": "path",
                    "x-displayname": "Path",
                    "x-ves-example": "/Users/userid/browser/cookies"
                },
                "ttl": {
                    "type": "integer",
                    "description": " If specified, a cookie with the TTL will be generated if the cookie is\n not present. If the TTL is present and zero, the generated cookie will\n be a session cookie. TTL value is in milliseconds\n\nExample: - 5000-",
                    "title": "ttl",
                    "format": "int64",
                    "x-displayname": "TTL"
                }
            }
        },
        "routeHashPolicyType": {
            "type": "object",
            "description": "HashPolicyType specifies the field of the incoming request that will be used for\ngenerating hash key. When multiple hash policies are configured, this can also specify\nif the current hash policy is terminal policy or not.",
            "title": "HashPolicyType",
            "x-displayname": "Hash Policy",
            "x-ves-oneof-field-policy_specifier": "[\"cookie\",\"header_name\",\"source_ip\"]",
            "x-ves-proto-message": "ves.io.schema.route.HashPolicyType",
            "properties": {
                "cookie": {
                    "description": "Exclusive with [header_name source_ip]\nx-displayName: \"Cookie\"\nHash based on cookie",
                    "title": "Cookie",
                    "$ref": "#/definitions/routeCookieForHashing"
                },
                "header_name": {
                    "type": "string",
                    "description": "Exclusive with [cookie source_ip]\nx-displayName: \"Header Name\"\nx-example: \"host\"\nThe name or key of the request header that will be used to obtain the hash key",
                    "title": "Header"
                },
                "source_ip": {
                    "type": "boolean",
                    "description": "Exclusive with [cookie header_name]\nx-displayName: \"Source IP\"\nx-example: true\nHash based on source IP address",
                    "title": "Source IP",
                    "format": "boolean"
                },
                "terminal": {
                    "type": "boolean",
                    "description": " Specify if its a terminal policy\n\nExample: - true-",
                    "title": "terminal",
                    "format": "boolean",
                    "x-displayname": "Terminal"
                }
            }
        },
        "routeRouteDirectResponse": {
            "type": "object",
            "description": "Send this direct response in case of route match action is direct response",
            "title": "RouteDirectResponse",
            "x-displayname": "Direct Response",
            "x-ves-proto-message": "ves.io.schema.route.RouteDirectResponse",
            "properties": {
                "response_body": {
                    "type": "string",
                    "description": " response body to send\n\nExample: - \"OK\"-",
                    "title": "response_body",
                    "x-displayname": "Response Body",
                    "x-ves-example": "OK"
                },
                "response_code": {
                    "type": "integer",
                    "description": " response code to send\n\nExample: - 200-",
                    "title": "response_code",
                    "format": "int64",
                    "x-displayname": "Response Code"
                }
            }
        },
        "routeRouteQueryParams": {
            "type": "object",
            "description": "Query params keys to strip while manipulating the HTTP request",
            "title": "RouteQueryParams",
            "x-displayname": "Query Parameters",
            "x-ves-proto-message": "ves.io.schema.route.RouteQueryParams",
            "properties": {
                "query_params": {
                    "type": "array",
                    "description": " Query params keys to strip while manipulating the HTTP request\n\nExample: - \"userid\"-",
                    "title": "query_params",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Query Parameters",
                    "x-ves-example": "userid"
                }
            }
        },
        "routeRouteRedirect": {
            "type": "object",
            "description": "route redirect parameters when match action is redirect.",
            "title": "RouteRedirect",
            "x-displayname": "Redirect",
            "x-ves-displayorder": "3,1,2,6,7",
            "x-ves-oneof-field-query_params": "[\"all_params\",\"remove_all_params\",\"retain_all_params\",\"strip_query_params\"]",
            "x-ves-proto-message": "ves.io.schema.route.RouteRedirect",
            "properties": {
                "all_params": {
                    "type": "boolean",
                    "description": "Exclusive with [remove_all_params retain_all_params strip_query_params]\nx-displayName: \"Remove All Parameters Enable/Disable\"\nx-example: true\nIf true, it indicates that during redirection, the query portion of the URL will\nbe removed. Default value is false, which means query portion of the URL will NOT be removed",
                    "title": "all_params",
                    "format": "boolean"
                },
                "host_redirect": {
                    "type": "string",
                    "description": " swap host part of incoming URL in redirect URL\n\nExample: - \"one.ves.io\"-",
                    "title": "host_redirect",
                    "x-displayname": "Host",
                    "x-ves-example": "one.ves.io"
                },
                "path_redirect": {
                    "type": "string",
                    "description": " swap path part of incoming URL in redirect URL\n\nExample: - \"/api/register\"-",
                    "title": "path_redirect",
                    "x-displayname": "Path",
                    "x-ves-example": "/api/register"
                },
                "proto_redirect": {
                    "type": "string",
                    "description": " swap protocol part of incoming URL in redirect URL\n The protocol can be swapped with either http or https\n When incoming-proto option is specified, swapping of protocol is not done.\n\nExample: - \"https\"-",
                    "title": "proto_redirect",
                    "x-displayname": "Protocol",
                    "x-ves-example": "https"
                },
                "remove_all_params": {
                    "description": "Exclusive with [all_params retain_all_params strip_query_params]\nx-displayName: \"Remove All Parameters\"\nRemove all query parameters",
                    "title": "Remove All Params",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "response_code": {
                    "type": "integer",
                    "description": " The HTTP status code to use in the redirect response. The default response\n code is MOVED_PERMANENTLY (301).\n\nExample: - 303-",
                    "title": "response_code",
                    "format": "int64",
                    "x-displayname": "Response Code"
                },
                "retain_all_params": {
                    "description": "Exclusive with [all_params remove_all_params strip_query_params]\nx-displayName: \"Retain All Parameters\"\nRetain all query parameters",
                    "title": "Retain All Params",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "strip_query_params": {
                    "description": "Exclusive with [all_params remove_all_params retain_all_params]\nx-displayName: \"Query Parameters to Remove\"\nSpecifies the list of query params to be removed. Not supported",
                    "title": "strip_query_params",
                    "$ref": "#/definitions/routeRouteQueryParams"
                }
            }
        },
        "routeWebsocketConfigType": {
            "type": "object",
            "description": "Configuration to allow Websocket\n\nRequest headers of such upgrade looks like below\n  'connection', 'Upgrade'\n  'upgrade', 'websocket'\n\nWith configuration to allow websocket upgrade, ADC will produce following response\n  'HTTP/1.1 101 Switching Protocols\n  'Upgrade': 'websocket'\n  'Connection': 'Upgrade'",
            "title": "WebsocketConfigType",
            "x-displayname": "Websocket Configuration",
            "x-ves-proto-message": "ves.io.schema.route.WebsocketConfigType",
            "properties": {
                "idle_timeout": {
                    "type": "integer",
                    "description": " Idle Timeout for Websocket in milli seconds. After timeout, connection will be closed\n\nExample: - 2000-",
                    "title": "idle_timeout",
                    "format": "int64",
                    "x-displayname": "Idle Timeout"
                },
                "max_connect_attempts": {
                    "type": "integer",
                    "description": " The maximum number of unsuccessful connection attempts that will be made before\n giving up. Default is 1\n\nExample: - 5-",
                    "title": "max_connect_attempts",
                    "format": "int64",
                    "x-displayname": "Maximum Connection Attempts"
                },
                "use_websocket": {
                    "type": "boolean",
                    "description": " Specifies that the HTTP client connection to this route is allowed to upgrade to\n a WebSocket connection\n\nExample: - true-",
                    "title": "use_websocket",
                    "format": "boolean",
                    "x-displayname": "Use Websocket"
                }
            }
        },
        "runtimeStreamError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                },
                "grpc_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "http_status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "schemaAppFirewallViolationType": {
            "type": "string",
            "description": "List of all Violation Types\n",
            "title": "App Firewall Violation Type",
            "enum": [
                "VIOL_NONE",
                "VIOL_FILETYPE",
                "VIOL_METHOD",
                "VIOL_MANDATORY_HEADER",
                "VIOL_HTTP_RESPONSE_STATUS",
                "VIOL_REQUEST_MAX_LENGTH",
                "VIOL_FILE_UPLOAD",
                "VIOL_FILE_UPLOAD_IN_BODY",
                "VIOL_XML_MALFORMED",
                "VIOL_JSON_MALFORMED",
                "VIOL_ASM_COOKIE_MODIFIED",
                "VIOL_HTTP_PROTOCOL_MULTIPLE_HOST_HEADERS",
                "VIOL_HTTP_PROTOCOL_CHECK_MAXIMUM_NUMBER_OF_PARAMETERS",
                "VIOL_HTTP_PROTOCOL_BAD_HOST_HEADER_VALUE",
                "VIOL_HTTP_PROTOCOL_CHECK_MAXIMUM_NUMBER_OF_HEADERS",
                "VIOL_HTTP_PROTOCOL_UNPARSABLE_REQUEST_CONTENT",
                "VIOL_HTTP_PROTOCOL_HIGH_ASCII_CHARACTERS_IN_HEADERS",
                "VIOL_HTTP_PROTOCOL_NULL_IN_REQUEST",
                "VIOL_HTTP_PROTOCOL_BAD_HTTP_VERSION",
                "VIOL_HTTP_PROTOCOL_CONTENT_LENGTH_SHOULD_BE_A_POSITIVE_NUMBER",
                "VIOL_HTTP_PROTOCOL_HOST_HEADER_CONTAINS_IP_ADDRESS",
                "VIOL_HTTP_PROTOCOL_CRLF_CHARACTERS_BEFORE_REQUEST_START",
                "VIOL_HTTP_PROTOCOL_NO_HOST_HEADER_IN_HTTP_1_1_REQUEST",
                "VIOL_HTTP_PROTOCOL_BAD_MULTIPART_PARAMETERS_PARSING",
                "VIOL_HTTP_PROTOCOL_BAD_MULTIPART_FORM_DATA_REQUEST_PARSING",
                "VIOL_HTTP_PROTOCOL_BODY_IN_GET_OR_HEAD_REQUESTS",
                "VIOL_HTTP_PROTOCOL_CHUNKED_REQUEST_WITH_CONTENT_LENGTH_HEADER",
                "VIOL_HTTP_PROTOCOL_SEVERAL_CONTENT_LENGTH_HEADERS",
                "VIOL_HTTP_PROTOCOL_HEADER_NAME_WITH_NO_HEADER_VALUE",
                "VIOL_HTTP_PROTOCOL_POST_REQUEST_WITH_CONTENT_LENGTH_0",
                "VIOL_EVASION_BAD_UNESCAPE",
                "VIOL_EVASION_APACHE_WHITESPACE",
                "VIOL_EVASION_BARE_BYTE_DECODING",
                "VIOL_EVASION_IIS_UNICODE_CODEPOINTS",
                "VIOL_EVASION_IIS_BACKSLASHES",
                "VIOL_EVASION_U_DECODING",
                "VIOL_EVASION_MULTIPLE_DECODING",
                "VIOL_EVASION_DIRECTORY_TRAVERSALS"
            ],
            "default": "VIOL_NONE",
            "x-displayname": "App Firewall Violation Type",
            "x-ves-proto-enum": "ves.io.schema.AppFirewallViolationType"
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "BlindfoldSecretInfoType specifies information about the Secret managed by Volterra Secret Management",
            "title": "BlindfoldSecretInfoType",
            "x-displayname": "Blindfold Secret",
            "x-ves-displayorder": "3,1,2",
            "x-ves-proto-message": "ves.io.schema.BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Secret Management service.",
                    "title": "Decryption Provider",
                    "x-displayname": "Decryption Provider"
                },
                "location": {
                    "type": "string",
                    "description": " Location is the uri_ref. It could be in url format for string:///\n Or it could be a path if the store provider is an http/https location\n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                },
                "store_provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///",
                    "title": "Store Provider",
                    "x-displayname": "Store Provider"
                }
            }
        },
        "schemaBufferConfigType": {
            "type": "object",
            "description": "Some upstream applications are not capable of handling streamed data. This config\nenables buffering the entire request before sending to upstream application. We can\nspecify the maximum buffer size and buffer interval with this config.\n\nBuffering can be enabled and disabled at VirtualHost and Route levels\nRoute level buffer configuration takes precedence.",
            "title": "BufferConfigType",
            "x-displayname": "Buffer Configuration",
            "x-ves-displayorder": "2,3,1",
            "x-ves-proto-message": "ves.io.schema.BufferConfigType",
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": " Disable buffering for a particular route. This is useful when virtual-host\n has buffering, but we need to disable it on a specific route.\n The value of this field is ignored for virtual-host",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "max_request_bytes": {
                    "type": "integer",
                    "description": " The maximum request size that the filter will buffer before the connection\n manager will stop buffering and return a RequestEntityTooLarge (413) response.\n\nExample: - \"2048\"-",
                    "title": "max_request_bytes",
                    "format": "int64",
                    "x-displayname": "Max Request Bytes",
                    "x-ves-example": "2048"
                },
                "max_request_time": {
                    "type": "integer",
                    "description": " The maximum number of seconds that the filter will wait for a complete\n request before returning a RequestTimeout (408) response\n\nExample: - \"30\"-",
                    "title": "max_request_time",
                    "format": "int64",
                    "x-displayname": "Max Request Time",
                    "x-ves-example": "30"
                }
            }
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "ClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "x-displayname": "In-Clear Secret",
            "x-ves-displayorder": "2,1",
            "x-ves-proto-message": "ves.io.schema.ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the store to get encrypted bytes\n This field needs to be provided only if the url scheme is not string:///\n\nExample: - \"box-provider\"-",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "box-provider"
                },
                "url": {
                    "type": "string",
                    "description": " URL of the secret. Currently supported URL schemes is string:///.\n For string:/// scheme, Secret needs to be encoded Base64 format.\n When asked for this secret, caller will get Secret bytes after Base64 decoding.  \n\nExample: - \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"-\nRequired: YES",
                    "title": "URL",
                    "x-displayname": "URL",
                    "x-ves-example": "string:///U2VjcmV0SW5mb3JtYXRpb24=",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed. \n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed"
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational"
                }
            }
        },
        "schemaCorsPolicy": {
            "type": "object",
            "description": "Cross-Origin Resource Sharing requests configuration specified at Virtual-host or\nRoute level. Route level configuration takes precedence.\n\nAn example of an Cross origin HTTP request\n    GET /resources/public-data/ HTTP/1.1\n    Host: bar.other\n    User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n    Accept-Language: en-us,en;q=0.5\n    Accept-Encoding: gzip,deflate\n    Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n    Connection: keep-alive\n    Referrer: http://foo.example/examples/access-control/simpleXSInvocation.html\n    Origin: http://foo.example\n\n\n    HTTP/1.1 200 OK\n    Date: Mon, 01 Dec 2008 00:23:53 GMT\n    Server: Apache/2.0.61\n    Access-Control-Allow-Origin: *\n    Keep-Alive: timeout=2, max=100\n    Connection: Keep-Alive\n    Transfer-Encoding: chunked\n    Content-Type: application/xml\n\nAn example for cross origin HTTP OPTIONS request with Access-Control-Request-* header\n\n    OPTIONS /resources/post-here/ HTTP/1.1\n    Host: bar.other\n    User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n    Accept-Language: en-us,en;q=0.5\n    Accept-Encoding: gzip,deflate\n    Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n    Connection: keep-alive\n    Origin: http://foo.example\n    Access-Control-Request-Method: POST\n    Access-Control-Request-Headers: X-PINGOTHER, Content-Type\n\n\n    HTTP/1.1 204 No Content\n    Date: Mon, 01 Dec 2008 01:15:39 GMT\n    Server: Apache/2.0.61 (Unix)\n    Access-Control-Allow-Origin: http://foo.example\n    Access-Control-Allow-Methods: POST, GET, OPTIONS\n    Access-Control-Allow-Headers: X-PINGOTHER, Content-Type\n    Access-Control-Max-Age: 86400\n    Vary: Accept-Encoding, Origin\n    Keep-Alive: timeout=2, max=100\n    Connection: Keep-Alive",
            "title": "CorsPolicy",
            "x-displayname": "CORS Policy",
            "x-ves-displayorder": "2,3,4,5,6,9,8,1",
            "x-ves-proto-message": "ves.io.schema.CorsPolicy",
            "properties": {
                "allow_credentials": {
                    "type": "boolean",
                    "description": " Specifies whether the resource allows credentials",
                    "title": "allow_credentials",
                    "format": "boolean",
                    "x-displayname": "Allow Credentials"
                },
                "allow_headers": {
                    "type": "string",
                    "description": " Specifies the content for the access-control-allow-headers header",
                    "title": "allow_headers",
                    "x-displayname": "Allow Headers"
                },
                "allow_methods": {
                    "type": "string",
                    "description": " Specifies the content for the access-control-allow-methods header",
                    "title": "allow_methods",
                    "x-displayname": "Allow Methods"
                },
                "allow_origin": {
                    "type": "array",
                    "description": " Specifies the origins that will be allowed to do CORS requests.\n An origin is allowed if either allow_origin or allow_origin_regex match",
                    "title": "allow_origin",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Allow Origin"
                },
                "allow_origin_regex": {
                    "type": "array",
                    "description": " Specifies regex patterns that match allowed origins.\n An origin is allowed if either allow_origin or allow_origin_regex match",
                    "title": "allow_origin_regex",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Allow Origin Regex"
                },
                "disabled": {
                    "type": "boolean",
                    "description": " Disable the CorsPolicy for a particular route. This is useful when\n virtual-host has CorsPolicy, but we need to disable it on a specific route.\n The value of this field is ignored for virtual-host",
                    "title": "disabled",
                    "format": "boolean",
                    "x-displayname": "Disabled"
                },
                "expose_headers": {
                    "type": "string",
                    "description": " Specifies the content for the access-control-expose-headers header",
                    "title": "expose_headers",
                    "x-displayname": "Expose Headers"
                },
                "max_age": {
                    "type": "string",
                    "description": " Specifies the content for the access-control-max-age header",
                    "title": "max_age",
                    "x-displayname": "Max Age"
                },
                "maximum_age": {
                    "type": "integer",
                    "description": " Specifies the content for the access-control-max-age header in seconds.\n This indicates the maximum number of seconds the results can be cached\n A value of -1 will disable caching.\n Maximum permitted value is 86400 seconds (24 hours)",
                    "title": "maximum_age",
                    "format": "int32",
                    "x-displayname": "Maximum Age"
                }
            }
        },
        "schemaDenominatorType": {
            "type": "string",
            "description": "Denominator used in fraction where sampling percentages are needed. example sampled requests\n\nUse hundred as denominator\nUse ten thousand as denominator\nUse million as denominator",
            "title": "DenominatorType",
            "enum": [
                "HUNDRED",
                "TEN_THOUSAND",
                "MILLION"
            ],
            "default": "HUNDRED",
            "x-displayname": "Denominator",
            "x-ves-proto-enum": "ves.io.schema.DenominatorType"
        },
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaFractionalPercent": {
            "type": "object",
            "description": "Fraction used where sampling percentages are needed. example sampled requests",
            "title": "FractionalPercent",
            "x-displayname": "Fractional Percent",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.FractionalPercent",
            "properties": {
                "denominator": {
                    "description": " Samples per denominator. numerator part per 100 or 10000 ro 1000000\nRequired: YES",
                    "title": "denominator",
                    "$ref": "#/definitions/schemaDenominatorType",
                    "x-displayname": "Denominator",
                    "x-ves-required": "true"
                },
                "numerator": {
                    "type": "integer",
                    "description": " sampled parts per denominator. If denominator was 10000, then value of 5 will be 5 in 10000\n\nExample: - \"5\"-\nRequired: YES",
                    "title": "numerator",
                    "format": "int64",
                    "x-displayname": "Numerator",
                    "x-ves-example": "5",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaHeaderManipulationOptionType": {
            "type": "object",
            "description": "HTTP header is a key-value pair.\nThe name acts as key of HTTP header\nThe value acts as the data/value of HTTP header\nExample HTTP header\n    Host: user.volterra.com\nIn the above example, Host is the name or key of HTTP header\nIn the above example, user.volterra.com is the value of HTTP header",
            "title": "HeaderManipulationOptionType",
            "x-displayname": "Header Manipulation Option",
            "x-ves-proto-message": "ves.io.schema.HeaderManipulationOptionType",
            "properties": {
                "append": {
                    "type": "boolean",
                    "description": " Should the value be appended? If true, the value is appended to existing values.\n Default value is do not append",
                    "title": "append",
                    "format": "boolean",
                    "x-displayname": "Append"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the HTTP header.\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-required": "true"
                },
                "value": {
                    "type": "string",
                    "description": " Value of the HTTP header.\nRequired: YES",
                    "title": "value",
                    "x-displayname": "Value",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaHttpMethod": {
            "type": "string",
            "description": "Specifies the HTTP method used to acess a resource.\n\nAny HTTP Method\nGET method\nHEAD method\nPOST method\nPUT method\nDELETE method\nCONNECT method\nOPTIONS method\nTRACE method\nPATCH method",
            "title": "HttpMethod",
            "enum": [
                "ANY",
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "CONNECT",
                "OPTIONS",
                "TRACE",
                "PATCH"
            ],
            "default": "ANY",
            "x-displayname": "HTTP Method",
            "x-ves-proto-enum": "ves.io.schema.HttpMethod"
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaLabelSelectorType": {
            "type": "object",
            "description": "This type can be used to establish a 'selector reference' from one object(called selector) to \na set of other objects(called selectees) based on the value of expresssions. \nA label selector is a label query over a set of resources. An empty label selector matches all objects. \nA null label selector matches no objects. Label selector is immutable.\nexpressions is a list of strings of label selection expression. \nEach string has \",\" separated values which are \"AND\" and all strings are logically \"OR\".\nBNF for expression string\n\u003cselector-syntax\u003e         ::= \u003crequirement\u003e | \u003crequirement\u003e \",\" \u003cselector-syntax\u003e\n\u003crequirement\u003e             ::= [!] KEY [ \u003cset-based-restriction\u003e | \u003cexact-match-restriction\u003e ]\n\u003cset-based-restriction\u003e   ::= \"\" | \u003cinclusion-exclusion\u003e \u003cvalue-set\u003e\n\u003cinclusion-exclusion\u003e     ::= \u003cinclusion\u003e | \u003cexclusion\u003e\n\u003cexclusion\u003e               ::= \"notin\"\n\u003cinclusion\u003e               ::= \"in\"\n\u003cvalue-set\u003e               ::= \"(\" \u003cvalues\u003e \")\"\n\u003cvalues\u003e                  ::= VALUE | VALUE \",\" \u003cvalues\u003e\n\u003cexact-match-restriction\u003e ::= [\"=\"|\"==\"|\"!=\"] VALUE",
            "title": "LabelSelectorType",
            "x-displayname": "Label Selector",
            "x-ves-proto-message": "ves.io.schema.LabelSelectorType",
            "properties": {
                "expressions": {
                    "type": "array",
                    "description": " expressions contains the kubernetes style label expression for selections.\n\nExample: - \"region in (us-west1, us-west2),tier in (staging)\"-\nRequired: YES",
                    "title": "expressions",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Selector Expression",
                    "x-ves-example": "region in (us-west1, us-west2),tier in (staging)",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaListMetaType": {
            "type": "object",
            "description": "ListMetaType is metadata that all lists must have.",
            "title": "ListMetaType",
            "x-displayname": "List Metadata",
            "x-ves-proto-message": "ves.io.schema.ListMetaType",
            "properties": {
                "resource_version": {
                    "type": "string",
                    "description": " An opaque value that represents the revision of the store at the time the list API is\n performed. It can be used in subsequent watch API to receive all changes after the list\n API, or in a replace API to make the replace conditional on the object still being at\n that revision\n\nExample: - \"181255\"-",
                    "title": "resource_version",
                    "x-displayname": "Resource Version",
                    "x-ves-example": "181255"
                }
            }
        },
        "schemaMessageMetaType": {
            "type": "object",
            "description": "MessageMetaType is metadata (common attributes) of a message that only certain messages\nhave. This information is propagated to the metadata of a child object that gets created\nfrom the containing message during view processing.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "MessageMetaType",
            "x-displayname": "Message Metadata",
            "x-ves-proto-message": "ves.io.schema.MessageMetaType",
            "properties": {
                "description": {
                    "type": "string",
                    "description": " Human readable description.\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object that corresponds to the containing message.\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of the message.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaObjectMetaType": {
            "type": "object",
            "description": "ObjectMetaType is metadata(common attributes) of an object that all configuration objects will have.\nThe information in this type can be specified by user during create and replace APIs.",
            "title": "ObjectMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value"
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created. \n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. Object create will fail if \n provided by the client and the value exists in the system. Typically generated by the\n server on successful creation of an object and is not allowed to change once populated.\n Shadowed by SystemObjectMeta's uid field.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaRetryBackOff": {
            "type": "object",
            "description": "Specifies parameters that control retry back off.",
            "title": "RetryBackOff",
            "x-displayname": "Retry BackOff Interval",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.RetryBackOff",
            "properties": {
                "base_interval": {
                    "type": "integer",
                    "description": " Specifies the base interval between retries in milliseconds\n\nExample: - 5-",
                    "title": "base_interval",
                    "format": "int64",
                    "x-displayname": "Base Retry Interval"
                },
                "max_interval": {
                    "type": "integer",
                    "description": " Specifies the maximum interval between retries in milliseconds.\n This parameter is optional, but must be greater than or equal\n to the base_interval if set. The default is 10 times the base_interval.\n\nExample: - 60-",
                    "title": "max_interval",
                    "format": "int64",
                    "x-displayname": "Maximum Retry Interval"
                }
            }
        },
        "schemaRetryPolicyType": {
            "type": "object",
            "description": "Retry policy configuration for route destination.",
            "title": "RetryPolicyType",
            "x-displayname": "Retry Policy",
            "x-ves-displayorder": "1,6,2,3,4,5",
            "x-ves-proto-message": "ves.io.schema.RetryPolicyType",
            "properties": {
                "back_off": {
                    "description": " Specifies parameters that control retry back off.\n This parameter is optional, in which case the default base\n interval is 25 milliseconds. The default maximum interval is\n 10 times the base interval",
                    "title": "Retry BackOff",
                    "$ref": "#/definitions/schemaRetryBackOff",
                    "x-displayname": "Retry BackOff interval"
                },
                "num_retries": {
                    "type": "integer",
                    "description": " Specifies the allowed number of retries. Defaults to 1.\n Retries can be done any number of times. An exponential back-off algorithm\n is used between each retry\n\nExample: - 3-",
                    "title": "num_retries",
                    "format": "int64",
                    "x-displayname": "Number of Retries"
                },
                "per_try_timeout": {
                    "type": "integer",
                    "description": " Specifies a non-zero timeout per retry attempt. In milliseconds\n\nExample: - 1000-",
                    "title": "per_try_timeout",
                    "format": "int64",
                    "x-displayname": "Per Try Timeout"
                },
                "retriable_status_codes": {
                    "type": "array",
                    "description": " HTTP status codes that should trigger a retry in addition to those specified by retry_on.\n\nExample: - 403-",
                    "title": "Retriable status Code",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-displayname": "Status Code to Retry"
                },
                "retry_condition": {
                    "type": "array",
                    "description": " Specifies the conditions under which retry takes place.\n Retries can be on different types of condition depending on application requirements.\n For example, network failure, all 5xx response codes, idempotent 4xx response codes, etc\n\n The possible values are\n\n \"5xx\"             : Retry will be done if the upstream server responds with any 5xx response code,\n                     or does not respond at all (disconnect/reset/read timeout).\n\n \"gateway-error\"   : Retry will be done only if the upstream server responds with 502, 503 or\n                     504 responses (Included in 5xx)\n\n \"connect-failure\" : Retry will be done if the request fails because of a connection failure to the\n                     upstream server (connect timeout, etc.). (Included in 5xx)\n\n \"refused-stream\"  : Retry is done if the upstream server resets the stream with a REFUSED_STREAM\n                     error code (Included in 5xx)\n\n \"retriable-4xx\"   : Retry is done if the upstream server responds with a retriable 4xx response code.\n                     The only response code in this category is HTTP CONFLICT (409)\n\n \"retriable-status-codes\" :  Retry is done if the upstream server responds with any response code\n                             matching one defined in retriable_status_codes field\n\nExample: - \"5xx\"-",
                    "title": "retry_condition",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Retry Condition",
                    "x-ves-example": "5xx"
                },
                "retry_on": {
                    "type": "string",
                    "description": " Specifies the conditions under which retry takes place. \n Retries can be on different types of condition depending on application requirements.\n For example, network failure, all 5xx response codes, idempotent 4xx response codes, etc\n\n The possible values are\n\n \"5xx\"             : Retry will be done if the upstream server responds with any 5xx response code,\n                     or does not respond at all (disconnect/reset/read timeout).\n\n \"gateway-error\"   : Retry will be done only if the upstream server responds with 502, 503 or\n                     504 responses (Included in 5xx)\n\n \"connect-failure\" : Retry will be done if the request fails because of a connection failure to the\n                     upstream server (connect timeout, etc.). (Included in 5xx)\n\n \"refused-stream\"  : Retry is done if the upstream server resets the stream with a REFUSED_STREAM\n                     error code (Included in 5xx)\n\n \"retriable-4xx\"   : Retry is done if the upstream server responds with a retriable 4xx response code.\n                     The only response code in this category is HTTP CONFLICT (409)\n\n \"retriable-status-codes\" :  Retry is done if the upstream server responds with any response code\n                             matching one defined in retriable_status_codes field\n\nExample: - \"5xx\"-",
                    "title": "retry_on",
                    "x-displayname": "Retry On",
                    "x-ves-example": "5xx"
                }
            }
        },
        "schemaRoutingPriority": {
            "type": "string",
            "description": "Priority routing for each request.\nDifferent connection pools are used based on the priority selected for the request.\nAlso, circuit-breaker configuration at destination cluster is chosen based on selected priority.\n\nDefault routing mechanism\nHigh-Priority routing mechanism",
            "title": "RoutingPriority",
            "enum": [
                "DEFAULT",
                "HIGH"
            ],
            "default": "DEFAULT",
            "x-displayname": "Routing Priority",
            "x-ves-proto-enum": "ves.io.schema.RoutingPriority"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "SecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\nNo Encoding\n - EncodingBase64: Base64\n\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone",
            "x-displayname": "Secret Encoding",
            "x-ves-proto-enum": "ves.io.schema.SecretEncodingType"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "SecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "x-displayname": "Secret",
            "x-ves-oneof-field-secret_info_oneof": "[\"blindfold_secret_info\",\"clear_secret_info\",\"vault_secret_info\",\"wingman_secret_info\"]",
            "x-ves-proto-message": "ves.io.schema.SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "Exclusive with [clear_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Blindfold Secret\"\nBlindfold Secret is used for the secrets managed by Volterra Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType"
                },
                "blindfold_secret_info_internal": {
                    "description": " Blindfold Secret Internal is used for the putting re-encrypted blindfold secret",
                    "title": "Blindfold Secret Internal",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType",
                    "x-displayname": "Blindfold Secret Internal"
                },
                "clear_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info vault_secret_info wingman_secret_info]\nx-displayName: \"Clear Secret\"\nClear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType"
                },
                "secret_encoding_type": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is given to any Secret Management System.\n this will be set if the secret is encoded and not plaintext BEFORE it is encrypted and put it in SecretType.\n Note - Do NOT set this field for Clear Secret with string:/// scheme.\n e.g. if a secret is base64 encoded and then put into vault.",
                    "title": "secret_encoding_type",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "vault_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info wingman_secret_info]\nx-displayName: \"Vault Secret\"\nVault Secret is used for the secrets managed by Hashicorp Vault",
                    "title": "Vault Secret",
                    "$ref": "#/definitions/schemaVaultSecretInfoType"
                },
                "wingman_secret_info": {
                    "description": "Exclusive with [blindfold_secret_info clear_secret_info vault_secret_info]\nx-displayName: \"Bootstrap Secret\"\nSecret is given as bootstrap secret in Volterra Security Sidecar",
                    "title": "Wingman Secret",
                    "$ref": "#/definitions/schemaWingmanSecretInfoType"
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status \n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Oriong of this status exchanged by VTRP. ",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Propagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Publish",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectMetaType": {
            "type": "object",
            "description": "SystemObjectMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "value"
                },
                "creator_cookie": {
                    "type": "string",
                    "description": " This can used by the creator of the object for later audit for e.g. by storing the\n version identifying information of the object so at future it can be determined if\n version present at remote end is current or stale.\n\nExample: - \"value\"-",
                    "title": "creator_cookie",
                    "x-displayname": "Creator Cookie",
                    "x-ves-example": "value"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "value"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n \n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n \n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "namespace": {
                    "type": "array",
                    "description": " The namespace this object belongs to. This is populated by the service based on the\n metadata.namespace field when an object is created.",
                    "title": "namespace",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Namespace Reference"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "sre_disable": {
                    "type": "boolean",
                    "description": " This should be set to true If VES/SRE operator wants to suppress an object from being\n presented to business-logic of a daemon(e.g. due to bad-form/issue-causing Object).\n This is meant only to be used in temporary situations for operational continuity till\n a fix is rolled out in business-logic.\n\nExample: - \"true\"-",
                    "title": "sre_disable",
                    "format": "boolean",
                    "x-displayname": "SRE Disable",
                    "x-ves-example": "true"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "trace_info": {
                    "type": "string",
                    "description": " trace_info holds information(\u003ctrace-id\u003e:\u003cspan-id\u003e:\u003cparent-span-id\u003e) of the request doing\n the object modification. This can be used on the watch side to create subsequent spans.\n This information can be used to co-relate activities across services (modulo state compression)\n for a synchronous API.\n\nExample: - \"value\"-",
                    "title": "trace_info",
                    "x-displayname": "Trace Info",
                    "x-ves-example": "value"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Indicate origin of this object.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                }
            }
        },
        "schemaTlsCertificateType": {
            "type": "object",
            "description": "Handle to fetch certificate and key",
            "title": "TlsCertificateType",
            "x-displayname": "TLS Certificate",
            "x-ves-displayorder": "1,4,5",
            "x-ves-proto-message": "ves.io.schema.TlsCertificateType",
            "properties": {
                "certificate_url": {
                    "type": "string",
                    "description": " TLS certificate.\n Certificate or certificate chain in PEM format including the PEM headers.\nRequired: YES",
                    "title": "certificate_url",
                    "x-displayname": "Certificate URL",
                    "x-ves-required": "true"
                },
                "description": {
                    "type": "string",
                    "description": " Description for the certificate",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "private_key": {
                    "description": " TLS Private Key data in unencrypted PEM format including the PEM headers. The data may be optionally secured using BlindFold. TLS key has to match the accompanying certificate.\nRequired: YES",
                    "title": "private_key",
                    "$ref": "#/definitions/schemaSecretType",
                    "x-displayname": "Private Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemaTlsProtocol": {
            "type": "string",
            "description": "TlsProtocol is enumeration of supported TLS versions\n\nVolterra will choose the optimal TLS version.\nTLS 1.0\nTLS 1.1\nTLS 1.2\nTLS 1.3",
            "title": "TlsProtocol",
            "enum": [
                "TLS_AUTO",
                "TLSv1_0",
                "TLSv1_1",
                "TLSv1_2",
                "TLSv1_3"
            ],
            "default": "TLS_AUTO",
            "x-displayname": "TLS Protocol",
            "x-ves-proto-enum": "ves.io.schema.TlsProtocol"
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "VaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "x-displayname": "Vault Secret",
            "x-ves-displayorder": "1,2,3,4,5",
            "x-ves-proto-message": "ves.io.schema.VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": " Key of the individual secret. Vault Secrets are stored as key-value pair.\n If user is only interested in one value from the map, this field should be set to the corresponding key.\n If not provided entire secret will be returned.\n\nExample: - \"key_pem\"-",
                    "title": "Key",
                    "x-displayname": "Key",
                    "x-ves-example": "key_pem"
                },
                "location": {
                    "type": "string",
                    "description": " Path to secret in Vault.\n\nExample: - \"v1/data/vhost_key\"-\nRequired: YES",
                    "title": "Location",
                    "x-displayname": "Location",
                    "x-ves-example": "v1/data/vhost_key",
                    "x-ves-required": "true"
                },
                "provider": {
                    "type": "string",
                    "description": " Name of the Secret Management Access object that contains information about the backend Vault.\n\nExample: - \"vault-vh-provider\"-\nRequired: YES",
                    "title": "Provider",
                    "x-displayname": "Provider",
                    "x-ves-example": "vault-vh-provider",
                    "x-ves-required": "true"
                },
                "secret_encoding": {
                    "description": " This field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType",
                    "x-displayname": "Secret Encoding"
                },
                "version": {
                    "type": "integer",
                    "description": " Version of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\n If not provided latest version will be returned.\n\nExample: - \"1\"-",
                    "title": "Version",
                    "format": "int64",
                    "x-displayname": "Version",
                    "x-ves-example": "1"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "WingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "x-displayname": "Wingman Secret",
            "x-ves-proto-message": "ves.io.schema.WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " Name of the secret.\n\nExample: - \"ChargeBack-API-Key\"-\nRequired: YES",
                    "title": "Name",
                    "x-displayname": "Name",
                    "x-ves-example": "ChargeBack-API-Key",
                    "x-ves-required": "true"
                }
            }
        },
        "schemapolicyHeaderMatcherType": {
            "type": "object",
            "description": "A header matcher specifies the name of a single HTTP header and the criteria for the input request to match it. The input has a list of actual values for each\nheader name in the original HTTP request.\nA header matcher can check for one of the following:\n* Presence or absence of the header in the input\n* At least one of the values for the header in the input satisfies the MatcherType item",
            "title": "HeaderMatcherType",
            "x-displayname": "Header Matcher",
            "x-ves-displayorder": "1,6,4",
            "x-ves-oneof-field-match": "[\"check_not_present\",\"check_present\",\"item\",\"presence\"]",
            "x-ves-proto-message": "ves.io.schema.policy.HeaderMatcherType",
            "properties": {
                "check_not_present": {
                    "description": "Exclusive with [check_present item presence]\nx-displayName: \"Not Present\"\nCheck that the header is not present.",
                    "title": "check_not_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "check_present": {
                    "description": "Exclusive with [check_not_present item presence]\nx-displayName: \"Present\"\nCheck that the header is present.",
                    "title": "check_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert the match result.",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Header Matcher"
                },
                "item": {
                    "description": "Exclusive with [check_not_present check_present presence]\nx-displayName: \"Match Values\"\nCriteria for matching the values for the header. The match is successful if any of the values in the input satisfies the criteria in the matcher.",
                    "title": "item",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "name": {
                    "type": "string",
                    "description": " A case-insensitive HTTP header name.\n\nExample: - \"Accept-Encoding\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Header Name",
                    "x-ves-example": "Accept-Encoding",
                    "x-ves-required": "true"
                },
                "presence": {
                    "type": "boolean",
                    "description": "Exclusive with [check_not_present check_present item]\nx-displayName: \"Present Or Absent\"\nCheck if the header is present or absent.",
                    "title": "presence",
                    "format": "boolean"
                }
            }
        },
        "schemapolicyPathMatcherType": {
            "type": "object",
            "description": "A path matcher specifies multiple criteria for matching an HTTP path string. The match is considered successful if any of the criteria are satisfied. The set\nof supported match criteria includes a list of path prefixes, a list of exact path values and a list of regular expressions.",
            "title": "PathMatcherType",
            "x-displayname": "Path Matcher",
            "x-ves-proto-message": "ves.io.schema.policy.PathMatcherType",
            "properties": {
                "exact_values": {
                    "type": "array",
                    "description": " A list of exact path values to match the input HTTP path against.\n\nExample: - \"['/api/web/namespaces/project179/users/user1', '/api/config/namespaces/accounting/bgps', '/api/data/namespaces/project443/virtual_host_101']\"-",
                    "title": "exact values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Exact Values",
                    "x-ves-example": "['/api/web/namespaces/project179/users/user1', '/api/config/namespaces/accounting/bgps', '/api/data/namespaces/project443/virtual_host_101']"
                },
                "prefix_values": {
                    "type": "array",
                    "description": " A list of path prefix values to match the input HTTP path against.\n\nExample: - \"['/api/web/namespaces/project179/users/', '/api/config/namespaces/', '/api/data/namespaces/']\"-",
                    "title": "prefix values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Prefix Values",
                    "x-ves-example": "['/api/web/namespaces/project179/users/', '/api/config/namespaces/', '/api/data/namespaces/']"
                },
                "regex_values": {
                    "type": "array",
                    "description": " A list of regular expressions to match the input HTTP path against.\n\nExample: - \"['^/api/web/namespaces/abc/users/([a-z]([-a-z0-9]*[a-z0-9])?)$', '/api/data/namespaces/proj404/virtual_hosts/([a-z]([-a-z0-9]*[a-z0-9])?)$']\"-",
                    "title": "regex values",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Regex Values",
                    "x-ves-example": "['^/api/web/namespaces/abc/users/([a-z]([-a-z0-9]*[a-z0-9])?)$', '/api/data/namespaces/proj404/virtual_hosts/([a-z]([-a-z0-9]*[a-z0-9])?)$']"
                },
                "transformers": {
                    "type": "array",
                    "description": " An ordered list of transformers (starting from index 0) to be applied to the path before matching. \n\nExample: - \"[BASE64_DECODE, LOWER_CASE]-",
                    "title": "transformers",
                    "items": {
                        "$ref": "#/definitions/policyTransformer"
                    },
                    "x-displayname": "Transformers"
                }
            }
        },
        "schemapolicyQueryParameterMatcherType": {
            "type": "object",
            "description": "A query parameter matcher specifies the name of a single query parameter and the criteria for the input request to match it. The input has a list of actual\nvalues for each query parameter name in the original HTTP request.\nA query parameter matcher can check for one of the following:\n* Presence or absence of the query parameter in the input\n* At least one of the values for the query parameter in the input satisfies the MatcherType item",
            "title": "QueryParameterMatcherType",
            "x-displayname": "Query Parameter Matcher",
            "x-ves-displayorder": "1,6,4",
            "x-ves-oneof-field-match": "[\"check_not_present\",\"check_present\",\"item\",\"presence\"]",
            "x-ves-proto-message": "ves.io.schema.policy.QueryParameterMatcherType",
            "properties": {
                "check_not_present": {
                    "description": "Exclusive with [check_present item presence]\nx-displayName: \"Not Present\"\nCheck that the query parameter is not present.",
                    "title": "check_not_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "check_present": {
                    "description": "Exclusive with [check_not_present item presence]\nx-displayName: \"Present\"\nCheck that the query parameter is present.",
                    "title": "check_present",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "invert_matcher": {
                    "type": "boolean",
                    "description": " Invert the match result.",
                    "title": "invert_matcher",
                    "format": "boolean",
                    "x-displayname": "Invert Query Parameter Matcher"
                },
                "item": {
                    "description": "Exclusive with [check_not_present check_present presence]\nx-displayName: \"Match Values\"\nCriteria for matching the values for the given query parameter. The match is successful if any of the values for the query parameter satisfies the\ncriteria in the matcher.",
                    "title": "item",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "key": {
                    "type": "string",
                    "description": " A case-sensitive HTTP query parameter name.\n\nExample: - \"sourceid\"-\nRequired: YES",
                    "title": "key",
                    "x-displayname": "Query Parameter Name",
                    "x-ves-example": "sourceid",
                    "x-ves-required": "true"
                },
                "presence": {
                    "type": "boolean",
                    "description": "Exclusive with [check_not_present check_present item]\nx-displayName: \"Present Or Absent\"\nCheck if the query parameter is present or absent.",
                    "title": "presence",
                    "format": "boolean"
                }
            }
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred). \nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\nRequired: YES",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                }
            }
        },
        "service_policy_ruleChallengeRuleSpec": {
            "type": "object",
            "description": "A Challenge Rule consists of an unordered list of predicates and an action. The predicates are evaluated against a set of input fields that are extracted from\nor derived from an L7 request API. A request API is considered to match the rule if all predicates in the rule evaluate to true for that request. Any\npredicates that are not specified in a rule are implicitly considered to be true. If a request API matches a challenge rule, the configured challenge is\nenforced.",
            "title": "Challenge Rule Spec",
            "x-displayname": "Challenge Rule Specification",
            "x-ves-oneof-field-asn_choice": "[\"any_asn\",\"asn_list\",\"asn_matcher\"]",
            "x-ves-oneof-field-challenge_action": "[\"disable_challenge\",\"enable_captcha_challenge\",\"enable_javascript_challenge\"]",
            "x-ves-oneof-field-client_choice": "[\"any_client\",\"client_name\",\"client_name_matcher\",\"client_selector\"]",
            "x-ves-oneof-field-ip_choice": "[\"any_ip\",\"ip_matcher\",\"ip_prefix_list\"]",
            "x-ves-proto-message": "ves.io.schema.service_policy_rule.ChallengeRuleSpec",
            "properties": {
                "any_asn": {
                    "description": "Exclusive with [asn_list asn_matcher]\n",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "any_client": {
                    "description": "Exclusive with [client_name client_name_matcher client_selector]\n",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "any_ip": {
                    "description": "Exclusive with [ip_matcher ip_prefix_list]\n",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "arg_matchers": {
                    "type": "array",
                    "description": " A list of predicates for all POST args that need to be matched. The criteria for matching each arg are described in individual instances\n of ArgMatcherType. The actual arg values are extracted from the request API as a list of strings for each arg selector name.\n Note that all specified arg matcher predicates must evaluate to true.",
                    "items": {
                        "$ref": "#/definitions/policyArgMatcherType"
                    }
                },
                "asn_list": {
                    "description": "Exclusive with [any_asn asn_matcher]\n",
                    "$ref": "#/definitions/policyAsnMatchList"
                },
                "asn_matcher": {
                    "description": "Exclusive with [any_asn asn_list]\n",
                    "$ref": "#/definitions/policyAsnMatcherType"
                },
                "body_matcher": {
                    "description": " Predicate for matching the request body string. The criteria for matching the request body is described in MatcherType.\n The actual request body value is extracted from the request API as a string.",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "client_name": {
                    "type": "string",
                    "description": "Exclusive with [any_client client_name_matcher client_selector]\n"
                },
                "client_name_matcher": {
                    "description": "Exclusive with [any_client client_name client_selector]\n",
                    "$ref": "#/definitions/policyMatcherType"
                },
                "client_selector": {
                    "description": "Exclusive with [any_client client_name client_name_matcher]\n",
                    "$ref": "#/definitions/schemaLabelSelectorType"
                },
                "cookie_matchers": {
                    "type": "array",
                    "description": " A list of predicates for all cookies that need to be matched. The criteria for matching each cookie is described in individual instances\n of CookieMatcherType. The actual cookie values are extracted from the request API as a list of strings for each cookie name.\n Note that all specified cookie matcher predicates must evaluate to true.",
                    "items": {
                        "$ref": "#/definitions/policyCookieMatcherType"
                    }
                },
                "disable_challenge": {
                    "description": "Exclusive with [enable_captcha_challenge enable_javascript_challenge]\nx-displayName: \"Disable challenge\"\nDisable the challenge type selected in PolicyBasedChallenge",
                    "title": "Disable challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "domain_matcher": {
                    "description": " A list of exact values and/or regular expressions for the expected name of the domain. The actual value of domain is the host component\n from the URL. The predicate evaluates to true if the domain value matches any of the exact values or regular expressions in the domain\n matcher.",
                    "$ref": "#/definitions/policyMatcherTypeBasic"
                },
                "enable_captcha_challenge": {
                    "description": "Exclusive with [disable_challenge enable_javascript_challenge]\nx-displayName: \"Enable captcha challenge\"\nEnable captcha challenge",
                    "title": "Enable captcha challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "enable_javascript_challenge": {
                    "description": "Exclusive with [disable_challenge enable_captcha_challenge]\nx-displayName: \"Enable javascript challenge\"\nEnable javascript challenge",
                    "title": "Enable javascript challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "expiration_timestamp": {
                    "type": "string",
                    "description": " The expiration_timestamp is the RFC 3339 format timestamp at which the containing rule is considered to be logically expired. The rule continues to exist in\n the configuration but is not applied anymore.\n\nExample: - \"2019-12-31:44:34.171543432Z\"-",
                    "format": "date-time"
                },
                "headers": {
                    "type": "array",
                    "description": " A list of predicates for various HTTP headers that need to match. The criteria for matching each HTTP header are described in individual HeaderMatcherType\n instances. The actual HTTP header values are extracted from the request API as a list of strings for each HTTP header type.\n Note that all specified header predicates must evaluate to true.",
                    "items": {
                        "$ref": "#/definitions/schemapolicyHeaderMatcherType"
                    }
                },
                "http_method": {
                    "description": " The list of expected values for the HTTP method in the request API. The actual value of the HTTP method is extracted from the HTTP request.\n The predicate evaluates to true if the actual HTTP method belongs is present in the list of expected values.",
                    "$ref": "#/definitions/policyHttpMethodMatcherType"
                },
                "ip_matcher": {
                    "description": "Exclusive with [any_ip ip_prefix_list]\n",
                    "$ref": "#/definitions/policyIpMatcherType"
                },
                "ip_prefix_list": {
                    "description": "Exclusive with [any_ip ip_matcher]\n",
                    "$ref": "#/definitions/policyPrefixMatchList"
                },
                "path": {
                    "description": " A list of exact values, prefixes and regular expressions for the expected value of the HTTP path. The actual value of the HTTP path is the unescaped path\n value extracted from the HTTP URL Resource, excluding any query and fragment information.\n The predicate evaluates to true if the actual path value matches any of the exact or prefix values or regular expressions in the path matcher.",
                    "$ref": "#/definitions/schemapolicyPathMatcherType"
                },
                "query_params": {
                    "type": "array",
                    "description": " A list of predicates for all query parameters that need to be matched. The criteria for matching each query parameter are described in individual instances\n of QueryParameterMatcherType. The actual query parameter values are extracted from the request API as a list of strings for each query parameter name.\n Note that all specified query parameter predicates must evaluate to true.",
                    "items": {
                        "$ref": "#/definitions/schemapolicyQueryParameterMatcherType"
                    }
                },
                "tls_fingerprint_matcher": {
                    "description": " TLS JA3 fingerprints to be matched.\n The predicate evaluates to true if the TLS fingerprint matches any of the exact values or classes of known TLS fingerprints.",
                    "$ref": "#/definitions/policyTlsFingerprintMatcherType"
                }
            }
        },
        "viewsAdvertiseCustom": {
            "type": "object",
            "description": "This defines a way to advertise a VIP on specific sites",
            "title": "AdvertiseWhere",
            "x-displayname": "Advertise Custom",
            "x-ves-proto-message": "ves.io.schema.views.AdvertiseCustom",
            "properties": {
                "advertise_where": {
                    "type": "array",
                    "description": " Where should this load balancer be available\nRequired: YES",
                    "title": "Advertise Where",
                    "items": {
                        "$ref": "#/definitions/viewsWhereType"
                    },
                    "x-displayname": "List of Sites to Advertise",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsAdvertisePublic": {
            "type": "object",
            "description": "This defines a way to advertise a load balancer on public. If optional public_ip is provided, it will only be advertised on RE sites where that public_ip is available",
            "title": "AdvertisePublic",
            "x-displayname": "Advertise Public",
            "x-ves-proto-message": "ves.io.schema.views.AdvertisePublic",
            "properties": {
                "public_ip": {
                    "description": " Use dedicated public ip as VIP instead of default public VIP \n\n Dedicated public ip are allocated by volterra on request\nRequired: YES",
                    "title": "Public IP",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Public IP",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsCustomCiphers": {
            "type": "object",
            "description": "This defines TLS protocol config including min/max versions and allowed ciphers",
            "title": "CustomCiphers",
            "x-displayname": "Custom Ciphers",
            "x-ves-displayorder": "1,2,3",
            "x-ves-proto-message": "ves.io.schema.views.CustomCiphers",
            "properties": {
                "cipher_suites": {
                    "type": "array",
                    "description": " The TLS listener will only support the specified cipher list.\nRequired: YES",
                    "title": "cipher_suites",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Cipher Suites",
                    "x-ves-required": "true"
                },
                "max_version": {
                    "description": " Maximum TLS protocol version.",
                    "title": "maximum_protocol_version",
                    "$ref": "#/definitions/schemaTlsProtocol",
                    "x-displayname": "Maximum TLS version"
                },
                "min_version": {
                    "description": " Minimum TLS protocol version.",
                    "title": "minimum_protocol_version",
                    "$ref": "#/definitions/schemaTlsProtocol",
                    "x-displayname": "Minimum TLS version"
                }
            }
        },
        "viewsOriginPoolWithWeight": {
            "type": "object",
            "description": "This defines a combination of origin pool with weight",
            "title": "OriginPoolWithWeight",
            "x-displayname": "Origin Pool with Weight",
            "x-ves-oneof-field-pool_choice": "[\"cluster\",\"pool\"]",
            "x-ves-proto-message": "ves.io.schema.views.OriginPoolWithWeight",
            "properties": {
                "cluster": {
                    "description": "Exclusive with [pool]\nx-displayName: \"Custom Cluster\"\nx-required\nMore flexible, advanced feature control with cluster",
                    "title": "Cluster",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "endpoint_subsets": {
                    "type": "object",
                    "description": " Upstream origin pool may be configured to divide its origin servers into subsets based on metadata\n attached to the origin servers. Routes may then specify the metadata that a endpoint must match in\n order to be selected by the load balancer\n\n For origin servers which are discovered in K8S or Consul cluster, the label of the service is merged with\n endpoint's labels. In case of Consul, the label is derived from the \"Tag\" field.\n For labels that are common between configured endpoint and discovered service, labels from discovered service\n takes precedence.\n\n List of key-value pairs that will be used as matching metadata. Only those origin servers of\n upstream origin pool which match this metadata will be selected for load balancing",
                    "title": "Origin Servers Subset",
                    "x-displayname": "Origin Servers Subsets"
                },
                "pool": {
                    "description": "Exclusive with [cluster]\nx-displayName: \"Origin Pool\"\nx-required\nSimple, commonly used pool parameters with origin pool",
                    "title": "Pool",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "weight": {
                    "type": "integer",
                    "description": " Weight of this origin pool, valid only with multiple origin pool. Value of 0 will disable the pool",
                    "title": "Weight",
                    "format": "int64",
                    "x-displayname": "Weight"
                }
            }
        },
        "viewsPrefixStringListType": {
            "type": "object",
            "description": "x-example: \"192.168.20.0/24\"\nList of IPv4 prefixes that represent an endpoint",
            "title": "ipv4 prefix list",
            "x-displayname": "IPv4 Prefix List",
            "x-ves-proto-message": "ves.io.schema.views.PrefixStringListType",
            "properties": {
                "prefixes": {
                    "type": "array",
                    "description": " List of IPv4 prefixes that represent an endpoint\n\nExample: - \"192.168.20.0/24\"-\nRequired: YES",
                    "title": "ipv4 prefix list",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "IPv4 Prefix List",
                    "x-ves-example": "192.168.20.0/24",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsSiteNetwork": {
            "type": "string",
            "description": "This defines network types to be used on site\n\nAll inside and outside networks.\nAll inside networks.\nAll outside networks.\nvK8s service network.",
            "title": "SiteNetwork",
            "enum": [
                "SITE_NETWORK_INSIDE_AND_OUTSIDE",
                "SITE_NETWORK_INSIDE",
                "SITE_NETWORK_OUTSIDE",
                "SITE_NETWORK_SERVICE"
            ],
            "default": "SITE_NETWORK_INSIDE_AND_OUTSIDE",
            "x-displayname": "Site Network",
            "x-ves-proto-enum": "ves.io.schema.views.SiteNetwork"
        },
        "viewsTlsConfig": {
            "type": "object",
            "description": "This defines various options to configure TLS configuration parameters",
            "title": "TlsConfig",
            "x-displayname": "TLS Config",
            "x-ves-displayorder": "5",
            "x-ves-oneof-field-choice": "[\"custom_security\",\"default_security\",\"low_security\",\"medium_security\"]",
            "x-ves-proto-message": "ves.io.schema.views.TlsConfig",
            "properties": {
                "custom_security": {
                    "description": "Exclusive with [default_security low_security medium_security]\nx-displayName: \"Custom\"\nCustom selection of TLS versions and cipher suites",
                    "title": "Custom Security",
                    "$ref": "#/definitions/viewsCustomCiphers"
                },
                "default_security": {
                    "description": "Exclusive with [custom_security low_security medium_security]\nx-displayName: \"High\"\nHigh Option chooses highest level of security.\nTLS v1.2+ with PFS ciphers with strong crypto algorithms.",
                    "title": "Default Security",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "low_security": {
                    "description": "Exclusive with [custom_security default_security medium_security]\nx-displayName: \"Low\"\nLow Security chooses TLS v1.0+ including non-PFS ciphers and weak crypto algorithms.",
                    "title": "Low Security",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "medium_security": {
                    "description": "Exclusive with [custom_security default_security low_security]\nx-displayName: \"Medium\"\nMedium Security chooses TLS v1.0+ with only PFS ciphers and medium strength crypto algorithms.",
                    "title": "Medium Security",
                    "$ref": "#/definitions/schemaEmpty"
                }
            }
        },
        "viewsWhereSite": {
            "type": "object",
            "description": "This defines a reference to a CE site along with network type and an optional ip address where a load balancer could be advertised",
            "title": "WhereSite",
            "x-displayname": "Site",
            "x-ves-displayorder": "1,2,3",
            "x-ves-proto-message": "ves.io.schema.views.WhereSite",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": " Use given IP address as VIP on the site",
                    "title": "IP address on the site",
                    "x-displayname": "IP Address"
                },
                "network": {
                    "description": " Select network types to be used on site\n By default VIP chosen as ip address of primary network interface in the network\nRequired: YES",
                    "title": "SiteNetwork",
                    "$ref": "#/definitions/viewsSiteNetwork",
                    "x-displayname": "Site Network",
                    "x-ves-required": "true"
                },
                "site": {
                    "description": " Reference to site object\nRequired: YES",
                    "title": "Site",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Site Reference",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsWhereType": {
            "type": "object",
            "description": "This defines various options where a Loadbalancer could be advertised",
            "title": "WhereType",
            "x-displayname": "Select Where to Advertise",
            "x-ves-displayorder": "4,5",
            "x-ves-oneof-field-choice": "[\"site\",\"virtual_network\",\"virtual_site\",\"vk8s_service\"]",
            "x-ves-oneof-field-port_choice": "[\"port\",\"use_default_port\"]",
            "x-ves-proto-message": "ves.io.schema.views.WhereType",
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Exclusive with [use_default_port]\nx-displayName: \"TCP Listen Port\"\nTCP port to Listen.",
                    "title": "TCP port to listen",
                    "format": "int64"
                },
                "site": {
                    "description": "Exclusive with [virtual_network virtual_site vk8s_service]\nx-displayName: \"Site\"\nAdvertise on a customer site and a given network.",
                    "title": "Site",
                    "$ref": "#/definitions/viewsWhereSite"
                },
                "use_default_port": {
                    "description": "Exclusive with [port]\nx-displayName: \"Use Default TCP Listen Port\"\nFor HTTP, default is 80. For HTTPS/SNI, default is 443.",
                    "title": "Use Default port",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "virtual_network": {
                    "description": "Exclusive with [site virtual_site vk8s_service]\nx-displayName: \"Virtual Network\"\nAdvertise on a virtual network",
                    "title": "Virtual Network",
                    "$ref": "#/definitions/viewsWhereVirtualNetwork"
                },
                "virtual_site": {
                    "description": "Exclusive with [site virtual_network vk8s_service]\nx-displayName: \"Virtual Site\"\nAdvertise on a customer virtual site and a given network.",
                    "title": "Virtual Site",
                    "$ref": "#/definitions/viewsWhereVirtualSite"
                },
                "vk8s_service": {
                    "description": "Exclusive with [site virtual_network virtual_site]\nx-displayName: \"vK8s Service Network on RE\"\nAdvertise on vK8s Service Network on RE.",
                    "title": "vK8s services network",
                    "$ref": "#/definitions/viewsWhereVK8SService"
                }
            }
        },
        "viewsWhereVK8SService": {
            "type": "object",
            "description": "This defines a reference to a RE site or virtual site where a load balancer could be advertised in the vK8s service network",
            "title": "WhereVK8SService",
            "x-displayname": "vK8s Services on RE",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-choice": "[\"site\",\"virtual_site\"]",
            "x-ves-proto-message": "ves.io.schema.views.WhereVK8SService",
            "properties": {
                "site": {
                    "description": "Exclusive with [virtual_site]\nx-displayName: \"RE Reference\"\nReference to site object",
                    "title": "RE Site",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "virtual_site": {
                    "description": "Exclusive with [site]\nx-displayName: \"Virtual Site Reference\"\nReference to virtual site object",
                    "title": "Virtual Site",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                }
            }
        },
        "viewsWhereVirtualNetwork": {
            "type": "object",
            "description": "Parameters to advertise on a given virtual network",
            "title": "WhereVirtualNetwork",
            "x-displayname": "Virtual Network",
            "x-ves-displayorder": "1,2",
            "x-ves-oneof-field-vip_choice": "[\"default_vip\",\"specific_vip\"]",
            "x-ves-proto-message": "ves.io.schema.views.WhereVirtualNetwork",
            "properties": {
                "default_vip": {
                    "description": "Exclusive with [specific_vip]\nx-displayName: \"Default VIP\"\nUse the default VIP, system allocated or configured in the virtual network",
                    "title": "Default VIP for VoltADN Private Network",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "specific_vip": {
                    "type": "string",
                    "description": "Exclusive with [default_vip]\nx-displayName: \"Specific VIP\"\nUse given IP address as VIP on VoltADN private Network",
                    "title": "Specific VIP"
                },
                "virtual_network": {
                    "description": " Select virtual network reference\nRequired: YES",
                    "title": "Virtual Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Virtual Network",
                    "x-ves-required": "true"
                }
            }
        },
        "viewsWhereVirtualSite": {
            "type": "object",
            "description": "This defines a reference to a customer site virtual site along with network type where a load balancer could be advertised",
            "title": "WhereVirtualSite",
            "x-displayname": "Virtual Site",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.views.WhereVirtualSite",
            "properties": {
                "network": {
                    "description": " Select network types to be used on site.\n IP address of primary network interface in the network\nRequired: YES",
                    "title": "SiteNetwork",
                    "$ref": "#/definitions/viewsSiteNetwork",
                    "x-displayname": "Site Network",
                    "x-ves-required": "true"
                },
                "virtual_site": {
                    "description": " Reference to virtual site object\nRequired: YES",
                    "title": "Virtual Site",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Virtual Site Reference",
                    "x-ves-required": "true"
                }
            }
        },
        "viewshttp_loadbalancerDownstreamTlsParamsType": {
            "type": "object",
            "description": "TLS parameters for HTTP loadbalancer.",
            "title": "DownstreamTlsParamsType",
            "x-displayname": "HTTP Loadbalancer TLS Parameters",
            "x-ves-oneof-field-mtls_choice": "[\"no_mtls\",\"use_mtls\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.DownstreamTlsParamsType",
            "properties": {
                "no_mtls": {
                    "description": "Exclusive with [use_mtls]\nx-displayName: \"No mTLS\"\nmTLS with clients is not enabled",
                    "title": "No mTLS",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "tls_certificates": {
                    "type": "array",
                    "description": " Set of TLS certificates\nRequired: YES",
                    "title": "tls_certificates",
                    "items": {
                        "$ref": "#/definitions/schemaTlsCertificateType"
                    },
                    "x-displayname": "TLS Certificates",
                    "x-ves-required": "true"
                },
                "tls_config": {
                    "description": " Configuration for TLS parameters such as min/max TLS version and ciphers",
                    "title": "TLS Config",
                    "$ref": "#/definitions/viewsTlsConfig",
                    "x-displayname": "TLS Config"
                },
                "use_mtls": {
                    "description": "Exclusive with [no_mtls]\nx-displayName: \"mTLS\"\nmTLS with clients is enabled",
                    "title": "Use mTLS",
                    "$ref": "#/definitions/http_loadbalancerDownstreamTlsValidationContext"
                }
            }
        },
        "viewshttp_loadbalancerGlobalSpecType": {
            "type": "object",
            "description": "Shape of the HTTP loadbalancer specification",
            "title": "GlobalSpecType",
            "x-displayname": "Global Specification",
            "x-ves-oneof-field-advertise_choice": "[\"advertise_custom\",\"advertise_on_public\",\"advertise_on_public_default_vip\",\"do_not_advertise\"]",
            "x-ves-oneof-field-challenge_type": "[\"captcha_challenge\",\"js_challenge\",\"no_challenge\",\"policy_based_challenge\"]",
            "x-ves-oneof-field-hash_policy_choice": "[\"cookie_stickiness\",\"least_active\",\"random\",\"ring_hash\",\"round_robin\",\"source_ip_stickiness\"]",
            "x-ves-oneof-field-host_rewrite_params": "[\"auto_host_rewrite\",\"disable_host_rewrite\",\"host_rewrite\"]",
            "x-ves-oneof-field-loadbalancer_type": "[\"http\",\"https\",\"https_auto_cert\"]",
            "x-ves-oneof-field-rate_limit_choice": "[\"disable_rate_limit\",\"rate_limit\"]",
            "x-ves-oneof-field-service_policy_choice": "[\"active_service_policies\",\"no_service_policies\",\"service_policies_from_namespace\"]",
            "x-ves-oneof-field-waf_choice": "[\"app_firewall\",\"disable_waf\",\"waf\",\"waf_rule\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.GlobalSpecType",
            "properties": {
                "active_service_policies": {
                    "description": "Exclusive with [no_service_policies service_policies_from_namespace]\nx-displayName: \"Apply Specified Service Policies\"\nApply the specified list of service policies and bypass the namespace service policy set",
                    "title": "Apply Specified Service Policies",
                    "$ref": "#/definitions/http_loadbalancerServicePolicyList"
                },
                "add_location": {
                    "type": "boolean",
                    "description": " x-example: true\n Appends header x-volterra-location = \u003cre-site-name\u003e in responses. This configuration\n is ignored on CE sites.\n\nExample: - \"true\"-",
                    "title": "Add Site information",
                    "format": "boolean",
                    "x-displayname": "Add Location",
                    "x-ves-example": "true"
                },
                "advertise_custom": {
                    "description": "Exclusive with [advertise_on_public advertise_on_public_default_vip do_not_advertise]\nx-displayName: \"Advertise Custom\"\nAdvertise this loadbalancer on specific sites",
                    "title": "Advertise Custom",
                    "$ref": "#/definitions/viewsAdvertiseCustom"
                },
                "advertise_on_public": {
                    "description": "Exclusive with [advertise_custom advertise_on_public_default_vip do_not_advertise]\nx-displayName: \"Advertise On Internet(Specified VIP)\"\nAdvertise this loadbalancer on public network",
                    "title": "Advertise On Public",
                    "$ref": "#/definitions/viewsAdvertisePublic"
                },
                "advertise_on_public_default_vip": {
                    "description": "Exclusive with [advertise_custom advertise_on_public do_not_advertise]\nx-displayName: \"Advertise On Internet\"\nAdvertise this loadbalancer on public network with default VIP",
                    "title": "Advertise On Public Default VIP",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "app_firewall": {
                    "description": "Exclusive with [disable_waf waf waf_rule]\nx-displayName: \"App Firewall\"\nReference to App Firewall configuration object",
                    "title": "app_firewall",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "auto_cert_info": {
                    "description": " Auto certificate related information",
                    "title": "Auto Cert Information",
                    "$ref": "#/definitions/virtual_hostAutoCertInfoType",
                    "x-displayname": "Auto Cert Information"
                },
                "auto_cert_state": {
                    "description": " State of auto certificate generation.",
                    "title": "Auto Cert State",
                    "$ref": "#/definitions/virtual_hostCertificationState",
                    "x-displayname": "Auto Cert State"
                },
                "auto_host_rewrite": {
                    "description": "Exclusive with [disable_host_rewrite host_rewrite]\nx-displayName: \"Automatic Host Rewrite\"\nHost header will be swapped with hostname of upstream host chosen by the cluster",
                    "title": "Auto Host Rewrite",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "blocked_clients": {
                    "type": "array",
                    "description": " Rules that specify the clients to be blocked",
                    "title": "Client Blocking Rules",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerSimpleClientSrcRule"
                    },
                    "x-displayname": "Client Blocking Rules"
                },
                "captcha_challenge": {
                    "description": "Exclusive with [js_challenge no_challenge policy_based_challenge]\nx-displayName: \"Captcha Challenge\"\nConfigure Captcha challenge on this load balancer",
                    "title": "Captcha Challenge",
                    "$ref": "#/definitions/virtual_hostCaptchaChallengeType"
                },
                "cookie_stickiness": {
                    "description": "Exclusive with [least_active random ring_hash round_robin source_ip_stickiness]\nx-displayName: \"Cookie Based Stickiness\"\nRequest are sent to all eligible origin servers using hash of source ip. Consistent hashing algorithm, ring hash, is used to select origin server",
                    "title": "Cookie Based Stickiness",
                    "$ref": "#/definitions/routeCookieForHashing"
                },
                "cors_policy": {
                    "description": " CORS is a mechanism that uses additional HTTP headers to tell a browser to let\n a web application running at one origin (domain) have permission to access selected\n resources from a server at a different origin",
                    "title": "Cross-Origin Resource Sharing (CORS) configuration for requests",
                    "$ref": "#/definitions/schemaCorsPolicy",
                    "x-displayname": "CORS Policy"
                },
                "ddos_mitigation_rules": {
                    "type": "array",
                    "description": " Rules that specify the DDoS clients to be blocked",
                    "title": "DDoS Mitigation Rules",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerDDoSMitigationRule"
                    },
                    "x-displayname": "DDoS Mitigation Rules"
                },
                "default_route_pools": {
                    "type": "array",
                    "description": " Origin Pools used when no route is specified (default route)",
                    "title": "Default Route Origin Pools",
                    "items": {
                        "$ref": "#/definitions/viewsOriginPoolWithWeight"
                    },
                    "x-displayname": "Origin Pools"
                },
                "disable_host_rewrite": {
                    "description": "Exclusive with [auto_host_rewrite host_rewrite]\nx-displayName: \"Disable Host Rewrite\"\nHost header is not modified",
                    "title": "Disable Host Rewrite",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_rate_limit": {
                    "description": "Exclusive with [rate_limit]\nx-displayName: \"Disable Rate Limiting\"\nRate limiting is not currently enabled for this loadbalancer",
                    "title": "Disable Rate Limiting",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "disable_waf": {
                    "description": "Exclusive with [app_firewall waf waf_rule]\nx-displayName: \"Disable WAF\"\nNo WAF configuration for this load balancer",
                    "title": "Disable WAF",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "dns_info": {
                    "type": "array",
                    "description": " DNS information for this virtual host",
                    "title": "DNS information",
                    "items": {
                        "$ref": "#/definitions/virtual_host_dns_infoDnsInfo"
                    },
                    "x-displayname": "DNS Information"
                },
                "do_not_advertise": {
                    "description": "Exclusive with [advertise_custom advertise_on_public advertise_on_public_default_vip]\nx-displayName: \"Do Not Advertise\"\nDo not advertise this loadbalancer",
                    "title": "Do Not Advertise",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "domains": {
                    "type": "array",
                    "description": " A list of domains (host/authority header) that will be matched to loadbalancer.\n Wildcard hosts are supported in the suffix or prefix form\n\n Domain search order:\n  1. Exact domain names: www.foo.com.\n  2. Prefix domain wildcards: *.foo.com or *-bar.foo.com.\n  3. Special wildcard * matching any domain.\n\n Wildcard will not match empty string.\n e.g. *-bar.foo.com will match baz-bar.foo.com but not -bar.foo.com.\n The longest wildcards match first.\n Only a single virtual host in the entire route configuration can match on *.\n Also a domain must be unique across all virtual hosts within an advertise policy.\n\n Domains are also used for SNI matching if the loadbalancer type is HTTPS\n Domains also indicate the list of names for which DNS resolution will be done by VER\n\nExample: - \"www.foo.com\"-\nRequired: YES",
                    "title": "Domains",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Domains",
                    "x-ves-example": "www.foo.com",
                    "x-ves-required": "true"
                },
                "host_name": {
                    "type": "string",
                    "description": " Internally generated host name to be used for the virtual host\n\nExample: - \"ves-io-cf8684b9-a18f-4843-a24f-1f9ee8ea2776.ac.vh.ves.io\"-",
                    "title": "host name",
                    "x-displayname": "Host Name",
                    "x-ves-example": "ves-io-cf8684b9-a18f-4843-a24f-1f9ee8ea2776.ac.vh.ves.io"
                },
                "host_rewrite": {
                    "type": "string",
                    "description": "Exclusive with [auto_host_rewrite disable_host_rewrite]\nx-displayName: \"Host Rewrite Value\"\nx-example: \"one.volterra.com\"\nHost header will be swapped with this value",
                    "title": "HostRewrite"
                },
                "http": {
                    "description": "Exclusive with [https https_auto_cert]\nx-displayName: \"HTTP\"\nHTTP Load balancer.",
                    "title": "HTTP",
                    "$ref": "#/definitions/http_loadbalancerProxyTypeHttp"
                },
                "https": {
                    "description": "Exclusive with [http https_auto_cert]\nx-displayName: \"HTTPS with Custom Certificate\"\nHTTPS Load balancer with a custom public/private certificate.\nThis is also known as BYOC (Bring Your Own Certificate).\nUser is responsible for managing DNS to this Load Balancer.",
                    "title": "HTTPS",
                    "$ref": "#/definitions/http_loadbalancerProxyTypeHttps"
                },
                "https_auto_cert": {
                    "description": "Exclusive with [http https]\nx-displayName: \"HTTPS with Automatic Certificate\"\nHTTPS Load balancer with automatic public certificate provisioning.\nThis requires the domains to be delegated to Volterra using Delegated Domain feature.\nDNS records will be managed by Volterra.",
                    "title": "HTTPS",
                    "$ref": "#/definitions/http_loadbalancerProxyTypeHttpsAutoCerts"
                },
                "js_challenge": {
                    "description": "Exclusive with [captcha_challenge no_challenge policy_based_challenge]\nx-displayName: \"Javascript Challenge\"\nConfigure Javascript challenge on this load balancer",
                    "title": "Javascript Challenge",
                    "$ref": "#/definitions/virtual_hostJavascriptChallengeType"
                },
                "least_active": {
                    "description": "Exclusive with [cookie_stickiness random ring_hash round_robin source_ip_stickiness]\nx-displayName: \"Least Active Request\"\nRequest are sent to origin server that has least active requests",
                    "title": "Least Active Requests",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "malicious_user_mitigation": {
                    "description": " Settings that specify the actions to be taken when malicious users are determined to be at different threat levels.\n User's activity is monitored and continuously analyzed for malicious behavior. From this analysis, a threat level is assigned to each user.\n The settings defined in malicious user mitigation specify what mitigation actions to take for users determined to be at different threat levels.",
                    "title": "Malicious User Mitigation",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Malicious User Mitigation"
                },
                "more_option": {
                    "description": " More options like header manipulation, compression etc.",
                    "title": "More Options",
                    "$ref": "#/definitions/http_loadbalancerAdvancedOptionsType",
                    "x-displayname": "More Options"
                },
                "no_challenge": {
                    "description": "Exclusive with [captcha_challenge js_challenge policy_based_challenge]\nx-displayName: \"No Challenge\"\nNo challenge is enabled for this load balancer",
                    "title": "No Challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "no_service_policies": {
                    "description": "Exclusive with [active_service_policies service_policies_from_namespace]\nx-displayName: \"Do Not Apply Service Policies\"\nDo not apply any service policies i.e. bypass the namespace service policy set",
                    "title": "Do Not Apply Service Policies",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "policy_based_challenge": {
                    "description": "Exclusive with [captcha_challenge js_challenge no_challenge]\nx-displayName: \"Policy Based Challenge\"\nSpecifies the settings for policy rule based challenge",
                    "title": "policy based challenge",
                    "$ref": "#/definitions/viewshttp_loadbalancerPolicyBasedChallenge"
                },
                "random": {
                    "description": "Exclusive with [cookie_stickiness least_active ring_hash round_robin source_ip_stickiness]\nx-displayName: \"Random\"\nRequest are sent to all eligible origin servers in random fashion",
                    "title": "Random",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "rate_limit": {
                    "description": "Exclusive with [disable_rate_limit]\nx-displayName: \"Rate Limiting Parameters\"\nRate limiting parameters for this loadbalancer",
                    "title": "Rate Limiting Parameters",
                    "$ref": "#/definitions/http_loadbalancerRateLimitConfigType"
                },
                "ring_hash": {
                    "description": "Exclusive with [cookie_stickiness least_active random round_robin source_ip_stickiness]\nx-displayName: \"Ring Hash Policy\"\nRequest are sent to all eligible origin servers using hash of request based on hash policy. Consistent hashing algorithm, ring hash, is used to select origin server",
                    "title": "Ring Hash Policy",
                    "$ref": "#/definitions/http_loadbalancerHashPolicyListType"
                },
                "round_robin": {
                    "description": "Exclusive with [cookie_stickiness least_active random ring_hash source_ip_stickiness]\nx-displayName: \"Round Robin\"\nRequest are sent to all eligible origin servers in round robin fashion",
                    "title": "Round Robin",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "routes": {
                    "type": "array",
                    "description": " Routes for this loadbalancer",
                    "title": "Routes",
                    "items": {
                        "$ref": "#/definitions/viewshttp_loadbalancerRouteType"
                    },
                    "x-displayname": "Routes"
                },
                "service_policies_from_namespace": {
                    "description": "Exclusive with [active_service_policies no_service_policies]\nx-displayName: \"Apply Namespace Service Policies\"\nApply the service policies configured as part of the namespace service policy set",
                    "title": "Apply Namespace Service Policies",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "source_ip_stickiness": {
                    "description": "Exclusive with [cookie_stickiness least_active random ring_hash round_robin]\nx-displayName: \"Source IP Stickiness\"\nRequest are sent to all eligible origin servers using hash of source ip. Consistent hashing algorithm, ring hash, is used to select origin server",
                    "title": "Source IP Stickiness",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "state": {
                    "description": " State of the virtual host",
                    "title": "Virtual Host state",
                    "$ref": "#/definitions/virtual_hostVirtualHostState",
                    "x-displayname": "Virtual Host State"
                },
                "trusted_clients": {
                    "type": "array",
                    "description": " Rules that specify the clients to be trusted.\n WAF processing is skipped for trusted clients",
                    "title": "Trusted Client Rules",
                    "items": {
                        "$ref": "#/definitions/http_loadbalancerSimpleClientSrcRule"
                    },
                    "x-displayname": "Trusted Client Rules"
                },
                "user_identification": {
                    "description": " A reference to user_identification object.\n The rules in the user_identification object are evaluated to determine the user identifier to be rate limited.",
                    "title": "user_identification",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "User Identification Policy"
                },
                "view_internal": {
                    "description": " Reference to view internal object",
                    "title": "view_internal",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "View Internal"
                },
                "waf": {
                    "description": "Exclusive with [app_firewall disable_waf waf_rule]\nx-displayName: \"Specify WAF Intent\"\nReference to WAF intent configuration object",
                    "title": "WAF",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "waf_exclusion_rules": {
                    "type": "array",
                    "description": " Rules that specify the match conditions and the corresponding WAF_RULE_IDs which should be excluded from WAF evaluation",
                    "title": "WAF Exclusion Rules",
                    "items": {
                        "$ref": "#/definitions/policySimpleWafExclusionRule"
                    },
                    "x-displayname": "WAF Exclusion Rules"
                },
                "waf_rule": {
                    "description": "Exclusive with [app_firewall disable_waf waf]\nx-displayName: \"Specify WAF Rules\"\nReference to WAF Rules configuration object",
                    "title": "waf_rules",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                }
            }
        },
        "viewshttp_loadbalancerMirrorPolicyType": {
            "type": "object",
            "description": "MirrorPolicy is used for shadowing traffic from one origin pool to another. The approach used\nis \"fire and forget\", meaning it will not wait for the shadow origin pool to\nrespond before returning the response from the primary origin pool. All normal statistics are\ncollected for the shadow origin pool making this feature useful for testing and troubleshooting.",
            "title": "MirrorPolicyType",
            "x-displayname": "Mirror Policy",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.MirrorPolicyType",
            "properties": {
                "origin_pool": {
                    "description": " Specifies the cluster to which the requests will be mirrored. The cluster object\n referred here must be present.\nRequired: YES",
                    "title": "cluster",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Mirror Destination Cluster",
                    "x-ves-required": "true"
                },
                "percent": {
                    "description": " Percentage of requests to be mirrored\nRequired: YES",
                    "title": "percent",
                    "$ref": "#/definitions/schemaFractionalPercent",
                    "x-displayname": "Mirror Percentage",
                    "x-ves-required": "true"
                }
            }
        },
        "viewshttp_loadbalancerPolicyBasedChallenge": {
            "type": "object",
            "description": "Specifies the settings for policy rule based challenge",
            "title": "policy based challenge",
            "x-displayname": "Policy Based Challenge",
            "x-ves-oneof-field-captcha_challenge_parameters_choice": "[\"captcha_challenge_parameters\",\"default_captcha_challenge_parameters\"]",
            "x-ves-oneof-field-challenge_choice": "[\"always_enable_captcha_challenge\",\"always_enable_js_challenge\",\"no_challenge\"]",
            "x-ves-oneof-field-js_challenge_parameters_choice": "[\"default_js_challenge_parameters\",\"js_challenge_parameters\"]",
            "x-ves-oneof-field-malicious_user_mitigation_choice": "[\"default_mitigation_settings\",\"malicious_user_mitigation\"]",
            "x-ves-oneof-field-temporary_blocking_parameters_choice": "[\"default_temporary_blocking_parameters\",\"temporary_user_blocking\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.PolicyBasedChallenge",
            "properties": {
                "always_enable_captcha_challenge": {
                    "description": "Exclusive with [always_enable_js_challenge no_challenge]\nx-displayName: \"Always enable Captcha Challenge\"\nEnable Captcha challenge for all requests.\nChallenge rules can be used to selectively disable Captcha challenge or enable Javascript challenge for some requests.",
                    "title": "always enable captcha challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "always_enable_js_challenge": {
                    "description": "Exclusive with [always_enable_captcha_challenge no_challenge]\nx-displayName: \"Always enable JS Challenge\"\nEnable Javascript challenge for all requests.\nChallenge rules can be used to selectively disable Javascript challenge or enable Captcha challenge for some requests.",
                    "title": "always enable JS challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "captcha_challenge_parameters": {
                    "description": "Exclusive with [default_captcha_challenge_parameters]\nx-displayName: \"Captcha Challenge Parameters\"\nConfigure captcha challenge parameters",
                    "title": "Captcha Challenge",
                    "$ref": "#/definitions/virtual_hostCaptchaChallengeType"
                },
                "default_captcha_challenge_parameters": {
                    "description": "Exclusive with [captcha_challenge_parameters]\nx-displayName: \"Use Default Parameters\"\nUse default parameters",
                    "title": "default parameters",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_js_challenge_parameters": {
                    "description": "Exclusive with [js_challenge_parameters]\nx-displayName: \"Use Default Parameters\"\nUse default parameters",
                    "title": "default parameters",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_mitigation_settings": {
                    "description": "Exclusive with [malicious_user_mitigation]\nx-displayName: \"Use Default Parameters\"\nUse default parameters",
                    "title": "default parameters",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "default_temporary_blocking_parameters": {
                    "description": "Exclusive with [temporary_user_blocking]\nx-displayName: \"Use Default Parameters\"\nUse default parameters",
                    "title": "default parameters",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "js_challenge_parameters": {
                    "description": "Exclusive with [default_js_challenge_parameters]\nx-displayName: \"Javascript Challenge Parameters\"\nConfigure Javascript challenge parameters",
                    "title": "Javascript Challenge",
                    "$ref": "#/definitions/virtual_hostJavascriptChallengeType"
                },
                "malicious_user_mitigation": {
                    "description": "Exclusive with [default_mitigation_settings]\nx-displayName: \"Malicious User Mitigation\"\nSettings that specify the actions to be taken when malicious users are determined to be at different threat levels.\nUser's activity is monitored and continuously analyzed for malicious behavior. From this analysis, a threat level is assigned to each user.\nThe settings defined in malicious user mitigation specify what mitigation actions to take for users determined to be at different threat levels.",
                    "title": "Malicious User Mitigation",
                    "$ref": "#/definitions/schemaviewsObjectRefType"
                },
                "no_challenge": {
                    "description": "Exclusive with [always_enable_captcha_challenge always_enable_js_challenge]\nx-displayName: \"No Challenge\"\nDisable Javascript and Captcha challenge for all requests.\nChallenge rules can be used to selectively enable Javascript or Captcha challenge for some requests.",
                    "title": "no_challenge",
                    "$ref": "#/definitions/schemaEmpty"
                },
                "rule_list": {
                    "description": " list challenge rules to be used in policy based challenge",
                    "title": "Challenge rule list",
                    "$ref": "#/definitions/http_loadbalancerChallengeRuleList",
                    "x-displayname": "Challenge rule list"
                },
                "temporary_user_blocking": {
                    "description": "Exclusive with [default_temporary_blocking_parameters]\nx-displayName: \"Temporary User Blocking Parameters\"\nSpecifies configuration for temporary user blocking resulting from malicious user detection",
                    "title": "Temporary User Blocking",
                    "$ref": "#/definitions/virtual_hostTemporaryUserBlockingType"
                }
            }
        },
        "viewshttp_loadbalancerRouteType": {
            "type": "object",
            "description": "This defines various options to define a route",
            "title": "RouteType",
            "x-displayname": "Route Type",
            "x-ves-oneof-field-choice": "[\"custom_route_object\",\"direct_response_route\",\"redirect_route\",\"simple_route\"]",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.RouteType",
            "properties": {
                "custom_route_object": {
                    "description": "Exclusive with [direct_response_route redirect_route simple_route]\nx-displayName: \"Custom Route Object\"\nA custom route uses a route object created outside of this view.",
                    "title": "RouteTypeCustomRoute",
                    "$ref": "#/definitions/http_loadbalancerRouteTypeCustomRoute"
                },
                "direct_response_route": {
                    "description": "Exclusive with [custom_route_object redirect_route simple_route]\nx-displayName: \"Direct Response Route\"\nA direct response route matches on path and/or HTTP method and responds directly to the matching traffic",
                    "title": "RouteTypeDirectResponse",
                    "$ref": "#/definitions/http_loadbalancerRouteTypeDirectResponse"
                },
                "redirect_route": {
                    "description": "Exclusive with [custom_route_object direct_response_route simple_route]\nx-displayName: \"Redirect Route\"\nA redirect route matches on path and/or HTTP method and redirects the matching traffic to a different URL",
                    "title": "RouteTypeRedirect",
                    "$ref": "#/definitions/http_loadbalancerRouteTypeRedirect"
                },
                "simple_route": {
                    "description": "Exclusive with [custom_route_object direct_response_route redirect_route]\nx-displayName: \"Simple Route\"\nA simple route matches on path and/or HTTP method and forwards the matching traffic to the associated pools",
                    "title": "RouteTypeSimple",
                    "$ref": "#/definitions/http_loadbalancerRouteTypeSimple"
                }
            }
        },
        "viewshttp_loadbalancerSpecType": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.http_loadbalancer.SpecType",
            "properties": {
                "gc_spec": {
                    "title": "gc_spec",
                    "$ref": "#/definitions/viewshttp_loadbalancerGlobalSpecType",
                    "x-displayname": "GC Spec"
                }
            }
        },
        "virtual_hostAutoCertInfoType": {
            "type": "object",
            "description": "Information related to auto certificate",
            "title": "AutoCertInfoType",
            "x-displayname": "Auto Cert Information",
            "x-ves-proto-message": "ves.io.schema.virtual_host.AutoCertInfoType",
            "properties": {
                "auto_cert_expiry": {
                    "type": "string",
                    "description": " Auto certificate expiry timestamp",
                    "title": "Auto Cert Expiry Timestamp",
                    "format": "date-time",
                    "x-displayname": "Auto Cert Expiry Timestamp"
                },
                "auto_cert_issuer": {
                    "type": "string",
                    "description": " Issuer of the auto certificate",
                    "title": "Auto Cert Issuer",
                    "x-displayname": "Auto Cert Issuer"
                },
                "auto_cert_state": {
                    "description": " State of auto certificate generation.",
                    "title": "Auto Cert State",
                    "$ref": "#/definitions/virtual_hostCertificationState",
                    "x-displayname": "Auto Cert State"
                },
                "auto_cert_subject": {
                    "type": "string",
                    "description": " Subject of the auto certificate",
                    "title": "Auto Cert Subject",
                    "x-displayname": "Auto Cert Subject"
                }
            }
        },
        "virtual_hostCaptchaChallengeType": {
            "type": "object",
            "description": "\nEnables loadbalancer to perform captcha challenge\n\nCaptcha challenge will be based on Google Recaptcha.\n\nWith this feature enabled, only clients that pass the captcha challenge will be allowed to\ncomplete the HTTP request.\n\nWhen loadbalancer is configured to do Captcha Challenge, it will redirect the browser to an\nHTML page on every new HTTP request. This HTML page will have captcha challenge embedded in it.\nClient will be allowed to make the request only if the captcha challenge is successful.\nLoadbalancer will tag response header with a cookie to avoid Captcha challenge for subsequent requests.\n\nCAPTCHA is mainly used as a security check to ensure only human users can pass through.\nGenerally, computers or bots are not capable of solving a captcha.\n\nYou can enable either Javascript challenge or Captcha challenge on a virtual host",
            "title": "CaptchaChallengeType",
            "x-displayname": "Captcha Challenge Parameters",
            "x-ves-proto-message": "ves.io.schema.virtual_host.CaptchaChallengeType",
            "properties": {
                "cookie_expiry": {
                    "type": "integer",
                    "description": " Cookie expiration period, in seconds.\n An expired cookie causes the loadbalancer to issue a new challenge.\n\nExample: - 1000-",
                    "title": "cookie_expiry",
                    "format": "int64",
                    "x-displayname": "Cookie Expiration Period"
                },
                "custom_page": {
                    "type": "string",
                    "description": " Custom message is of type uri_ref. Currently supported URL schemes is string:///.\n For string:/// scheme, message needs to be encoded in Base64 format.\n You can specify this message as base64 encoded plain text message e.g. \"Please Wait..\"\n or it can be HTML paragraph or a body string encoded as base64 string\n E.g. \"\u003cp\u003e Please Wait \u003c/p\u003e\". Base64 encoded string for this html is \"PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"\n\nExample: - \"string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"-",
                    "title": "custom_page",
                    "x-displayname": "Custom message for Captcha Challenge",
                    "x-ves-example": "string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4="
                }
            }
        },
        "virtual_hostCertificationState": {
            "type": "string",
            "description": "State of auto certification generation for the virtual host\n\n - AutoCertDisabled: Auto Cert Disabled\n\nAuto Certification is disabled.\n - DnsDomainVerification: Dns Domain Verification\n\nAuto Certification is waiting for domain verification.\n - AutoCertStarted: Auto Cert Started\n\nAuto Certificate generation action has started.\n - DomainChallengePending: Domain Challenge Pending\n\nThe domains in the virtual host configuration are being verified. This requires\nthe _acme-challenge TXT record in the domain to have the correct TXT.\n - DomainChallengeVerified: Domain Challenge Verified\n\nAll the domains in the virtual host have been verified.\n - AutoCertFinalize: Auto Cert Finalize\n\nCertificate generation order is Ready and Finalized.\n - CertificateInvalid: Certificate Invalid\n\nCertificate is invalid\n - CertificateValid: Certificate Valid\n\nValid certificate generated and tls_parameters are updated\n - AutoCertNotApplicable: Auto Cert Not Applicable\n\nAuto certificate not applicable because virtual host does not use TLS\n - AutoCertRateLimited: Auto Cert Rate Limited\n\nAuto certificate not available because CA has rate limited the request\n - AutoCertGenerationRetry: Auto Cert Generation Retry\n\nAuto certificate generate failed in the previous attempt, will be retried automatically\n - AutoCertError: Auto Cert Error\n\nError in Certificate generation",
            "title": "Certification State",
            "enum": [
                "AutoCertDisabled",
                "DnsDomainVerification",
                "AutoCertStarted",
                "DomainChallengePending",
                "DomainChallengeVerified",
                "AutoCertFinalize",
                "CertificateInvalid",
                "CertificateValid",
                "AutoCertNotApplicable",
                "AutoCertRateLimited",
                "AutoCertGenerationRetry",
                "AutoCertError"
            ],
            "default": "AutoCertDisabled",
            "x-displayname": "Certification State",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.CertificationState"
        },
        "virtual_hostCompressionType": {
            "type": "object",
            "description": "Enables loadbalancer to compress dispatched data from an upstream service upon client request.\nThe content is compressed and then sent to the client with the appropriate headers if either response and request allow.\nOnly GZIP compression is supported.\n\nBy default compression will be skipped when:\n\n  A request does NOT contain accept-encoding header.\n  A request includes accept-encoding header, but it does not contain “gzip” or “*”.\n  A request includes accept-encoding with “gzip” or “*” with the weight “q=0”. Note that the “gzip” will have a higher weight then “*”. For example, if accept-encoding is “gzip;q=0,*;q=1”, the filter will not compress. But if the header is set to “*;q=0,gzip;q=1”, the filter will compress.\n  A request whose accept-encoding header includes “identity”.\n  A response contains a content-encoding header.\n  A response contains a cache-control header whose value includes “no-transform”.\n  A response contains a transfer-encoding header whose value includes “gzip”.\n  A response does not contain a content-type value that matches one of the selected mime-types, which default to application/javascript, application/json, application/xhtml+xml, image/svg+xml, text/css, text/html, text/plain, text/xml.\n  Neither content-length nor transfer-encoding headers are present in the response.\n  Response size is smaller than 30 bytes (only applicable when transfer-encoding is not chunked).\n\nWhen compression is applied:\n\n  The content-length is removed from response headers.\n  Response headers contain “transfer-encoding: chunked” and do not contain “content-encoding” header.\n  The “vary: accept-encoding” header is inserted on every response.\n\nGZIP Compression Level:\n\nA value which is optimal balance between speed of compression and amount of compression is chosen.",
            "title": "CompressionType",
            "x-displayname": "Compression Parameters",
            "x-ves-proto-message": "ves.io.schema.virtual_host.CompressionType",
            "properties": {
                "content_length": {
                    "type": "integer",
                    "description": " Minimum response length, in bytes, which will trigger compression. The default value is 30.\n\nExample: - 100-",
                    "title": "content_length",
                    "format": "int64",
                    "x-displayname": "Content Length"
                },
                "content_type": {
                    "type": "array",
                    "description": " Set of strings that allows specifying which mime-types yield compression\n When this field is not defined, compression will be applied\n to the following mime-types:\n     \"application/javascript\"\n     \"application/json\",\n     \"application/xhtml+xml\"\n     \"image/svg+xml\"\n     \"text/css\"\n     \"text/html\"\n     \"text/plain\"\n     \"text/xml\"\n\nExample: - \"application/json\"-",
                    "title": "content_type",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Content Type",
                    "x-ves-example": "application/json"
                },
                "disable_on_etag_header": {
                    "type": "boolean",
                    "description": " If true, disables compression when the response contains an etag header. When it is false,\n weak etags will be preserved and the ones that require strong validation will be removed.\n\nExample: - \"true\"-",
                    "title": "disable_on_etag_header",
                    "format": "boolean",
                    "x-displayname": "Disable On Etag Header",
                    "x-ves-example": "true"
                },
                "remove_accept_encoding_header": {
                    "type": "boolean",
                    "description": " If true, removes accept-encoding from the request headers before dispatching it to the upstream\n so that responses do not get compressed before reaching the filter.\n\nExample: - \"true\"-",
                    "title": "remove_accept_encoding_header",
                    "format": "boolean",
                    "x-displayname": "Remove Accept-Encoding Header",
                    "x-ves-example": "true"
                }
            }
        },
        "virtual_hostJavaScriptConfigType": {
            "type": "object",
            "description": "Custom JavaScript Configuration. Custom JavaScript code can be executed at various stages of request processing.",
            "title": "JavaScriptConfigType",
            "x-displayname": "JavaScript Configuration",
            "x-ves-proto-message": "ves.io.schema.virtual_host.JavaScriptConfigType",
            "properties": {
                "cache_prefix": {
                    "type": "string",
                    "description": " Identifier for data store to be used by JavaScript. Data store can be\n KeyValue store referred by script.",
                    "title": "CachePrefix",
                    "x-displayname": "Cache Identifier"
                },
                "custom_script_url": {
                    "type": "string",
                    "description": " URL of JavaScript that gets executed",
                    "title": "ScriptURL",
                    "x-displayname": "Path of Javascript"
                },
                "script_config": {
                    "type": "object",
                    "description": " Input passed to the script",
                    "title": "ScriptConfig",
                    "x-displayname": "Configuration for Script"
                }
            }
        },
        "virtual_hostJavascriptChallengeType": {
            "type": "object",
            "description": "\nEnables loadbalancer to perform client browser compatibility test by redirecting to a page\nwith Javascript.\n\nWith this feature enabled, only clients that are capable of executing Javascript(mostly browsers)\nwill be allowed to complete the HTTP request.\n\nWhen loadbalancer is configured to do Javascript Challenge, it will redirect the browser to an\nHTML page on every new HTTP request. This HTML page will have Javascript embedded in it.\nLoadbalancer chooses a set of random numbers for every new client and sends these numbers along with an\nencrypted answer with the request such that it embed these numbers as input in the Javascript.\nJavascript will run on the requestor browser and perform a complex Math operation.\nScript will submit the answer to loadbalancer. Loadbalancer will validate the answer by comparing the calculated\nanswer with the decrypted answer (which was encrypted when it was sent back as reply) and allow\nthe request to the upstream server only if the answer is correct.\nLoadbalancer will tag response header with a cookie to avoid Javascript challenge for subsequent requests.\n\nJavascript challenge serves following purposes\n   * Validate that the request is coming via a browser that is capable for running Javascript\n   * Force the browser to run a complex operation, f(X), that requires it to spend a large number\n     of CPU cycles. This is to slow down a potential DoS attacker by making it difficult to launch\n   a large request flood without having to spend even larger CPU cost at their end.\n\nYou can enable either Javascript challenge or Captcha challenge on a virtual host",
            "title": "JavascriptChallengeType",
            "x-displayname": "Javascript Challenge Parameters",
            "x-ves-proto-message": "ves.io.schema.virtual_host.JavascriptChallengeType",
            "properties": {
                "cookie_expiry": {
                    "type": "integer",
                    "description": " Cookie expiration period, in seconds.\n An expired cookie causes the loadbalancer to issue a new challenge.\n\nExample: - 1000-",
                    "title": "cookie_expiry",
                    "format": "int64",
                    "x-displayname": "Cookie Expiration Period"
                },
                "custom_page": {
                    "type": "string",
                    "description": " Custom message is of type uri_ref. Currently supported URL schemes is string:///.\n For string:/// scheme, message needs to be encoded in Base64 format.\n You can specify this message as base64 encoded plain text message e.g. \"Please Wait..\"\n or it can be HTML paragraph or a body string encoded as base64 string\n E.g. \"\u003cp\u003e Please Wait \u003c/p\u003e\". Base64 encoded string for this html is \"PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"\n\nExample: - \"string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"-",
                    "title": "custom_page",
                    "x-displayname": "Custom Message for Javascript Challenge",
                    "x-ves-example": "string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4="
                },
                "js_script_delay": {
                    "type": "integer",
                    "description": " Delay introduced by Javascript, in milliseconds.\n\nExample: - 1000-",
                    "title": "js_script_delay",
                    "format": "int64",
                    "x-displayname": "Javascript Delay"
                }
            }
        },
        "virtual_hostTemporaryUserBlockingType": {
            "type": "object",
            "description": "\nSpecifies configuration for temporary user blocking resulting from user behavior analysis.\n\nWhen Malicious User Mitigation is enabled from service policy rules, users' accessing the application will be analyzed for\nmalicious activity and the configured mitigation actions will be taken on identified malicious users.\nThese mitigation actions include setting up temporary blocking on that user.\nThis configuration specifies settings on how that blocking should be done by the loadbalancer.",
            "title": "TemporaryUserBlockingType",
            "x-displayname": "Temporary User Blocking",
            "x-ves-proto-message": "ves.io.schema.virtual_host.TemporaryUserBlockingType",
            "properties": {
                "custom_page": {
                    "type": "string",
                    "description": " Custom message is of type -uri_ref-. Currently supported URL schemes is -string:///-.\n For -string:///- scheme, message needs to be encoded in Base64 format.\n You can specify this message as base64 encoded plain text message e.g. \"Blocked..\"\n or it can be HTML paragraph or a body string encoded as base64 string\n E.g. \"\u003cp\u003e Blocked \u003c/p\u003e\". Base64 encoded string for this html is \"PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"\n\nExample: - \"string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4=\"-",
                    "title": "custom_page",
                    "x-displayname": "Custom Message for Temporary Blocking",
                    "x-ves-example": "string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4="
                }
            }
        },
        "virtual_hostVirtualHostState": {
            "type": "string",
            "description": "State of the virtual host\n\n - VIRTUAL_HOST_READY: VIRTUAL_HOST_READY\n\nVirtual host is ready to install\n - VIRTUAL_HOST_PENDING_VERIFICATION: VIRTUAL_HOST_PENDING_VERIFICATION\n\nVirtual host is verfication pending for some or all of its domains\n - VIRTUAL_HOST_VERIFICATION_FAILED: VIRTUAL_HOST_VERIFICATION_FAILED\n\nVirtual host has one or more domains for which verification failed\n - VIRTUAL_HOST_PENDING_DNS_DELEGATION: VIRTUAL_HOST_PENDING_DNS_DELEGATION\n\nVirtual host is pending DNS delegation\n - VIRTUAL_HOST_PENDING_A_RECORD: VIRTUAL_HOST_PENDING_A_RECORD\n\nVirtual host is waiting for one or more A records to be created\n - VIRTUAL_HOST_DNS_A_RECORD_ADDED: VIRTUAL_HOST_DNS_A_RECORD_ADDED\n\nDNS A record has been added for this Virtual host",
            "title": "VirtualHostState",
            "enum": [
                "VIRTUAL_HOST_READY",
                "VIRTUAL_HOST_PENDING_VERIFICATION",
                "VIRTUAL_HOST_VERIFICATION_FAILED",
                "VIRTUAL_HOST_PENDING_DNS_DELEGATION",
                "VIRTUAL_HOST_PENDING_A_RECORD",
                "VIRTUAL_HOST_DNS_A_RECORD_ADDED"
            ],
            "default": "VIRTUAL_HOST_READY",
            "x-displayname": "Virtual Host State",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.VirtualHostState"
        },
        "virtual_host_dns_infoDnsInfo": {
            "type": "object",
            "description": "A message that contains DNS information for a given IP address",
            "title": "DNS information",
            "x-displayname": "DNS Information",
            "x-ves-proto-message": "ves.io.schema.virtual_host_dns_info.DnsInfo",
            "properties": {
                "ip_address": {
                    "type": "string",
                    "description": " IP address associated with virtual host",
                    "title": "IP address",
                    "x-displayname": "IP Address"
                }
            }
        },
        "waf_rule_listWafRuleID": {
            "type": "string",
            "description": "Supported WAF rule IDs\n\nUsed internally to instruct the modsec code in envoy to skip all rules\nRequest from Known Malicious Client (Based on previous traffic violations).\nClient IP is from a HIGH Risk Country Location.\nHTTP Blacklist match for search engine IP\nHTTP Blacklist match for spammer IP\nHTTP Blacklist match for suspicious IP\nHTTP Blacklist match for harvester IP\nMethod is not allowed by policy\nDenial of Service (DoS) attack identified from %{tx.real_ip} (%{tx.dos_block_counter} hits since last alert)\nFound User-Agent associated with security scanner\nFound User-Agent associated with scripting/generic HTTP client\nFound User-Agent associated with web crawler/bot\nFound request header associated with security scanner\nFound request filename/argument associated with security scanner\nInvalid HTTP Request Line\nAttempted multipart/form-data bypass\nAttempted multipart/form-data bypass\nFailed to parse request body.\nMultipart request body failed strict validation:PE %{REQBODY_PROCESSOR_ERROR},BQ %{MULTIPART_BOUNDARY_QUOTED},BW %{MULTIPART_BOUNDARY_WHITESPACE},DB %{MULTIPART_DATA_BEFORE},DA %{MULTIPART_DATA_AFTER},HF %{MULTIPART_HEADER_FOLDING},LF %{MULTIPART_LF_LINE},SM %{MULTIPART_MISSING_SEMICOLON},IQ %{MULTIPART_INVALID_QUOTING},IH %{MULTIPART_INVALID_HEADER_FOLDING},FLE %{MULTIPART_FILE_LIMIT_EXCEEDED}\nContent-Length HTTP header is not numeric.\nGET or HEAD Request with Body Content.\nGET or HEAD Request with Transfer-Encoding.\nPOST without Content-Length or Transfer-Encoding headers.\nRange: Invalid Last Byte Value.\nRange: Too many fields (6 or more)\nRange: Too many fields for pdf request (63 or more)\nRange: Too many fields for pdf request (6 or more)\nMultiple/Conflicting Connection Header Data Found.\nURL Encoding Abuse Attack Attempt\nMultiple URL Encoding Detected\nURL Encoding Abuse Attack Attempt\nUTF8 Encoding Abuse Attack Attempt\nUnicode Full/Half Width Abuse Attack Attempt\nInvalid character in request (null character)\nInvalid character in request (non printable characters)\nInvalid character in request (outside of printable chars below ascii 127)\nInvalid character in request (outside of very strict set)\nInvalid character in request headers (outside of very strict set)\nRequest Containing Content Requires Content-Type header\nHost header is a numeric IP address\nArgument name too long\nArgument value too long\nToo many arguments in request\nTotal arguments size exceeded\nUploaded file size too large\nTotal uploaded files size too large\nRequest content type is not allowed by policy\nHTTP protocol version is not allowed by policy\nURL file extension is restricted by policy\nHTTP header is restricted by policy (%{MATCHED_VAR})\nAbnormal character escapes in request\nIllegal Content-Type header\nRequest content type charset is not allowed by policy\nHTTP Request Smuggling Attack\nHTTP Response Splitting Attack\nHTTP Response Splitting Attack\nHTTP Header Injection Attack via headers\nHTTP Header Injection Attack via payload (CR/LF detected)\nHTTP Header Injection Attack via payload (CR/LF detected)\nHTTP Header Injection Attack via payload (CR/LF and header-name detected)\nPath Traversal Attack (/../)\nPath Traversal Attack (/../)\nOS File Access Attempt\nRestricted File Access Attempt\nPossible Remote File Inclusion (RFI) Attack: URL Parameter using IP Address\nPossible Remote File Inclusion (RFI) Attack: Common RFI Vulnerable Parameter Name used w/URL Payload\nPossible Remote File Inclusion (RFI) Attack: URL Payload Used w/Trailing Question Mark Character (?)\nPossible Remote File Inclusion (RFI) Attack: Off-Domain Reference/Link\nRemote Command Execution: Unix Command Injection\nRemote Command Execution: Unix Command Injection\nRemote Command Execution: Unix Command Injection\nRemote Command Execution: Windows Command Injection\nRemote Command Execution: Windows Command Injection\nRemote Command Execution: Windows PowerShell Command Found\nRemote Command Execution: Unix Shell Expression Found\nRemote Command Execution: Windows FOR/IF Command Found\nRemote Command Execution: Direct Unix Command Execution\nRemote Command Execution: Unix Shell Code Found\nRemote Command Execution: Shellshock (CVE-2014-6271)\nRemote Command Execution: Shellshock (CVE-2014-6271)\nRestricted File Upload Attempt\nRemote Command Execution: Wildcard bypass technique attempt\nPHP Injection Attack: PHP Open Tag Found\nPHP Injection Attack: PHP Script File Upload Found\nPHP Injection Attack: PHP Script File Upload Found\nPHP Injection Attack: Configuration Directive Found\nPHP Injection Attack: Variables Found\nPHP Injection Attack: Variables Found\nPHP Injection Attack: I/O Stream Found\nPHP Injection Attack: High-Risk PHP Function Name Found\nPHP Injection Attack: Medium-Risk PHP Function Name Found\nPHP Injection Attack: High-Risk PHP Function Call Found\nPHP Injection Attack: Low-Value PHP Function Call Found\nPHP Injection Attack: Serialized Object Injection\nPHP Injection Attack: Variable Function Call Found\nPHP Injection Attack: PHP Closing Tag Found\nXSS Attack Detected via libinjection\nXSS Attack Detected via libinjection\nXSS Filter - Category 1: Script Tag Vector\nXSS Filter - Category 2: Event Handler Vector\nXSS Filter - Category 3: Attribute Vector\nXSS Filter - Category 4: Javascript URI Vector\nXSS Filter - Category 5: Disallowed HTML Attributes\nNoScript XSS InjectionChecker: HTML Injection\nNoScript XSS InjectionChecker: Attribute Injection\nNode-Validator Blacklist Keywords\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nUS-ASCII Malformed Encoding XSS Filter - Attack Detected.\nPossible XSS Attack Detected - HTML Tag Handler\nIE XSS Filters - Attack Detected.\nIE XSS Filters - Attack Detected.\nUTF-7 Encoding IE XSS - Attack Detected.\nSQL Injection Attack Detected via libinjection\nSQL Injection Attack: Common Injection Testing Detected\nSQL Injection Attack: SQL Operator Detected\nSQL Injection Attack: SQL Tautology Detected.\nSQL Injection Attack: Common DB Names Detected\nSQL Injection Attack\nDetects blind sqli tests using sleep() or benchmark().\nDetects SQL benchmark and sleep injection attempts including conditional queries\nDetects basic SQL authentication bypass attempts 1/3\nDetects MSSQL code execution and information gathering attempts\nDetects MySQL comment-/space-obfuscated injections and backtick termination\nDetects chained SQL injection attempts 1/2\nLooking for integer overflow attacks, these are taken from skipfish, except 3.0.00738585072007e-308 is the \\\nDetects conditional SQL injection attempts\nDetects MySQL charset switch and MSSQL DoS attempts\nDetects MATCH AGAINST, MERGE and EXECUTE IMMEDIATE injections\nDetects HAVING injections\nDetects basic SQL authentication bypass attempts 2/3\nLooking for basic sql injection. Common attack string for mysql, oracle and others.\nDetects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts\nFinds basic MongoDB SQL injection attempts\nDetects MySQL comments, conditions and ch(a)r injections\nDetects chained SQL injection attempts 2/2\nDetects MySQL and PostgreSQL stored procedure/function injections\nDetects classic SQL injection probings 1/3\nDetects basic SQL authentication bypass attempts 3/3\nDetects MySQL UDF injection and other data/structure manipulation attempts\nDetects concatenated basic SQL injection and SQLLFI attempts\nDetects basic SQL injection based on keyword alter or union\nDetects classic SQL injection probings 2/3\nSQL Injection Attack\nSQL Injection Attack\nSQL Injection Attack\nSQL Injection Attack\nRestricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (8)\nRestricted SQL Character Anomaly Detection (cookies): # of special characters exceeded (3)\nRestricted SQL Character Anomaly Detection (args): # of special characters exceeded (12)\nRestricted SQL Character Anomaly Detection (args): # of special characters exceeded (6)\nRestricted SQL Character Anomaly Detection (args): # of special characters exceeded (2)\nSQL Comment Sequence Detected.\nSQL Hex Encoding Identified\nMeta-Character Anomaly Detection Alert - Repetitive Non-Word Characters\nSQL Injection Attack\nSQL Injection Attack\nDetects classic SQL injection probings 3/3\nPossible Session Fixation Attack: Setting Cookie Values in HTML\nPossible Session Fixation Attack: SessionID Parameter Name with Off-Domain Referer\nPossible Session Fixation Attack: SessionID Parameter Name with No Referer\nRemote Command Execution: Suspicious Java class detected\nRemote Command Execution: Java process spawn (CVE-2017-9805)\nRemote Command Execution: Java serialization (CVE-2015-5842)\nSuspicious Java class detected\nMagic bytes Detected, probable java serialization in use\nMagic bytes Detected Base64 Encoded, probable java serialization in use\nRemote Command Execution: Java serialization (CVE-2015-5842)\nRemote Command Execution: Suspicious Java method detected\nBase64 encoded string matched suspicious keyword\nThe Application Returned a 500-Level Status Code\nDirectory Listing\nMicrosoft Access SQL Information Leakage\nOracle SQL Information Leakage\nDB2 SQL Information Leakage\nEMC SQL Information Leakage\nfirebird SQL Information Leakage\nFrontbase SQL Information Leakage\nhsqldb SQL Information Leakage\ninformix SQL Information Leakage\ningres SQL Information Leakage\ninterbase SQL Information Leakage\nmaxDB SQL Information Leakage\nmssql SQL Information Leakage\nmysql SQL Information Leakage\npostgres SQL Information Leakage\nsqlite SQL Information Leakage\nSybase SQL Information Leakage\nJava Source Code Leakage\nJava Errors\nPHP Information Leakage\nPHP source code leakage\nPHP source code leakage\nDisclosure of IIS install location\nApplication Availability Error\nIIS Information Leakage\nIIS Information Leakage\nEnable Drupal specific CRS exclusions\nEnable Wordpress specific CRS exclusions\nEnable Cpanel specific CRS exclusions\nEnable Dokuwiki specific CRS exclusions\nEnable Nextcloud specific CRS exclusions\nEnable Xenforo specific CRS exclusions",
            "title": "WAF Rule ID",
            "enum": [
                "WAF_RULE_ALL",
                "WAF_RULE_910000",
                "WAF_RULE_910100",
                "WAF_RULE_910150",
                "WAF_RULE_910160",
                "WAF_RULE_910170",
                "WAF_RULE_910180",
                "WAF_RULE_911100",
                "WAF_RULE_912120",
                "WAF_RULE_913100",
                "WAF_RULE_913101",
                "WAF_RULE_913102",
                "WAF_RULE_913110",
                "WAF_RULE_913120",
                "WAF_RULE_920100",
                "WAF_RULE_920120",
                "WAF_RULE_920121",
                "WAF_RULE_920130",
                "WAF_RULE_920140",
                "WAF_RULE_920160",
                "WAF_RULE_920170",
                "WAF_RULE_920171",
                "WAF_RULE_920180",
                "WAF_RULE_920190",
                "WAF_RULE_920200",
                "WAF_RULE_920201",
                "WAF_RULE_920202",
                "WAF_RULE_920210",
                "WAF_RULE_920220",
                "WAF_RULE_920230",
                "WAF_RULE_920240",
                "WAF_RULE_920250",
                "WAF_RULE_920260",
                "WAF_RULE_920270",
                "WAF_RULE_920271",
                "WAF_RULE_920272",
                "WAF_RULE_920273",
                "WAF_RULE_920274",
                "WAF_RULE_920341",
                "WAF_RULE_920350",
                "WAF_RULE_920360",
                "WAF_RULE_920370",
                "WAF_RULE_920380",
                "WAF_RULE_920390",
                "WAF_RULE_920400",
                "WAF_RULE_920410",
                "WAF_RULE_920420",
                "WAF_RULE_920430",
                "WAF_RULE_920440",
                "WAF_RULE_920450",
                "WAF_RULE_920460",
                "WAF_RULE_920470",
                "WAF_RULE_920480",
                "WAF_RULE_921110",
                "WAF_RULE_921120",
                "WAF_RULE_921130",
                "WAF_RULE_921140",
                "WAF_RULE_921150",
                "WAF_RULE_921151",
                "WAF_RULE_921160",
                "WAF_RULE_930100",
                "WAF_RULE_930110",
                "WAF_RULE_930120",
                "WAF_RULE_930130",
                "WAF_RULE_931100",
                "WAF_RULE_931110",
                "WAF_RULE_931120",
                "WAF_RULE_931130",
                "WAF_RULE_932100",
                "WAF_RULE_932105",
                "WAF_RULE_932106",
                "WAF_RULE_932110",
                "WAF_RULE_932115",
                "WAF_RULE_932120",
                "WAF_RULE_932130",
                "WAF_RULE_932140",
                "WAF_RULE_932150",
                "WAF_RULE_932160",
                "WAF_RULE_932170",
                "WAF_RULE_932171",
                "WAF_RULE_932180",
                "WAF_RULE_932190",
                "WAF_RULE_933100",
                "WAF_RULE_933110",
                "WAF_RULE_933111",
                "WAF_RULE_933120",
                "WAF_RULE_933130",
                "WAF_RULE_933131",
                "WAF_RULE_933140",
                "WAF_RULE_933150",
                "WAF_RULE_933151",
                "WAF_RULE_933160",
                "WAF_RULE_933161",
                "WAF_RULE_933170",
                "WAF_RULE_933180",
                "WAF_RULE_933190",
                "WAF_RULE_941100",
                "WAF_RULE_941101",
                "WAF_RULE_941110",
                "WAF_RULE_941120",
                "WAF_RULE_941130",
                "WAF_RULE_941140",
                "WAF_RULE_941150",
                "WAF_RULE_941160",
                "WAF_RULE_941170",
                "WAF_RULE_941180",
                "WAF_RULE_941190",
                "WAF_RULE_941200",
                "WAF_RULE_941210",
                "WAF_RULE_941220",
                "WAF_RULE_941230",
                "WAF_RULE_941240",
                "WAF_RULE_941250",
                "WAF_RULE_941260",
                "WAF_RULE_941270",
                "WAF_RULE_941280",
                "WAF_RULE_941290",
                "WAF_RULE_941300",
                "WAF_RULE_941310",
                "WAF_RULE_941320",
                "WAF_RULE_941330",
                "WAF_RULE_941340",
                "WAF_RULE_941350",
                "WAF_RULE_942100",
                "WAF_RULE_942110",
                "WAF_RULE_942120",
                "WAF_RULE_942130",
                "WAF_RULE_942140",
                "WAF_RULE_942150",
                "WAF_RULE_942160",
                "WAF_RULE_942170",
                "WAF_RULE_942180",
                "WAF_RULE_942190",
                "WAF_RULE_942200",
                "WAF_RULE_942210",
                "WAF_RULE_942220",
                "WAF_RULE_942230",
                "WAF_RULE_942240",
                "WAF_RULE_942250",
                "WAF_RULE_942251",
                "WAF_RULE_942260",
                "WAF_RULE_942270",
                "WAF_RULE_942280",
                "WAF_RULE_942290",
                "WAF_RULE_942300",
                "WAF_RULE_942310",
                "WAF_RULE_942320",
                "WAF_RULE_942330",
                "WAF_RULE_942340",
                "WAF_RULE_942350",
                "WAF_RULE_942360",
                "WAF_RULE_942361",
                "WAF_RULE_942370",
                "WAF_RULE_942380",
                "WAF_RULE_942390",
                "WAF_RULE_942400",
                "WAF_RULE_942410",
                "WAF_RULE_942420",
                "WAF_RULE_942421",
                "WAF_RULE_942430",
                "WAF_RULE_942431",
                "WAF_RULE_942432",
                "WAF_RULE_942440",
                "WAF_RULE_942450",
                "WAF_RULE_942460",
                "WAF_RULE_942470",
                "WAF_RULE_942480",
                "WAF_RULE_942490",
                "WAF_RULE_943100",
                "WAF_RULE_943110",
                "WAF_RULE_943120",
                "WAF_RULE_944100",
                "WAF_RULE_944110",
                "WAF_RULE_944120",
                "WAF_RULE_944130",
                "WAF_RULE_944200",
                "WAF_RULE_944210",
                "WAF_RULE_944240",
                "WAF_RULE_944250",
                "WAF_RULE_944300",
                "WAF_RULE_950100",
                "WAF_RULE_950130",
                "WAF_RULE_951110",
                "WAF_RULE_951120",
                "WAF_RULE_951130",
                "WAF_RULE_951140",
                "WAF_RULE_951150",
                "WAF_RULE_951160",
                "WAF_RULE_951170",
                "WAF_RULE_951180",
                "WAF_RULE_951190",
                "WAF_RULE_951200",
                "WAF_RULE_951210",
                "WAF_RULE_951220",
                "WAF_RULE_951230",
                "WAF_RULE_951240",
                "WAF_RULE_951250",
                "WAF_RULE_951260",
                "WAF_RULE_952100",
                "WAF_RULE_952110",
                "WAF_RULE_953100",
                "WAF_RULE_953110",
                "WAF_RULE_953120",
                "WAF_RULE_954100",
                "WAF_RULE_954110",
                "WAF_RULE_954120",
                "WAF_RULE_954130",
                "WAF_RULE_4295001",
                "WAF_RULE_4295002",
                "WAF_RULE_4295003",
                "WAF_RULE_4295004",
                "WAF_RULE_4295005",
                "WAF_RULE_4295006"
            ],
            "default": "WAF_RULE_ALL",
            "x-displayname": "WAF Rule ID",
            "x-ves-proto-enum": "ves.io.schema.waf_rule_list.WafRuleID"
        }
    },
    "x-displayname": "",
    "x-stream-definitions": {
        "crudapiObjectListRsp": {
            "properties": {
                "error": {
                    "$ref": "#/definitions/runtimeStreamError"
                },
                "result": {
                    "$ref": "#/definitions/crudapiObjectListRsp"
                }
            },
            "title": "Stream result of crudapiObjectListRsp",
            "type": "object"
        }
    },
    "x-ves-proto-file": "ves.io/schema/views/http_loadbalancer/crudapi/api.proto"
}`

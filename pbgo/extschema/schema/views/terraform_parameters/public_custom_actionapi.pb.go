// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/terraform_parameters/public_custom_actionapi.proto

// View Terraform Parameters
//
// x-displayName: "View Terraform Parameters"
// View Terraform Parameters is set of parameters that are used by terraform scripts
// to instantiate view objects external to volterra

package terraform_parameters

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Run Terraform Action for view
//
// x-displayName: "Run Terraform Action for view"
// perform terraform actions for a given view. Supported actions are apply and plan.
type RunRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "value"
	// Namespace for the label to be retrieved
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Kind of View
	//
	// x-displayName: "Kind of View"
	// x-example: "value"
	// Kind of view of which terraform parameters are requested e.g. aws_vpc_site, azure_vnet_site
	ViewKind string `protobuf:"bytes,2,opt,name=view_kind,json=viewKind,proto3" json:"view_kind,omitempty"`
	// Name of view
	//
	// x-displayName: "Name of view"
	// x-example: "value"
	// Name of the view for which terraform parameters are requested
	ViewName string `protobuf:"bytes,3,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	// Terraform action to be performed
	//
	// x-displayName: "Terraform action to be performed"
	// Terraform action to be performed for a given view e.g. plan, apply
	Action RunAction `protobuf:"varint,4,opt,name=action,proto3,enum=ves.io.schema.views.terraform_parameters.RunAction" json:"action,omitempty"`
}

func (m *RunRequest) Reset()      { *m = RunRequest{} }
func (*RunRequest) ProtoMessage() {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0d8cb8accb727b, []int{0}
}
func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return m.Size()
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RunRequest) GetViewKind() string {
	if m != nil {
		return m.ViewKind
	}
	return ""
}

func (m *RunRequest) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

func (m *RunRequest) GetAction() RunAction {
	if m != nil {
		return m.Action
	}
	return APPLY
}

// RunResponse
//
// x-displayName: "Run Response"
// Response for Run API
type RunResponse struct {
}

func (m *RunResponse) Reset()      { *m = RunResponse{} }
func (*RunResponse) ProtoMessage() {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0d8cb8accb727b, []int{1}
}
func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(m, src)
}
func (m *RunResponse) XXX_Size() int {
	return m.Size()
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

// ForceDeleteRequest
//
// x-displayName: "Force delete view request"
// Force delete view request
type ForceDeleteRequest struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "value"
	// Namespace for the label to be retrieved
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Kind of View
	//
	// x-displayName: "Kind of View"
	// x-example: "value"
	// Kind of view of which terraform parameters are requested e.g. aws_vpc_site, azure_vnet_site
	ViewKind string `protobuf:"bytes,2,opt,name=view_kind,json=viewKind,proto3" json:"view_kind,omitempty"`
	// Name of view
	//
	// x-displayName: "Name of view"
	// x-example: "value"
	// Name of the view for which terraform parameters are requested
	ViewName string `protobuf:"bytes,3,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
}

func (m *ForceDeleteRequest) Reset()      { *m = ForceDeleteRequest{} }
func (*ForceDeleteRequest) ProtoMessage() {}
func (*ForceDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0d8cb8accb727b, []int{2}
}
func (m *ForceDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ForceDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ForceDeleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ForceDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForceDeleteRequest.Merge(m, src)
}
func (m *ForceDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *ForceDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForceDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForceDeleteRequest proto.InternalMessageInfo

func (m *ForceDeleteRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ForceDeleteRequest) GetViewKind() string {
	if m != nil {
		return m.ViewKind
	}
	return ""
}

func (m *ForceDeleteRequest) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

// ForceDeleteResponse
//
// x-displayName: "Force delete view response"
// Force delete view response
type ForceDeleteResponse struct {
}

func (m *ForceDeleteResponse) Reset()      { *m = ForceDeleteResponse{} }
func (*ForceDeleteResponse) ProtoMessage() {}
func (*ForceDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0d8cb8accb727b, []int{3}
}
func (m *ForceDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ForceDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ForceDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ForceDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForceDeleteResponse.Merge(m, src)
}
func (m *ForceDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *ForceDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForceDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForceDeleteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RunRequest)(nil), "ves.io.schema.views.terraform_parameters.RunRequest")
	golang_proto.RegisterType((*RunRequest)(nil), "ves.io.schema.views.terraform_parameters.RunRequest")
	proto.RegisterType((*RunResponse)(nil), "ves.io.schema.views.terraform_parameters.RunResponse")
	golang_proto.RegisterType((*RunResponse)(nil), "ves.io.schema.views.terraform_parameters.RunResponse")
	proto.RegisterType((*ForceDeleteRequest)(nil), "ves.io.schema.views.terraform_parameters.ForceDeleteRequest")
	golang_proto.RegisterType((*ForceDeleteRequest)(nil), "ves.io.schema.views.terraform_parameters.ForceDeleteRequest")
	proto.RegisterType((*ForceDeleteResponse)(nil), "ves.io.schema.views.terraform_parameters.ForceDeleteResponse")
	golang_proto.RegisterType((*ForceDeleteResponse)(nil), "ves.io.schema.views.terraform_parameters.ForceDeleteResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/views/terraform_parameters/public_custom_actionapi.proto", fileDescriptor_bf0d8cb8accb727b)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/terraform_parameters/public_custom_actionapi.proto", fileDescriptor_bf0d8cb8accb727b)
}

var fileDescriptor_bf0d8cb8accb727b = []byte{
	// 651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4d, 0x6b, 0x14, 0x4b,
	0x14, 0x9d, 0x9a, 0xbc, 0x17, 0x5e, 0x3a, 0x3c, 0x85, 0x16, 0x61, 0x9c, 0x84, 0x32, 0xf4, 0x2a,
	0x04, 0xbb, 0x0b, 0xf2, 0xb1, 0x09, 0x46, 0x88, 0x86, 0x40, 0x08, 0x6a, 0xe8, 0xa5, 0x0b, 0x87,
	0x9a, 0xee, 0x3b, 0x9d, 0x32, 0xd3, 0x55, 0x6d, 0x55, 0xf5, 0x24, 0x12, 0x02, 0x12, 0xc1, 0xb5,
	0xe2, 0x46, 0xfc, 0x03, 0xba, 0x75, 0x9d, 0x4d, 0x76, 0xba, 0x92, 0xa0, 0x9b, 0x2c, 0x4d, 0x8f,
	0x0b, 0x97, 0xf9, 0x09, 0x32, 0x35, 0x9d, 0xf9, 0x48, 0x02, 0x4e, 0xfc, 0xd8, 0x55, 0xd7, 0xb9,
	0xf7, 0xd4, 0x39, 0xa7, 0xab, 0xae, 0xb5, 0xdc, 0x00, 0xe5, 0x31, 0x41, 0x54, 0xb0, 0x0e, 0x31,
	0x25, 0x0d, 0x06, 0x9b, 0x8a, 0x68, 0x90, 0x92, 0xd6, 0x84, 0x8c, 0x2b, 0x09, 0x95, 0x34, 0x06,
	0x0d, 0x52, 0x91, 0x24, 0xad, 0xd6, 0x59, 0x50, 0x09, 0x52, 0xa5, 0x45, 0x5c, 0xa1, 0x81, 0x66,
	0x82, 0xd3, 0x84, 0x79, 0x89, 0x14, 0x5a, 0xd8, 0x93, 0x6d, 0x1e, 0xaf, 0xcd, 0xe3, 0x19, 0x1e,
	0xef, 0x3c, 0x9e, 0xb2, 0x1b, 0x31, 0xbd, 0x9e, 0x56, 0xbd, 0x40, 0xc4, 0x24, 0x12, 0x91, 0x20,
	0x86, 0xa0, 0x9a, 0xd6, 0xcc, 0x97, 0xf9, 0x30, 0xab, 0x36, 0x71, 0x79, 0x3c, 0x12, 0x22, 0xaa,
	0x03, 0xa1, 0x09, 0x23, 0x94, 0x73, 0xa1, 0x69, 0xeb, 0x60, 0x95, 0xa3, 0x63, 0xfd, 0xf2, 0x45,
	0xd2, 0x0b, 0x5e, 0xeb, 0x07, 0xf5, 0x93, 0x04, 0x4e, 0xa0, 0xf1, 0x53, 0xb6, 0x69, 0x9d, 0x85,
	0x54, 0x43, 0x8e, 0x3a, 0xa7, 0x50, 0x50, 0xc0, 0x1b, 0xa7, 0xc8, 0x27, 0xce, 0x06, 0x57, 0xe9,
	0xaf, 0x98, 0x1b, 0x38, 0x5a, 0x51, 0x7d, 0x04, 0x81, 0xce, 0xdb, 0x66, 0x07, 0x6e, 0xeb, 0x35,
	0x74, 0xfd, 0xdc, 0xae, 0x6e, 0x81, 0xf3, 0x1e, 0x59, 0x96, 0x9f, 0x72, 0x1f, 0x1e, 0xa7, 0xa0,
	0xb4, 0x3d, 0x6e, 0x8d, 0x70, 0x1a, 0x83, 0x4a, 0x68, 0x00, 0x25, 0x34, 0x81, 0x26, 0x47, 0xfc,
	0xee, 0x86, 0x3d, 0x66, 0x8d, 0x18, 0x43, 0x1b, 0x8c, 0x87, 0xa5, 0xa2, 0x41, 0xff, 0x6b, 0x6d,
	0xac, 0x32, 0x1e, 0x76, 0xc0, 0x56, 0x79, 0x69, 0xa8, 0x0b, 0xde, 0xa3, 0x31, 0xd8, 0xab, 0xd6,
	0x70, 0xfb, 0x6a, 0x94, 0xfe, 0x99, 0x40, 0x93, 0x97, 0xa6, 0x67, 0xbc, 0x41, 0x2f, 0x86, 0xe7,
	0xa7, 0x7c, 0xd1, 0xb4, 0xfa, 0x39, 0x85, 0xf3, 0xbf, 0x35, 0x6a, 0x24, 0xab, 0x44, 0x70, 0x05,
	0x4e, 0xdd, 0xb2, 0x97, 0x85, 0x0c, 0x60, 0x09, 0xea, 0xa0, 0xe1, 0x2f, 0x3b, 0x71, 0xae, 0x5a,
	0x57, 0xfa, 0x4e, 0x6b, 0x8b, 0x98, 0x7e, 0xf6, 0xaf, 0x75, 0xf9, 0x8e, 0x79, 0x03, 0x6d, 0xb1,
	0x8b, 0x6b, 0x2b, 0xf6, 0xf3, 0xa2, 0x35, 0xe4, 0xa7, 0xdc, 0x9e, 0xbd, 0x90, 0xd9, 0xdc, 0x40,
	0x79, 0xee, 0x82, 0x5d, 0x79, 0x1a, 0x2f, 0x51, 0xf6, 0xa1, 0x74, 0xab, 0x36, 0xb7, 0x15, 0xb8,
	0x8a, 0x69, 0x70, 0x63, 0xca, 0x69, 0x04, 0x31, 0x70, 0xed, 0x2a, 0x4d, 0x79, 0x48, 0x65, 0xe8,
	0xa6, 0x0a, 0xe4, 0x8d, 0x06, 0x28, 0x97, 0x09, 0x97, 0xf1, 0x9a, 0xa4, 0x4a, 0xcb, 0x34, 0xd0,
	0xa9, 0x04, 0x77, 0x53, 0x32, 0x0d, 0xbb, 0x5f, 0xbe, 0xbd, 0x2a, 0xae, 0x38, 0x4b, 0xf9, 0xe3,
	0x26, 0x9d, 0xdc, 0x14, 0xd9, 0xee, 0xac, 0x77, 0xba, 0xb7, 0x8f, 0x6c, 0x77, 0xc2, 0xdc, 0xc9,
	0xd7, 0xad, 0xb2, 0x1d, 0x22, 0x53, 0x3e, 0x8f, 0xa6, 0xec, 0xb7, 0x45, 0x6b, 0xb4, 0x27, 0x34,
	0xfb, 0xe6, 0xe0, 0xd6, 0xce, 0xfe, 0xd9, 0xf2, 0xc2, 0x2f, 0x76, 0xe7, 0x01, 0xbd, 0xf9, 0x53,
	0x01, 0xf9, 0xce, 0xdd, 0xdf, 0x0e, 0xa8, 0xd6, 0x12, 0xe8, 0x86, 0x46, 0xe1, 0x3c, 0x9a, 0x2a,
	0x2f, 0xec, 0xef, 0xa1, 0xa1, 0xcf, 0x7b, 0x88, 0x0c, 0x6c, 0xf1, 0xbe, 0x19, 0x12, 0xbb, 0x9f,
	0x4a, 0xc5, 0x35, 0x74, 0xfb, 0x35, 0x3a, 0x38, 0xc2, 0x85, 0xc3, 0x23, 0x5c, 0x38, 0x3e, 0xc2,
	0xe8, 0x69, 0x86, 0xd1, 0xbb, 0x0c, 0xa3, 0x8f, 0x19, 0x46, 0x07, 0x19, 0x46, 0x5f, 0x33, 0x8c,
	0xbe, 0x67, 0xb8, 0x70, 0x9c, 0x61, 0xf4, 0xa2, 0x89, 0x0b, 0xfb, 0x4d, 0x8c, 0x0e, 0x9a, 0xb8,
	0x70, 0xd8, 0xc4, 0x85, 0x07, 0x0f, 0x23, 0x91, 0x6c, 0x44, 0x5e, 0x43, 0xd4, 0xcd, 0x31, 0x5e,
	0xda, 0x33, 0x5d, 0xdc, 0x44, 0x8a, 0x06, 0x0b, 0x41, 0xba, 0x27, 0x30, 0x49, 0xaa, 0x91, 0x20,
	0xb0, 0xa5, 0xf3, 0xc1, 0xf2, 0xd3, 0xa9, 0x54, 0x1d, 0x36, 0xf3, 0x66, 0xe6, 0x47, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdd, 0x9c, 0x14, 0x57, 0x5a, 0x06, 0x00, 0x00,
}

func (this *RunRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RunRequest)
	if !ok {
		that2, ok := that.(RunRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ViewKind != that1.ViewKind {
		return false
	}
	if this.ViewName != that1.ViewName {
		return false
	}
	if this.Action != that1.Action {
		return false
	}
	return true
}
func (this *RunResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RunResponse)
	if !ok {
		that2, ok := that.(RunResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ForceDeleteRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ForceDeleteRequest)
	if !ok {
		that2, ok := that.(ForceDeleteRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ViewKind != that1.ViewKind {
		return false
	}
	if this.ViewName != that1.ViewName {
		return false
	}
	return true
}
func (this *ForceDeleteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ForceDeleteResponse)
	if !ok {
		that2, ok := that.(ForceDeleteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *RunRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&terraform_parameters.RunRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ViewKind: "+fmt.Sprintf("%#v", this.ViewKind)+",\n")
	s = append(s, "ViewName: "+fmt.Sprintf("%#v", this.ViewName)+",\n")
	s = append(s, "Action: "+fmt.Sprintf("%#v", this.Action)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RunResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&terraform_parameters.RunResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ForceDeleteRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&terraform_parameters.ForceDeleteRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ViewKind: "+fmt.Sprintf("%#v", this.ViewKind)+",\n")
	s = append(s, "ViewName: "+fmt.Sprintf("%#v", this.ViewName)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ForceDeleteResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&terraform_parameters.ForceDeleteResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicCustomActionapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomActionAPIClient is the client API for CustomActionAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomActionAPIClient interface {
	// Run Terraform Action for view
	//
	// x-displayName: "Run Terraform Action for view"
	// perform terraform actions for a given view. Supported actions are apply and plan.
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	// Force delete view
	//
	// x-displayName: "Force delete view"
	// force delete view object. This can result in staled objects in cloud provider.
	ForceDelete(ctx context.Context, in *ForceDeleteRequest, opts ...grpc.CallOption) (*ForceDeleteResponse, error)
}

type customActionAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomActionAPIClient(cc *grpc.ClientConn) CustomActionAPIClient {
	return &customActionAPIClient{cc}
}

func (c *customActionAPIClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.terraform_parameters.CustomActionAPI/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customActionAPIClient) ForceDelete(ctx context.Context, in *ForceDeleteRequest, opts ...grpc.CallOption) (*ForceDeleteResponse, error) {
	out := new(ForceDeleteResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.terraform_parameters.CustomActionAPI/ForceDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomActionAPIServer is the server API for CustomActionAPI service.
type CustomActionAPIServer interface {
	// Run Terraform Action for view
	//
	// x-displayName: "Run Terraform Action for view"
	// perform terraform actions for a given view. Supported actions are apply and plan.
	Run(context.Context, *RunRequest) (*RunResponse, error)
	// Force delete view
	//
	// x-displayName: "Force delete view"
	// force delete view object. This can result in staled objects in cloud provider.
	ForceDelete(context.Context, *ForceDeleteRequest) (*ForceDeleteResponse, error)
}

// UnimplementedCustomActionAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomActionAPIServer struct {
}

func (*UnimplementedCustomActionAPIServer) Run(ctx context.Context, req *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedCustomActionAPIServer) ForceDelete(ctx context.Context, req *ForceDeleteRequest) (*ForceDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceDelete not implemented")
}

func RegisterCustomActionAPIServer(s *grpc.Server, srv CustomActionAPIServer) {
	s.RegisterService(&_CustomActionAPI_serviceDesc, srv)
}

func _CustomActionAPI_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomActionAPIServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.terraform_parameters.CustomActionAPI/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomActionAPIServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomActionAPI_ForceDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomActionAPIServer).ForceDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.terraform_parameters.CustomActionAPI/ForceDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomActionAPIServer).ForceDelete(ctx, req.(*ForceDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomActionAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.views.terraform_parameters.CustomActionAPI",
	HandlerType: (*CustomActionAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _CustomActionAPI_Run_Handler,
		},
		{
			MethodName: "ForceDelete",
			Handler:    _CustomActionAPI_ForceDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/views/terraform_parameters/public_custom_actionapi.proto",
}

func (m *RunRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RunRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RunRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Action != 0 {
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ViewName) > 0 {
		i -= len(m.ViewName)
		copy(dAtA[i:], m.ViewName)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.ViewName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ViewKind) > 0 {
		i -= len(m.ViewKind)
		copy(dAtA[i:], m.ViewKind)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.ViewKind)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RunResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RunResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RunResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ForceDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ForceDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ForceDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ViewName) > 0 {
		i -= len(m.ViewName)
		copy(dAtA[i:], m.ViewName)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.ViewName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ViewKind) > 0 {
		i -= len(m.ViewKind)
		copy(dAtA[i:], m.ViewKind)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.ViewKind)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicCustomActionapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ForceDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ForceDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ForceDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintPublicCustomActionapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicCustomActionapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RunRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	l = len(m.ViewKind)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	l = len(m.ViewName)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovPublicCustomActionapi(uint64(m.Action))
	}
	return n
}

func (m *RunResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ForceDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	l = len(m.ViewKind)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	l = len(m.ViewName)
	if l > 0 {
		n += 1 + l + sovPublicCustomActionapi(uint64(l))
	}
	return n
}

func (m *ForceDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovPublicCustomActionapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicCustomActionapi(x uint64) (n int) {
	return sovPublicCustomActionapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *RunRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RunRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ViewKind:` + fmt.Sprintf("%v", this.ViewKind) + `,`,
		`ViewName:` + fmt.Sprintf("%v", this.ViewName) + `,`,
		`Action:` + fmt.Sprintf("%v", this.Action) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RunResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RunResponse{`,
		`}`,
	}, "")
	return s
}
func (this *ForceDeleteRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ForceDeleteRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ViewKind:` + fmt.Sprintf("%v", this.ViewKind) + `,`,
		`ViewName:` + fmt.Sprintf("%v", this.ViewName) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ForceDeleteResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ForceDeleteResponse{`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicCustomActionapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *RunRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomActionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RunRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RunRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewKind", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewKind = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= RunAction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomActionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RunResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomActionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RunResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RunResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomActionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ForceDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomActionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ForceDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ForceDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewKind", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewKind = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomActionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ForceDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicCustomActionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ForceDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ForceDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPublicCustomActionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicCustomActionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicCustomActionapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicCustomActionapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicCustomActionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicCustomActionapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicCustomActionapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicCustomActionapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicCustomActionapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicCustomActionapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicCustomActionapi = fmt.Errorf("proto: unexpected end of group")
)

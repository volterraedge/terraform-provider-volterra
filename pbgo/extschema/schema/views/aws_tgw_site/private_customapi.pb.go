// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/aws_tgw_site/private_customapi.proto

package aws_tgw_site

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/virtual_host"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("ves.io/schema/views/aws_tgw_site/private_customapi.proto", fileDescriptor_1b3948f72e872ec9)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/aws_tgw_site/private_customapi.proto", fileDescriptor_1b3948f72e872ec9)
}

var fileDescriptor_1b3948f72e872ec9 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xbf, 0x8b, 0x13, 0x41,
	0x14, 0xc7, 0x77, 0xa2, 0x58, 0xa4, 0xf1, 0x48, 0x75, 0xc6, 0x63, 0x08, 0x41, 0x14, 0x34, 0xbb,
	0x03, 0xca, 0x81, 0xd8, 0xe9, 0x61, 0x21, 0x08, 0x1e, 0x8a, 0x16, 0xd7, 0x2c, 0xb3, 0x9b, 0x97,
	0xcd, 0x68, 0x76, 0xdf, 0x38, 0xf3, 0x76, 0x73, 0x22, 0x07, 0x72, 0x9d, 0xdd, 0x81, 0xff, 0x84,
	0xff, 0x43, 0x9a, 0x2b, 0x04, 0xad, 0x24, 0x68, 0x73, 0xa5, 0xd9, 0x58, 0x58, 0x5e, 0x69, 0x29,
	0x99, 0x24, 0x92, 0xc4, 0xc8, 0x59, 0xd8, 0xbd, 0xc9, 0xf7, 0xf3, 0x7d, 0x79, 0xbf, 0xb6, 0x7a,
	0xbb, 0x00, 0x1b, 0x28, 0x14, 0x36, 0xee, 0x42, 0x2a, 0x45, 0xa1, 0xa0, 0x6f, 0x85, 0xec, 0xdb,
	0x90, 0x92, 0x7e, 0x68, 0x15, 0x81, 0xd0, 0x46, 0x15, 0x92, 0x20, 0x8c, 0x73, 0x4b, 0x98, 0x4a,
	0xad, 0x02, 0x6d, 0x90, 0xb0, 0xd6, 0x98, 0x3a, 0x83, 0xa9, 0x33, 0x70, 0xce, 0x60, 0xd1, 0x59,
	0xf7, 0x13, 0x45, 0xdd, 0x3c, 0x0a, 0x62, 0x4c, 0x45, 0x82, 0x09, 0x0a, 0x67, 0x8c, 0xf2, 0x8e,
	0x7b, 0xb9, 0x87, 0x8b, 0xa6, 0x09, 0xeb, 0x5b, 0x09, 0x62, 0xd2, 0x03, 0x21, 0xb5, 0x12, 0x32,
	0xcb, 0x90, 0x24, 0x29, 0xcc, 0xec, 0x4c, 0xbd, 0xbc, 0x5c, 0x28, 0xea, 0x45, 0xf1, 0xd2, 0xb2,
	0x48, 0xaf, 0x34, 0xcc, 0xa5, 0xad, 0x95, 0x06, 0x65, 0x4f, 0xb5, 0x25, 0xc1, 0x4c, 0x6d, 0xae,
	0xa8, 0x60, 0x21, 0x2b, 0x56, 0x92, 0x37, 0xfe, 0x1c, 0x51, 0xb8, 0x4c, 0xb4, 0xce, 0x1c, 0xe2,
	0x62, 0x45, 0x57, 0xd6, 0xd1, 0x13, 0x2a, 0x5c, 0xa4, 0xae, 0xae, 0x52, 0x86, 0x72, 0xd9, 0x0b,
	0xbb, 0x68, 0x69, 0x31, 0xdb, 0xcd, 0x0f, 0xe7, 0xaa, 0x1b, 0xbb, 0xd3, 0x15, 0xed, 0xb8, 0x0d,
	0xdd, 0xdd, 0x7d, 0x50, 0xfb, 0x59, 0xa9, 0x5e, 0x7c, 0xaa, 0x27, 0x7d, 0x3e, 0x51, 0x04, 0xf7,
	0x8d, 0x41, 0x53, 0xbb, 0x11, 0xac, 0x5b, 0xd8, 0x0a, 0xf5, 0x18, 0x5e, 0xe6, 0x60, 0xa9, 0xde,
	0xfa, 0x37, 0xd8, 0x6a, 0xcc, 0x2c, 0x34, 0xdf, 0x56, 0xca, 0x8f, 0x9b, 0x3b, 0x9d, 0xed, 0xfd,
	0xd8, 0x9f, 0xf4, 0xe1, 0xa7, 0x32, 0x93, 0x09, 0xa4, 0x90, 0x91, 0x1f, 0x49, 0xab, 0x62, 0x3f,
	0xb7, 0x60, 0x5a, 0x8d, 0xb5, 0x80, 0x25, 0x99, 0xb5, 0xa5, 0x69, 0x3b, 0xe6, 0xf0, 0xeb, 0xf7,
	0x77, 0x95, 0x01, 0x6b, 0x3e, 0x9c, 0x5f, 0x9d, 0x98, 0x5e, 0x9d, 0xc8, 0x64, 0x0a, 0x56, 0xcb,
	0x18, 0xac, 0x78, 0xfd, 0x3b, 0x3e, 0x58, 0x9e, 0xb1, 0x13, 0x0e, 0x44, 0xee, 0x8a, 0x74, 0x3f,
	0x85, 0x30, 0x29, 0xf3, 0x0e, 0xbb, 0xbe, 0xd7, 0x6d, 0xc6, 0x62, 0xa9, 0x23, 0xa1, 0x32, 0x32,
	0x68, 0x35, 0xc4, 0x24, 0xfa, 0x46, 0xfd, 0xb7, 0x7f, 0xaa, 0x6f, 0x1f, 0x0f, 0xd8, 0xf9, 0x2f,
	0x03, 0x76, 0xed, 0xac, 0xcf, 0x23, 0x78, 0x14, 0x3d, 0x87, 0x98, 0x0e, 0x3f, 0x6f, 0x56, 0x36,
	0xd8, 0xbd, 0x23, 0x36, 0x1c, 0x71, 0xef, 0x64, 0xc4, 0xbd, 0xd3, 0x11, 0x67, 0x6f, 0x4a, 0xce,
	0xde, 0x97, 0x9c, 0x7d, 0x2a, 0x39, 0x1b, 0x96, 0x9c, 0x7d, 0x2b, 0x39, 0xfb, 0x51, 0x72, 0xef,
	0xb4, 0xe4, 0xec, 0x68, 0xcc, 0xbd, 0xe3, 0x31, 0x67, 0xc3, 0x31, 0xf7, 0x4e, 0xc6, 0xdc, 0xdb,
	0x7b, 0x96, 0xa0, 0x7e, 0x91, 0x04, 0x05, 0xf6, 0x08, 0x8c, 0x91, 0x41, 0x6e, 0x85, 0x0b, 0x3a,
	0x68, 0x52, 0x5f, 0x1b, 0x2c, 0x54, 0x1b, 0x8c, 0x3f, 0x97, 0x85, 0x8e, 0x12, 0x14, 0xb0, 0x4f,
	0xb3, 0x39, 0xfc, 0xf5, 0x66, 0xa3, 0x0b, 0xee, 0xc0, 0x6e, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff,
	0x37, 0xf9, 0xbe, 0x7e, 0x23, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrivateCustomAPIClient is the client API for PrivateCustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrivateCustomAPIClient interface {
	// UpdateSiteError
	//
	// x-displayName: "UpdateSiteError"
	// Private API to update service domains from service.
	UpdateSiteError(ctx context.Context, in *views.UpdateSiteErrorRequest, opts ...grpc.CallOption) (*views.UpdateSiteErrorResponse, error)
}

type privateCustomAPIClient struct {
	cc *grpc.ClientConn
}

func NewPrivateCustomAPIClient(cc *grpc.ClientConn) PrivateCustomAPIClient {
	return &privateCustomAPIClient{cc}
}

func (c *privateCustomAPIClient) UpdateSiteError(ctx context.Context, in *views.UpdateSiteErrorRequest, opts ...grpc.CallOption) (*views.UpdateSiteErrorResponse, error) {
	out := new(views.UpdateSiteErrorResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.views.aws_tgw_site.PrivateCustomAPI/UpdateSiteError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivateCustomAPIServer is the server API for PrivateCustomAPI service.
type PrivateCustomAPIServer interface {
	// UpdateSiteError
	//
	// x-displayName: "UpdateSiteError"
	// Private API to update service domains from service.
	UpdateSiteError(context.Context, *views.UpdateSiteErrorRequest) (*views.UpdateSiteErrorResponse, error)
}

// UnimplementedPrivateCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPrivateCustomAPIServer struct {
}

func (*UnimplementedPrivateCustomAPIServer) UpdateSiteError(ctx context.Context, req *views.UpdateSiteErrorRequest) (*views.UpdateSiteErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSiteError not implemented")
}

func RegisterPrivateCustomAPIServer(s *grpc.Server, srv PrivateCustomAPIServer) {
	s.RegisterService(&_PrivateCustomAPI_serviceDesc, srv)
}

func _PrivateCustomAPI_UpdateSiteError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(views.UpdateSiteErrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateCustomAPIServer).UpdateSiteError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.views.aws_tgw_site.PrivateCustomAPI/UpdateSiteError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateCustomAPIServer).UpdateSiteError(ctx, req.(*views.UpdateSiteErrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrivateCustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.views.aws_tgw_site.PrivateCustomAPI",
	HandlerType: (*PrivateCustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateSiteError",
			Handler:    _PrivateCustomAPI_UpdateSiteError_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/views/aws_tgw_site/private_customapi.proto",
}

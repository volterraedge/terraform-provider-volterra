// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package aws_tgw_site

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"

	google_protobuf "github.com/gogo/protobuf/types"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	multierror "github.com/hashicorp/go-multierror"
	"go.uber.org/zap"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/client/configapi"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"

	ves_io_schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
)

const (
	// CreateRequestFQN is the fully-qualified-name of the CreateRequest message
	CreateRequestFQN = "ves.io.schema.views.aws_tgw_site.CreateRequest"
	// CreateResponseFQN is the fully-qualified-name of the CreateResponse message
	CreateResponseFQN = "ves.io.schema.views.aws_tgw_site.CreateResponse"
	// ReplaceRequestFQN is the fully-qualified-name of the ReplaceRequest message
	ReplaceRequestFQN = "ves.io.schema.views.aws_tgw_site.ReplaceRequest"
	// ReplaceResponseFQN is the fully-qualified-name of the ReplaceResponse message
	ReplaceResponseFQN = "ves.io.schema.views.aws_tgw_site.ReplaceResponse"
	// GetRequestFQN is the fully-qualified-name of the GetRequest message
	GetRequestFQN = "ves.io.schema.views.aws_tgw_site.GetRequest"
	// GetResponseFQN is the fully-qualified-name of the GetResponse message
	GetResponseFQN = "ves.io.schema.views.aws_tgw_site.GetResponse"
	// ListRequestFQN is the fully-qualified-name of the ListRequest message
	ListRequestFQN = "ves.io.schema.views.aws_tgw_site.ListRequest"
	// ListResponseFQN is the fully-qualified-name of the ListResponse message
	ListResponseFQN = "ves.io.schema.views.aws_tgw_site.ListResponse"
	// DeleteRequestFQN is the fully-qualified-name of the DeleteRequest message
	DeleteRequestFQN = "ves.io.schema.views.aws_tgw_site.DeleteRequest"
	// DeleteResponseFQN is the fully-qualified-name of the DeleteResponse message
	DeleteResponseFQN = "ves.io.schema.views.aws_tgw_site.DeleteResponse"
)

// CLIENT side
func NewCreateRequest(e db.Entry) (*CreateRequest, error) {
	r := &CreateRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewReplaceRequest(e db.Entry) (*ReplaceRequest, error) {
	r := &ReplaceRequest{}
	if e == nil {
		return r, nil
	}
	r.FromObject(e)
	return r, nil
}

func NewGetRequest(key string, opts ...server.CRUDCallOpt) (*GetRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	var rspFmt GetResponseFormatCode
	switch ccOpts.ResponseFormat {
	case server.DefaultForm:
		rspFmt = GET_RSP_FORMAT_DEFAULT
	case server.CreateRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_CREATE
	case server.ReplaceRequestForm:
		rspFmt = GET_RSP_FORMAT_FOR_REPLACE
	case server.StatusForm:
		rspFmt = GET_RSP_FORMAT_STATUS
	case server.GetSpecForm:
		rspFmt = GET_RSP_FORMAT_READ
	case server.BrokenRefsForm:
		rspFmt = GET_RSP_FORMAT_BROKEN_REFERENCES
	default:
		return nil, fmt.Errorf("Unsupported Response Format %s", ccOpts.ResponseFormat)
	}
	return &GetRequest{Namespace: strs[0], Name: strs[1], ResponseFormat: rspFmt}, nil
}
func (m *GetRequest) ResponseFormatString() string {
	return m.GetResponseFormat().String()
}

func NewListRequest(opts ...server.CRUDCallOpt) *ListRequest {
	ccOpts := server.NewCRUDCallOpts()
	for _, o := range opts {
		o(ccOpts)
	}
	return &ListRequest{Namespace: ccOpts.Namespace}
}

func NewDeleteRequest(key string) (*DeleteRequest, error) {
	strs := strings.Split(key, "/")
	if len(strs) != 2 {
		return nil, fmt.Errorf("key must have namespace and name separated by /, but found %s", key)
	}
	return &DeleteRequest{Namespace: strs[0], Name: strs[1]}, nil
}

// GRPC Client
type crudAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient APIClient
}

func (c *crudAPIGrpcClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *CreateRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*CreateRequest)
		if !ok {
			return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Create")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return nil, err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Create(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIGrpcClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	var req *ReplaceRequest
	if cco.RequestProto != nil {
		r, ok := cco.RequestProto.(*ReplaceRequest)
		if !ok {
			return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
		}
		req = r
	} else {
		r, err := NewReplaceRequest(e)
		if err != nil {
			return errors.Wrap(err, "Replace")
		}
		req = r
		if cco.ObjToMsgConverter != nil {
			if err := cco.ObjToMsgConverter(e, req); err != nil {
				return err
			}
		}
	}

	ctx = client.AddHdrsToCtx(cco.Headers, ctx)
	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.grpcClient.Replace(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return nil

}

func (c *crudAPIGrpcClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Get(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}
	return nil, err

}

func (c *crudAPIGrpcClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIGrpcClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIGrpcClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}
	req.ReportFields = cco.ReportFields
	req.ReportStatusFields = cco.ReportStatusFields
	rsp, err := c.grpcClient.List(ctx, req, cco.GrpcCallOpts...)
	if err != nil {
		return nil, err
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIGrpcClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIGrpcClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := c.grpcClient.Delete(ctx, req, cco.GrpcCallOpts...)
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func NewCRUDAPIGrpcClient(cc *grpc.ClientConn) server.CRUDClient {
	ccl := &crudAPIGrpcClient{cc, NewAPIClient(cc)}
	return ccl
}

// REST Client
type crudAPIRestClient struct {
	baseURL string
	client  http.Client
}

func (c *crudAPIRestClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return nil, fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var req *CreateRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*CreateRequest)
			if !ok {
				return nil, fmt.Errorf("%T is not *CreateRequest", cco.RequestProto)
			}
			req = r
		} else {
			r, err := NewCreateRequest(e)
			if err != nil {
				return nil, errors.Wrap(err, "Creating new create request")
			}
			req = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, req); err != nil {
					return nil, err
				}
			}
		}

		j, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "RestClient Create")
		}
		jsn = j
	}

	var namespace string
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return nil, errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return nil, fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}
	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return nil, fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/aws_tgw_sites", c.baseURL, namespace)

	hReq, err := http.NewRequest("POST", url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	client.AddHdrsToReq(cco.Headers, hReq)
	hReq.Header.Set("Content-Type", "application/json")

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient create")
	}

	rspo := &CreateResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	configapi.TranscribeCall(ctx, jsn, string(body))
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}

	obj := NewDBObject(nil)
	rspo.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rspo, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIRestClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	got := 0
	if e != nil {
		got++
	}
	if cco.RequestProto != nil {
		got++
	}
	if cco.RequestJSON != "" {
		got++
	}
	if got != 1 {
		return fmt.Errorf("Only one of entry(%v), WithRequestProto()(%v) or WithRequestJSON()(%v) should be specified", e, cco.RequestProto, cco.RequestJSON)
	}

	var jsn string
	if cco.RequestJSON != "" {
		jsn = cco.RequestJSON
	} else {
		var rReq *ReplaceRequest
		if cco.RequestProto != nil {
			r, ok := cco.RequestProto.(*ReplaceRequest)
			if !ok {
				return fmt.Errorf("%T is not *ReplaceRequest", cco.RequestProto)
			}
			rReq = r
		} else {
			r, err := NewReplaceRequest(e)
			if err != nil {
				return errors.Wrap(err, "Creating new replace request")
			}
			rReq = r
			if cco.ObjToMsgConverter != nil {
				if err := cco.ObjToMsgConverter(e, rReq); err != nil {
					return err
				}
			}
		}

		rReq.ResourceVersion = cco.ResourceVersion
		j, err := codec.ToJSON(rReq, codec.ToWithUseProtoFieldName())
		if err != nil {
			return errors.Wrap(err, "RestClient Replace")
		}
		jsn = j
	}

	var namespace, name string
	_ = namespace
	reqMap := make(map[string]interface{})
	if err := json.Unmarshal([]byte(jsn), &reqMap); err != nil {
		return errors.Wrapf(err, "Unmarshaling json to find namespace/name")
	}
	md, ok := reqMap["metadata"].(map[string]interface{})
	if !ok {
		return fmt.Errorf("Request %s does not have 'metadata'", jsn)
	}

	if val, ok := md["namespace"].(string); ok {
		namespace = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.namespace'", jsn)
	}

	if val, ok := md["name"].(string); ok {
		name = val
	} else {
		return fmt.Errorf("Request %s does not have 'metadata.name'", jsn)
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/aws_tgw_sites/%s", c.baseURL, namespace, name)

	hReq, err := http.NewRequest(http.MethodPut, url, bytes.NewBuffer([]byte(jsn)))
	if err != nil {
		return errors.Wrap(err, "RestClient replace")
	}
	hReq = hReq.WithContext(ctx)
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful PUT at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	if _, err := io.ReadAll(rsp.Body); err != nil {
		return errors.Wrap(err, "RestClient replace")
	}

	configapi.TranscribeCall(ctx, jsn, nil)
	return nil

}

func (c *crudAPIRestClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/aws_tgw_sites/%s", c.baseURL, req.Namespace, req.Name)
	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	q.Add("response_format", fmt.Sprintf("%d", req.ResponseFormat))
	hReq.URL.RawQuery += q.Encode()

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful GET at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient Get")
	}

	rspo := &GetResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rspo.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIRestClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIRestClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIRestClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIRestClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	req := NewListRequest(opts...)
	_ = req
	url := fmt.Sprintf("%s/public/namespaces/%s/aws_tgw_sites", c.baseURL, req.Namespace)

	hReq, err := http.NewRequest("GET", url, nil)
	if err != nil {
		return nil, err
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	q := hReq.URL.Query()
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		q.Add("label_filter", cco.LabelFilter[0])
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	for _, fName := range cco.ReportFields {
		q.Add("report_fields", fName)
	}
	for _, fName := range cco.ReportStatusFields {
		q.Add("report_status_fields", fName)
	}

	hReq.URL.RawQuery += q.Encode()
	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, err
	}
	defer rsp.Body.Close()
	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return nil, fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return nil, fmt.Errorf("Unsuccessful List at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}
	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "RestClient List")
	}

	rspo := &ListResponse{}
	if err := codec.FromJSON(string(body), rspo); err != nil {
		return nil, errors.Wrap(err, "Converting json to response protobuf message")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rspo
		cco.OutCallResponse.JSON = string(body)
	}
	configapi.TranscribeCall(ctx, req, rspo)
	return rspo, nil
}

func (c *crudAPIRestClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIRestClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	dReq, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	url := fmt.Sprintf("%s/public/namespaces/%s/aws_tgw_sites/%s", c.baseURL, dReq.Namespace, dReq.Name)
	hReq, err := http.NewRequest(http.MethodDelete, url, nil)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	hReq = hReq.WithContext(ctx)

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	client.AddHdrsToReq(cco.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return err
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := io.ReadAll(rsp.Body)
		if err != nil {
			return fmt.Errorf("Unsuccessful POST at URL %s, status code %d, body %s, err %s", url, rsp.StatusCode, body, err.Error())
		}
		return fmt.Errorf("Unsuccessful DELETE at URL %s, status code %d, body %s", url, rsp.StatusCode, body)
	}

	_, err = io.ReadAll(rsp.Body)
	if err != nil {
		return errors.Wrap(err, "RestClient delete")
	}
	configapi.TranscribeCall(ctx, dReq, nil)

	return nil

}

func NewCRUDAPIRestClient(baseURL string, cl http.Client) server.CRUDClient {
	var bURL string
	if strings.HasSuffix(baseURL, "/") {
		bURL = baseURL[:len(baseURL)-1]
	} else {
		bURL = baseURL
	}
	crcl := &crudAPIRestClient{bURL, cl}
	return crcl
}

// INPROC Client (satisfying APIClient interface)
type APIInprocClient struct {
	svc svcfw.Service
}

func (c *APIInprocClient) Create(ctx context.Context, req *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.aws_tgw_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.aws_tgw_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.aws_tgw_site.API.Create")
	rsp, err := oah.Create(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Replace(ctx context.Context, req *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.aws_tgw_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.aws_tgw_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.aws_tgw_site.API.Replace")
	if rsp, err := oah.Replace(ctx, req); err != nil {
		return rsp, err
	}
	return NewObjectReplaceRsp(nil)
}

func (c *APIInprocClient) Get(ctx context.Context, req *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.aws_tgw_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.aws_tgw_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.aws_tgw_site.API.Get")
	rsp, err := oah.Get(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) List(ctx context.Context, req *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.aws_tgw_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.aws_tgw_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.aws_tgw_site.API.List")
	rsp, err := oah.List(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func (c *APIInprocClient) Delete(ctx context.Context, req *DeleteRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.views.aws_tgw_site.API")
	oah, ok := ah.(*APISrv)
	if !ok {
		err := fmt.Errorf("No CRUD Server for ves.io.schema.views.aws_tgw_site")
		return nil, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.views.aws_tgw_site.API.Delete")
	rsp, err := oah.Delete(ctx, req)
	if err != nil {
		return rsp, err
	}
	return rsp, nil
}

func NewAPIInprocClient(svc svcfw.Service) APIClient {
	return &APIInprocClient{svc: svc}
}

// INPROC CRUD Client (satisfying server.CRUDClient interface)
type crudAPIInprocClient struct {
	cl APIClient
}

func (c *crudAPIInprocClient) Create(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) (db.Entry, error) {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewCreateRequest(e)
	if err != nil {
		return nil, errors.Wrap(err, "Creating new create request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return nil, err
		}
	}

	rsp, err := c.cl.Create(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	if err != nil {
		return nil, err
	}
	obj := NewDBObject(nil)
	rsp.ToObject(obj)
	if cco.MsgToObjConverter != nil {
		if err := cco.MsgToObjConverter(rsp, obj); err != nil {
			return nil, err
		}
	}
	return obj, nil

}

func (c *crudAPIInprocClient) Replace(ctx context.Context, e db.Entry, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewReplaceRequest(e)
	if err != nil {
		return errors.Wrap(err, "Creating new replace request")
	}
	if cco.ObjToMsgConverter != nil {
		if err := cco.ObjToMsgConverter(e, req); err != nil {
			return err
		}
	}

	req.ResourceVersion = cco.ResourceVersion

	rsp, err := c.cl.Replace(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func (c *crudAPIInprocClient) GetRaw(ctx context.Context, key string, opts ...server.CRUDCallOpt) (*GetResponse, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	req, err := NewGetRequest(key, opts...)
	if err != nil {
		return nil, errors.Wrap(err, "Get")
	}
	rsp, err := c.cl.Get(ctx, req)
	if err != nil {
		return nil, err
	}
	if cco.OutResourceVersion != nil {
		*cco.OutResourceVersion = rsp.ResourceVersion
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func (c *crudAPIInprocClient) Get(ctx context.Context, key string, opts ...server.CRUDCallOpt) (db.Entry, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	if gRsp != nil {
		obj := NewDBObject(nil)
		gRsp.ToObject(obj)
		return obj, err
	}
	return nil, err

}

func (c *crudAPIInprocClient) GetDetail(ctx context.Context, key string, nef db.NewEntryFunc, opts ...server.CRUDCallOpt) (*server.GetResponse, error) {

	gRsp, err := c.GetRaw(ctx, key, opts...)
	respDetail := server.GetResponse{}
	if gRsp != nil {
		respDetail.Entry = NewDBObject(nil)
		gRsp.ToObject(respDetail.Entry)
		for _, status := range gRsp.Status {
			respDetail.BackRefs = append(respDetail.BackRefs, NewDBStatusObject(status))
		}

		return &respDetail, err
	}

	return nil, err

}

func (c *crudAPIInprocClient) ListIDs(ctx context.Context, opts ...server.CRUDCallOpt) ([]string, error) {

	idSet := []string{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return idSet, err
	}
	for _, li := range listRsp.GetItems() {
		idSet = append(idSet, li.GetUid())
	}
	return idSet, err

}

func (c *crudAPIInprocClient) ListItems(ctx context.Context, opts ...server.CRUDCallOpt) ([]server.ListItem, error) {

	sliSet := []server.ListItem{}
	listRsp, err := c.List(ctx, opts...)
	if listRsp == nil {
		return sliSet, err
	}
	for _, li := range listRsp.GetItems() {
		sliSet = append(sliSet, li)
	}
	return sliSet, err

}

func (c *crudAPIInprocClient) List(ctx context.Context, opts ...server.CRUDCallOpt) (*ListResponse, error) {
	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req := NewListRequest(opts...)
	switch len(cco.LabelFilter) {
	case 0:
	case 1:
		req.LabelFilter = cco.LabelFilter[0]
	default:
		return nil, fmt.Errorf("Only one label selector expression can be provided, got %d: %s", len(cco.LabelFilter), cco.LabelFilter)
	}

	rsp, err := c.cl.List(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, err
}

func (c *crudAPIInprocClient) ListStream(ctx context.Context, opts ...server.CRUDCallOpt) (server.ListStreamRsp, error) {
	return nil, fmt.Errorf("Not implemented")
}

func (c *crudAPIInprocClient) Delete(ctx context.Context, key string, opts ...server.CRUDCallOpt) error {

	cco := server.NewCRUDCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	req, err := NewDeleteRequest(key)
	if err != nil {
		return errors.Wrap(err, "Delete")
	}

	rsp, err := c.cl.Delete(ctx, req)

	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return err

}

func newCRUDAPIInprocClient(svc svcfw.Service) *crudAPIInprocClient {
	return &crudAPIInprocClient{cl: NewAPIInprocClient(svc)}
}

func NewCRUDAPIInprocClient(svc svcfw.Service) server.CRUDClient {
	return newCRUDAPIInprocClient(svc)
}

// SERVER side
type APISrv struct {
	oType   string
	tblName string
	sf      svcfw.Service

	opts *server.CrudServerOpts
	// derived from opts
	apiWrapper *server.DBAPIWrapper

	// resource handler function pointers
}

func (s *APISrv) validateTransport(ctx context.Context) error {
	if s.sf.IsTransportNotSupported("ves.io.schema.views.aws_tgw_site.API", server.TransportFromContext(ctx)) {
		userMsg := fmt.Sprintf("ves.io.schema.views.aws_tgw_site.API not allowed in transport '%s'", server.TransportFromContext(ctx))
		err := svcfw.NewPermissionDeniedError(userMsg, fmt.Errorf(userMsg))
		return server.GRPCStatusFromError(err).Err()
	}
	return nil
}

func (s *APISrv) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.aws_tgw_site.API.Create"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.aws_tgw_site.API.Create"), zap.Error(err))
			}
		}
	}
	reqMsgFQN := "ves.io.schema.views.aws_tgw_site.CreateRequest"
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, reqMsgFQN, req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	obj := NewDBObject(nil)
	req.ToObject(obj)
	if conv, exists := s.sf.Config().MsgToObjConverters[reqMsgFQN]; exists {
		if err := conv(req, obj); err != nil {
			return nil, err
		}
	}
	obj.SystemMetadata = &ves_io_schema.SystemObjectMetaType{}
	rsrcReq := &server.ResourceCreateRequest{Entry: obj}
	rsrcRsp, err := s.opts.RsrcHandler.CreateFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectCreateRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "CreateResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.views.aws_tgw_site.CreateResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.views.aws_tgw_site.API.CreateResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Replace(ctx context.Context, req *ReplaceRequest) (*ReplaceResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if req.Spec == nil {
		err := fmt.Errorf("Nil spec in Replace Request")
		return nil, svcfw.NewInvalidInputError(err.Error(), err)
	}
	if err := svcfw.FillOneofDefaultChoice(ctx, s.sf, req); err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.aws_tgw_site.API.Replace"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.aws_tgw_site.API.Replace"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.views.aws_tgw_site.API.ReplaceRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	rsrcReq := &server.ResourceReplaceRequest{RequestMsg: req}
	rsrcRsp, err := s.opts.RsrcHandler.ReplaceFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectReplaceRsp(rsrcRsp.Entry)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "ReplaceResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.sf, "ves.io.schema.views.aws_tgw_site.API.ReplaceResponse", rsp)...)
	return rsp, nil
}

func (s *APISrv) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.aws_tgw_site.API.Get"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	tenant := server.TenantFromContext(ctx)
	rsrcReq := &server.ResourceGetRequest{IsPublic: true, Tenant: tenant, Namespace: req.GetNamespace(), Name: req.GetName()}
	switch req.ResponseFormat {
	case GET_RSP_FORMAT_FOR_CREATE:
		rsrcReq.RspInCreateForm = true

	case GET_RSP_FORMAT_FOR_REPLACE:
		rsrcReq.RspInReplaceForm = true

	case GET_RSP_FORMAT_READ:
		rsrcReq.RspInReadForm = true

	case GET_RSP_FORMAT_STATUS:
		rsrcReq.RspInStatusForm = true

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		rsrcReq.RspInReferringObjectsForm = true

	case GET_RSP_FORMAT_BROKEN_REFERENCES:
		rsrcReq.RspInBrokenReferencesForm = true

	}

	rsrcRsp, err := s.opts.RsrcHandler.GetFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rsp, err := NewObjectGetRsp(ctx, s.sf, req, rsrcRsp)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "GetResponse"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	rspMsgFQN := "ves.io.schema.views.aws_tgw_site.GetResponse"
	if conv, exists := s.sf.Config().ObjToMsgConverters[rspMsgFQN]; exists {
		if err := conv(rsrcRsp.Entry, rsp); err != nil {
			return nil, err
		}
	}
	return rsp, nil
}

func (s *APISrv) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.aws_tgw_site.API.List"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}
	var merr *multierror.Error
	rsrcReq := &server.ResourceListRequest{
		Namespace:   req.Namespace,
		LabelFilter: req.LabelFilter,
		RspStreamed: false,
	}
	if len(req.ReportStatusFields) > 0 {
		rsrcReq.ReportStatusFields = &req.ReportStatusFields
	}
	rsrcRsp, err := s.opts.RsrcHandler.ListFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResource"))
	}
	rsp, err := NewListResponse(ctx, req, s.sf, rsrcRsp)
	if err != nil {
		merr = multierror.Append(merr, errors.Wrap(err, "ListResponse allocation failed"))
	}
	if merr != nil {
		if rsp == nil {
			return nil, merr
		}
		rsp.Errors = append(rsp.Errors, &ves_io_schema.ErrorType{
			Code:    ves_io_schema.EINTERNAL,
			Message: merr.Error(),
		})

	}
	return rsp, nil
}

func (s *APISrv) Delete(ctx context.Context, req *DeleteRequest) (*google_protobuf.Empty, error) {
	if err := s.validateTransport(ctx); err != nil {
		return nil, err
	}
	if s.sf.Config().EnableAPIValidation {
		if rvFn := s.sf.GetRPCValidator("ves.io.schema.views.aws_tgw_site.API.Delete"); rvFn != nil {
			if err := rvFn(ctx, req); err != nil {
				if !server.NoReqValidateFromContext(ctx) {
					err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "Validating Request"))
					return nil, server.GRPCStatusFromError(err).Err()
				}
				s.sf.Logger().Warn(server.NoReqValidateAcceptLog, zap.String("rpc_fqn", "ves.io.schema.views.aws_tgw_site.API.Delete"), zap.Error(err))
			}
		}
	}
	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.sf, "ves.io.schema.views.aws_tgw_site.API.DeleteRequest", req)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
	}()

	tenant := server.TenantFromContext(ctx)
	key := fmt.Sprintf("%s/%s/%s", tenant, req.GetNamespace(), req.GetName())
	rsrcReq := &server.ResourceDeleteRequest{Key: key}
	rsrcReq.FailIfReferred = req.FailIfReferred
	_, err := s.opts.RsrcHandler.DeleteFn(ctx, rsrcReq, s.apiWrapper)
	if err != nil {
		err := server.MaybePublicRestError(ctx, errors.Wrapf(err, "DeleteResource"))
		return nil, server.GRPCStatusFromError(err).Err()
	}
	return &google_protobuf.Empty{}, nil
}

// Assert that APISrv implements the generated gRPC APIServer interface
var _ APIServer = &APISrv{}

func NewCRUDAPIServer(oType string, tblName string, sf svcfw.Service, opts ...server.CRUDServerOpt) (server.APIHandler, string) {
	// convert ves.io.examplesvc.objectone.Object to
	//         ves.io.examplesvc.objectone.API
	sl := strings.Split(oType, ".")
	csOpts := server.NewCRUDServerOpts()
	for _, o := range opts {
		o(csOpts)
	}
	wrapper := server.NewDBAPIWrapper(csOpts.APIWrapperOpts...)
	s := &APISrv{
		oType:      oType,
		tblName:    tblName,
		sf:         sf,
		opts:       csOpts,
		apiWrapper: wrapper,
	}
	return s, fmt.Sprintf("%s.API", strings.Join(sl[:len(sl)-1], "."))
}

func (r *Object) Key() string {
	m := r.GetMetadata()
	if m == nil {
		return ""
	}
	return strings.Join([]string{m.Namespace, m.Name}, "/")
}

func (r *Object) Uid() string {
	return r.SystemMetadata.Uid
}

func (r *ListResponse) GetKeys() []string {
	var ret []string
	for _, i := range r.Items {
		ret = append(ret, i.Namespace+"/"+i.Name)
	}
	return ret
}

// Implement server.SROListItem interface on ListResponseItem
func (l *ListResponseItem) GetObjUid() string {
	return l.Uid
}

func (l *ListResponseItem) GetObjTenant() string {
	return l.Tenant
}

func (l *ListResponseItem) GetObjNamespace() string {
	return l.Namespace
}

func (l *ListResponseItem) GetObjName() string {
	return l.Name
}

func (l *ListResponseItem) GetObjLabels() map[string]string {
	return l.Labels
}

func NewObjectCreateRsp(e db.Entry) (*CreateResponse, error) {
	switch e.(type) {
	case nil:
		return nil, nil
	case *DBObject:
		rsp := &CreateResponse{}
		rsp.FromObject(e)
		return rsp, nil
	}
	return nil, fmt.Errorf("Entry not of type *DBObject in NewObjectCreateRsp")
}

func NewObjectReplaceRsp(e db.Entry) (*ReplaceResponse, error) {
	return &ReplaceResponse{}, nil
}

func NewObjectGetRsp(ctx context.Context, sf svcfw.Service, req *GetRequest, rsrcRsp *server.ResourceGetResponse) (*GetResponse, error) {
	rsp := &GetResponse{}
	e := rsrcRsp.Entry
	if e == nil {
		return rsp, nil
	}
	o, ok := e.(*DBObject)
	if !ok {
		return nil, fmt.Errorf("entry not of type *DBObject in NewObjectGetRsp")
	}

	rsp.ResourceVersion = rsrcRsp.ResourceVersion
	var merr *multierror.Error
	buildReadForm := func() {
		rsp.Metadata = &ves_io_schema.ObjectGetMetaType{}
		rsp.Metadata.FromObjectMetaType(o.Metadata)
		rsp.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
		rsp.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)
		rsp.Spec = &GetSpecType{}
		if redactor, ok := e.(db.Redactor); ok {
			if err := redactor.Redact(ctx); err != nil {
				merr = multierror.Append(merr, errors.WithMessage(err, "Error while redacting entry"))
				return
			}
		}
		rsp.Spec.FromGlobalSpecType(o.Spec.GcSpec)

	}
	_ = buildReadForm
	buildStatusForm := func() {
		for _, statusEnt := range rsrcRsp.BackRefs {
			statusObj, ok := statusEnt.ToStore().(*StatusObject)
			if !ok {
				merr = multierror.Append(merr, fmt.Errorf("%T is not *StatusObject", statusEnt))
				continue
			}
			rsp.Status = append(rsp.Status, statusObj)
		}

	}
	_ = buildStatusForm
	buildReferringObjectsForm := func() {
		for _, br := range rsrcRsp.ReferringObjects {
			rsp.ReferringObjects = append(rsp.ReferringObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}

	}
	_ = buildReferringObjectsForm
	buildBrokenReferencesForm := func() {
		for _, br := range rsrcRsp.DeletedReferredObjects {
			rsp.DeletedReferredObjects = append(rsp.DeletedReferredObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}
		for _, br := range rsrcRsp.DisabledReferredObjects {
			rsp.DisabledReferredObjects = append(rsp.DisabledReferredObjects, &ves_io_schema.ObjectRefType{
				Kind:      db.KindForEntryType(br.Type),
				Uid:       br.UID,
				Tenant:    br.Tenant,
				Namespace: br.Namespace,
				Name:      br.Name,
			})
		}

	}
	_ = buildBrokenReferencesForm

	switch req.ResponseFormat {

	case GET_RSP_FORMAT_FOR_CREATE:
		createReq, err := NewCreateRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building CreateRequest from entry")
		}
		// Name has to be specified for a new create
		createReq.Metadata.Name = ""
		rsp.CreateForm = createReq

	case GET_RSP_FORMAT_FOR_REPLACE:
		replaceReq, err := NewReplaceRequest(e)
		if err != nil {
			return nil, errors.Wrap(err, "Building ReplaceRequest from entry")
		}
		rsp.ReplaceForm = replaceReq

	case GET_RSP_FORMAT_STATUS:
		buildStatusForm()

	case GET_RSP_FORMAT_READ:
		buildReadForm()

	case GET_RSP_FORMAT_REFERRING_OBJECTS:
		buildReferringObjectsForm()

	case GET_RSP_FORMAT_BROKEN_REFERENCES:
		buildBrokenReferencesForm()

	default:
		buildReadForm()

		buildStatusForm()
	}

	return rsp, errors.ErrOrNil(merr)
}

func NewListResponse(ctx context.Context, req *ListRequest, sf svcfw.Service, rsrcRsp *server.ResourceListResponse) (*ListResponse, error) {
	if req == nil {
		return nil, fmt.Errorf("Nil ListRequest")
	}
	if rsrcRsp == nil {
		return nil, fmt.Errorf("Nil ResourceResponse")
	}

	errStrs := []string{}
	resp := &ListResponse{}
	resp.Items = []*ListResponseItem{}

	for _, rsrcItem := range rsrcRsp.Items {
		if rsrcItem == nil {
			errStrs = append(errStrs, fmt.Sprintf("Nil ResourceListResponseItem"))
			continue
		}

		e := rsrcItem.Entry
		o, ok := e.(*DBObject)
		if !ok {
			resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
				Code:    ves_io_schema.EINTERNAL,
				Message: fmt.Sprintf("Entry %T not of type *DBObject in NewListResponse", e),
			})

			continue
		}
		if redactor, ok := e.(db.Redactor); ok {
			if err := redactor.Redact(ctx); err != nil {
				resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
					Code:    ves_io_schema.EINTERNAL,
					Message: fmt.Sprintf("Error while redacting in NewListResponse: %s", err),
				})
				continue
			}
		}
		item := &ListResponseItem{
			Tenant:    o.GetSystemMetadata().GetTenant(),
			Namespace: o.GetMetadata().GetNamespace(),
			Name:      o.GetMetadata().GetName(),
			Uid:       o.GetMetadata().GetUid(),
			OwnerView: o.GetSystemMetadata().GetOwnerView(),
			Labels:    o.GetMetadata().GetLabels(),
		}

		item.Description = o.GetMetadata().GetDescription()
		item.Annotations = o.GetMetadata().GetAnnotations()
		item.Disabled = o.GetMetadata().GetDisable()

		if len(req.ReportFields) > 0 {
			item.Metadata = &ves_io_schema.ObjectGetMetaType{}
			item.Metadata.FromObjectMetaType(o.Metadata)
			item.SystemMetadata = &ves_io_schema.SystemObjectGetMetaType{}
			item.SystemMetadata.FromSystemObjectMetaType(o.SystemMetadata)

			if o.Object.GetSpec().GetGcSpec() != nil {
				msgFQN := "ves.io.schema.views.aws_tgw_site.GetResponse"
				if conv, exists := sf.Config().ObjToMsgConverters[msgFQN]; exists {
					getSpec := &GetSpecType{}
					getSpec.FromGlobalSpecType(o.Spec.GcSpec)
					getRsp := &GetResponse{Spec: getSpec}
					if err := conv(o, getRsp); err != nil {
						resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
							Code:    ves_io_schema.EINTERNAL,
							Message: fmt.Sprintf("Converting entry to getResponse: %s", err),
						})

						continue
					}
					item.GetSpec = getRsp.Spec
				} else {
					item.GetSpec = &GetSpecType{}
					item.GetSpec.FromGlobalSpecType(o.Spec.GcSpec)
				}
			}

		}

		if len(req.ReportStatusFields) > 0 {
			for _, sroStatus := range rsrcItem.StatusSet {
				statusDBO, ok := sroStatus.(*DBStatusObject)
				if !ok {
					resp.Errors = append(resp.Errors, &ves_io_schema.ErrorType{
						Code:    ves_io_schema.EINTERNAL,
						Message: fmt.Sprintf("sro.Status %T is not of type *DBStatusObject in NewListResponse", sroStatus),
					})

					continue
				}
				item.StatusSet = append(item.StatusSet, statusDBO.StatusObject)
			}
		}

		resp.Items = append(resp.Items, item)
	}
	return resp, nil
}

func RegisterGwAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterAPIHandlerClient(ctx, mux, NewAPIInprocClient(s))
}

var APISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "AWS TGW site",
        "description": "AWS TGW site view defines a required parameters that can be used in CRUD, to create and manage a volterra site in AWS VPC.\nIt can be used to automatically site creation in the AWS TGW.\n\nView will create following child objects.\n\n* Site",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{metadata.namespace}/aws_tgw_sites": {
            "post": {
                "summary": "Create AWS TGW site",
                "description": "Shape of the AWS TGW site specification",
                "operationId": "ves.io.schema.views.aws_tgw_site.API.Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteCreateResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteCreateRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-aws_tgw_site-api-create"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.aws_tgw_site.API.Create"
            },
            "x-displayname": "Configure AWS TGW Site",
            "x-ves-proto-service": "ves.io.schema.views.aws_tgw_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{metadata.namespace}/aws_tgw_sites/{metadata.name}": {
            "put": {
                "summary": "Replace AWS TGW site",
                "description": "Shape of the AWS TGW site replace specification",
                "operationId": "ves.io.schema.views.aws_tgw_site.API.Replace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteReplaceResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "metadata.namespace",
                        "description": "namespace\n\nx-example: \"staging\"\nThis defines the workspace within which each the configuration object is to be created.\nMust be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "metadata.name",
                        "description": "name\n\nx-example: \"acmecorp-web\"\nThe configuration object to be replaced will be looked up by name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteReplaceRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-aws_tgw_site-api-replace"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.aws_tgw_site.API.Replace"
            },
            "x-displayname": "Configure AWS TGW Site",
            "x-ves-proto-service": "ves.io.schema.views.aws_tgw_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/aws_tgw_sites": {
            "get": {
                "summary": "List Configure AWS TGW Site",
                "description": "List the set of aws_tgw_site in a namespace",
                "operationId": "ves.io.schema.views.aws_tgw_site.API.List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteListResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace to scope the listing of aws_tgw_site",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "label_filter",
                        "description": "x-example: \"env in (staging, testing), tier in (web, db)\"\nA LabelSelectorType expression that every item in list response will satisfy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Label Filter"
                    },
                    {
                        "name": "report_fields",
                        "description": "x-example: \"\"\nExtra fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Fields"
                    },
                    {
                        "name": "report_status_fields",
                        "description": "x-example: \"\"\nExtra status fields to return along with summary fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Report Status Fields"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-aws_tgw_site-api-list"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.aws_tgw_site.API.List"
            },
            "x-displayname": "Configure AWS TGW Site",
            "x-ves-proto-service": "ves.io.schema.views.aws_tgw_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        },
        "/public/namespaces/{namespace}/aws_tgw_sites/{name}": {
            "get": {
                "summary": "Get AWS TGW site",
                "description": "Shape of the AWS TGW site specification",
                "operationId": "ves.io.schema.views.aws_tgw_site.API.Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteGetResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nThe namespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nThe name of the configuration object to be fetched",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "response_format",
                        "description": "The format in which the configuration object is to be fetched. This could be for example\n    - in GetSpec form for the contents of object\n    - in CreateRequest form to create a new similar object\n    - to ReplaceRequest form to replace changeable values\n\nDefault format of returned resource\nResponse should be in CreateRequest format\nResponse should be in ReplaceRequest format\nResponse should be in StatusObject(s) format\nResponse should be in format of GetSpecType\nResponse should have other objects referring to this object\nResponse should have deleted and disabled objects referrred by this object",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "GET_RSP_FORMAT_DEFAULT",
                            "GET_RSP_FORMAT_FOR_CREATE",
                            "GET_RSP_FORMAT_FOR_REPLACE",
                            "GET_RSP_FORMAT_STATUS",
                            "GET_RSP_FORMAT_READ",
                            "GET_RSP_FORMAT_REFERRING_OBJECTS",
                            "GET_RSP_FORMAT_BROKEN_REFERENCES"
                        ],
                        "default": "GET_RSP_FORMAT_DEFAULT",
                        "x-displayname": "Broken Referred Objects"
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-aws_tgw_site-api-get"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.aws_tgw_site.API.Get"
            },
            "delete": {
                "summary": "Delete Configure AWS TGW Site",
                "description": "Delete the specified aws_tgw_site",
                "operationId": "ves.io.schema.views.aws_tgw_site.API.Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {}
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"ns1\"\nNamespace in which the configuration object is present",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"name\"\nName of the configuration object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aws_tgw_siteDeleteRequest"
                        }
                    }
                ],
                "tags": [
                    "API"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-views-aws_tgw_site-api-delete"
                },
                "x-ves-proto-rpc": "ves.io.schema.views.aws_tgw_site.API.Delete"
            },
            "x-displayname": "Configure AWS TGW Site",
            "x-ves-proto-service": "ves.io.schema.views.aws_tgw_site.API",
            "x-ves-proto-service-type": "AUTO_CRUD_PUBLIC"
        }
    },
    "definitions": {
        "aws_tgw_siteAWSTGWInfoConfigType": {
            "type": "object",
            "description": "AWS tgw information like tgw-id and site's vpc-id",
            "title": "AWS TGW Information Config",
            "x-displayname": "AWS TGW Information Config",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.AWSTGWInfoConfigType",
            "properties": {
                "private_ips": {
                    "type": "array",
                    "description": " AWS Private IPs used by the nodes\n\nExample: - \"10.0.0.1, 10.0.0.2, 10.0.0.3\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ip: true\n  ves.io.schema.rules.repeated.num_items: 0,1,3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "AWS Node Private IPs",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "AWS Node Private IPs",
                    "x-ves-example": "10.0.0.1, 10.0.0.2, 10.0.0.3",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ip": "true",
                        "ves.io.schema.rules.repeated.num_items": "0,1,3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "public_ips": {
                    "type": "array",
                    "description": " AWS Elastic IPs used by the nodes\n\nExample: - \"1.1.1.1, 2.2.2.2, 3.3.3.3\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ip: true\n  ves.io.schema.rules.repeated.num_items: 0,1,3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "AWS Node Elastic IPs",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "AWS Node Elastic IPs",
                    "x-ves-example": "1.1.1.1, 2.2.2.2, 3.3.3.3",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ip": "true",
                        "ves.io.schema.rules.repeated.num_items": "0,1,3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "subnet_ids": {
                    "type": "array",
                    "description": " AWS Subnet Ids used by volterra site\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.num_items: 0,1,3\n",
                    "title": "AWS Subnet Ids Info",
                    "items": {
                        "$ref": "#/definitions/viewsAWSSubnetIdsType"
                    },
                    "x-displayname": "AWS Subnet Ids",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.num_items": "0,1,3"
                    }
                },
                "tgw_id": {
                    "type": "string",
                    "description": " TGW ID populated by AWS\n\nExample: - \"tgw-12345678\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.pattern: ^(tgw-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "TGW ID",
                    "x-displayname": "TGW ID",
                    "x-ves-example": "tgw-12345678",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.pattern": "^(tgw-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "vpc_id": {
                    "type": "string",
                    "description": " VPC ID where the volterra site exists\n\nExample: - \"vpc-12345678\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.pattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "VPC ID",
                    "x-displayname": "VPC ID",
                    "x-ves-example": "vpc-12345678",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.pattern": "^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "vpc_name": {
                    "type": "string",
                    "description": " VPC Name where the volterra site exists",
                    "title": "VPC Name",
                    "x-displayname": "VPC Name"
                }
            }
        },
        "aws_tgw_siteAWSTGWResourceShareType": {
            "type": "object",
            "description": "AWS Resource Share Status Type",
            "title": "AWS Resource Share Status Type",
            "x-displayname": "AWS Resource Share Status",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.AWSTGWResourceShareType",
            "properties": {
                "allow_external_principles": {
                    "type": "boolean",
                    "description": " Manage Sharing Outside AWS Organization",
                    "title": "Allow External Principles",
                    "format": "boolean",
                    "x-displayname": "Allow External Principles"
                },
                "creation_time": {
                    "type": "string",
                    "description": " Resource Share Creation Time",
                    "title": "Resource Share Creation Time",
                    "format": "date-time",
                    "x-displayname": "Resource Share Creation Time"
                },
                "deployment_status": {
                    "type": "string",
                    "description": " Attachment Deployment Status",
                    "title": "Attachment Deployment Status",
                    "x-displayname": "Attachment Deployment Status"
                },
                "invitation_status": {
                    "type": "string",
                    "description": " Resource Share Invitation State",
                    "title": "Resource Share Invitation State",
                    "x-displayname": "Resource Share Invitation State"
                },
                "last_updated_time": {
                    "type": "string",
                    "description": " Resource Share Last Update Time",
                    "title": "Resource Share Last Update Time",
                    "format": "date-time",
                    "x-displayname": "Resource Share Last Update Time"
                },
                "owner_account_id": {
                    "type": "string",
                    "description": " Resource Share Owner Account ID",
                    "title": "Resource Share Owner Account ID",
                    "x-displayname": "Resource Share Owner Account ID"
                },
                "receiver_account_id": {
                    "type": "array",
                    "description": " Resource Share Acceptor Account ID",
                    "title": "Resource Share Acceptor Account ID",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Resource Share Acceptor Account ID"
                },
                "resource_share_arn": {
                    "type": "string",
                    "description": " Resource Share ARN",
                    "title": "Resource Share ARN",
                    "x-displayname": "Resource Share ARN"
                },
                "resource_share_invitation_arn": {
                    "type": "string",
                    "description": " Resource Share Invititation ARN",
                    "title": "Resource Share Invititation ARN",
                    "x-displayname": "Resource Share Invititation ARN"
                },
                "resource_share_name": {
                    "type": "string",
                    "description": " Resource Share Name",
                    "title": "Resource Share Name",
                    "x-displayname": "Resource Share Name"
                },
                "status": {
                    "type": "string",
                    "description": " Resource Share State",
                    "title": "Resource Share State",
                    "x-displayname": "Resource Share State"
                },
                "tags": {
                    "type": "object",
                    "description": " Resource Share Tags",
                    "title": "Resource Share Tags",
                    "x-displayname": "Resource Share Tags"
                }
            }
        },
        "aws_tgw_siteAWSTGWStatusType": {
            "type": "object",
            "description": "AWS Transit Gateway Status Type",
            "title": "AWS Transit Gateway Status Type",
            "x-displayname": "AWS TGW Status",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.AWSTGWStatusType",
            "properties": {
                "status_msg": {
                    "type": "string",
                    "description": " x-displayName \"TGW Deployment Status\"\n TGW Deployment Status",
                    "title": "TGW Deployment Status"
                },
                "tags": {
                    "type": "object",
                    "description": " TGW Tags",
                    "title": "TGW Tags",
                    "x-displayname": "TGW Tags"
                },
                "tgw_amazon_asn": {
                    "type": "string",
                    "description": " AWS Side ASN of TGW",
                    "title": "AWS Side ASN of TGW",
                    "format": "int64",
                    "x-displayname": "AWS Side ASN of TGW"
                },
                "tgw_arn": {
                    "type": "string",
                    "description": " TGW ARN",
                    "title": "TGW ARN",
                    "x-displayname": "TGW ARN"
                },
                "tgw_creation_time": {
                    "type": "string",
                    "description": " TGW Creation Time",
                    "title": "TGW creation time",
                    "format": "date-time",
                    "x-displayname": "TGW Creation Time"
                },
                "tgw_id": {
                    "type": "string",
                    "description": " TGW ID",
                    "title": "TGW ID",
                    "x-displayname": "TGW ID"
                },
                "tgw_owner_account": {
                    "type": "string",
                    "description": " TGW Owner Account",
                    "title": "TGW Owner",
                    "x-displayname": "TGW Owner Account"
                },
                "tgw_region": {
                    "type": "string",
                    "description": " TGW Region",
                    "title": "TGW Region",
                    "x-displayname": "TGW Region"
                },
                "tgw_state": {
                    "type": "string",
                    "description": " TGW State",
                    "title": "TGW State",
                    "x-displayname": "TGW State"
                }
            }
        },
        "aws_tgw_siteAWSVPNTunnelConfigType": {
            "type": "object",
            "description": "x-displayName: \"AWS VPN Tunnel Config\"\nRemote IP for VPN tunnels of a node",
            "title": "AWS VPN Tunnel Config",
            "properties": {
                "node_id": {
                    "type": "string",
                    "description": "x-displayName: \"F5XC Node ID\"\nx-example: \"ves-node-id-xxxxxx\"\nx-required\nF5XC Node ID for which this tunnel is configured",
                    "title": "F5XC Node ID"
                },
                "node_name": {
                    "type": "string",
                    "description": "x-displayName: \"Name of the Node\"\nx-example: \"master-0\"\nx-required\nName of the node for which this tunnel is configured",
                    "title": "Name of the Node"
                },
                "tunnel_remote_ip": {
                    "type": "array",
                    "description": "x-displayName: \"Remote IP(s)\"\nx-example: \"3.4.5.6\"\nx-required\nRemote IP(s) for up to two tunnels",
                    "title": "Remote IP(s)",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "x-displayName: \"VPN Tunnel Type\"\nx-required\nVPN Tunnel Type",
                    "title": "VPN Tunnel Type",
                    "$ref": "#/definitions/aws_tgw_siteVPNTunnelType"
                }
            }
        },
        "aws_tgw_siteCreateRequest": {
            "type": "object",
            "description": "This is the input message of the 'Create' RPC",
            "title": "CreateRequest is used to create an instance of aws_tgw_site",
            "x-displayname": "Create Request",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.CreateRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectCreateMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsaws_tgw_siteCreateSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "aws_tgw_siteCreateResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.CreateResponse",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsaws_tgw_siteGetSpecType",
                    "x-displayname": "Spec"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "aws_tgw_siteDeleteRequest": {
            "type": "object",
            "description": "This is the input message of the 'Delete' RPC.",
            "title": "DeleteRequest is used to delete a aws_tgw_site",
            "x-displayname": "Delete Request",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.DeleteRequest",
            "properties": {
                "fail_if_referred": {
                    "type": "boolean",
                    "description": " Fail the delete operation if this object is being referred by other objects",
                    "title": "fail_if_referred",
                    "format": "boolean",
                    "x-displayname": "Fail-If-Referred"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the configuration object\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace in which the configuration object is present\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                }
            }
        },
        "aws_tgw_siteExistingTGWType": {
            "type": "object",
            "description": "Information needed for existing TGW",
            "title": "Existing TGW Type",
            "x-displayname": "Existing TGW Type",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ExistingTGWType",
            "properties": {
                "tgw_asn": {
                    "type": "integer",
                    "description": " TGW ASN.\n\nExample: - \"64500\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gt: 0\n  ves.io.schema.rules.uint32.lte: 65535\n",
                    "title": "TGW ASN",
                    "format": "int64",
                    "x-displayname": "Enter TGW ASN",
                    "x-ves-example": "64500",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gt": "0",
                        "ves.io.schema.rules.uint32.lte": "65535"
                    }
                },
                "tgw_id": {
                    "type": "string",
                    "description": " Existing TGW ID\n\nExample: - \"tgw-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(tgw-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Existing TGW ID",
                    "maxLength": 64,
                    "x-displayname": "Existing TGW ID",
                    "x-ves-example": "tgw-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(tgw-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "volterra_site_asn": {
                    "type": "integer",
                    "description": " F5XC Site ASN.\n\nExample: - \"64501\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gt: 0\n  ves.io.schema.rules.uint32.lte: 65535\n",
                    "title": "F5XC Site ASN",
                    "format": "int64",
                    "x-displayname": "Enter F5XC Site ASN",
                    "x-ves-example": "64501",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gt": "0",
                        "ves.io.schema.rules.uint32.lte": "65535"
                    }
                }
            }
        },
        "aws_tgw_siteGetResponse": {
            "type": "object",
            "description": "This is the output message of the 'Get' RPC",
            "title": "GetResponse is the shape of a read aws_tgw_site",
            "x-displayname": "Get Response",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.GetResponse",
            "properties": {
                "create_form": {
                    "description": "Format used to create a new similar object",
                    "title": "create_form",
                    "$ref": "#/definitions/aws_tgw_siteCreateRequest",
                    "x-displayname": "CreateRequest Format"
                },
                "deleted_referred_objects": {
                    "type": "array",
                    "description": "The set of deleted objects that are referred by this object",
                    "title": "deleted_referred_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Deleted Referred Objects"
                },
                "disabled_referred_objects": {
                    "type": "array",
                    "description": "The set of deleted objects that are referred by this object",
                    "title": "disabled_referred_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Disabled Referred Objects"
                },
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "referring_objects": {
                    "type": "array",
                    "description": "The set of objects that are referring to this object in their spec",
                    "title": "referring_objects",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Referring Objects"
                },
                "replace_form": {
                    "description": "Format to replace changeable values in object",
                    "title": "replace_form",
                    "$ref": "#/definitions/aws_tgw_siteReplaceRequest",
                    "x-displayname": "ReplaceRequest Format"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsaws_tgw_siteGetSpecType",
                    "x-displayname": "Spec"
                },
                "status": {
                    "type": "array",
                    "description": "The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/aws_tgw_siteStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " System generated object's metadata",
                    "title": "system metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                }
            }
        },
        "aws_tgw_siteGetResponseFormatCode": {
            "type": "string",
            "description": "x-displayName: \"Get Response Format\"\nThis is the various forms that can be requested to be sent in the GetResponse\n\n - GET_RSP_FORMAT_DEFAULT: x-displayName: \"Default Format\"\nDefault format of returned resource\n - GET_RSP_FORMAT_FOR_CREATE: x-displayName: \"Create request Format\"\nResponse should be in CreateRequest format\n - GET_RSP_FORMAT_FOR_REPLACE: x-displayName: \"Replace request format\"\nResponse should be in ReplaceRequest format\n - GET_RSP_FORMAT_STATUS: x-displayName: \"Status format\"\nResponse should be in StatusObject(s) format\n - GET_RSP_FORMAT_READ: x-displayName: \"GetSpecType format\"\nResponse should be in format of GetSpecType\n - GET_RSP_FORMAT_REFERRING_OBJECTS: x-displayName: \"Referring Objects\"\nResponse should have other objects referring to this object\n - GET_RSP_FORMAT_BROKEN_REFERENCES: x-displayName: \"Broken Referred Objects\"\nResponse should have deleted and disabled objects referrred by this object",
            "title": "GetResponseFormatCode",
            "enum": [
                "GET_RSP_FORMAT_DEFAULT",
                "GET_RSP_FORMAT_FOR_CREATE",
                "GET_RSP_FORMAT_FOR_REPLACE",
                "GET_RSP_FORMAT_STATUS",
                "GET_RSP_FORMAT_READ",
                "GET_RSP_FORMAT_REFERRING_OBJECTS",
                "GET_RSP_FORMAT_BROKEN_REFERENCES"
            ],
            "default": "GET_RSP_FORMAT_DEFAULT"
        },
        "aws_tgw_siteListResponse": {
            "type": "object",
            "description": "This is the output message of 'List' RPC.",
            "title": "ListResponse is the collection of aws_tgw_site",
            "x-displayname": "List Response",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ListResponse",
            "properties": {
                "errors": {
                    "type": "array",
                    "description": " Errors(if any) while listing items from collection",
                    "title": "errors",
                    "items": {
                        "$ref": "#/definitions/schemaErrorType"
                    },
                    "x-displayname": "Errors"
                },
                "items": {
                    "type": "array",
                    "description": " items represents the collection in response",
                    "title": "items",
                    "items": {
                        "$ref": "#/definitions/aws_tgw_siteListResponseItem"
                    },
                    "x-displayname": "Items"
                }
            }
        },
        "aws_tgw_siteListResponseItem": {
            "type": "object",
            "description": "By default a summary of aws_tgw_site is returned in 'List'. By setting\n'report_fields' in the ListRequest more details of each item can be got.",
            "title": "ListResponseItem is an individual item in a collection of aws_tgw_site",
            "x-displayname": "List Item",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ListResponseItem",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " The set of annotations present on this aws_tgw_site",
                    "title": "annotations",
                    "x-displayname": "Annotations"
                },
                "description": {
                    "type": "string",
                    "description": " The description set for this aws_tgw_site",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "disabled": {
                    "type": "boolean",
                    "description": " A value of true indicates aws_tgw_site is administratively disabled",
                    "title": "disabled",
                    "format": "boolean",
                    "x-displayname": "Disabled"
                },
                "get_spec": {
                    "description": " If ListRequest has any specified report_fields, it will appear in object",
                    "title": "get_spec",
                    "$ref": "#/definitions/viewsaws_tgw_siteGetSpecType",
                    "x-displayname": "Get Specification"
                },
                "labels": {
                    "type": "object",
                    "description": " The set of labels present on this aws_tgw_site",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "metadata": {
                    "description": " If list request has report_fields set then metadata will\n contain all the metadata associated with the object.",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectGetMetaType",
                    "x-displayname": "Metadata"
                },
                "name": {
                    "type": "string",
                    "description": " The name of this aws_tgw_site\n\nExample: - \"name\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "name"
                },
                "namespace": {
                    "type": "string",
                    "description": " The namespace this item belongs to\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "status_set": {
                    "type": "array",
                    "description": " The status reported by different services for this configuration object",
                    "title": "status",
                    "items": {
                        "$ref": "#/definitions/aws_tgw_siteStatusObject"
                    },
                    "x-displayname": "Status"
                },
                "system_metadata": {
                    "description": " If list request has report_fields set then system_metadata will\n contain all the system generated details of this object.",
                    "title": "system_metadata",
                    "$ref": "#/definitions/schemaSystemObjectGetMetaType",
                    "x-displayname": "System Metadata"
                },
                "tenant": {
                    "type": "string",
                    "description": " The tenant this item belongs to\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " The unique uid of this aws_tgw_site\n\nExample: - \"d27938ba-967e-40a7-9709-57b8627f9f75\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d27938ba-967e-40a7-9709-57b8627f9f75"
                }
            }
        },
        "aws_tgw_siteReplaceRequest": {
            "type": "object",
            "description": "This is the input message of the 'Replace' RPC",
            "title": "ReplaceRequest is used to replace contents of a aws_tgw_site",
            "x-displayname": "Replace Request",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ReplaceRequest",
            "properties": {
                "metadata": {
                    "description": " Standard object's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaObjectReplaceMetaType",
                    "x-displayname": "Metadata"
                },
                "spec": {
                    "description": " Specification of the desired behavior of the tenant",
                    "title": "spec",
                    "$ref": "#/definitions/viewsaws_tgw_siteReplaceSpecType",
                    "x-displayname": "Spec"
                }
            }
        },
        "aws_tgw_siteReplaceResponse": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ReplaceResponse"
        },
        "aws_tgw_siteSecurityConfigType": {
            "type": "object",
            "description": "Security Configuration for transit gateway",
            "title": "TGW Security Configuration",
            "x-displayname": "TGW Security Configuration",
            "x-ves-oneof-field-east_west_service_policy_choice": "[\"active_east_west_service_policies\",\"east_west_service_policy_allow_all\",\"no_east_west_policy\"]",
            "x-ves-oneof-field-forward_proxy_choice": "[\"active_forward_proxy_policies\",\"forward_proxy_allow_all\",\"no_forward_proxy\"]",
            "x-ves-oneof-field-network_policy_choice": "[\"active_enhanced_firewall_policies\",\"active_network_policies\",\"no_network_policy\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.SecurityConfigType",
            "properties": {
                "active_east_west_service_policies": {
                    "description": "Exclusive with [east_west_service_policy_allow_all no_east_west_policy]\n Enable service policy so east-west traffic goes via proxy",
                    "title": "Enable East-West Service Policy",
                    "$ref": "#/definitions/viewsaws_tgw_siteActiveServicePoliciesType",
                    "x-displayname": "Enable East-West Service Policy"
                },
                "active_enhanced_firewall_policies": {
                    "description": "Exclusive with [active_network_policies no_network_policy]\n Enhanced Firewall Policies active for this site.\n These policies use session-based rules and provide all options available under firewall policies\n with an additional option for service insertion.",
                    "title": "Manage Enhanced Firewall Policy",
                    "$ref": "#/definitions/schemanetwork_firewallActiveEnhancedFirewallPoliciesType",
                    "x-displayname": "Active Enhanced Firewall Policies"
                },
                "active_forward_proxy_policies": {
                    "description": "Exclusive with [forward_proxy_allow_all no_forward_proxy]\n Enable Forward Proxy for this site and manage policies",
                    "title": "Enable Forward Proxy and Manage Policies",
                    "$ref": "#/definitions/schemanetwork_firewallActiveForwardProxyPoliciesType",
                    "x-displayname": "Enable Forward Proxy and Manage Policies"
                },
                "active_network_policies": {
                    "description": "Exclusive with [active_enhanced_firewall_policies no_network_policy]\n Firewall Policies active for this site.",
                    "title": "Manage Firewall Policy",
                    "$ref": "#/definitions/network_firewallActiveNetworkPoliciesType",
                    "x-displayname": "Active Firewall Policies"
                },
                "east_west_service_policy_allow_all": {
                    "description": "Exclusive with [active_east_west_service_policies no_east_west_policy]\n Enable service policy with allow all so east-west traffic goes via proxy for monitoring",
                    "title": "Enable East-West traffic Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable East-West traffic Proxy with Allow All Policy"
                },
                "forward_proxy_allow_all": {
                    "description": "Exclusive with [active_forward_proxy_policies no_forward_proxy]\n Enable Forward Proxy for this site and allow all requests.",
                    "title": "Enable Forward Proxy with Allow All Policy",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable Forward Proxy with Allow All Policy"
                },
                "no_east_west_policy": {
                    "description": "Exclusive with [active_east_west_service_policies east_west_service_policy_allow_all]\n Disable service policy so that east-west traffic does not go via proxy",
                    "title": "Disable East-West Service Policy",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable East-West Service Policy"
                },
                "no_forward_proxy": {
                    "description": "Exclusive with [active_forward_proxy_policies forward_proxy_allow_all]\n Disable Forward Proxy for this site",
                    "title": "Disable Forward Proxy",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Forward Proxy"
                },
                "no_network_policy": {
                    "description": "Exclusive with [active_enhanced_firewall_policies active_network_policies]\n Firewall Policy is disabled for this site.",
                    "title": "Do Not Manage Firewall Policy",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Firewall Policy"
                }
            }
        },
        "aws_tgw_siteServicesVPCReplaceType": {
            "type": "object",
            "description": "AWS Services VPC Replace config",
            "title": "AWS Services VPC Config",
            "x-displayname": "AWS Services VPC Config",
            "x-ves-oneof-field-deployment": "[\"aws_cred\"]",
            "x-ves-oneof-field-internet_vip_choice": "[\"disable_internet_vip\",\"enable_internet_vip\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ServicesVPCReplaceType",
            "properties": {
                "aws_cred": {
                    "description": "Exclusive with []\n Reference to AWS cloud credential object used to deploy cloud resources",
                    "title": "Automatic Deployment",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Automatic Deployment"
                },
                "disable_internet_vip": {
                    "description": "Exclusive with [enable_internet_vip]\n VIPs cannot be advertised to the internet directly on this Site",
                    "title": "Disable Internet VIP",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Internet VIP"
                },
                "enable_internet_vip": {
                    "description": "Exclusive with [disable_internet_vip]\n VIPs can be advertised to the internet directly on this Site",
                    "title": "Enable Internet VIP",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable Internet VIP"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\n Worker nodes is set to zero",
                    "title": "No Worker Nodes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Worker Nodes"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\n Desired Worker Nodes Per AZ. Max limit is up to 21\n\nExample: - \"2\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 21\n",
                    "title": "Desired Worker Nodes Per AZ",
                    "format": "int64",
                    "x-displayname": "Desired Worker Nodes Per AZ",
                    "x-ves-example": "2",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "21"
                    }
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\n Total number of worker nodes to be deployed across all AZ's used in the Site\n\nExample: - \"1\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 61\n",
                    "title": "Total Number of Worker Nodes for a Site",
                    "format": "int64",
                    "x-displayname": "Total Number of Worker Nodes for a Site",
                    "x-ves-example": "1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "61"
                    }
                }
            }
        },
        "aws_tgw_siteServicesVPCType": {
            "type": "object",
            "description": "Setup AWS services VPC, transit gateway and site",
            "title": "AWS Service VPC and TGW",
            "x-displayname": "AWS Service VPC and TGW",
            "x-ves-oneof-field-deployment": "[\"aws_cred\"]",
            "x-ves-oneof-field-internet_vip_choice": "[\"disable_internet_vip\",\"enable_internet_vip\"]",
            "x-ves-oneof-field-security_group_choice": "[\"custom_security_group\",\"f5xc_security_group\"]",
            "x-ves-oneof-field-service_vpc_choice": "[\"new_vpc\",\"vpc_id\"]",
            "x-ves-oneof-field-tgw_choice": "[\"existing_tgw\",\"new_tgw\"]",
            "x-ves-oneof-field-worker_nodes": "[\"no_worker_nodes\",\"nodes_per_az\",\"total_nodes\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ServicesVPCType",
            "properties": {
                "aws_cred": {
                    "description": "Exclusive with []\n Reference to AWS cloud credential object used to deploy cloud resources",
                    "title": "Automatic Deployment",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Credential Reference"
                },
                "aws_region": {
                    "type": "string",
                    "description": " AWS Region of your services vpc, where F5XC site will be deployed.\n\nExample: - \"us-east-1\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "AWS Region",
                    "x-displayname": "AWS Region",
                    "x-ves-example": "us-east-1",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "az_nodes": {
                    "type": "array",
                    "description": " Only Single AZ or Three AZ(s) nodes are supported currently.\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.num_items: 1,3\n",
                    "title": "Nodes",
                    "items": {
                        "$ref": "#/definitions/viewsAWSVPCTwoInterfaceNodeType"
                    },
                    "x-displayname": "Ingress/Egress Gateway (two Interface) Nodes in AZ",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.num_items": "1,3"
                    }
                },
                "custom_security_group": {
                    "description": "Exclusive with [f5xc_security_group]\n With this option, ingress and egress traffic will be controlled via security group ids.",
                    "title": "Custom Security Groups for SLO and SLI Interface",
                    "$ref": "#/definitions/viewsSecurityGroupType",
                    "x-displayname": "Select this option to specify custom security groups for slo and sli interfaces."
                },
                "disable_internet_vip": {
                    "description": "Exclusive with [enable_internet_vip]\n VIPs cannot be advertised to the internet directly on this Site",
                    "title": "Disable VIP Advertisement to Internet on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable VIP Advertisement to Internet on Site"
                },
                "disk_size": {
                    "type": "integer",
                    "description": " Node disk size for all node in the F5XC site. Unit is GiB\n\nExample: - \"80\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 64000\n",
                    "title": "Node Disk size",
                    "format": "int64",
                    "x-displayname": "Node Disk Size",
                    "x-ves-example": "80",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "64000"
                    }
                },
                "enable_internet_vip": {
                    "description": "Exclusive with [disable_internet_vip]\n VIPs can be advertised to the internet directly on this Site",
                    "title": "Enable VIP Advertisement to Internet on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable VIP Advertisement to Internet on Site"
                },
                "existing_tgw": {
                    "description": "Exclusive with [new_tgw]\n Information about existing TGW",
                    "title": "Existing TGW",
                    "$ref": "#/definitions/aws_tgw_siteExistingTGWType",
                    "x-displayname": "Existing TGW"
                },
                "f5xc_security_group": {
                    "description": "Exclusive with [custom_security_group]\n With this option, ingress and egress traffic will be controlled via f5xc created security group.",
                    "title": "Default F5XC Security Group",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Select this option to create and attach F5XC default security group"
                },
                "instance_type": {
                    "type": "string",
                    "description": " Instance size based on the performance.\n\nExample: - \"a1.xlarge\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "AWS Instance Type",
                    "maxLength": 64,
                    "x-displayname": "AWS Instance Type for Node",
                    "x-ves-example": "a1.xlarge",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                },
                "new_tgw": {
                    "description": "Exclusive with [existing_tgw]\n Details needed to create new TGW",
                    "title": "New Transit Gateway",
                    "$ref": "#/definitions/aws_tgw_siteTGWParamsType",
                    "x-displayname": "New Transit Gateway"
                },
                "new_vpc": {
                    "description": "Exclusive with [vpc_id]\n Details needed to create new VPC",
                    "title": "New VPC",
                    "$ref": "#/definitions/viewsAWSVPCParamsType",
                    "x-displayname": "New VPC"
                },
                "no_worker_nodes": {
                    "description": "Exclusive with [nodes_per_az total_nodes]\n Worker nodes is set to zero",
                    "title": "No Worker Nodes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "No Worker Nodes"
                },
                "nodes_per_az": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes total_nodes]\n Desired Worker Nodes Per AZ. Max limit is up to 21\n\nExample: - \"2\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 21\n",
                    "title": "Desired Worker Nodes Per AZ",
                    "format": "int64",
                    "x-displayname": "Desired Worker Nodes Per AZ",
                    "x-ves-example": "2",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "21"
                    }
                },
                "ssh_key": {
                    "type": "string",
                    "description": " Public SSH key for accessing nodes of the site.\n\nExample: - \"ssh-rsa AAAAB...\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 8192\n",
                    "title": "Public SSH key",
                    "maxLength": 8192,
                    "x-displayname": "Public SSH key",
                    "x-ves-example": "ssh-rsa AAAAB...",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "8192"
                    }
                },
                "total_nodes": {
                    "type": "integer",
                    "description": "Exclusive with [no_worker_nodes nodes_per_az]\n Total number of worker nodes to be deployed across all AZ's used in the Site\n\nExample: - \"1\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 61\n",
                    "title": "Total Number of Worker Nodes for a Site",
                    "format": "int64",
                    "x-displayname": "Total Number of Worker Nodes for a Site",
                    "x-ves-example": "1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "61"
                    }
                },
                "vpc_id": {
                    "type": "string",
                    "description": "Exclusive with [new_vpc]\n Existing VPC ID\n\nExample: - \"vpc-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Existing VPC ID",
                    "maxLength": 64,
                    "x-displayname": "Existing VPC ID",
                    "x-ves-example": "vpc-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                }
            }
        },
        "aws_tgw_siteStatusObject": {
            "type": "object",
            "description": "Most recently observed status of object",
            "title": "StatusObject",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.StatusObject",
            "properties": {
                "conditions": {
                    "type": "array",
                    "description": " Conditions represent the normalized status values for configuration object",
                    "title": "conditions",
                    "items": {
                        "$ref": "#/definitions/schemaConditionType"
                    },
                    "x-displayname": "Conditions"
                },
                "deployment": {
                    "description": " Deployment status",
                    "title": "Deployment status",
                    "$ref": "#/definitions/terraform_parametersDeploymentStatusType",
                    "x-displayname": "Deployment status"
                },
                "metadata": {
                    "description": " Standard status's metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/schemaStatusMetaType",
                    "x-displayname": "Metadata"
                },
                "object_refs": {
                    "type": "array",
                    "description": " AWS TGW view object direct reference",
                    "title": "object_refs",
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Config Object"
                },
                "resource_share_status": {
                    "description": " AWS TGW Resource Share",
                    "title": "AWS TGW Resource Share",
                    "$ref": "#/definitions/aws_tgw_siteAWSTGWResourceShareType",
                    "x-displayname": "AWS TGW Resource Share"
                },
                "tgw": {
                    "description": " AWS Transit Gateway Status Type",
                    "title": "AWS Transit Gateway Status Type",
                    "$ref": "#/definitions/aws_tgw_siteAWSTGWStatusType",
                    "x-displayname": "AWS TGW Status"
                },
                "vpc_attachments": {
                    "description": " Cloud Connect to AWS Sites",
                    "title": "Cloud Connect Attached to AWS TGW Site",
                    "$ref": "#/definitions/cloud_connectAWSAttachmentsListStatusType",
                    "x-displayname": "Cloud Connect to AWS TGW Site"
                }
            }
        },
        "aws_tgw_siteTGWAssignedASNType": {
            "type": "object",
            "description": "Information needed when ASNs are assigned by the user",
            "title": "TGW Assigned ASN Type",
            "x-displayname": "TGW Assigned ASN Type",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.TGWAssignedASNType",
            "properties": {
                "tgw_asn": {
                    "type": "integer",
                    "description": " TGW ASN. Allowed range for 16-bit private ASNs include 64512 to 65534.\n\nExample: - \"64512\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gt: 64512\n  ves.io.schema.rules.uint32.lte: 65534\n",
                    "title": "TGW ASN",
                    "format": "int64",
                    "x-displayname": "Enter TGW ASN",
                    "x-ves-example": "64512",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gt": "64512",
                        "ves.io.schema.rules.uint32.lte": "65534"
                    }
                },
                "volterra_site_asn": {
                    "type": "integer",
                    "description": " F5XC Site ASN.\n\nExample: - \"64500\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gt: 0\n  ves.io.schema.rules.uint32.lte: 65535\n",
                    "title": "F5XC Site ASN",
                    "format": "int64",
                    "x-displayname": "Enter F5XC Site ASN",
                    "x-ves-example": "64500",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gt": "0",
                        "ves.io.schema.rules.uint32.lte": "65535"
                    }
                }
            }
        },
        "aws_tgw_siteTGWParamsType": {
            "type": "object",
            "title": "TGWParamsType",
            "x-displayname": "TGWParamsType",
            "x-ves-oneof-field-asn_choice": "[\"system_generated\",\"user_assigned\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.TGWParamsType",
            "properties": {
                "system_generated": {
                    "description": "Exclusive with [user_assigned]\n F5XC will automatically assign a private ASN for TGW and F5XC Site",
                    "title": "System Generated",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Automatic"
                },
                "user_assigned": {
                    "description": "Exclusive with [system_generated]\n User is managing the ASN for TGW and F5XC Site.",
                    "title": "User Assigned",
                    "$ref": "#/definitions/aws_tgw_siteTGWAssignedASNType",
                    "x-displayname": "User will assign ASN for TGW and F5XC Site"
                }
            }
        },
        "aws_tgw_siteVPCAttachmentListType": {
            "type": "object",
            "description": "Spoke VPCs to be attached to the AWS TGW Site",
            "title": "Spoke VPCs",
            "x-displayname": "Spoke VPCs",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.VPCAttachmentListType",
            "properties": {
                "vpc_list": {
                    "type": "array",
                    "description": " List of VPC attachments to transit gateway\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 128\n",
                    "title": "vpc_list",
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/aws_tgw_siteVPCAttachmentType"
                    },
                    "x-displayname": "VPC List",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "128"
                    }
                }
            }
        },
        "aws_tgw_siteVPCAttachmentType": {
            "type": "object",
            "description": "VPC attachments to transit gateway",
            "title": "VPC attachment",
            "x-displayname": "VPC",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.VPCAttachmentType",
            "properties": {
                "labels": {
                    "type": "object",
                    "description": " Add labels for the VPC attachment. These labels can then be used in policies such as enhanced firewall.\n\nExample: - \"value\"-",
                    "title": "Labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "vpc_id": {
                    "type": "string",
                    "description": " Information about existing VPC\n\nExample: - \"vpc-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "VPC ID",
                    "maxLength": 64,
                    "x-displayname": "VPC ID",
                    "x-ves-example": "vpc-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                }
            }
        },
        "aws_tgw_siteVPCIpPrefixesType": {
            "type": "object",
            "description": "x-displayName: \"VPC IP prefixes\"\nVPC IP prefixes",
            "title": "VPC IP prefixes",
            "properties": {
                "prefixes": {
                    "type": "array",
                    "description": "x-displayName: \"Prefixes\"\nx-required\nx-example: \"['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']\"\nAn unordered list of IP prefixes.",
                    "title": "IP prefixes",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aws_tgw_siteVPNTunnelType": {
            "type": "string",
            "description": "x-displayName: \"VPN Tunnel Type\"\nThis defines VPN Tunnel type for which the config exists\n\n - HUB: x-displayName: \"VPN Tunnel Hub\"\nVPN Tunnel Type - HUB\n - SERVICES: x-displayName: \"VPN Tunnel Services\"\nVPN Tunnel Type - Services",
            "title": "VPN Tunnel Type",
            "enum": [
                "HUB",
                "SERVICES"
            ],
            "default": "HUB"
        },
        "aws_tgw_siteVnConfiguration": {
            "type": "object",
            "description": "Virtual Network Configuration",
            "title": "Virtual Network Configuration",
            "x-displayname": "Virtual Network Configuration",
            "x-ves-oneof-field-dc_cluster_group_choice": "[\"dc_cluster_group_inside_vn\",\"dc_cluster_group_outside_vn\",\"no_dc_cluster_group\"]",
            "x-ves-oneof-field-global_network_choice": "[\"global_network_list\",\"no_global_network\"]",
            "x-ves-oneof-field-inside_static_route_choice": "[\"inside_static_routes\",\"no_inside_static_routes\"]",
            "x-ves-oneof-field-outside_static_route_choice": "[\"no_outside_static_routes\",\"outside_static_routes\"]",
            "x-ves-oneof-field-site_mesh_group_choice": "[\"sm_connection_public_ip\",\"sm_connection_pvt_ip\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.VnConfiguration",
            "properties": {
                "allowed_vip_port": {
                    "description": " Allowed VIP Port Configuration",
                    "title": "Allowed VIP Port Configuration",
                    "$ref": "#/definitions/viewsAllowedVIPPorts",
                    "x-displayname": "Allowed VIP Port Configuration"
                },
                "allowed_vip_port_sli": {
                    "description": " Allowed VIP Port Configuration for Inside Network",
                    "title": "Allowed VIP Port Configuration for Inside Network",
                    "$ref": "#/definitions/viewsAllowedVIPPorts",
                    "x-displayname": "Allowed VIP Port Configuration for Inside Network"
                },
                "dc_cluster_group_inside_vn": {
                    "description": "Exclusive with [dc_cluster_group_outside_vn no_dc_cluster_group]\n This site is member of dc cluster group connected via inside network",
                    "title": "Member of DC cluster Group via Inside Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC Cluster Group via Inside Network"
                },
                "dc_cluster_group_outside_vn": {
                    "description": "Exclusive with [dc_cluster_group_inside_vn no_dc_cluster_group]\n This site is member of dc cluster group connected via outside network",
                    "title": "Member of DC cluster Group via Outside Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Member of DC Cluster Group via Outside Network"
                },
                "global_network_list": {
                    "description": "Exclusive with [no_global_network]\n List of global network connections",
                    "title": "Connect Global Networks",
                    "$ref": "#/definitions/viewsGlobalNetworkConnectionListType",
                    "x-displayname": "Connect Global Networks"
                },
                "inside_static_routes": {
                    "description": "Exclusive with [no_inside_static_routes]\n Manage static routes for inside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType",
                    "x-displayname": "Manage Static routes"
                },
                "no_dc_cluster_group": {
                    "description": "Exclusive with [dc_cluster_group_inside_vn dc_cluster_group_outside_vn]\n This site is not a member of dc cluster group",
                    "title": "Not a Member of DC Cluster Group",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Not a Member of DC Cluster Group"
                },
                "no_global_network": {
                    "description": "Exclusive with [global_network_list]\n No global network to connect",
                    "title": "Do not Connect Global Networks",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Do Not Connect Global Networks"
                },
                "no_inside_static_routes": {
                    "description": "Exclusive with [inside_static_routes]\n Static Routes disabled for inside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Static Routes"
                },
                "no_outside_static_routes": {
                    "description": "Exclusive with [outside_static_routes]\n Static Routes disabled for outside network.",
                    "title": "Do Not Manage Static Routes",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Static Routes"
                },
                "outside_static_routes": {
                    "description": "Exclusive with [no_outside_static_routes]\n Manage static routes for outside network.",
                    "title": "Manage Static routes",
                    "$ref": "#/definitions/viewsSiteStaticRoutesListType",
                    "x-displayname": "Manage Static routes"
                },
                "sm_connection_public_ip": {
                    "description": "Exclusive with [sm_connection_pvt_ip]\n Site Mesh Group Connection Via Public IP. This option will use elastic IP for\n creating ipsec between two sites which are part of the site mesh group",
                    "title": "Site Mesh Group Connection Via Public Ip",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Site Mesh Group Connection Via Public Ip"
                },
                "sm_connection_pvt_ip": {
                    "description": "Exclusive with [sm_connection_public_ip]\n Site Mesh Group Connection Via Private IP. This option will use private IP for\n creating ipsec between two sites which are part of the site mesh group",
                    "title": "Site Mesh Group Connection Via Private Ip",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Site Mesh Group Connection Via  Private Ip"
                }
            }
        },
        "cloud_connectAWSAttachmentsListStatusType": {
            "type": "object",
            "description": "AWS VPC Attachment List Status Type",
            "title": "AWS VPC Attachment List Status Type",
            "x-displayname": "AWS VPC Attachment List Status Type",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.AWSAttachmentsListStatusType",
            "properties": {
                "attachment_status": {
                    "type": "array",
                    "description": " AWS Attachment Status Type",
                    "title": "AWS VPC Attachment Status Type",
                    "items": {
                        "$ref": "#/definitions/cloud_connectAWSAttachmentsStatusType"
                    },
                    "x-displayname": "AWS VPC Attachment Status"
                }
            }
        },
        "cloud_connectAWSAttachmentsStatusType": {
            "type": "object",
            "description": "AWS Attachment Status Type",
            "title": "AWS VPC Attachment Status Type",
            "x-displayname": "AWS Attachment Status Type",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.AWSAttachmentsStatusType",
            "properties": {
                "creation_time": {
                    "type": "string",
                    "description": " Attachment Creation Time",
                    "title": "Attachment Creation Time",
                    "format": "date-time",
                    "x-displayname": "Attachment Creation Time"
                },
                "deployment_status": {
                    "type": "string",
                    "description": " Attachment Deployment Status",
                    "title": "Attachment Deployment Status",
                    "x-displayname": "Attachment Deployment Status"
                },
                "installed_routes": {
                    "description": " Routes",
                    "title": "Routes",
                    "$ref": "#/definitions/cloud_connectAWSRouteTableListType",
                    "x-displayname": "Installed Routes"
                },
                "state": {
                    "type": "string",
                    "description": " Attachment State",
                    "title": "Attachment State",
                    "x-displayname": "Attachment State"
                },
                "subnets": {
                    "type": "array",
                    "description": " Network Interfaces created along with the attachment",
                    "title": "Subnets",
                    "items": {
                        "$ref": "#/definitions/cloud_connectSubnetStatusType"
                    },
                    "x-displayname": "Network Interfaces"
                },
                "tgw_attachment_id": {
                    "type": "string",
                    "description": " TGW Attachment ID",
                    "title": "TGW Attachment ID",
                    "x-displayname": "TGW Attachment ID"
                },
                "vpc_id": {
                    "type": "string",
                    "description": " VPC ID",
                    "title": "VPC ID",
                    "x-displayname": "VPC ID"
                },
                "vpc_owner_id": {
                    "type": "string",
                    "description": " VPC Owner Account",
                    "title": "VPC Owner Account",
                    "x-displayname": "VPC Owner Account"
                }
            }
        },
        "cloud_connectAWSRouteTableListType": {
            "type": "object",
            "description": "AWS Route Table List",
            "title": "AWS Route Table List",
            "x-displayname": "AWS Route Table List",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.AWSRouteTableListType",
            "properties": {
                "route_tables": {
                    "type": "array",
                    "description": " Route Tables\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 200\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of route tables",
                    "minItems": 1,
                    "maxItems": 200,
                    "items": {
                        "$ref": "#/definitions/cloud_connectAWSRouteTableType"
                    },
                    "x-displayname": "List of route tables",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "200",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "cloud_connectAWSRouteTableType": {
            "type": "object",
            "description": "AWS Route Table",
            "title": "AWS Route Table",
            "x-displayname": "AWS Route Table",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.AWSRouteTableType",
            "properties": {
                "route_table_id": {
                    "type": "string",
                    "description": " Route table ID\n\nExample: - \"rtb-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(rtb-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Route table ID",
                    "maxLength": 64,
                    "x-displayname": "Route table ID",
                    "x-ves-example": "rtb-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(rtb-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "static_routes": {
                    "type": "array",
                    "description": " List of Static Routes\n\nExample: - \"10.1.1.0/24\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ipv4_prefix: true\n  ves.io.schema.rules.repeated.max_items: 50\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "static_routes",
                    "minItems": 1,
                    "maxItems": 50,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Static Routes",
                    "x-ves-example": "10.1.1.0/24",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "50",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "cloud_connectSubnetStatusType": {
            "type": "object",
            "description": "Network Interface Status",
            "title": "SubnetStatusType for AWS VPC Attachment",
            "x-displayname": "Network Interface Status",
            "x-ves-proto-message": "ves.io.schema.cloud_connect.SubnetStatusType",
            "properties": {
                "availability_zone": {
                    "type": "string",
                    "description": "\n Availability Zone",
                    "title": "Availability Zone\nx-displayName: \"Availability Zone\"",
                    "x-displayname": "Availability Zone"
                },
                "interface_type": {
                    "type": "string",
                    "description": "\n Interface Type",
                    "title": "Interface Type\nx-displayName: \"Interface Type\"",
                    "x-displayname": "Interface Type"
                },
                "network_interface_id": {
                    "type": "string",
                    "description": " Network Interface ID",
                    "title": "Network Interface ID",
                    "x-displayname": "Network Interface ID"
                },
                "private_ipv4_address": {
                    "type": "string",
                    "description": "\n Private IPV4 Address",
                    "title": "Private IPV4 Address\nx-displayName: \"Private IPV4 Address\"",
                    "x-displayname": "Private IPV4 Address"
                },
                "status": {
                    "type": "string",
                    "description": "\n Status",
                    "title": "Status\nx-displayName: \"Status\"",
                    "x-displayname": "Status"
                },
                "subnet_id": {
                    "type": "string",
                    "description": "\n Subnet ID",
                    "title": "Subnet ID\nx-displayName: \"Subnet ID\"",
                    "x-displayname": "Subnet ID"
                }
            }
        },
        "fleetBlockedServices": {
            "type": "object",
            "description": "Blocked Services configured explicitly\nBy default all services are allowed and get blocked when config is updated",
            "title": "BlockedServices specifies the ports of platform services blocked explicitly",
            "x-displayname": "Blocked Services",
            "x-ves-oneof-field-blocked_services_value_type_choice": "[\"dns\",\"ssh\",\"web_user_interface\"]",
            "x-ves-proto-message": "ves.io.schema.fleet.BlockedServices",
            "properties": {
                "dns": {
                    "description": "Exclusive with [ssh web_user_interface]\n Matches DNS port 53",
                    "title": "DNS port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "DNS port"
                },
                "network_type": {
                    "description": " Network type in which these ports get blocked\n\nValidation Rules:\n  ves.io.schema.rules.enum.in: [0,1]\n",
                    "title": "network_type",
                    "$ref": "#/definitions/schemaVirtualNetworkType",
                    "x-displayname": "Network Type",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.in": "[0,1]"
                    }
                },
                "ssh": {
                    "description": "Exclusive with [dns web_user_interface]\n Matches ssh port 22",
                    "title": "SSH port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "SSH port"
                },
                "web_user_interface": {
                    "description": "Exclusive with [dns ssh]\n Matches the web user interface port",
                    "title": "Web UI port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Web UI port"
                }
            }
        },
        "fleetBlockedServicesListType": {
            "type": "object",
            "description": "List of all custom blocked services configuration",
            "title": "Custom Blocked Services Configuration List",
            "x-displayname": "Custom Blocked Services Configuration List",
            "x-ves-proto-message": "ves.io.schema.fleet.BlockedServicesListType",
            "properties": {
                "blocked_sevice": {
                    "type": "array",
                    "description": " Use custom blocked services configuration\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Custom Blocked Services Configuration",
                    "items": {
                        "$ref": "#/definitions/fleetBlockedServices"
                    },
                    "x-displayname": "Custom Blocked Services Configuration",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "ioschemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "ioschemaObjectRefType": {
            "type": "object",
            "description": "This type establishes a 'direct reference' from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name for public API and Uid for private API\nThis type of reference is called direct because the relation is explicit and concrete (as opposed\nto selector reference which builds a group based on labels of selectee objects)",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.ObjectRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then kind will hold the referred object's kind (e.g. \"route\")\n\nExample: - \"virtual_site\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "virtual_site"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then uid will hold the referred object's(e.g. route's) uid.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "network_firewallActiveNetworkPoliciesType": {
            "type": "object",
            "description": "List of firewall policy views.",
            "title": "Active Firewall Policies Type",
            "x-displayname": "Active Firewall Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveNetworkPoliciesType",
            "properties": {
                "network_policies": {
                    "type": "array",
                    "description": " Ordered List of Firewall Policies active for this network firewall\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Firewall Policy",
                    "minItems": 1,
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Firewall Policy",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "schemaBlindfoldSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Blindfold Secret\"\nBlindfoldSecretInfoType specifies information about the Secret managed by F5XC Secret Management",
            "title": "BlindfoldSecretInfoType",
            "properties": {
                "decryption_provider": {
                    "type": "string",
                    "description": "x-displayName: \"Decryption Provider\"\nx-example: \"value\"\nName of the Secret Management Access object that contains information about the backend Secret Management service.",
                    "title": "Decryption Provider"
                },
                "location": {
                    "type": "string",
                    "description": "x-displayName: \"Location\"\nx-required\nx-example: \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"\nLocation is the uri_ref. It could be in url format for string:///\nOr it could be a path if the store provider is an http/https location",
                    "title": "Location"
                },
                "store_provider": {
                    "type": "string",
                    "description": "x-displayName: \"Store Provider\"\nx-example: \"value\"\nName of the Secret Management Access object that contains information about the store to get encrypted bytes\nThis field needs to be provided only if the url scheme is not string:///",
                    "title": "Store Provider"
                }
            }
        },
        "schemaClearSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"In-Clear Secret\"\nClearSecretInfoType specifies information about the Secret that is not encrypted.",
            "title": "ClearSecretInfoType",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "x-displayName: \"Provider\"\nx-example: \"box-provider\"\nName of the Secret Management Access object that contains information about the store to get encrypted bytes\nThis field needs to be provided only if the url scheme is not string:///",
                    "title": "Provider"
                },
                "url": {
                    "type": "string",
                    "description": "x-displayName: \"URL\"\nx-required\nx-example: \"string:///U2VjcmV0SW5mb3JtYXRpb24=\"\nURL of the secret. Currently supported URL schemes is string:///.\nFor string:/// scheme, Secret needs to be encoded Base64 format.\nWhen asked for this secret, caller will get Secret bytes after Base64 decoding.",
                    "title": "URL"
                }
            }
        },
        "schemaConditionType": {
            "type": "object",
            "description": "Conditions are used in the object status to describe the current state of the\nobject, e.g. Ready, Succeeded, etc.",
            "title": "ConditionType",
            "x-displayname": "Status Condition",
            "x-ves-proto-message": "ves.io.schema.ConditionType",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": " Hostname of the instance of the site that sent the status",
                    "title": "hostname",
                    "x-displayname": "Hostname"
                },
                "last_update_time": {
                    "type": "string",
                    "description": " Last time the condition was updated",
                    "title": "last_update_time",
                    "format": "date-time",
                    "x-displayname": "Last Updated"
                },
                "reason": {
                    "type": "string",
                    "description": " x-reason: \"Insufficient memory in data plane\"\n A human readable string explaining the reason for reaching this condition\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "service_name": {
                    "type": "string",
                    "description": " Name of the service that sent the status",
                    "title": "service name",
                    "x-displayname": "Service Name"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the condition\n \"Success\" Validtion has succeded. Requested operation was successful.\n \"Failed\"  Validation has failed.\n \"Incomplete\" Validation of configuration has failed due to missing configuration.\n \"Installed\" Validation has passed and configuration has been installed in data path or K8s\n \"Down\" Configuration is operationally down. e.g. down interface\n \"Disabled\" Configuration is administratively disabled i.e. ObjectMetaType.Disable = true.\n \"NotApplicable\" Configuration is not applicable e.g. tenant service_policy_set(s) in system namespace are not applicable on REs\n\nExample: - \"Failed\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]\n",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "Failed",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Success\\\",\\\"Failed\\\",\\\"Incomplete\\\",\\\"Installed\\\",\\\"Down\\\",\\\"Disabled\\\",\\\"NotApplicable\\\"]"
                    }
                },
                "type": {
                    "type": "string",
                    "description": " Type of the condition\n \"Validation\" represents validation user given configuration object\n \"Operational\" represents operational status of a given configuration object\n\nExample: - \"Operational\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"Validation\\\",\\\"Operational\\\"]\n",
                    "title": "type",
                    "x-displayname": "Type",
                    "x-ves-example": "Operational",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"Validation\\\",\\\"Operational\\\"]"
                    }
                }
            }
        },
        "schemaDomainType": {
            "type": "object",
            "description": "x-displayName: \"Domains\"\nDomains names",
            "title": "Domains",
            "properties": {
                "exact_value": {
                    "type": "string",
                    "description": "x-displayName: \"Exact Value\"\nx-example: \"abc.zyz.com\"\nExact domain name.",
                    "title": "exact value"
                },
                "regex_value": {
                    "type": "string",
                    "description": "x-displayName: \"Regex Values of Domains\"\nx-example: \"([a-z]([-a-z0-9]*[a-z0-9])?)\\.com$'\"\nRegular Expression value for the domain name",
                    "title": "regex values of Domains"
                },
                "suffix_value": {
                    "type": "string",
                    "description": "x-displayName: \"Suffix Value\"\nx-example: \"xyz.com\"\nSuffix of domain name e.g \"xyz.com\" will match \"*.xyz.com\" and \"xyz.com\"",
                    "title": "suffix value"
                }
            }
        },
        "schemaErrorCode": {
            "type": "string",
            "description": "Union of all possible error-codes from system\n\n - EOK: No error\n - EPERMS: Permissions error\n - EBADINPUT: Input is not correct\n - ENOTFOUND: Not found\n - EEXISTS: Already exists\n - EUNKNOWN: Unknown/catchall error\n - ESERIALIZE: Error in serializing/de-serializing\n - EINTERNAL: Server error\n - EPARTIAL: Partial error",
            "title": "ErrorCode",
            "enum": [
                "EOK",
                "EPERMS",
                "EBADINPUT",
                "ENOTFOUND",
                "EEXISTS",
                "EUNKNOWN",
                "ESERIALIZE",
                "EINTERNAL",
                "EPARTIAL"
            ],
            "default": "EOK",
            "x-displayname": "Error Code",
            "x-ves-proto-enum": "ves.io.schema.ErrorCode"
        },
        "schemaErrorType": {
            "type": "object",
            "description": "Information about a error in API operation",
            "title": "ErrorType",
            "x-displayname": "Error Type",
            "x-ves-proto-message": "ves.io.schema.ErrorType",
            "properties": {
                "code": {
                    "description": " A simple general code by category",
                    "title": "code",
                    "$ref": "#/definitions/schemaErrorCode",
                    "x-displayname": "Code"
                },
                "error_obj": {
                    "description": " A structured error object for machine parsing",
                    "title": "error_obj",
                    "$ref": "#/definitions/protobufAny",
                    "x-displayname": "Error Object"
                },
                "message": {
                    "type": "string",
                    "description": " A human readable string of the error\n\nExample: - \"value\"-",
                    "title": "message",
                    "x-displayname": "Message",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaForwardProxyConfigType": {
            "type": "object",
            "description": "x-displayName: \"Forward Proxy Configuration\"\nFine tune forward proxy behavior\n\nFew configurations allowed are\n\n  White listed ports and ip prefixes:\n    Forward proxy does application protocol detection and server name(SNI) detection by peeking into\n    the traffic on the incoming downstream connection. Few protocols doesn't have client sending\n    the first data. In such cases, protocol and SNI detection fails. This configuration allows,\n    skipping protocol and SNI detection for whitelisted ip-prefix-list and ports\n  connection_timeout:\n    The timeout for new network connections to upstream server.\n  max_connect_attempts:\n    Maximum number of attempts made to make new network connection to upstream server.",
            "title": "ForwardProxyConfigType",
            "properties": {
                "connection_timeout": {
                    "type": "integer",
                    "description": "x-displayName: \"Connection Timeout\"\nx-example: \"4000\"\nThe timeout for new network connections to upstream server.\nThis is specified in milliseconds. The default value is 2000 (2 seconds)",
                    "title": "connection_timeout",
                    "format": "int64"
                },
                "max_connect_attempts": {
                    "type": "integer",
                    "description": "x-displayName: \"Number of connect attempts\"\nx-example: \"3\"\nSpecifies the allowed number of retries on connect failure to upstream server. Defaults to 1.",
                    "title": "max_connect_attempts",
                    "format": "int64"
                },
                "no_interception": {
                    "description": "x-displayName: \"No TLS Interception\"\nNo TLS interception is enabled for this network connector",
                    "title": "No TLS interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "tls_intercept": {
                    "description": "x-displayName: \"TLS Interception\"\nSpecify TLS interception configuration for the network connector",
                    "title": "TLS Interception",
                    "$ref": "#/definitions/schemaTlsInterceptionType"
                },
                "white_listed_ports": {
                    "type": "array",
                    "description": "x-displayName: \"TCP Ports to Skip Protocol Parsing\"\nx-example: \"[22, 9400]\"\nTraffic to these destination TCP ports is not subjected to protocol parsing\nExample \"tmate\" server port",
                    "title": "Port list",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "white_listed_prefixes": {
                    "type": "array",
                    "description": "x-displayName: \"IP Prefixes to Skip Protocol Parsing\"\nx-example: \"['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']\"\nTraffic to these destination ip prefixes is not subjected to protocol parsing\nExample \"tmate\" server ip",
                    "title": "IP prefix list",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemaHashAlgorithm": {
            "type": "string",
            "description": "x-displayName: \"Hash Algorithm\"\nSpecifies the Hash Algorithm to be used\n\n - INVALID_HASH_ALGORITHM: x-displayName: \"INVALID\"\nInvalid hash algorithm\n - SHA256: x-displayName: \"SHA256\"\nsha256 hash algorithm\n - SHA1: x-displayName: \"SHA1\"\nsha1 hash algorithm",
            "title": "HashAlgoritm",
            "enum": [
                "INVALID_HASH_ALGORITHM",
                "SHA256",
                "SHA1"
            ],
            "default": "INVALID_HASH_ALGORITHM"
        },
        "schemaHashAlgorithms": {
            "type": "object",
            "description": "x-displayName: \"Hash Algorithms\"\nSpecifies the hash algorithms to be used",
            "title": "HashAlgorithms",
            "properties": {
                "hash_algorithms": {
                    "type": "array",
                    "description": "x-displayName: \"Hash Algorithms\"\nx-required\nOrdered list of hash algorithms to be used.",
                    "title": "Hash Algorithms",
                    "items": {
                        "$ref": "#/definitions/schemaHashAlgorithm"
                    }
                }
            }
        },
        "schemaInitializerType": {
            "type": "object",
            "description": "Initializer is information about an initializer that has not yet completed.",
            "title": "InitializerType",
            "x-displayname": "Initializer",
            "x-ves-proto-message": "ves.io.schema.InitializerType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " name of the service that is responsible for initializing this object.",
                    "title": "name",
                    "x-displayname": "Name"
                }
            }
        },
        "schemaInitializersType": {
            "type": "object",
            "description": "Initializers tracks the progress of initialization of a configuration object",
            "title": "InitializersType",
            "x-displayname": "Initializers",
            "x-ves-proto-message": "ves.io.schema.InitializersType",
            "properties": {
                "pending": {
                    "type": "array",
                    "description": " Pending is a list of initializers that must execute in order before this object is initialized.\n When the last pending initializer is removed, and no failing result is set, the initializers\n struct will be set to nil and the object is considered as initialized and visible to all\n clients.",
                    "title": "pending",
                    "items": {
                        "$ref": "#/definitions/schemaInitializerType"
                    },
                    "x-displayname": "Pending"
                },
                "result": {
                    "description": " If result is set with the Failure field, the object will be persisted to storage and then deleted,\n ensuring that other clients can observe the deletion.",
                    "title": "result",
                    "$ref": "#/definitions/schemaStatusType",
                    "x-displayname": "Result"
                }
            }
        },
        "schemaIpAddressType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 address",
            "title": "IP Address",
            "x-displayname": "IP Address",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpAddressType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\n IPv4 Address",
                    "title": "IPv4 Address",
                    "$ref": "#/definitions/schemaIpv4AddressType",
                    "x-displayname": "IPv4 Address"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\n IPv6 Address",
                    "title": "IPv6 ADDRESS",
                    "$ref": "#/definitions/schemaIpv6AddressType",
                    "x-displayname": "IPv6 Address"
                }
            }
        },
        "schemaIpSubnetType": {
            "type": "object",
            "description": "IP Address used to specify an IPv4 or IPv6 subnet addresses",
            "title": "IP Subnet",
            "x-displayname": "IP Subnet",
            "x-ves-displayorder": "3",
            "x-ves-oneof-field-ver": "[\"ipv4\",\"ipv6\"]",
            "x-ves-proto-message": "ves.io.schema.IpSubnetType",
            "properties": {
                "ipv4": {
                    "description": "Exclusive with [ipv6]\n IPv4 Subnet Address",
                    "title": "IPv4 Subnet",
                    "$ref": "#/definitions/schemaIpv4SubnetType",
                    "x-displayname": "IPv4 Subnet"
                },
                "ipv6": {
                    "description": "Exclusive with [ipv4]\n IPv6 Subnet Address",
                    "title": "IPv6 Subnet",
                    "$ref": "#/definitions/schemaIpv6SubnetType",
                    "x-displayname": "IPv6 Subnet"
                }
            }
        },
        "schemaIpv4AddressType": {
            "type": "object",
            "description": "IPv4 Address in dot-decimal notation",
            "title": "IPv4 Address",
            "x-displayname": "IPv4 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv4AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv4 Address in string form with dot-decimal notation\n\nExample: - \"192.168.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "IPv4 Address",
                    "x-displayname": "IPv4 Address",
                    "x-ves-example": "192.168.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                }
            }
        },
        "schemaIpv4SubnetType": {
            "type": "object",
            "description": "IPv4 subnets specified as prefix and prefix-length. Prefix length must be \u003c= 32",
            "title": "IPv4 Subnet",
            "x-displayname": "IPv4 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv4SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix-length of the IPv4 subnet. Must be \u003c= 32\n\nExample: - \"24\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 32\n",
                    "title": "Prefix Length",
                    "format": "int64",
                    "x-displayname": "Prefix Length",
                    "x-ves-example": "24",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "32"
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv4 subnet in string form with dot-decimal notation\n\nExample: - \"192.168.1.0\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "192.168.1.0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                }
            }
        },
        "schemaIpv6AddressType": {
            "type": "object",
            "description": "IPv6 Address specified as hexadecimal numbers separated by ':'",
            "title": "IPv6 Address",
            "x-displayname": "IPv6 Address",
            "x-ves-proto-message": "ves.io.schema.Ipv6AddressType",
            "properties": {
                "addr": {
                    "type": "string",
                    "description": " IPv6 Address in form of string. IPv6 address must be specified as hexadecimal numbers separated by ':'\n The address can be compacted by suppressing zeros\n e.g. '2001:db8:0:0:0:0:2:1' becomes '2001:db8::2:1' or '2001:db8:0:0:0:2:0:0' becomes '2001:db8::2::'\n\nExample: - \"2001:db8:0:0:0:0:2:1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "IPv6 Address",
                    "x-displayname": "IPv6 Address",
                    "x-ves-example": "2001:db8:0:0:0:0:2:1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "schemaIpv6SubnetType": {
            "type": "object",
            "description": "IPv6 subnets specified as prefix and prefix-length. prefix-legnth must be \u003c= 128",
            "title": "IPv6 Subnet",
            "x-displayname": "IPv6 Subnet",
            "x-ves-proto-message": "ves.io.schema.Ipv6SubnetType",
            "properties": {
                "plen": {
                    "type": "integer",
                    "description": " Prefix length of the IPv6 subnet. Must be \u003c= 128\n\nExample: - \"38\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.lte: 128\n",
                    "title": "Prefix length",
                    "format": "int64",
                    "x-displayname": "Prefix Length",
                    "x-ves-example": "38",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.lte": "128"
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": " Prefix part of the IPv6 subnet given in form of string.\n IPv6 address must be specified as hexadecimal numbers separated by ':'\n e.g. \"2001:db8:0:0:0:2:0:0\"\n The address can be compacted by suppressing zeros\n e.g. \"2001:db8::2::\"\n\nExample: - \"2001:db8:0:0:0:0:2:0\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "Prefix",
                    "x-displayname": "Prefix",
                    "x-ves-example": "2001:db8:0:0:0:0:2:0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "schemaNextHopType": {
            "type": "object",
            "description": "Identifies the next-hop for a route",
            "title": "Nexthop",
            "x-displayname": "Nexthop",
            "x-ves-proto-message": "ves.io.schema.NextHopType",
            "properties": {
                "interface": {
                    "type": "array",
                    "description": " Nexthop is network interface when type is \"Network-Interface\"\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 1\n",
                    "title": "Network Interface",
                    "maxItems": 1,
                    "items": {
                        "$ref": "#/definitions/ioschemaObjectRefType"
                    },
                    "x-displayname": "Network Interface",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "1"
                    }
                },
                "nexthop_address": {
                    "description": " Nexthop address when type is \"Use-Configured\"",
                    "title": "Nexthop Address",
                    "$ref": "#/definitions/schemaIpAddressType",
                    "x-displayname": "Address"
                },
                "type": {
                    "description": " Identifies the type of next-hop",
                    "title": "Type",
                    "$ref": "#/definitions/schemaNextHopTypes",
                    "x-displayname": "Type"
                }
            }
        },
        "schemaNextHopTypes": {
            "type": "string",
            "description": "Defines types of next-hop\n\nUse default gateway on the local interface as gateway for route.\nAssumes there is only one local interface on the virtual network.\nUse the specified address as nexthop\nUse the network interface as nexthop\nDiscard nexthop, used when attr type is Advertise\nUsed in VoltADN private virtual network.",
            "title": "Nexthop Types",
            "enum": [
                "NEXT_HOP_DEFAULT_GATEWAY",
                "NEXT_HOP_USE_CONFIGURED",
                "NEXT_HOP_NETWORK_INTERFACE"
            ],
            "default": "NEXT_HOP_DEFAULT_GATEWAY",
            "x-displayname": "Nexthop Types",
            "x-ves-proto-enum": "ves.io.schema.NextHopTypes"
        },
        "schemaObjectCreateMetaType": {
            "type": "object",
            "description": "ObjectCreateMetaType is metadata that can be specified in Create request of an object.",
            "title": "ObjectCreateMetaType",
            "x-displayname": "Create Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectCreateMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectGetMetaType": {
            "type": "object",
            "description": "ObjectGetMetaType is metadata that can be specified in Get/Create response of an object.",
            "title": "ObjectGetMetaType",
            "x-displayname": "Get Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectGetMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotation",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable",
                    "x-ves-example": "true"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaObjectReplaceMetaType": {
            "type": "object",
            "description": "ObjectReplaceMetaType is metadata that can be specified in Replace request of an object.",
            "title": "ObjectReplaceMetaType",
            "x-displayname": "Replace Metadata",
            "x-ves-proto-message": "ves.io.schema.ObjectReplaceMetaType",
            "properties": {
                "annotations": {
                    "type": "object",
                    "description": " Annotations is an unstructured key value map stored with a resource that may be\n set by external tools to store and retrieve arbitrary metadata. They are not\n queryable and should be preserved when modifying objects.\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 64\n  ves.io.schema.rules.map.keys.string.min_len: 1\n  ves.io.schema.rules.map.values.string.max_len: 1024\n  ves.io.schema.rules.map.values.string.min_len: 1\n",
                    "title": "annotations",
                    "x-displayname": "Annotations",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "64",
                        "ves.io.schema.rules.map.keys.string.min_len": "1",
                        "ves.io.schema.rules.map.values.string.max_len": "1024",
                        "ves.io.schema.rules.map.values.string.min_len": "1"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Human readable description for the object\n\nExample: - \"Virtual Host for acmecorp website\"-",
                    "title": "description",
                    "x-displayname": "Description",
                    "x-ves-example": "Virtual Host for acmecorp website"
                },
                "disable": {
                    "type": "boolean",
                    "description": " A value of true will administratively disable the object\n\nExample: - \"true\"-",
                    "title": "disable",
                    "format": "boolean",
                    "x-displayname": "Disable"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the user. Values specified here will be used\n by selector expression\n\nExample: - \"value\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "value"
                },
                "name": {
                    "type": "string",
                    "description": " This is the name of configuration object. It has to be unique within the namespace.\n It can only be specified during create API and cannot be changed during replace API.\n The value of name has to follow DNS-1035 format.\n\nExample: - \"acmecorp-web\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "acmecorp-web",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " This defines the workspace within which each the configuration object is to be created.\n Must be a DNS_LABEL format. For a namespace object itself, namespace value will be \"\"\n\nExample: - \"staging\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "staging"
                }
            }
        },
        "schemaRouteAttrType": {
            "type": "string",
            "description": "Defines attributes associated with route\n\nIgnore attribute\nAdvertise route in all supported routing protocols\nAdd route into host OS - route in host OS will point to interface corresponding to the\nvirtual network. Host OS must have an interface in the virtual network.\nUse the route for forwarding decision - adds route into data plane\nmodules with configured next-hop\nMerge Route if they already exist",
            "title": "Route Attribute",
            "enum": [
                "ROUTE_ATTR_NO_OP",
                "ROUTE_ATTR_ADVERTISE",
                "ROUTE_ATTR_INSTALL_HOST",
                "ROUTE_ATTR_INSTALL_FORWARDING",
                "ROUTE_ATTR_MERGE_ONLY"
            ],
            "default": "ROUTE_ATTR_NO_OP",
            "x-displayname": "Route Attribute",
            "x-ves-proto-enum": "ves.io.schema.RouteAttrType"
        },
        "schemaSecretEncodingType": {
            "type": "string",
            "description": "x-displayName: \"Secret Encoding\"\nSecretEncodingType defines the encoding type of the secret before handled by the Secret Management Service.\n\n - EncodingNone: x-displayName: \"None\"\nNo Encoding\n - EncodingBase64: Base64\n\nx-displayName: \"Base64\"\nBase64 encoding",
            "title": "SecretEncodingType",
            "enum": [
                "EncodingNone",
                "EncodingBase64"
            ],
            "default": "EncodingNone"
        },
        "schemaSecretType": {
            "type": "object",
            "description": "x-displayName: \"Secret\"\nSecretType is used in an object to indicate a sensitive/confidential field",
            "title": "SecretType",
            "properties": {
                "blindfold_secret_info": {
                    "description": "x-displayName: \"Blindfold Secret\"\nBlindfold Secret is used for the secrets managed by F5XC Secret Management Service",
                    "title": "Blindfold Secret",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType"
                },
                "blindfold_secret_info_internal": {
                    "description": "x-displayName: \"Blindfold Secret Internal\"\nBlindfold Secret Internal is used for the putting re-encrypted blindfold secret",
                    "title": "Blindfold Secret Internal",
                    "$ref": "#/definitions/schemaBlindfoldSecretInfoType"
                },
                "clear_secret_info": {
                    "description": "x-displayName: \"Clear Secret\"\nClear Secret is used for the secrets that are not encrypted",
                    "title": "Clear Secret",
                    "$ref": "#/definitions/schemaClearSecretInfoType"
                },
                "secret_encoding_type": {
                    "description": "x-displayName: \"Secret Encoding\"\nThis field defines the encoding type of the secret BEFORE the secret is given to any Secret Management System.\nthis will be set if the secret is encoded and not plaintext BEFORE it is encrypted and put it in SecretType.\nNote - Do NOT set this field for Clear Secret with string:/// scheme.\ne.g. if a secret is base64 encoded and then put into vault.",
                    "title": "secret_encoding_type",
                    "$ref": "#/definitions/schemaSecretEncodingType"
                },
                "vault_secret_info": {
                    "description": "x-displayName: \"Vault Secret\"\nVault Secret is used for the secrets managed by Hashicorp Vault",
                    "title": "Vault Secret",
                    "$ref": "#/definitions/schemaVaultSecretInfoType"
                },
                "wingman_secret_info": {
                    "description": "x-displayName: \"Bootstrap Secret\"\nSecret is given as bootstrap secret in F5XC Security Sidecar",
                    "title": "Wingman Secret",
                    "$ref": "#/definitions/schemaWingmanSecretInfoType"
                }
            }
        },
        "schemaStaticRouteType": {
            "type": "object",
            "description": "Defines a static route, configuring a list of prefixes and a next-hop to be used for them",
            "title": "Static Route",
            "x-displayname": "Static Route",
            "x-ves-displayorder": "2,10,11,1",
            "x-ves-proto-message": "ves.io.schema.StaticRouteType",
            "properties": {
                "attrs": {
                    "type": "array",
                    "description": " List of route attributes associated with the static route\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 4\n",
                    "title": "Attributes",
                    "maxItems": 4,
                    "items": {
                        "$ref": "#/definitions/schemaRouteAttrType"
                    },
                    "x-displayname": "Attributes",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "4"
                    }
                },
                "labels": {
                    "type": "object",
                    "description": " Add Labels for this Static Route, these labels can be used in network policy\n\nExample: - \"value\"-",
                    "title": "Static Route labels",
                    "x-displayname": "Static Route Labels",
                    "x-ves-example": "value"
                },
                "nexthop": {
                    "description": " Nexthop for the route",
                    "title": "Nexthop",
                    "$ref": "#/definitions/schemaNextHopType",
                    "x-displayname": "Nexthop"
                },
                "subnets": {
                    "type": "array",
                    "description": " List of route prefixes\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 256\n",
                    "title": "Subnets",
                    "maxItems": 256,
                    "items": {
                        "$ref": "#/definitions/schemaIpSubnetType"
                    },
                    "x-displayname": "Subnets",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "256"
                    }
                }
            }
        },
        "schemaStatusMetaType": {
            "type": "object",
            "description": "StatusMetaType is metadata that all status must have.",
            "title": "StatusMetaType",
            "x-displayname": "Metadata",
            "x-ves-proto-message": "ves.io.schema.StatusMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp is when the status object was created. It is used to find/tie-break\n for latest status object from same origin",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " Class of creator which created this StatusObject. This will be service's DNS FQDN.\n This will be set by the system based on client certificate information.\n\nExample: - \"ver.re1.int.ves.io\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "ver.re1.int.ves.io"
                },
                "creator_id": {
                    "type": "string",
                    "description": " ID of creator which created this StatusObject. This will be a concrete identifier for service (e.g.\n identifying the environment also). This will be set by the system based on client certificate\n information\n\nExample: - \"ver-instance-1\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "ver-instance-1"
                },
                "publish": {
                    "description": " Decides wether this status object will be propagated to user.",
                    "title": "publish",
                    "$ref": "#/definitions/schemaStatusPublishType",
                    "x-displayname": "Publish"
                },
                "status_id": {
                    "type": "string",
                    "description": " status_id is a field used by the generator to distinguish (if necessary) between two status\n objects for the same config object from the same site and same service and potentially same\n daemon(creator-id)",
                    "title": "status_id",
                    "x-displayname": "Status ID"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for a StatusObject.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                },
                "vtrp_id": {
                    "type": "string",
                    "description": " Origin of this status exchanged by VTRP.",
                    "title": "vtrp_id",
                    "x-displayname": "VTRP ID"
                },
                "vtrp_stale": {
                    "type": "boolean",
                    "description": " Indicate whether mars deems this object to be stale via graceful restart timer information",
                    "title": "vtrp_stale",
                    "format": "boolean",
                    "x-displayname": "VTRP Stale"
                }
            }
        },
        "schemaStatusPublishType": {
            "type": "string",
            "description": "StatusPublishType is all possible publish operations on a StatusObject\n\n - STATUS_DO_NOT_PUBLISH: Do Not Publish\n\nDo not propagate this status to user. This could be because status is only informational\n - STATUS_PUBLISH: Publish\n\nPropagate this status up to user as it might be actionable",
            "title": "StatusPublishType",
            "enum": [
                "STATUS_DO_NOT_PUBLISH",
                "STATUS_PUBLISH"
            ],
            "default": "STATUS_DO_NOT_PUBLISH",
            "x-displayname": "Status Publish Type",
            "x-ves-proto-enum": "ves.io.schema.StatusPublishType"
        },
        "schemaStatusType": {
            "type": "object",
            "description": "Status is a return value for calls that don't return other objects.",
            "title": "StatusType",
            "x-displayname": "Status",
            "x-ves-proto-message": "ves.io.schema.StatusType",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": " Suggested HTTP return code for this status, 0 if not set.\n\nExample: - \"0\"-",
                    "title": "code",
                    "format": "int32",
                    "x-displayname": "Code",
                    "x-ves-example": "0"
                },
                "reason": {
                    "type": "string",
                    "description": " A human-readable description of why this operation is in the\n \"Failure\" status. If this value is empty there\n is no information available.\n\nExample: - \"value\"-",
                    "title": "reason",
                    "x-displayname": "Reason",
                    "x-ves-example": "value"
                },
                "status": {
                    "type": "string",
                    "description": " Status of the operation.\n One of: \"Success\" or \"Failure\".\n\nExample: - \"value\"-",
                    "title": "status",
                    "x-displayname": "Status",
                    "x-ves-example": "value"
                }
            }
        },
        "schemaSystemObjectGetMetaType": {
            "type": "object",
            "description": "SystemObjectGetMetaType is metadata generated or populated by the system for all persisted objects and\ncannot be updated directly by users.",
            "title": "SystemObjectGetMetaType",
            "x-displayname": "System Metadata",
            "x-ves-proto-message": "ves.io.schema.SystemObjectGetMetaType",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " CreationTimestamp is a timestamp representing the server time when this object was\n created. It is not guaranteed to be set in happens-before order across separate operations.\n Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "creator_class": {
                    "type": "string",
                    "description": " A value identifying the class of the user or service which created this configuration object.\n\nExample: - \"value\"-",
                    "title": "creator_class",
                    "x-displayname": "Creator Class",
                    "x-ves-example": "prism"
                },
                "creator_id": {
                    "type": "string",
                    "description": " A value identifying the exact user or service that created this configuration object\n\nExample: - \"value\"-",
                    "title": "creator_id",
                    "x-displayname": "Creator ID",
                    "x-ves-example": "admin@acmecorp.com"
                },
                "deletion_timestamp": {
                    "type": "string",
                    "description": " DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\n field is set by the server when a graceful deletion is requested by the user, and is not\n directly settable by a client. The resource is expected to be deleted (no longer visible\n from resource lists, and not reachable by name) after the time in this field, once the\n finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\n Once the deletionTimestamp is set, this value may not be unset or be set further into the\n future, although it may be shortened or the resource may be deleted prior to this time.\n For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\n by sending a graceful termination signal to the containers in the pod. After that 30 seconds,\n the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\n remove the pod from the API. In the presence of network partitions, this object may still\n exist after this timestamp, until an administrator or automated process can determine the\n resource is fully terminated.\n If not set, graceful deletion of the object has not been requested.\n\n Populated by the system when a graceful deletion is requested.\n Read-only.",
                    "title": "deletion_timestamp",
                    "format": "date-time",
                    "x-displayname": "Deletion Timestamp"
                },
                "finalizers": {
                    "type": "array",
                    "description": " Must be empty before the object is deleted from the registry. Each entry\n is an identifier for the responsible component that will remove the entry\n from the list. If the deletionTimestamp of the object is non-nil, entries\n in this list can only be removed.\n\nExample: - \"value\"-",
                    "title": "finalizers",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Finalizers",
                    "x-ves-example": "value"
                },
                "initializers": {
                    "description": " An initializer is a controller which enforces some system invariant at object creation time.\n This field is a list of initializers that have not yet acted on this object. If nil or empty,\n this object has been completely initialized. Otherwise, the object is considered uninitialized\n and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\n observe uninitialized objects.\n\n When an object is created, the system will populate this list with the current set of initializers.\n Only privileged users may set or modify this list. Once it is empty, it may not be modified further\n by any user.",
                    "title": "initializers",
                    "$ref": "#/definitions/schemaInitializersType",
                    "x-displayname": "Initializers"
                },
                "labels": {
                    "type": "object",
                    "description": " Map of string keys and values that can be used to organize and categorize\n (scope and select) objects as chosen by the operator or software. Values here can be interpreted\n by software(backend or frontend) to enable certain behavior e.g. things marked as soft-deleted(restorable).\n\nExample: - \"'ves.io/soft-deleted''true'\"-",
                    "title": "labels",
                    "x-displayname": "Labels",
                    "x-ves-example": "'ves.io/soft-deleted': 'true'"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this object was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "object_index": {
                    "type": "integer",
                    "description": " Unique index for the object. Some objects need a unique integer index to be allocated\n for each object type. This field will be populated for all objects that need it and will\n be zero otherwise.\n\nExample: - \"0\"-",
                    "title": "object_index",
                    "format": "int64",
                    "x-displayname": "Object Index",
                    "x-ves-example": "0"
                },
                "owner_view": {
                    "description": " Reference to the view object that owns this object.\n If there is no view owner, this field will be nil.\n If not nil, this object can only be edited/deleted through the view",
                    "title": "owner_view",
                    "$ref": "#/definitions/schemaViewRefType",
                    "x-displayname": "Owner View"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this configuration object belongs to. The value for this is found from\n presented credentials.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "uid": {
                    "type": "string",
                    "description": " uid is the unique in time and space value for this object. It is generated by\n the server on successful creation of an object and is not allowed to change on Replace\n API. The value of is taken from uid field of ObjectMetaType, if provided.\n\nExample: - \"d15f1fad-4d37-48c0-8706-df1824d76d31\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "d15f1fad-4d37-48c0-8706-df1824d76d31"
                }
            }
        },
        "schemaTlsCertificateType": {
            "type": "object",
            "description": "x-displayName: \"TLS Certificate\"\nHandle to fetch certificate and key",
            "title": "TlsCertificateType",
            "properties": {
                "certificate_url": {
                    "type": "string",
                    "description": "x-displayName: \"Certificate\"\nx-example: \"value\"\nx-required\nTLS certificate.\nCertificate or certificate chain in PEM format including the PEM headers.",
                    "title": "certificate_url"
                },
                "custom_hash_algorithms": {
                    "description": "x-displayName: \"Use hash algorithms in custom order\"\nUse hash algorithms in the custom order. F5XC will try to fetch ocsp response from the CA in the given order. Additionally, LoadBalancer will not become active until ocspResponse cannot be fetched if the certificate has MustStaple extension set.",
                    "title": "Use Custom Order for Hash Algorithms",
                    "$ref": "#/definitions/schemaHashAlgorithms"
                },
                "description": {
                    "type": "string",
                    "description": "x-displayName: \"Description\"\nx-example: \"Certificate used in production environment\"\nDescription for the certificate",
                    "title": "description"
                },
                "disable_ocsp_stapling": {
                    "description": "x-displayName: \"Disable OCSP Stapling\"\nDisable OCSP Stapling. F5XC will not fetch and staple OCSP Response for this certificate.\nThis is the default behavior if no choice is selected.",
                    "title": "Disable OCSP Stapling",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "private_key": {
                    "description": "x-displayName: \"Private Key\"\nx-required\nTLS Private Key data in unencrypted PEM format including the PEM headers. The data may be optionally secured using BlindFold. TLS key has to match the accompanying certificate.",
                    "title": "private_key",
                    "$ref": "#/definitions/schemaSecretType"
                },
                "use_system_defaults": {
                    "description": "x-displayName: \"Fetch with F5XC default settings\"\nUse F5XC Default Settings to fetch and staple OCSP Response.\nOCSP Response will be stapled if it can be fetched. Additionally, LoadBalancer will not become active until ocspResponse cannot be fetched if the certificate has MustStaple extension set.\nF5XC will try to fetch OCSPResponse with sha256 and sha1 as HashAlgorithm, in that order.",
                    "title": "Fetch with F5XC default settings",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "schemaTlsInterceptionPolicy": {
            "type": "object",
            "description": "x-displayName: \"TLS Interception Policy\"\nPolicy to enable or disable TLS interception.",
            "title": "TlsInterceptionPolicy",
            "properties": {
                "interception_rules": {
                    "type": "array",
                    "description": "x-displayName: \"TLS Interception Rules\"\nx-required\nList of ordered rules to enable or disable for TLS interception",
                    "title": "Interception Rules",
                    "items": {
                        "$ref": "#/definitions/schemaTlsInterceptionRule"
                    }
                }
            }
        },
        "schemaTlsInterceptionRule": {
            "type": "object",
            "description": "x-displayName: \"TLS Interception Rule\"\nx-required\nRule to enable or disable TLS interception based on domain match",
            "title": "TlsInterceptionRule",
            "properties": {
                "disable_interception": {
                    "description": "x-displayName: \"Disable Interception\"\nDisable Interception",
                    "title": "Disable Interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "domain_match": {
                    "description": "x-displayName: \"Match Domain\"\nx-required\nDomain value or regular expression to match",
                    "title": "Domain Match",
                    "$ref": "#/definitions/schemaDomainType"
                },
                "enable_interception": {
                    "description": "x-displayName: \"Enable Interception\"\nEnable Interception",
                    "title": "Enable Interception",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "schemaTlsInterceptionType": {
            "type": "object",
            "description": "x-displayName: \"Configuration for TLS interception\"\nConfiguration to enable TLS interception",
            "title": "TlsInterceptionType",
            "properties": {
                "custom_certificate": {
                    "description": "x-displayName: \"Custom Signing Certificate\"\nCertificates for generating intermediate certificate for TLS interception.",
                    "title": "Custom Signing Certificate",
                    "$ref": "#/definitions/schemaTlsCertificateType"
                },
                "enable_for_all_domains": {
                    "description": "x-displayName: \"Enable For All Domains\"\nEnable interception for all domains",
                    "title": "Enable For All Domains",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "policy": {
                    "description": "x-displayName: \"Enable/Disable for Specific Domains\"\nPolicy to enable/disable specific domains, with implicit enable all domains",
                    "title": "Policy for specific domains",
                    "$ref": "#/definitions/schemaTlsInterceptionPolicy"
                },
                "trusted_ca_url": {
                    "type": "string",
                    "description": "x-displayName: \"Custom Root CA Certificate\"\nCustom Root CA Certificate for validating upstream server certificate",
                    "title": "Custom Root CA Certificate"
                },
                "volterra_certificate": {
                    "description": "x-displayName: \"F5XC Signing Certificate\"\nF5XC certificates for generating intermediate certificate for TLS interception.",
                    "title": "F5XC Signing Certificate",
                    "$ref": "#/definitions/ioschemaEmpty"
                },
                "volterra_trusted_ca": {
                    "description": "x-displayName: \"F5XC Default Root CA Certificate\"\nF5XC Root CA Certificate for validating upstream server certificate",
                    "title": "F5XC List",
                    "$ref": "#/definitions/ioschemaEmpty"
                }
            }
        },
        "schemaVaultSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Vault Secret\"\nVaultSecretInfoType specifies information about the Secret managed by Hashicorp Vault.",
            "title": "VaultSecretInfoType",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "x-displayName: \"Key\"\nx-example: \"key_pem\"\nKey of the individual secret. Vault Secrets are stored as key-value pair.\nIf user is only interested in one value from the map, this field should be set to the corresponding key.\nIf not provided entire secret will be returned.",
                    "title": "Key"
                },
                "location": {
                    "type": "string",
                    "description": "x-displayName: \"Location\"\nx-required\nx-example: \"v1/data/vhost_key\"\nPath to secret in Vault.",
                    "title": "Location"
                },
                "provider": {
                    "type": "string",
                    "description": "x-displayName: \"Provider\"\nx-required\nx-example: \"vault-vh-provider\"\nName of the Secret Management Access object that contains information about the backend Vault.",
                    "title": "Provider"
                },
                "secret_encoding": {
                    "description": "x-displayName: \"Secret Encoding\"\nThis field defines the encoding type of the secret BEFORE the secret is put into Hashicorp Vault.",
                    "title": "secret_encoding",
                    "$ref": "#/definitions/schemaSecretEncodingType"
                },
                "version": {
                    "type": "integer",
                    "description": "x-displayName: \"Version\"\nx-example: \"1\"\nVersion of the secret to be fetched. As vault secrets are versioned, user can specify this field to fetch specific version.\nIf not provided latest version will be returned.",
                    "title": "Version",
                    "format": "int64"
                }
            }
        },
        "schemaViewRefType": {
            "type": "object",
            "description": "ViewRefType represents a reference to a view",
            "title": "ViewRefType",
            "x-displayname": "View Reference",
            "x-ves-proto-message": "ves.io.schema.ViewRefType",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": " Kind of the view object\n\nExample: - \"http_proxy\"-",
                    "title": "kind",
                    "x-displayname": "Kind",
                    "x-ves-example": "http_proxy"
                },
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contactus-route\"-",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-example": "contactus-route"
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1"
                },
                "uid": {
                    "type": "string",
                    "description": " UID of the view object\n\nExample: - \"f3744323-1adf-4aaa-a5dc-0707c1d1bd82\"-",
                    "title": "uid",
                    "x-displayname": "UID",
                    "x-ves-example": "f3744323-1adf-4aaa-a5dc-0707c1d1bd82"
                }
            }
        },
        "schemaVirtualNetworkType": {
            "type": "string",
            "description": "Different types of virtual networks understood by the system\n\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL provides connectivity to public (outside) network.\nThis is an insecure network and is connected to public internet via NAT Gateways/firwalls\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created automatically and present on all sites\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE is a private network inside site.\nIt is a secure network and is not connected to public network.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different\nsites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on CE sites. This network is created during provisioning of site\nUser defined per-site virtual network. Scope of this virtual network is limited to the site.\nThis is not yet supported\nVirtual-network of type VIRTUAL_NETWORK_PUBLIC directly conects to the public internet.\nVirtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected.\n\nConstraints:\nThere can be atmost one virtual network of this type in a given site.\nThis network type is supported on RE sites only\nIt is an internally created by the system. They must not be created by user\nVirtual Neworks with global scope across different sites in F5XC domain.\nAn example global virtual-network called \"AIN Network\" is created for every tenant.\nfor volterra fabric\n\nConstraints:\nIt is currently only supported as internally created by the system.\nvK8s service network for a given tenant. Used to advertise a virtual host only to vk8s pods for that tenant\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVER internal network for the site. It can only be used for virtual hosts with SMA_PROXY type proxy\nConstraints:\nIt is an internally created by the system. Must not be created by user\nVirtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE represents both\nVIRTUAL_NETWORK_SITE_LOCAL and VIRTUAL_NETWORK_SITE_LOCAL_INSIDE\n\nConstraints:\nThis network type is only meaningful in an advertise policy\nWhen virtual-network of type VIRTUAL_NETWORK_IP_AUTO is selected for\nan endpoint, VER will try to determine the network based on the provided\nIP address\n\nConstraints:\nThis network type is only meaningful in an endpoint\n\nVoltADN Private Network is used on volterra RE(s) to connect to customer private networks\nThis network is created by opening a support ticket\n\nThis network is per site srv6 network\nVER IP Fabric network for the site.\nThis Virtual network type is used for exposing virtual host on IP Fabric network on the VER site or\nfor endpoint in IP Fabric network\nConstraints:\nIt is an internally created by the system. Must not be created by user\nNetwork internally created for a segment\nConstraints:\nIt is an internally created by the system. Must not be created by user",
            "title": "VirtualNetworkType",
            "enum": [
                "VIRTUAL_NETWORK_SITE_LOCAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE",
                "VIRTUAL_NETWORK_PER_SITE",
                "VIRTUAL_NETWORK_PUBLIC",
                "VIRTUAL_NETWORK_GLOBAL",
                "VIRTUAL_NETWORK_SITE_SERVICE",
                "VIRTUAL_NETWORK_VER_INTERNAL",
                "VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE",
                "VIRTUAL_NETWORK_IP_AUTO",
                "VIRTUAL_NETWORK_VOLTADN_PRIVATE_NETWORK",
                "VIRTUAL_NETWORK_SRV6_NETWORK",
                "VIRTUAL_NETWORK_IP_FABRIC",
                "VIRTUAL_NETWORK_SEGMENT"
            ],
            "default": "VIRTUAL_NETWORK_SITE_LOCAL",
            "x-displayname": "Virtual Network Type",
            "x-ves-proto-enum": "ves.io.schema.VirtualNetworkType"
        },
        "schemaWingmanSecretInfoType": {
            "type": "object",
            "description": "x-displayName: \"Wingman Secret\"\nWingmanSecretInfoType specifies the handle to the wingman secret",
            "title": "WingmanSecretInfoType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "x-displayName: \"Name\"\nx-required\nx-example: \"ChargeBack-API-Key\"\nName of the secret.",
                    "title": "Name"
                }
            }
        },
        "schemanetwork_firewallActiveEnhancedFirewallPoliciesType": {
            "type": "object",
            "description": "List of Enhanced Firewall Policies\nThese policies use session-based rules and provide all options available under firewall policies\nwith an additional option for service insertion.",
            "title": "Active Enhanced Firewall Policies Type",
            "x-displayname": "Active Enhanced Network Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveEnhancedFirewallPoliciesType",
            "properties": {
                "enhanced_firewall_policies": {
                    "type": "array",
                    "description": " Ordered List of Enhaned Firewall Policy active for this network firewall\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Enhanced Firewall Policy",
                    "minItems": 1,
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Enhanced Firewall Policy",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "schemanetwork_firewallActiveForwardProxyPoliciesType": {
            "type": "object",
            "description": "List of Forward Proxy Policies",
            "title": "Active Forward Proxy Policies Type",
            "x-displayname": "Active Forward Proxy Policies Type",
            "x-ves-proto-message": "ves.io.schema.network_firewall.ActiveForwardProxyPoliciesType",
            "properties": {
                "forward_proxy_policies": {
                    "type": "array",
                    "description": " List of Forward Proxy Policies\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 128\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Forward Proxy Policies",
                    "minItems": 1,
                    "maxItems": 128,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Forward Proxy Policies",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "128",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "schemaviewsObjectRefType": {
            "type": "object",
            "description": "This type establishes a direct reference from one object(the referrer) to another(the referred).\nSuch a reference is in form of tenant/namespace/name",
            "title": "ObjectRefType",
            "x-displayname": "Object reference",
            "x-ves-proto-message": "ves.io.schema.views.ObjectRefType",
            "properties": {
                "name": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then name will hold the referred object's(e.g. route's) name.\n\nExample: - \"contacts-route\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 128\n  ves.io.schema.rules.string.min_bytes: 1\n",
                    "title": "name",
                    "minLength": 1,
                    "maxLength": 128,
                    "x-displayname": "Name",
                    "x-ves-example": "contacts-route",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "128",
                        "ves.io.schema.rules.string.min_bytes": "1"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then namespace will hold the referred object's(e.g. route's) namespace.\n\nExample: - \"ns1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "namespace",
                    "maxLength": 64,
                    "x-displayname": "Namespace",
                    "x-ves-example": "ns1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                },
                "tenant": {
                    "type": "string",
                    "description": " When a configuration object(e.g. virtual_host) refers to another(e.g route)\n then tenant will hold the referred object's(e.g. route's) tenant.\n\nExample: - \"acmecorp\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "tenant",
                    "maxLength": 64,
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                }
            }
        },
        "siteCoordinates": {
            "type": "object",
            "description": "Coordinates of the site which provides the site physical location",
            "title": "Site Coordinates",
            "x-displayname": "Site Coordinates",
            "x-ves-proto-message": "ves.io.schema.site.Coordinates",
            "properties": {
                "latitude": {
                    "type": "number",
                    "description": " Latitude of the site location\n\nExample: - \"10.0\"-\n\nValidation Rules:\n  ves.io.schema.rules.float.gte: -90.0\n  ves.io.schema.rules.float.lte: 90.0\n",
                    "title": "latitude",
                    "format": "float",
                    "x-displayname": "Latitude",
                    "x-ves-example": "10.0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.float.gte": "-90.0",
                        "ves.io.schema.rules.float.lte": "90.0"
                    }
                },
                "longitude": {
                    "type": "number",
                    "description": " longitude of site location\n\nExample: - \"20.0\"-\n\nValidation Rules:\n  ves.io.schema.rules.float.gte: -180.0\n  ves.io.schema.rules.float.lte: 180.0\n",
                    "title": "longitude",
                    "format": "float",
                    "x-displayname": "Longitude",
                    "x-ves-example": "20.0",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.float.gte": "-180.0",
                        "ves.io.schema.rules.float.lte": "180.0"
                    }
                }
            }
        },
        "sitePublishVIPParamsPerAz": {
            "type": "object",
            "description": "Per AZ parameters needed to publish VIP for public cloud sites",
            "title": "Publish VIP Params Per AZ",
            "x-displayname": "Publish VIP Params Per AZ",
            "x-ves-proto-message": "ves.io.schema.site.PublishVIPParamsPerAz",
            "properties": {
                "az_name": {
                    "type": "string",
                    "description": " Name of the Availability zone\n\nExample: - \"us-east-2a\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.pattern: ^[1-5]{1}$|^AzureAlternateRegion$|^[a-z]{2}-[a-z0-9]{4,20}-[a-z0-9]{2}$|^[a-z]{4,15}-[a-z0-9]{4,20}-[a-z]{1}$\n",
                    "title": "AZ Name",
                    "x-displayname": "AZ Name",
                    "x-ves-example": "us-east-2a",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.pattern": "^[1-5]{1}$|^AzureAlternateRegion$|^[a-z]{2}-[a-z0-9]{4,20}-[a-z0-9]{2}$|^[a-z]{4,15}-[a-z0-9]{4,20}-[a-z]{1}$"
                    }
                },
                "inside_vip": {
                    "type": "array",
                    "description": " List of Inside VIPs for an AZ\n\nExample: - \"192.168.0.156\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv4: true\n  ves.io.schema.rules.repeated.max_items: 3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Inside VIP(s)",
                    "maxItems": 3,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Inside VIP(s)",
                    "x-ves-example": "192.168.0.156",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv4": "true",
                        "ves.io.schema.rules.repeated.max_items": "3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "inside_vip_cname": {
                    "type": "string",
                    "description": " CNAME value for the inside VIP,\n These are usually public cloud generated CNAME\n\nExample: - \"test.56670-387196482.useast2.ves.io\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Inside VIP CNAME",
                    "maxLength": 256,
                    "x-displayname": "Inside VIP CNAME",
                    "x-ves-example": "test.56670-387196482.useast2.ves.io",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "inside_vip_v6": {
                    "type": "array",
                    "description": " Optional list of Inside IPv6 VIPs for an AZ\n\nExample: - \"2001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv6: true\n  ves.io.schema.rules.repeated.max_items: 3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Inside IPv6 VIP(s)",
                    "maxItems": 3,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Inside IPv6 VIP(s)",
                    "x-ves-example": "2001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv6": "true",
                        "ves.io.schema.rules.repeated.max_items": "3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "outside_vip": {
                    "type": "array",
                    "description": " List of Outside VIPs for an AZ\n\nExample: - \"192.168.0.156\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.items.string.ipv4: true\n  ves.io.schema.rules.repeated.max_items: 3\n  ves.io.schema.rules.repeated.min_items: 1\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Outside VIP(s)",
                    "minItems": 1,
                    "maxItems": 3,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Outside VIP(s)",
                    "x-ves-example": "192.168.0.156",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.items.string.ipv4": "true",
                        "ves.io.schema.rules.repeated.max_items": "3",
                        "ves.io.schema.rules.repeated.min_items": "1",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "outside_vip_cname": {
                    "type": "string",
                    "description": " CNAME value for the outside VIP\n These are usually public cloud generated CNAME\n\nExample: - \"test.56670-387196482.useast2.ves.io\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n",
                    "title": "Outside VIP CNAME",
                    "maxLength": 256,
                    "x-displayname": "Outside VIP CNAME",
                    "x-ves-example": "test.56670-387196482.useast2.ves.io",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256"
                    }
                },
                "outside_vip_v6": {
                    "type": "array",
                    "description": " Optional list of Outside IPv6 VIPs for an AZ\n\nExample: - \"2001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv6: true\n  ves.io.schema.rules.repeated.max_items: 3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Outside IPv6 VIP(s)",
                    "maxItems": 3,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Outside IPv6 VIP(s)",
                    "x-ves-example": "2001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv6": "true",
                        "ves.io.schema.rules.repeated.max_items": "3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "siteSiteState": {
            "type": "string",
            "description": "State of Site defines in which operational state site itself is.\n\nSite is online and operational.\nSite is in provisioning state. For instance during site deployment or switching to different connected Regional Edge.\nSite is in process of upgrade. It transition to ONLINE or FAILED state.\nSite is in Standby before goes to ONLINE. This is mainly for Regional Edge sites to do their verification before they go to ONLINE state.\nSite is in failed state. It failed during provisioning or upgrade phase. Site Status Objects contain more details.\nReregistration was requested\nReregistration is in progress and maurice is waiting for nodes\nSite deletion is in progress\nSite is waiting for registration",
            "title": "SiteState",
            "enum": [
                "ONLINE",
                "PROVISIONING",
                "UPGRADING",
                "STANDBY",
                "FAILED",
                "REREGISTRATION",
                "WAITINGNODES",
                "DECOMMISSIONING",
                "WAITING_FOR_REGISTRATION"
            ],
            "default": "ONLINE",
            "x-displayname": "Site State",
            "x-ves-proto-enum": "ves.io.schema.site.SiteState"
        },
        "terraform_parametersApplyStageState": {
            "type": "string",
            "title": "- APPLIED: x-displayName: \"Applied\"\n - APPLY_ERRORED: x-displayName: \"Apply errored\"\n - APPLY_INIT_ERRORED: x-displayName: \"Apply init errored\"\n - APPLYING: x-displayName: \"Applying\"\n - APPLY_PLANNING: x-displayName: \"Apply planning\"\n - APPLY_PLAN_ERRORED: x-displayName: \"Apply plan errored\"\n - APPLY_QUEUED: x-displayName: \"Apply queued\"",
            "enum": [
                "APPLIED",
                "APPLY_ERRORED",
                "APPLY_INIT_ERRORED",
                "APPLYING",
                "APPLY_PLANNING",
                "APPLY_PLAN_ERRORED",
                "APPLY_QUEUED"
            ],
            "default": "APPLIED",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.terraform_parameters.ApplyStageState"
        },
        "terraform_parametersApplyStatus": {
            "type": "object",
            "x-ves-oneof-field-state": "[\"apply_state\",\"destroy_state\",\"infra_state\"]",
            "x-ves-proto-message": "ves.io.schema.views.terraform_parameters.ApplyStatus",
            "properties": {
                "apply_state": {
                    "description": "Exclusive with [destroy_state infra_state]\n Terraform state during apply stage",
                    "title": "apply_state",
                    "$ref": "#/definitions/terraform_parametersApplyStageState",
                    "x-displayname": "Apply State"
                },
                "container_version": {
                    "type": "string",
                    "description": " Container image version",
                    "title": "container_version",
                    "x-displayname": "Container image version"
                },
                "destroy_state": {
                    "description": "Exclusive with [apply_state infra_state]\n Terraform state during destroy stage",
                    "title": "destroy_state",
                    "$ref": "#/definitions/terraform_parametersDestroyStageState",
                    "x-displayname": "Destroy State"
                },
                "error_output": {
                    "type": "string",
                    "description": " Error output of terraform run\n\nExample: - \"value\"-",
                    "title": "error_output",
                    "x-displayname": "Error Output",
                    "x-ves-example": "value"
                },
                "infra_state": {
                    "description": "Exclusive with [apply_state destroy_state]\n Infrastructure state of the view provisioning",
                    "title": "infra_state",
                    "$ref": "#/definitions/terraform_parametersInfraState",
                    "x-displayname": "Infra State"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this status was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "suggested_action": {
                    "type": "string",
                    "description": " Suggested action for customer on error\n\nExample: - \"value\"-",
                    "title": "suggested_action",
                    "x-displayname": "Suggested Action",
                    "x-ves-example": "value"
                },
                "tf_output": {
                    "type": "string",
                    "description": " The value of an \"output\" variable from the terraform state file.\n\nExample: - \"value\"-",
                    "title": "tf_output",
                    "x-displayname": "Terraform Output",
                    "x-ves-example": "value"
                },
                "tf_stdout": {
                    "type": "string",
                    "description": " The stdout of terraform apply command.",
                    "title": "tf_stdout",
                    "x-displayname": "Terraform Standard Output"
                }
            }
        },
        "terraform_parametersDeploymentStatusType": {
            "type": "object",
            "x-ves-proto-message": "ves.io.schema.views.terraform_parameters.DeploymentStatusType",
            "properties": {
                "apply_status": {
                    "description": " Status of Apply or Destroy action",
                    "title": "Apply Status",
                    "$ref": "#/definitions/terraform_parametersApplyStatus",
                    "x-displayname": "Apply Status"
                },
                "expected_container_version": {
                    "type": "string",
                    "description": " Container version expected",
                    "title": "Expected container version",
                    "x-displayname": "Expected container version"
                },
                "plan_status": {
                    "description": " Status of Plan action.",
                    "title": "Plan Status",
                    "$ref": "#/definitions/terraform_parametersPlanStatus",
                    "x-displayname": "Plan Status"
                }
            }
        },
        "terraform_parametersDestroyStageState": {
            "type": "string",
            "title": "- DESTROYED: x-displayName: \"Destroyed\"\n - DESTROY_ERRORED: x-displayName: \"Destroy errored\"\n - DESTROYING: x-displayName: \"Destroying\"\n - DESTROY_QUEUED: x-displayName: \"Destroy Queued\"",
            "enum": [
                "DESTROYED",
                "DESTROY_ERRORED",
                "DESTROYING",
                "DESTROY_QUEUED"
            ],
            "default": "DESTROYED",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.terraform_parameters.DestroyStageState"
        },
        "terraform_parametersInfraState": {
            "type": "string",
            "title": "- PROVISIONED: x-displayName: \"Provisioned\"\n - TIMED_OUT: x-displayName: \"Timed out\"\n - ERRORED: x-displayName: \"Errored\"\n - PROVISIONING: x-displayName: \"Provisioning\"",
            "enum": [
                "PROVISIONED",
                "TIMED_OUT",
                "ERRORED",
                "PROVISIONING"
            ],
            "default": "PROVISIONED",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.views.terraform_parameters.InfraState"
        },
        "terraform_parametersPlanStageState": {
            "type": "string",
            "description": "Terraform state during plan stage\n",
            "title": "Plan Stage State",
            "enum": [
                "PLANNING",
                "PLAN_ERRORED",
                "NO_CHANGES",
                "HAS_CHANGES",
                "DISCARDED",
                "PLAN_INIT_ERRORED",
                "PLAN_QUEUED"
            ],
            "default": "PLANNING",
            "x-displayname": "Plan Stage State",
            "x-ves-proto-enum": "ves.io.schema.views.terraform_parameters.PlanStageState"
        },
        "terraform_parametersPlanStatus": {
            "type": "object",
            "x-ves-oneof-field-state": "[\"infra_state\",\"plan_state\"]",
            "x-ves-proto-message": "ves.io.schema.views.terraform_parameters.PlanStatus",
            "properties": {
                "error_output": {
                    "type": "string",
                    "description": " Error output of terraform run\n\nExample: - \"value\"-",
                    "title": "error_output",
                    "x-displayname": "Error Output",
                    "x-ves-example": "value"
                },
                "infra_state": {
                    "description": "Exclusive with [plan_state]\n Infrastructure state of the view provisioning",
                    "title": "infra_state",
                    "$ref": "#/definitions/terraform_parametersInfraState",
                    "x-displayname": "Infra State"
                },
                "modification_timestamp": {
                    "type": "string",
                    "description": " ModificationTimestamp is a timestamp representing the server time when this status was\n last modified.",
                    "title": "modification_timestamp",
                    "format": "date-time",
                    "x-displayname": "Modification Timestamp"
                },
                "plan_state": {
                    "description": "Exclusive with [infra_state]\n Terraform state during plan stage",
                    "title": "plan_state",
                    "$ref": "#/definitions/terraform_parametersPlanStageState",
                    "x-displayname": "Plan State"
                },
                "suggested_action": {
                    "type": "string",
                    "description": " Suggested action for customer on error\n\nExample: - \"value\"-",
                    "title": "suggested_action",
                    "x-displayname": "Suggested Action",
                    "x-ves-example": "value"
                },
                "tf_plan_output": {
                    "type": "string",
                    "description": " Terraform \"plan\" command output. Terraform performs a refresh, unless explicitly disabled, and then\n determines what actions are necessary to achieve the desired state specified in the configuration files.\n\nExample: - \"value\"-",
                    "title": "tf_plan_output",
                    "x-displayname": "Terraform Plan Output",
                    "x-ves-example": "value"
                }
            }
        },
        "terraform_parametersRollbackState": {
            "type": "string",
            "title": "- ROLLBACK_SUCCESSFUL: x-displayName: \"Rollback successful\"\n - ROLLBACK_ERRORED: x-displayName: \"Rollback errored\"\n - ROLLBACK_NOT_REQUIRED: x-displayName: \"Rollback not required\"",
            "enum": [
                "ROLLBACK_SUCCESSFUL",
                "ROLLBACK_ERRORED",
                "ROLLBACK_NOT_REQUIRED"
            ],
            "default": "ROLLBACK_SUCCESSFUL"
        },
        "terraform_parametersUpgradeState": {
            "type": "string",
            "description": "x-displayName: \"Upgrade State\"\nTerraform State after version Upgrade\n\n - UPGRADE_SUCCESSFUL: x-displayName: \"Upgrade successful\"\n - UPGRADE_ERRORED: x-displayName: \"Upgrade errored\"\n - UPGRADE_NOT_REQUIRED: x-displayName: \"Upgrade not required\"",
            "title": "Upgrade State",
            "enum": [
                "UPGRADE_SUCCESSFUL",
                "UPGRADE_ERRORED",
                "UPGRADE_NOT_REQUIRED"
            ],
            "default": "UPGRADE_SUCCESSFUL"
        },
        "viewsAWSSubnetIdsType": {
            "type": "object",
            "description": "AWS Subnet Ids used by volterra site",
            "title": "AWS Subnets Ids",
            "x-displayname": "AWS Subnets Ids",
            "x-ves-proto-message": "ves.io.schema.views.AWSSubnetIdsType",
            "properties": {
                "az_name": {
                    "type": "string",
                    "description": " AWS availability zone, must be consistent with the selected AWS region.\n\nExample: - \"us-west-2a\"-",
                    "title": "AZ Name",
                    "x-displayname": "AZ Name",
                    "x-ves-example": "us-west-2a"
                },
                "inside_subnet": {
                    "description": " Inside subnet Info",
                    "title": "Inside Subnet Info",
                    "$ref": "#/definitions/viewsAWSSubnetInfoType",
                    "x-displayname": "Inside Subnet Info"
                },
                "inside_subnet_id": {
                    "type": "string",
                    "description": " Inside subnet ID used by volterra site\n\nExample: - \"subnet-12345678901234567\"-",
                    "title": "Inside Subnet ID",
                    "x-displayname": "Inside Subnet ID",
                    "x-ves-example": "subnet-12345678901234567"
                },
                "outside_subnet": {
                    "description": " Outside subnet Info",
                    "title": "Outside Subnet Info",
                    "$ref": "#/definitions/viewsAWSSubnetInfoType",
                    "x-displayname": "Outside Subnet Info"
                },
                "outside_subnet_id": {
                    "type": "string",
                    "description": " Outside subnet ID used by volterra site\n\nExample: - \"subnet-12345678901234567\"-",
                    "title": "Outside Subnet ID",
                    "x-displayname": "Outside Subnet ID",
                    "x-ves-example": "subnet-12345678901234567"
                },
                "workload_subnet": {
                    "description": " Workload subnet Info",
                    "title": "Workload Subnet Info",
                    "$ref": "#/definitions/viewsAWSSubnetInfoType",
                    "x-displayname": "Workload Subnet Info"
                },
                "workload_subnet_id": {
                    "type": "string",
                    "description": " Workload subnet ID used by volterra site\n\nExample: - \"subnet-12345678901234567\"-",
                    "title": "Workload Subnet ID",
                    "x-displayname": "Workload Subnet ID",
                    "x-ves-example": "subnet-12345678901234567"
                }
            }
        },
        "viewsAWSSubnetInfoType": {
            "type": "object",
            "description": "AWS Subnets Info Type",
            "title": "AWS Subnets Info Type",
            "x-displayname": "AWS Subnets Info Type",
            "x-ves-proto-message": "ves.io.schema.views.AWSSubnetInfoType",
            "properties": {
                "az_name": {
                    "type": "string",
                    "description": " AWS availability zone, must be consistent with the selected AWS region.\n\nExample: - \"us-west-2a\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.pattern: ^([a-z]{2})-?(gov-)?([a-z0-9]{4,20})-([a-z0-9]{2})$\n",
                    "title": "AZ Name",
                    "x-displayname": "AZ Name",
                    "x-ves-example": "us-west-2a",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.pattern": "^([a-z]{2})-?(gov-)?([a-z0-9]{4,20})-([a-z0-9]{2})$"
                    }
                },
                "id": {
                    "type": "string",
                    "description": " Subnet ID\n\nExample: - \"subnet-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(subnet-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Subnet ID",
                    "maxLength": 64,
                    "x-displayname": "Subnet ID",
                    "x-ves-example": "subnet-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(subnet-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "ipv4_prefix": {
                    "type": "string",
                    "description": " Subnet CIDR block. It has to be private address space.\n\nExample: - \"10.1.0.0/16\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.ipv4_prefix: true\n  ves.io.schema.rules.string.max_ip_prefix_length: 28\n  ves.io.schema.rules.string.min_ip_prefix_length: 8\n",
                    "title": "Subnet CIDR block",
                    "x-displayname": "Subnet CIDR block",
                    "x-ves-example": "10.1.0.0/16",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.string.max_ip_prefix_length": "28",
                        "ves.io.schema.rules.string.min_ip_prefix_length": "8"
                    }
                }
            }
        },
        "viewsAWSVPCParamsType": {
            "type": "object",
            "description": "Parameters to create new AWS VPC",
            "title": "AWS VPC Parameters",
            "x-displayname": "AWS VPC Parameters",
            "x-ves-displayorder": "7,3,6",
            "x-ves-oneof-field-name_choice": "[\"autogenerate\",\"name_tag\"]",
            "x-ves-proto-message": "ves.io.schema.views.AWSVPCParamsType",
            "properties": {
                "autogenerate": {
                    "description": "Exclusive with [name_tag]\n Autogenerate the VPC Name",
                    "title": "autogenerate",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Autogenerate VPC Name"
                },
                "name_tag": {
                    "type": "string",
                    "description": "Exclusive with [autogenerate]\n Specify the VPC Name\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n",
                    "title": "name_tag",
                    "maxLength": 64,
                    "x-displayname": "Choose VPC Name",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64"
                    }
                },
                "primary_ipv4": {
                    "type": "string",
                    "description": " IPv4 CIDR block for this VPC. It has to be private address space.\n The Primary IPv4 block cannot be modified. All subnets prefixes in this VPC must be part of this CIDR block.\n\nExample: - \"10.1.0.0/16\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.ipv4_prefix: true\n  ves.io.schema.rules.string.max_ip_prefix_length: 28\n  ves.io.schema.rules.string.min_ip_prefix_length: 16\n",
                    "title": "Primary IPv4 CIDR block",
                    "x-displayname": "Primary IPv4 CIDR block",
                    "x-ves-example": "10.1.0.0/16",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.string.max_ip_prefix_length": "28",
                        "ves.io.schema.rules.string.min_ip_prefix_length": "16"
                    }
                }
            }
        },
        "viewsAWSVPCTwoInterfaceNodeType": {
            "type": "object",
            "description": "Parameters for creating two interface Node in one AZ",
            "title": "Two Interface Node",
            "x-displayname": "Two Interface Node",
            "x-ves-displayorder": "1,7,3,5",
            "x-ves-oneof-field-choice": "[\"inside_subnet\",\"reserved_inside_subnet\"]",
            "x-ves-proto-message": "ves.io.schema.views.AWSVPCTwoInterfaceNodeType",
            "properties": {
                "aws_az_name": {
                    "type": "string",
                    "description": " AWS availability zone, must be consistent with the selected AWS region.\n\nExample: - \"us-west-2a\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "AWS AZ",
                    "x-displayname": "AWS AZ Name",
                    "x-ves-example": "us-west-2a",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "inside_subnet": {
                    "description": "Exclusive with [reserved_inside_subnet]\n Select Existing Subnet or Create New",
                    "title": "Inside Subnet Choice",
                    "$ref": "#/definitions/viewsCloudSubnetType",
                    "x-displayname": "Specify Subnet"
                },
                "outside_subnet": {
                    "description": " Subnet for the outside interface of the node\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Outside Subnet",
                    "$ref": "#/definitions/viewsCloudSubnetType",
                    "x-displayname": "Subnet for Outside Interface",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "reserved_inside_subnet": {
                    "description": "Exclusive with [inside_subnet]\n Autogenerate and reserve a subnet from the Primary CIDR",
                    "title": "Reserved Subnet Choice",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Autogenerate Subnet"
                },
                "workload_subnet": {
                    "description": " Subnet in which workloads are launched",
                    "title": "Workload Subnet",
                    "$ref": "#/definitions/viewsCloudSubnetType",
                    "x-displayname": "Workload Subnet"
                }
            }
        },
        "viewsAllowedVIPPorts": {
            "type": "object",
            "description": "This defines the TCP port(s) which will be opened on the cloud loadbalancer.\nSuch that the client can use the cloud VIP IP and port combination\nto reach TCP/HTTP lb configured on the F5XC Site",
            "title": "Allowed VIP Ports",
            "x-displayname": "Allowed VIP Ports",
            "x-ves-oneof-field-port_choice": "[\"custom_ports\",\"disable_allowed_vip_port\",\"use_http_https_port\",\"use_http_port\",\"use_https_port\"]",
            "x-ves-proto-message": "ves.io.schema.views.AllowedVIPPorts",
            "properties": {
                "custom_ports": {
                    "description": "Exclusive with [disable_allowed_vip_port use_http_https_port use_http_port use_https_port]\n Custom list of ports to be allowed",
                    "title": "Custom Ports",
                    "$ref": "#/definitions/viewsCustomPorts",
                    "x-displayname": " Ports Allowed on Public"
                },
                "disable_allowed_vip_port": {
                    "description": "Exclusive with [custom_ports use_http_https_port use_http_port use_https_port]\n HTTP Port (80) \u0026 HTTPS Port (443) will be disabled.",
                    "title": "Disable Allowed VIP Port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Allowed VIP Port"
                },
                "use_http_https_port": {
                    "description": "Exclusive with [custom_ports disable_allowed_vip_port use_http_port use_https_port]\n HTTP Port (80) \u0026 HTTPS Port (443) will be allowed.",
                    "title": "Allow HTTP \u0026 HTTPS Port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow HTTP \u0026 HTTPS Port"
                },
                "use_http_port": {
                    "description": "Exclusive with [custom_ports disable_allowed_vip_port use_http_https_port use_https_port]\n Only HTTP Port (80) will be allowed.",
                    "title": "Allow HTTP Port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow HTTP Port"
                },
                "use_https_port": {
                    "description": "Exclusive with [custom_ports disable_allowed_vip_port use_http_https_port use_http_port]\n Only HTTPS Port (443) will be allowed.",
                    "title": "Allow HTTPS Port",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow HTTPS Port"
                }
            }
        },
        "viewsCloudLinkADNType": {
            "type": "object",
            "title": "CloudLink ADN Network Config",
            "x-displayname": "CloudLink ADN Network Config",
            "x-ves-proto-message": "ves.io.schema.views.CloudLinkADNType",
            "properties": {
                "cloudlink_network_name": {
                    "type": "string",
                    "description": " Establish private connectivity with the F5 Distributed Cloud Global Network using a Private ADN network. To provision a Private ADN network, please contact F5 Distributed Cloud support.\n\nExample: - \"private-cloud-ntw\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_bytes: 64\n",
                    "title": "Private ADN Network",
                    "maxLength": 64,
                    "x-displayname": "Private ADN Network",
                    "x-ves-example": "private-cloud-ntw",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_bytes": "64"
                    }
                }
            }
        },
        "viewsCloudSubnetParamType": {
            "type": "object",
            "description": "Parameters for creating a new cloud subnet",
            "title": "Cloud Subnet Param",
            "x-displayname": "New Cloud Subnet Parameters",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.views.CloudSubnetParamType",
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": " IPv4 subnet prefix for this subnet\n\nExample: - \"10.1.2.0/24\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.ipv4_prefix: true\n  ves.io.schema.rules.string.max_ip_prefix_length: 28\n",
                    "title": "IPv4 Subnet",
                    "x-displayname": "IPv4 Subnet",
                    "x-ves-example": "10.1.2.0/24",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.string.max_ip_prefix_length": "28"
                    }
                },
                "ipv6": {
                    "type": "string",
                    "description": " IPv6 subnet prefix for this subnet\n\nExample: - \"1234:568:abcd:9100::/64\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6_prefix: true\n",
                    "title": "IPv6 Subnet",
                    "x-displayname": "IPv6 Subnet",
                    "x-ves-example": "1234:568:abcd:9100::/64",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6_prefix": "true"
                    }
                }
            }
        },
        "viewsCloudSubnetType": {
            "type": "object",
            "description": "Parameters for AWS subnet",
            "title": "Cloud Subnet",
            "x-displayname": "AWS Subnet",
            "x-ves-oneof-field-choice": "[\"existing_subnet_id\",\"subnet_param\"]",
            "x-ves-proto-message": "ves.io.schema.views.CloudSubnetType",
            "properties": {
                "existing_subnet_id": {
                    "type": "string",
                    "description": "Exclusive with [subnet_param]\n Information about existing subnet ID\n\nExample: - \"subnet-12345678901234567\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 64\n  ves.io.schema.rules.string.pattern: ^(subnet-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Existing Subnet ID",
                    "maxLength": 64,
                    "x-displayname": "Existing Subnet ID",
                    "x-ves-example": "subnet-12345678901234567",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "64",
                        "ves.io.schema.rules.string.pattern": "^(subnet-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                },
                "subnet_param": {
                    "description": "Exclusive with [existing_subnet_id]\n Parameters for creating new subnet",
                    "title": "New Subnet",
                    "$ref": "#/definitions/viewsCloudSubnetParamType",
                    "x-displayname": "New Subnet"
                }
            }
        },
        "viewsConfigValidationState": {
            "type": "string",
            "description": "The state of Site Config Validation\n\n - VALIDATION_STATE_NONE: None\n\nConfig validation state is none\n - VALIDATION_IN_PROGRESS: In Progress\n\nConfig validation state is In Progress\n - VALIDATION_FAILED: Failed\n\nConfig validation state is Failed\n - VALIDATION_SUCCEEDED: Succeeded\n\nConfig validation state is Succeeded",
            "title": "Config Validation State",
            "enum": [
                "VALIDATION_STATE_NONE",
                "VALIDATION_IN_PROGRESS",
                "VALIDATION_FAILED",
                "VALIDATION_SUCCEEDED"
            ],
            "default": "VALIDATION_STATE_NONE",
            "x-displayname": "Site Config Validation State",
            "x-ves-proto-enum": "ves.io.schema.views.ConfigValidationState"
        },
        "viewsCustomDNS": {
            "type": "object",
            "description": "Custom DNS is the configured for specify CE site",
            "title": "Custom DNS",
            "x-displayname": "Custom DNS",
            "x-ves-proto-message": "ves.io.schema.views.CustomDNS",
            "properties": {
                "inside_nameserver": {
                    "type": "string",
                    "description": " Optional DNS server IP to be used for name resolution in inside network\n\nExample: - \"10.1.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "inside_nameserver",
                    "x-displayname": "DNS Server for Inside Network",
                    "x-ves-example": "10.1.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "inside_nameserver_v6": {
                    "type": "string",
                    "description": " Optional DNS server IPv6 to be used for name resolution in inside network\n\nExample: - \"1001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "inside_nameserver_v6",
                    "x-displayname": "DNS Server IPv6 for Inside Network",
                    "x-ves-example": "1001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                },
                "outside_nameserver": {
                    "type": "string",
                    "description": " Optional DNS server IP to be used for name resolution in outside network\n\nExample: - \"10.1.1.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4: true\n",
                    "title": "outside_nameserver",
                    "x-displayname": "DNS Server for Outside Network",
                    "x-ves-example": "10.1.1.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4": "true"
                    }
                },
                "outside_nameserver_v6": {
                    "type": "string",
                    "description": " Optional DNS server IPv6 to be used for name resolution in outside network\n\nExample: - \"1001::1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv6: true\n",
                    "title": "outside_nameserver_v6",
                    "x-displayname": "DNS Server IPv6 for Outside Network",
                    "x-ves-example": "1001::1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv6": "true"
                    }
                }
            }
        },
        "viewsCustomPorts": {
            "type": "object",
            "description": "List of Custom port",
            "title": "Custom Ports",
            "x-displayname": "Custom Ports",
            "x-ves-proto-message": "ves.io.schema.views.CustomPorts",
            "properties": {
                "port_ranges": {
                    "type": "string",
                    "description": " Port Ranges\n\nExample: - \"80, 8080-8085\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 512\n  ves.io.schema.rules.string.min_len: 1\n  ves.io.schema.rules.string.port_range_list: true\n",
                    "title": "Port Ranges",
                    "minLength": 1,
                    "maxLength": 512,
                    "x-displayname": "Port Ranges",
                    "x-ves-example": "80, 8080-8085",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "512",
                        "ves.io.schema.rules.string.min_len": "1",
                        "ves.io.schema.rules.string.port_range_list": "true"
                    }
                }
            }
        },
        "viewsDirectConnectConfigType": {
            "type": "object",
            "description": "Direct Connect Configuration",
            "title": "DirectConnectConfigType",
            "x-displayname": "Direct Connect Configuration",
            "x-ves-oneof-field-asn_choice": "[\"auto_asn\",\"custom_asn\"]",
            "x-ves-oneof-field-vif_choice": "[\"hosted_vifs\",\"standard_vifs\"]",
            "x-ves-proto-message": "ves.io.schema.views.DirectConnectConfigType",
            "properties": {
                "auto_asn": {
                    "description": "Exclusive with [custom_asn]\n Automatically set ASN",
                    "title": "Auto",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Auto"
                },
                "cloud_aggregated_prefix": {
                    "type": "array",
                    "description": " Aggregated prefix from cloud to be advertised for DC side\n\nExample: - \"10.0.0.0/20\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv4_prefix: true\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Cloud Aggregated Prefix",
                    "maxItems": 16,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Cloud Aggregated Prefix",
                    "x-ves-example": "10.0.0.0/20",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "custom_asn": {
                    "type": "integer",
                    "description": "Exclusive with [auto_asn]\n Custom Autonomous System Number\n\nExample: - \"64512\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n",
                    "title": "Custom ASN",
                    "format": "int64",
                    "x-displayname": "Custom ASN",
                    "x-ves-example": "64512",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1"
                    }
                },
                "dc_connect_aggregated_prefix": {
                    "type": "array",
                    "description": " Aggregated prefix from direct connect to be advertised for Cloud side\n\nExample: - \"20.0.0.0/20\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.ipv4_prefix: true\n  ves.io.schema.rules.repeated.max_items: 16\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Direct Connect Aggregate Prefixes",
                    "maxItems": 16,
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Direct Connect Aggregate Prefixes",
                    "x-ves-example": "20.0.0.0/20",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.ipv4_prefix": "true",
                        "ves.io.schema.rules.repeated.max_items": "16",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "hosted_vifs": {
                    "description": "Exclusive with [standard_vifs]\n Hosted VIF mode. F5XC provisions an AWS DirectConnect Gateway and a Virtual Private Gateway,\n and automatically associate provided hosted VIF and also setup BGP Peering.",
                    "title": "Hosted VIF mode",
                    "$ref": "#/definitions/viewsHostedVIFConfigType",
                    "x-displayname": "Hosted VIF mode"
                },
                "standard_vifs": {
                    "description": "Exclusive with [hosted_vifs]\n Standard Non Hosted VIF Mode. F5XC provisions an AWS DirectConnect Gateway and a Virtual Private Gateway,\n and a user associate VIF to the DirectConnect gateway and setup BGP Peering.",
                    "title": "Standard VIF mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Standard VIF mode"
                }
            }
        },
        "viewsDirectConnectInfo": {
            "type": "object",
            "description": "DirectConnect Info",
            "title": "DirectConnect Info",
            "x-displayname": "DirectConnect Info",
            "x-ves-proto-message": "ves.io.schema.views.DirectConnectInfo",
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": " The autonomous system (AS) number on the AWS side for Border Gateway Protocol (BGP) configuration\n\nExample: - \"\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 1\n  ves.io.schema.rules.uint32.lte: 4294967294\n",
                    "title": "AWS Side ASN",
                    "format": "int64",
                    "x-displayname": "AWS Side ASN",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "1",
                        "ves.io.schema.rules.uint32.lte": "4294967294"
                    }
                },
                "direct_connect_gateway_id": {
                    "type": "string",
                    "description": " DirectConnect Gateway ID\n\nExample: - \"f2a50c04-xxxx-yyyy-zzzz-00000000a043\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "DirectConnect Gateway ID",
                    "x-displayname": "DirectConnect Gateway ID",
                    "x-ves-example": "f2a50c04-xxxx-yyyy-zzzz-00000000a043",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "vgw_id": {
                    "type": "string",
                    "description": " Virtual Private Gateway ID\n\nExample: - \"vgw-12345678\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.pattern: ^(vgw-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "Virtual Private Gateway ID",
                    "x-displayname": "Virtual Private Gateway ID",
                    "x-ves-example": "vgw-12345678",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.pattern": "^(vgw-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                }
            }
        },
        "viewsGlobalConnectorType": {
            "type": "object",
            "description": "Global network reference for direct connection",
            "title": "Global Network",
            "x-displayname": "Global Network",
            "x-ves-proto-message": "ves.io.schema.views.GlobalConnectorType",
            "properties": {
                "global_vn": {
                    "description": " Select Virtual Network of Global Type\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Virtual Network",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Global Virtual Network",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "viewsGlobalNetworkConnectionListType": {
            "type": "object",
            "description": "List of global network connections",
            "title": "Global Network Connection List",
            "x-displayname": "Global Network Connection List",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionListType",
            "properties": {
                "global_network_connections": {
                    "type": "array",
                    "description": " Global network connections\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 8\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "Global Network Connections",
                    "minItems": 1,
                    "maxItems": 8,
                    "items": {
                        "$ref": "#/definitions/viewsGlobalNetworkConnectionType"
                    },
                    "x-displayname": "Global Network Connections",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "8",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "viewsGlobalNetworkConnectionType": {
            "type": "object",
            "description": "Global network connection",
            "title": "Global Network Connection",
            "x-displayname": "Global Network Connection",
            "x-ves-oneof-field-connection_choice": "[\"sli_to_global_dr\",\"slo_to_global_dr\"]",
            "x-ves-oneof-field-forward_proxy_choice": "[]",
            "x-ves-proto-message": "ves.io.schema.views.GlobalNetworkConnectionType",
            "properties": {
                "sli_to_global_dr": {
                    "description": "Exclusive with [slo_to_global_dr]\n Site local inside is connected directly to a given global network",
                    "title": "Site Local Inside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType",
                    "x-displayname": "Direct, Site Local Inside to a Global Network"
                },
                "slo_to_global_dr": {
                    "description": "Exclusive with [sli_to_global_dr]\n Site local outside is connected directly to a given global network",
                    "title": "Site Local Outside to a Global Network\"",
                    "$ref": "#/definitions/viewsGlobalConnectorType",
                    "x-displayname": "Direct, Site Local Outside to a Global Network"
                }
            }
        },
        "viewsHostedVIFConfigType": {
            "type": "object",
            "description": "x-example: \"value\"\nAWS Direct Connect Hosted VIF Configuration",
            "title": "AWS Direct Connect Hosted VIF Config",
            "x-displayname": "AWS Direct Connect Hosted VIF Config",
            "x-ves-oneof-field-connectivity_options": "[\"site_registration_over_direct_connect\",\"site_registration_over_internet\"]",
            "x-ves-proto-message": "ves.io.schema.views.HostedVIFConfigType",
            "properties": {
                "site_registration_over_direct_connect": {
                    "description": "Exclusive with [site_registration_over_internet]\n Site Registration and Site to RE tunnels go over the AWS Direct Connect Connection\n\nExample: - \"64512\"-",
                    "title": "Site Registration \u0026 Connectivity to RE over AWS Direct Connect",
                    "$ref": "#/definitions/viewsCloudLinkADNType",
                    "x-displayname": "Site Registration \u0026 Connectivity to RE over AWS Direct Connect",
                    "x-ves-example": "64512"
                },
                "site_registration_over_internet": {
                    "description": "Exclusive with [site_registration_over_direct_connect]\n Site Registration and Site to RE tunnels go over the internet gateway",
                    "title": "Site Registration \u0026 Connectivity to RE over Internet",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Site Registration \u0026 Connectivity to RE over Internet Gateway"
                },
                "vif_list": {
                    "type": "array",
                    "description": " List of Hosted VIF Config\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 30\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Hosted VIF Config",
                    "maxItems": 30,
                    "items": {
                        "$ref": "#/definitions/viewsVifRegionConfig"
                    },
                    "x-displayname": "List of Hosted VIF Config",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "30",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "viewsL3PerformanceEnhancementType": {
            "type": "object",
            "description": "x-required\nL3 enhanced performance mode options",
            "title": "L3 Mode Enhanced Performance options",
            "x-displayname": "L3 Mode Enhanced Performance",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"jumbo\",\"no_jumbo\"]",
            "x-ves-proto-message": "ves.io.schema.views.L3PerformanceEnhancementType",
            "properties": {
                "jumbo": {
                    "description": "Exclusive with [no_jumbo]\n L3 performance mode enhancement to use jumbo frame",
                    "title": "L3 Mode Enhanced Performance with jumbo frame support(9000)",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "L3 Mode Enhanced Performance with jumbo frame"
                },
                "no_jumbo": {
                    "description": "Exclusive with [jumbo]\n L3 performance mode enhancement without jumbo frame",
                    "title": "L3 Mode Enhanced Performance with no jumbo frame support",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "L3 Mode Enhanced Performance without jumbo frame"
                }
            }
        },
        "viewsOfflineSurvivabilityModeType": {
            "type": "object",
            "description": "Offline Survivability Mode",
            "title": "Offline Survivability Mode",
            "x-displayname": "Offline Survivability Mode",
            "x-ves-oneof-field-offline_survivability_mode_choice": "[\"enable_offline_survivability_mode\",\"no_offline_survivability_mode\"]",
            "x-ves-proto-message": "ves.io.schema.views.OfflineSurvivabilityModeType",
            "properties": {
                "enable_offline_survivability_mode": {
                    "description": "Exclusive with [no_offline_survivability_mode]\n Enable Offline Survivability Mode.\n When this feature is enabled, a site can continue to function as is with existing configuration for upto 7 days, even when the site is offline.\n The certificates needed to keep the services running on this site are signed using a local CA.\n Secrets would also be cached locally to handle the connectivity loss.\n When this feature is enabled on an existing site, the pods/services on this site will be restarted.",
                    "title": "Enable Offline Survivability Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Enable Offline Survivability Mode"
                },
                "no_offline_survivability_mode": {
                    "description": "Exclusive with [enable_offline_survivability_mode]\n Disable Offline Survivability Mode.\n When this feature is disabled on an existing site, the pods/services on this site will be restarted.",
                    "title": "Disable Offline Survivability Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Offline Survivability Mode"
                }
            }
        },
        "viewsOperatingSystemType": {
            "type": "object",
            "description": "This is to specify volterra operating version choice",
            "title": "Operating System Version",
            "x-displayname": "Operating System Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-operating_system_version_choice": "[\"default_os_version\",\"operating_system_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.OperatingSystemType",
            "properties": {
                "default_os_version": {
                    "description": "Exclusive with [operating_system_version]\n Will assign latest available OS version",
                    "title": "Default OS Version",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Latest OS Version"
                },
                "operating_system_version": {
                    "type": "string",
                    "description": "Exclusive with [default_os_version]\n Operating System Version is optional parameter, which allows to specify target OS version for particular site e.g. 7.2009.10.\n\nExample: - \"7.2009.10\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "Operating System Version",
                    "maxLength": 20,
                    "x-displayname": "Operating System Version",
                    "x-ves-example": "7.2009.10",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                }
            }
        },
        "viewsPerformanceEnhancementModeType": {
            "type": "object",
            "description": "x-required\nPerformance Enhancement Mode to optimize for L3 or L7 networking",
            "title": "Performance Enhancement Choice",
            "x-displayname": "Performance Enhancement Mode",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-perf_mode_choice": "[\"perf_mode_l3_enhanced\",\"perf_mode_l7_enhanced\"]",
            "x-ves-proto-message": "ves.io.schema.views.PerformanceEnhancementModeType",
            "properties": {
                "perf_mode_l3_enhanced": {
                    "description": "Exclusive with [perf_mode_l7_enhanced]\n Site optimized for L3 traffic processing\n When the mode is toggled to l3 enhanced, traffic disruption will be seen",
                    "title": "L3 Mode Enhanced Performance",
                    "$ref": "#/definitions/viewsL3PerformanceEnhancementType",
                    "x-displayname": "L3 Mode Enhanced Performance"
                },
                "perf_mode_l7_enhanced": {
                    "description": "Exclusive with [perf_mode_l3_enhanced]\n Site optimized for L7 traffic processing\n When the mode is toggled to l7 enhanced, traffic disruption will be seen",
                    "title": "Default Performance Mode",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "L7 Enhanced"
                }
            }
        },
        "viewsPrivateConnectConfigType": {
            "type": "object",
            "description": "Private Connect Configuration",
            "title": "PrivateConnectConfigType",
            "x-displayname": "Private Connect Configuration",
            "x-ves-oneof-field-network_options": "[\"inside\",\"outside\"]",
            "x-ves-proto-message": "ves.io.schema.views.PrivateConnectConfigType",
            "properties": {
                "cloud_link": {
                    "description": " Reference to Cloud Link\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Associate Cloud Link",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Associate Cloud Link",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "inside": {
                    "description": "Exclusive with [outside]\n CloudLink will be associated, and routes will be propagated with the Site Local Inside Network of this Site",
                    "title": "Inside Network",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Inside Network"
                },
                "outside": {
                    "description": "Exclusive with [inside]\n CloudLink will be associated, and routes will be propagated with the Site Local Outside Network of this Site",
                    "title": "Outside Network",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Outside Network"
                }
            }
        },
        "viewsSecurityGroupType": {
            "type": "object",
            "description": "Enter pre created security groups for slo(Site Local Outside) and sli(Site Local Inside) interface. Supported only for sites deployed on existing VPC",
            "title": "Security Group Parameters",
            "x-displayname": "Security Group IDS",
            "x-ves-displayorder": "1,2",
            "x-ves-proto-message": "ves.io.schema.views.SecurityGroupType",
            "properties": {
                "inside_security_group_id": {
                    "type": "string",
                    "description": " Security Group ID to be attached to SLI(Site Local Inside) Interface\n\nExample: - \"sg-0db952838ba829943\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n  ves.io.schema.rules.string.pattern: ^(sg-)([a-z0-9]{8}|[a-z0-9]{17})$|^$\n",
                    "title": "Inside Security Group ID",
                    "maxLength": 20,
                    "x-displayname": "Inside Security Group ID",
                    "x-ves-example": "sg-0db952838ba829943",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20",
                        "ves.io.schema.rules.string.pattern": "^(sg-)([a-z0-9]{8}|[a-z0-9]{17})$|^$"
                    }
                },
                "outside_security_group_id": {
                    "type": "string",
                    "description": " Security Group ID to be attached to SLO(Site Local Outside) Interface\n\nExample: - \"sg-0db952838ba829943\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n  ves.io.schema.rules.string.pattern: ^(sg-)([a-z0-9]{8}|[a-z0-9]{17})$|^$\n",
                    "title": "Outside Security Group ID",
                    "maxLength": 20,
                    "x-displayname": "Outside Security Group ID",
                    "x-ves-example": "sg-0db952838ba829943",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20",
                        "ves.io.schema.rules.string.pattern": "^(sg-)([a-z0-9]{8}|[a-z0-9]{17})$|^$"
                    }
                }
            }
        },
        "viewsSiteError": {
            "type": "object",
            "description": "Site Error",
            "title": "Site Error",
            "x-displayname": "Site Error",
            "x-ves-proto-message": "ves.io.schema.views.SiteError",
            "properties": {
                "error_description": {
                    "type": "string",
                    "description": " Error Description \n\nExample: - \"invalid VPC ID\"-",
                    "title": "Error Description",
                    "x-displayname": "Error Description",
                    "x-ves-example": "invalid VPC ID"
                },
                "suggested_action": {
                    "type": "string",
                    "description": " Suggested Action \n\nExample: - \"update VPC ID\"-",
                    "title": "Suggested Action",
                    "x-displayname": "Suggested Action",
                    "x-ves-example": "update VPC ID"
                }
            }
        },
        "viewsSiteStaticRoutesListType": {
            "type": "object",
            "description": "List of static routes",
            "title": "Static Route List Type",
            "x-displayname": "Static Route List Type",
            "x-ves-proto-message": "ves.io.schema.views.SiteStaticRoutesListType",
            "properties": {
                "static_route_list": {
                    "type": "array",
                    "description": " List of Static routes\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.repeated.max_items: 64\n  ves.io.schema.rules.repeated.min_items: 1\n",
                    "title": "List of Static Routes",
                    "minItems": 1,
                    "maxItems": 64,
                    "items": {
                        "$ref": "#/definitions/viewsSiteStaticRoutesType"
                    },
                    "x-displayname": "List of Static Routes",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.repeated.max_items": "64",
                        "ves.io.schema.rules.repeated.min_items": "1"
                    }
                }
            }
        },
        "viewsSiteStaticRoutesType": {
            "type": "object",
            "description": "Different ways to configure static routes",
            "title": "Site Static Route Config Modes",
            "x-displayname": "Site Static Route Config Modes",
            "x-ves-oneof-field-config_mode_choice": "[\"custom_static_route\",\"simple_static_route\"]",
            "x-ves-proto-message": "ves.io.schema.views.SiteStaticRoutesType",
            "properties": {
                "custom_static_route": {
                    "description": "Exclusive with [simple_static_route]\n Use Custom static route to configure all advanced options",
                    "title": "Custom Static Route",
                    "$ref": "#/definitions/schemaStaticRouteType",
                    "x-displayname": "Custom Static Route"
                },
                "simple_static_route": {
                    "type": "string",
                    "description": "Exclusive with [custom_static_route]\n Use simple static route for prefix pointing to single interface in the network\n\nExample: - \"10.5.1.0/24\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.ipv4_prefix: true\n",
                    "title": "Simple Static Route",
                    "x-displayname": "Simple Static Route",
                    "x-ves-example": "10.5.1.0/24",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.ipv4_prefix": "true"
                    }
                }
            }
        },
        "viewsVifRegionConfig": {
            "type": "object",
            "description": "x-example: \"value\"\nAWS Direct Connect Hosted VIF Config Per Region Object",
            "title": "HostedVIFRegionObject",
            "x-displayname": "Hosted VIF Config Per Region Object",
            "x-ves-displayorder": "5,2",
            "x-ves-oneof-field-vif_region_choice": "[\"other_region\",\"same_as_site_region\"]",
            "x-ves-proto-message": "ves.io.schema.views.VifRegionConfig",
            "properties": {
                "other_region": {
                    "type": "string",
                    "description": "Exclusive with [same_as_site_region]\n Other Region\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"af-south-1\\\",\\\"ap-east-1\\\",\\\"ap-northeast-1\\\",\\\"ap-northeast-2\\\",\\\"ap-south-1\\\",\\\"ap-southeast-1\\\",\\\"ap-southeast-2\\\",\\\"ap-southeast-3\\\",\\\"ca-central-1\\\",\\\"eu-central-1\\\",\\\"eu-north-1\\\",\\\"eu-south-1\\\",\\\"eu-west-1\\\",\\\"eu-west-2\\\",\\\"eu-west-3\\\",\\\"me-south-1\\\",\\\"sa-east-1\\\",\\\"us-east-1\\\",\\\"us-east-2\\\",\\\"us-west-1\\\",\\\"us-west-2\\\"]\n",
                    "title": "Other Region",
                    "x-displayname": "Other Region",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"af-south-1\\\",\\\"ap-east-1\\\",\\\"ap-northeast-1\\\",\\\"ap-northeast-2\\\",\\\"ap-south-1\\\",\\\"ap-southeast-1\\\",\\\"ap-southeast-2\\\",\\\"ap-southeast-3\\\",\\\"ca-central-1\\\",\\\"eu-central-1\\\",\\\"eu-north-1\\\",\\\"eu-south-1\\\",\\\"eu-west-1\\\",\\\"eu-west-2\\\",\\\"eu-west-3\\\",\\\"me-south-1\\\",\\\"sa-east-1\\\",\\\"us-east-1\\\",\\\"us-east-2\\\",\\\"us-west-1\\\",\\\"us-west-2\\\"]"
                    }
                },
                "same_as_site_region": {
                    "description": "Exclusive with [other_region]\n Use same region as that of the Site",
                    "title": "Same Region as Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Same Region as Site"
                },
                "vif_id": {
                    "type": "string",
                    "description": " AWS Direct Connect VIF ID that needs to be connected to the site\n\nExample: - \"dxvif-fgwtckim\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.pattern: ^(dxvif-)([a-z0-9]{8}|[a-z0-9]{17})$\n",
                    "title": "VIF ID",
                    "x-displayname": "VIF ID",
                    "x-ves-example": "dxvif-fgwtckim",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.pattern": "^(dxvif-)([a-z0-9]{8}|[a-z0-9]{17})$"
                    }
                }
            }
        },
        "viewsVolterraSoftwareType": {
            "type": "object",
            "description": "This is to specify volterra software version choice",
            "title": "F5XC Software Version",
            "x-displayname": "F5XC Software Version",
            "x-ves-displayorder": "1",
            "x-ves-oneof-field-volterra_sw_version_choice": "[\"default_sw_version\",\"volterra_software_version\"]",
            "x-ves-proto-message": "ves.io.schema.views.VolterraSoftwareType",
            "properties": {
                "default_sw_version": {
                    "description": "Exclusive with [volterra_software_version]\n Will assign latest available SW version",
                    "title": "Default SW Version",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Latest SW Version"
                },
                "volterra_software_version": {
                    "type": "string",
                    "description": "Exclusive with [default_sw_version]\n F5XC Software Version is optional parameter, which allows to specify target SW version for particular site e.g. crt-20210329-1002.\n\nExample: - \"crt-20210329-1002\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 20\n",
                    "title": "F5XC Software Version",
                    "maxLength": 20,
                    "x-displayname": "F5XC Software Version",
                    "x-ves-example": "crt-20210329-1002",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "20"
                    }
                }
            }
        },
        "viewsaws_tgw_siteActiveServicePoliciesType": {
            "type": "object",
            "description": "Active service policies for the east-west  proxy",
            "title": "Active Service Policies",
            "x-displayname": "Active Service Policies",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ActiveServicePoliciesType",
            "properties": {
                "service_policies": {
                    "type": "array",
                    "description": " A list of references to service_policy objects.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 32\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "service_policies",
                    "maxItems": 32,
                    "items": {
                        "$ref": "#/definitions/schemaviewsObjectRefType"
                    },
                    "x-displayname": "Service Policies",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "32",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "viewsaws_tgw_siteCreateSpecType": {
            "type": "object",
            "description": "Shape of the AWS TGW site specification",
            "title": "CreateSpecType",
            "x-displayname": "Create AWS TGW site",
            "x-ves-oneof-field-blocked_services_choice": "[\"block_all_services\",\"blocked_services\",\"default_blocked_services\"]",
            "x-ves-oneof-field-direct_connect_choice": "[\"direct_connect_disabled\",\"direct_connect_enabled\",\"private_connectivity\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.CreateSpecType",
            "properties": {
                "aws_parameters": {
                    "description": " Section to provide information related to AWS credentials and AWS resources orchestrated and managed by F5XC.\n Example of the managed AWS resources to name few are VPC, TGW, Route Tables etc\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/aws_tgw_siteServicesVPCType",
                    "x-displayname": "AWS Credentials and Resources",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "block_all_services": {
                    "description": "Exclusive with [blocked_services default_blocked_services]\n Block DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": " Block DNS, SSH \u0026 WebUI services on Site"
                },
                "blocked_services": {
                    "description": "Exclusive with [block_all_services default_blocked_services]\n Use custom blocked services configuration, to list the services which need to be blocked",
                    "$ref": "#/definitions/fleetBlockedServicesListType",
                    "x-displayname": "Custom Blocked Services Configuration"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Site Co-ordinates"
                },
                "custom_dns": {
                    "description": " custom dns configure to the CE site",
                    "title": "custom_dns",
                    "$ref": "#/definitions/viewsCustomDNS",
                    "x-displayname": "Custom DNS"
                },
                "default_blocked_services": {
                    "description": "Exclusive with [block_all_services blocked_services]\n Allow access to DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow access to DNS, SSH \u0026 WebUI services on Site"
                },
                "direct_connect_disabled": {
                    "description": "Exclusive with [direct_connect_enabled private_connectivity]\n Disable Private Connectivity to Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Private Connectivity"
                },
                "direct_connect_enabled": {
                    "description": "Exclusive with [direct_connect_disabled private_connectivity]\n Direct Connect Connection to Site is enabled(Legacy)",
                    "$ref": "#/definitions/viewsDirectConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via Direct Connect (Legacy))"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "offline_survivability_mode": {
                    "description": " Enable/Disable offline survivability mode",
                    "$ref": "#/definitions/viewsOfflineSurvivabilityModeType",
                    "x-displayname": "Offline Survivability Mode"
                },
                "os": {
                    "description": " Operating System Details",
                    "title": "Operating System",
                    "$ref": "#/definitions/viewsOperatingSystemType",
                    "x-displayname": "Operating System"
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "private_connectivity": {
                    "description": "Exclusive with [direct_connect_disabled direct_connect_enabled]\n Enable Private Connectivity to Site via CloudLink",
                    "$ref": "#/definitions/viewsPrivateConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via CloudLink"
                },
                "sw": {
                    "description": " F5XC Software Details",
                    "title": "F5XC Software",
                    "$ref": "#/definitions/viewsVolterraSoftwareType",
                    "x-displayname": "F5XC Software"
                },
                "tags": {
                    "type": "object",
                    "description": " AWS Tags is a label consisting of a user-defined key and value.\n It helps to manage, identify, organize, search for, and filter resources in AWS console.\n\nExample: - \"devstaging\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 127\n  ves.io.schema.rules.map.max_pairs: 40\n  ves.io.schema.rules.map.values.string.max_len: 255\n",
                    "x-displayname": "AWS Tags",
                    "x-ves-example": "dev: staging",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "127",
                        "ves.io.schema.rules.map.max_pairs": "40",
                        "ves.io.schema.rules.map.values.string.max_len": "255"
                    }
                },
                "tgw_security": {
                    "description": " Security Configuration for transit gateway",
                    "$ref": "#/definitions/aws_tgw_siteSecurityConfigType",
                    "x-displayname": "Site Security"
                },
                "vn_config": {
                    "description": " Site Network related details will be configured",
                    "$ref": "#/definitions/aws_tgw_siteVnConfiguration",
                    "x-displayname": "Site Networking"
                },
                "vpc_attachments": {
                    "description": " Spoke VPCs to be attached to the AWS TGW Site.\n Note that this choice would be deprecated in the near release.",
                    "$ref": "#/definitions/aws_tgw_siteVPCAttachmentListType",
                    "x-displayname": "Spoke VPCs"
                }
            }
        },
        "viewsaws_tgw_siteGetSpecType": {
            "type": "object",
            "description": "Shape of the AWS TGW site specification",
            "title": "GetSpecType",
            "x-displayname": "Get AWS TGW site",
            "x-ves-oneof-field-blocked_services_choice": "[\"block_all_services\",\"blocked_services\",\"default_blocked_services\"]",
            "x-ves-oneof-field-direct_connect_choice": "[\"direct_connect_disabled\",\"direct_connect_enabled\",\"private_connectivity\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.GetSpecType",
            "properties": {
                "aws_parameters": {
                    "description": " Section to provide information related to AWS credentials and AWS resources orchestrated and managed by F5XC.\n Example of the managed AWS resources to name few are VPC, TGW, Route Tables etc\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/aws_tgw_siteServicesVPCType",
                    "x-displayname": "AWS Credentials and Resources",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "block_all_services": {
                    "description": "Exclusive with [blocked_services default_blocked_services]\n Block DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": " Block DNS, SSH \u0026 WebUI services on Site"
                },
                "blocked_services": {
                    "description": "Exclusive with [block_all_services default_blocked_services]\n Use custom blocked services configuration, to list the services which need to be blocked",
                    "$ref": "#/definitions/fleetBlockedServicesListType",
                    "x-displayname": "Custom Blocked Services Configuration"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Site Co-ordinates"
                },
                "custom_dns": {
                    "description": " custom dns configure to the CE site",
                    "title": "custom_dns",
                    "$ref": "#/definitions/viewsCustomDNS",
                    "x-displayname": "Custom DNS"
                },
                "default_blocked_services": {
                    "description": "Exclusive with [block_all_services blocked_services]\n Allow access to DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow access to DNS, SSH \u0026 WebUI services on Site"
                },
                "direct_connect_disabled": {
                    "description": "Exclusive with [direct_connect_enabled private_connectivity]\n Disable Private Connectivity to Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Private Connectivity"
                },
                "direct_connect_enabled": {
                    "description": "Exclusive with [direct_connect_disabled private_connectivity]\n Direct Connect Connection to Site is enabled(Legacy)",
                    "$ref": "#/definitions/viewsDirectConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via Direct Connect (Legacy))"
                },
                "direct_connect_info": {
                    "description": " Direct Connect information obtained after creating the site and TGW",
                    "$ref": "#/definitions/viewsDirectConnectInfo",
                    "x-displayname": "Direct Connect Information"
                },
                "error_description": {
                    "type": "string",
                    "description": " Description of error on site\n\nExample: - \"value\"-",
                    "x-displayname": "Error Description",
                    "x-ves-example": "value"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "offline_survivability_mode": {
                    "description": " Enable/Disable offline survivability mode",
                    "$ref": "#/definitions/viewsOfflineSurvivabilityModeType",
                    "x-displayname": "Offline Survivability Mode"
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "private_connectivity": {
                    "description": "Exclusive with [direct_connect_disabled direct_connect_enabled]\n Enable Private Connectivity to Site via CloudLink",
                    "$ref": "#/definitions/viewsPrivateConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via CloudLink"
                },
                "site_errors": {
                    "type": "array",
                    "description": " Errors on site including suggested action\n\nExample: - \"Site Errors\"-",
                    "items": {
                        "$ref": "#/definitions/viewsSiteError"
                    },
                    "x-displayname": "Site Errors",
                    "x-ves-example": "Site Errors"
                },
                "site_state": {
                    "description": " Site state defines its state machine and in which operational phase it is. It is for both Regional Edge\n as well as Customer Edge. Example flow is site is in PROVISIONING then goest to STANDBY and ONLINE. In case of\n switching to different Connected RE it goes back to PROVISIONING and ONLINE. If any of phase failes then it\n goest to FAILED.",
                    "title": "site_state",
                    "$ref": "#/definitions/siteSiteState",
                    "x-displayname": "Site State"
                },
                "suggested_action": {
                    "type": "string",
                    "description": " Suggested action for customer on error\n\nExample: - \"value\"-",
                    "x-displayname": "Suggested Action",
                    "x-ves-example": "value"
                },
                "tags": {
                    "type": "object",
                    "description": " AWS Tags is a label consisting of a user-defined key and value.\n It helps to manage, identify, organize, search for, and filter resources in AWS console.\n\nExample: - \"devstaging\"-\n\nValidation Rules:\n  ves.io.schema.rules.map.keys.string.max_len: 127\n  ves.io.schema.rules.map.max_pairs: 40\n  ves.io.schema.rules.map.values.string.max_len: 255\n",
                    "x-displayname": "AWS Tags",
                    "x-ves-example": "dev: staging",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.map.keys.string.max_len": "127",
                        "ves.io.schema.rules.map.max_pairs": "40",
                        "ves.io.schema.rules.map.values.string.max_len": "255"
                    }
                },
                "tgw_info": {
                    "description": " TGW Site information obtained after creating the site and TGW",
                    "$ref": "#/definitions/aws_tgw_siteAWSTGWInfoConfigType",
                    "x-displayname": "TGW Site Information"
                },
                "tgw_security": {
                    "description": " Security Configuration for transit gateway",
                    "$ref": "#/definitions/aws_tgw_siteSecurityConfigType",
                    "x-displayname": "Site Security"
                },
                "validation_state": {
                    "description": " Validation State of the Site\n\nExample: - \"Validation State\"-",
                    "$ref": "#/definitions/viewsConfigValidationState",
                    "x-displayname": "Validation State",
                    "x-ves-example": "Validation State"
                },
                "vip_params_per_az": {
                    "type": "array",
                    "description": " VIP Parameters Per AZ.\n\nValidation Rules:\n  ves.io.schema.rules.repeated.num_items: 0,1,2,3\n  ves.io.schema.rules.repeated.unique: true\n",
                    "items": {
                        "$ref": "#/definitions/sitePublishVIPParamsPerAz"
                    },
                    "x-displayname": "VIP Params Per AZ",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.num_items": "0,1,2,3",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "vn_config": {
                    "description": " Site Network related details will be configured",
                    "$ref": "#/definitions/aws_tgw_siteVnConfiguration",
                    "x-displayname": "Site Networking"
                },
                "vpc_attachments": {
                    "description": " Spoke VPCs to be attached to the AWS TGW Site.\n Note that this choice would be deprecated in the near release.",
                    "$ref": "#/definitions/aws_tgw_siteVPCAttachmentListType",
                    "x-displayname": "Spoke VPCs"
                }
            }
        },
        "viewsaws_tgw_siteReplaceSpecType": {
            "type": "object",
            "description": "Shape of the AWS TGW site replace specification",
            "title": "ReplaceSpecType",
            "x-displayname": "Replace AWS TGW site",
            "x-ves-oneof-field-blocked_services_choice": "[\"block_all_services\",\"blocked_services\",\"default_blocked_services\"]",
            "x-ves-oneof-field-direct_connect_choice": "[\"direct_connect_disabled\",\"direct_connect_enabled\",\"private_connectivity\"]",
            "x-ves-oneof-field-logs_receiver_choice": "[\"log_receiver\",\"logs_streaming_disabled\"]",
            "x-ves-proto-message": "ves.io.schema.views.aws_tgw_site.ReplaceSpecType",
            "properties": {
                "aws_parameters": {
                    "description": " Section to provide information related to AWS credentials and AWS resources orchestrated and managed by F5XC.\n Example of the managed AWS resources to name few are VPC, TGW, Route Tables etc\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "$ref": "#/definitions/aws_tgw_siteServicesVPCReplaceType",
                    "x-displayname": "AWS Credentials and Resources",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "block_all_services": {
                    "description": "Exclusive with [blocked_services default_blocked_services]\n Block DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": " Block DNS, SSH \u0026 WebUI services on Site"
                },
                "blocked_services": {
                    "description": "Exclusive with [block_all_services default_blocked_services]\n Use custom blocked services configuration, to list the services which need to be blocked",
                    "$ref": "#/definitions/fleetBlockedServicesListType",
                    "x-displayname": "Custom Blocked Services Configuration"
                },
                "coordinates": {
                    "description": " Site longitude and latitude co-ordinates",
                    "$ref": "#/definitions/siteCoordinates",
                    "x-displayname": "Site Co-ordinates"
                },
                "custom_dns": {
                    "description": " custom dns configure to the CE site",
                    "title": "custom_dns",
                    "$ref": "#/definitions/viewsCustomDNS",
                    "x-displayname": "Custom DNS"
                },
                "default_blocked_services": {
                    "description": "Exclusive with [block_all_services blocked_services]\n Allow access to DNS, SSH \u0026 WebUI services on Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Allow access to DNS, SSH \u0026 WebUI services on Site"
                },
                "direct_connect_disabled": {
                    "description": "Exclusive with [direct_connect_enabled private_connectivity]\n Disable Private Connectivity to Site",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Private Connectivity"
                },
                "direct_connect_enabled": {
                    "description": "Exclusive with [direct_connect_disabled private_connectivity]\n Direct Connect Connection to Site is enabled(Legacy)",
                    "$ref": "#/definitions/viewsDirectConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via Direct Connect (Legacy))"
                },
                "log_receiver": {
                    "description": "Exclusive with [logs_streaming_disabled]\n Select log receiver for logs streaming",
                    "$ref": "#/definitions/schemaviewsObjectRefType",
                    "x-displayname": "Enable Logs Streaming"
                },
                "logs_streaming_disabled": {
                    "description": "Exclusive with [log_receiver]\n Logs Streaming is disabled",
                    "$ref": "#/definitions/ioschemaEmpty",
                    "x-displayname": "Disable Logs Streaming"
                },
                "offline_survivability_mode": {
                    "description": " Enable/Disable offline survivability mode",
                    "$ref": "#/definitions/viewsOfflineSurvivabilityModeType",
                    "x-displayname": "Offline Survivability Mode"
                },
                "performance_enhancement_mode": {
                    "description": " Performance Enhancement Mode to optimize for L3 or L7 networking",
                    "$ref": "#/definitions/viewsPerformanceEnhancementModeType",
                    "x-displayname": "Performance Enhancement Mode"
                },
                "private_connectivity": {
                    "description": "Exclusive with [direct_connect_disabled direct_connect_enabled]\n Enable Private Connectivity to Site via CloudLink",
                    "$ref": "#/definitions/viewsPrivateConnectConfigType",
                    "x-displayname": "Enable Private Connectivity via CloudLink"
                },
                "tgw_security": {
                    "description": " Security Configuration for transit gateway",
                    "$ref": "#/definitions/aws_tgw_siteSecurityConfigType",
                    "x-displayname": "Site Security"
                },
                "vn_config": {
                    "description": " Site Network related details will be configured",
                    "$ref": "#/definitions/aws_tgw_siteVnConfiguration",
                    "x-displayname": "Site Networking"
                },
                "vpc_attachments": {
                    "description": " Spoke VPCs to be attached to the AWS TGW Site.\n Note that this choice would be deprecated in the near release.",
                    "$ref": "#/definitions/aws_tgw_siteVPCAttachmentListType",
                    "x-displayname": "Spoke VPCs"
                }
            }
        }
    },
    "x-displayname": "Configure AWS TGW Site",
    "x-ves-proto-file": "ves.io/schema/views/aws_tgw_site/public_crudapi.proto"
}`

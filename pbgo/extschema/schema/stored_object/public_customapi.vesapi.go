// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package stored_object

import (
	bytes "bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create CustomAPI GRPC Client satisfying server.CustomClient
type CustomAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient CustomAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *CustomAPIGrpcClient) doRPCCreateObject(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &CreateObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.CreateObjectRequest", yamlReq)
	}
	rsp, err := c.grpcClient.CreateObject(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCDeleteObject(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &DeleteObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.DeleteObjectRequest", yamlReq)
	}
	rsp, err := c.grpcClient.DeleteObject(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCGetObject(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.GetObjectRequest", yamlReq)
	}
	rsp, err := c.grpcClient.GetObject(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) doRPCListObjects(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ListObjectsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.ListObjectsRequest", yamlReq)
	}
	rsp, err := c.grpcClient.ListObjects(ctx, req, opts...)
	return rsp, err
}

func (c *CustomAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewCustomAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &CustomAPIGrpcClient{
		conn:       cc,
		grpcClient: NewCustomAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["CreateObject"] = ccl.doRPCCreateObject

	rpcFns["DeleteObject"] = ccl.doRPCDeleteObject

	rpcFns["GetObject"] = ccl.doRPCGetObject

	rpcFns["ListObjects"] = ccl.doRPCListObjects

	ccl.rpcFns = rpcFns

	return ccl
}

// Create CustomAPI REST Client satisfying server.CustomClient
type CustomAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *CustomAPIRestClient) doRPCCreateObject(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &CreateObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.CreateObjectRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("content_format", fmt.Sprintf("%v", req.ContentFormat))
		q.Add("contents", fmt.Sprintf("%v", req.Contents))
		q.Add("description", fmt.Sprintf("%v", req.Description))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("object_attributes", fmt.Sprintf("%v", req.ObjectAttributes))
		q.Add("object_type", fmt.Sprintf("%v", req.ObjectType))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &CreateObjectResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.stored_object.CreateObjectResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCDeleteObject(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &DeleteObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.DeleteObjectRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("force_delete", fmt.Sprintf("%v", req.ForceDelete))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("object_type", fmt.Sprintf("%v", req.ObjectType))
		q.Add("version", fmt.Sprintf("%v", req.Version))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &DeleteObjectResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.stored_object.DeleteObjectResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCGetObject(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetObjectRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.GetObjectRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("object_type", fmt.Sprintf("%v", req.ObjectType))
		q.Add("version", fmt.Sprintf("%v", req.Version))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetObjectResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.stored_object.GetObjectResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) doRPCListObjects(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ListObjectsRequest{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.stored_object.ListObjectsRequest: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("latest_version_only", fmt.Sprintf("%v", req.LatestVersionOnly))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("object_type", fmt.Sprintf("%v", req.ObjectType))
		q.Add("query_type", fmt.Sprintf("%v", req.QueryType))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ListObjectsResponse{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.stored_object.ListObjectsResponse", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *CustomAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewCustomAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &CustomAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["CreateObject"] = ccl.doRPCCreateObject

	rpcFns["DeleteObject"] = ccl.doRPCDeleteObject

	rpcFns["GetObject"] = ccl.doRPCGetObject

	rpcFns["ListObjects"] = ccl.doRPCListObjects

	ccl.rpcFns = rpcFns

	return ccl
}

// Create customAPIInprocClient

// INPROC Client (satisfying CustomAPIClient interface)
type customAPIInprocClient struct {
	CustomAPIServer
}

func (c *customAPIInprocClient) CreateObject(ctx context.Context, in *CreateObjectRequest, opts ...grpc.CallOption) (*CreateObjectResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.stored_object.CustomAPI.CreateObject")
	return c.CustomAPIServer.CreateObject(ctx, in)
}
func (c *customAPIInprocClient) DeleteObject(ctx context.Context, in *DeleteObjectRequest, opts ...grpc.CallOption) (*DeleteObjectResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.stored_object.CustomAPI.DeleteObject")
	return c.CustomAPIServer.DeleteObject(ctx, in)
}
func (c *customAPIInprocClient) GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (*GetObjectResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.stored_object.CustomAPI.GetObject")
	return c.CustomAPIServer.GetObject(ctx, in)
}
func (c *customAPIInprocClient) ListObjects(ctx context.Context, in *ListObjectsRequest, opts ...grpc.CallOption) (*ListObjectsResponse, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.stored_object.CustomAPI.ListObjects")
	return c.CustomAPIServer.ListObjects(ctx, in)
}

func NewCustomAPIInprocClient(svc svcfw.Service) CustomAPIClient {
	return &customAPIInprocClient{CustomAPIServer: NewCustomAPIServer(svc)}
}

// RegisterGwCustomAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwCustomAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterCustomAPIHandlerClient(ctx, mux, NewCustomAPIInprocClient(s))
}

// Create customAPISrv

// SERVER (satisfying CustomAPIServer interface)
type customAPISrv struct {
	svc svcfw.Service
}

func (s *customAPISrv) CreateObject(ctx context.Context, in *CreateObjectRequest) (*CreateObjectResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.stored_object.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *CreateObjectResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.stored_object.CreateObjectRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.CreateObject' operation on 'stored_object'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.stored_object.CustomAPI.CreateObject"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.CreateObject(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.stored_object.CreateObjectResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) DeleteObject(ctx context.Context, in *DeleteObjectRequest) (*DeleteObjectResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.stored_object.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *DeleteObjectResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.stored_object.DeleteObjectRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.DeleteObject' operation on 'stored_object'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.stored_object.CustomAPI.DeleteObject"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.DeleteObject(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.stored_object.DeleteObjectResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) GetObject(ctx context.Context, in *GetObjectRequest) (*GetObjectResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.stored_object.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *GetObjectResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.stored_object.GetObjectRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.GetObject' operation on 'stored_object'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.stored_object.CustomAPI.GetObject"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetObject(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.stored_object.GetObjectResponse", rsp)...)

	return rsp, nil
}
func (s *customAPISrv) ListObjects(ctx context.Context, in *ListObjectsRequest) (*ListObjectsResponse, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.stored_object.CustomAPI")
	cah, ok := ah.(CustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *CustomAPIServer", ah)
	}

	var (
		rsp *ListObjectsResponse
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.stored_object.ListObjectsRequest", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'CustomAPI.ListObjects' operation on 'stored_object'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.stored_object.CustomAPI.ListObjects"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.ListObjects(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.stored_object.ListObjectsResponse", rsp)...)

	return rsp, nil
}

func NewCustomAPIServer(svc svcfw.Service) CustomAPIServer {
	return &customAPISrv{svc: svc}
}

var CustomAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Object Store APIs",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{namespace}/stored_objects/{object_type}": {
            "get": {
                "summary": "Get List Of Stored Objects",
                "description": "ListObjects is an API to list objects in object store",
                "operationId": "ves.io.schema.stored_object.CustomAPI.ListObjects",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/stored_objectListObjectsResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nx-required\nNamespace of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "object_type",
                        "description": "object_type\n\nx-example: \"swagger\"\nOptional query parameter. Type of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Object Type"
                    },
                    {
                        "name": "name",
                        "description": "x-example: \"my-file, shared/my-file, my-ns/my-file\"\nOptional query parameter. Name of the stored_object",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "query_type",
                        "description": "Optional query parameter. The type of search query needs to be performed. Could be EXACT_MATCH or PREFIX_MATCH.\nEXACT_MATCH returns the objects with exact match on the name filed, while PREFIX_MATCH returns the list of object matching the 'name' prefix. Default is EXACT_MATCH.\n\n - EXACT_MATCH: EXACT_MATCH\n\nReturns list of objects with exact match on the name filed.\n - PREFIX_MATCH: PREFIX_MATCH\n\nReturns the list of object matching the 'name' prefix.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "EXACT_MATCH",
                            "PREFIX_MATCH"
                        ],
                        "default": "EXACT_MATCH",
                        "x-displayname": "PREFIX MATCH"
                    },
                    {
                        "name": "latest_version_only",
                        "description": "Optional query parameter. If passed, returns only latest version of the objects.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean",
                        "x-displayname": "Latest Versions Only"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-stored_object-customapi-listobjects"
                },
                "x-ves-proto-rpc": "ves.io.schema.stored_object.CustomAPI.ListObjects"
            },
            "x-displayname": "Stored Object Custom API",
            "x-ves-proto-service": "ves.io.schema.stored_object.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/stored_objects/{object_type}/{name}": {
            "delete": {
                "summary": "Delete Stored Object(s)",
                "description": "DeleteObjects is an API to delete object(s) in object store",
                "operationId": "ves.io.schema.stored_object.CustomAPI.DeleteObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/stored_objectDeleteObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nx-required\nNamespace of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "object_type",
                        "description": "object_type\n\nx-example: \"swagger\"\nx-required\nType of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Object Type"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"volt-api-specs\"\nx-required\nName of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "version",
                        "description": "x-example: \"v1-21-01-12\"\nVersion of the stored_object in \"v{n}-{YY}-{MM}-{DD}\" formatted string, where n is version number and YY/MM/DD is year, month and date.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Version"
                    },
                    {
                        "name": "force_delete",
                        "description": "x-example: \"value\"\nOptional query parameter. If provided will delete all the versions of the specified object.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean",
                        "x-displayname": "Force Delete"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-stored_object-customapi-deleteobject"
                },
                "x-ves-proto-rpc": "ves.io.schema.stored_object.CustomAPI.DeleteObject"
            },
            "put": {
                "summary": "Create Stored Object",
                "description": "CreateObject is an API to upload an object to generic object store. Objects are immutable, a new version is created when the content is updated.",
                "operationId": "ves.io.schema.stored_object.CustomAPI.CreateObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/stored_objectCreateObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nx-required\nNamespace in which object is to be created",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "object_type",
                        "description": "object_type\n\nx-example: \"swagger\"\nx-required\nType of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Object Type"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"volt-api-specs\"\nx-required\nName of the stored_object.",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stored_objectCreateObjectRequest"
                        }
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-stored_object-customapi-createobject"
                },
                "x-ves-proto-rpc": "ves.io.schema.stored_object.CustomAPI.CreateObject"
            },
            "x-displayname": "Stored Object Custom API",
            "x-ves-proto-service": "ves.io.schema.stored_object.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/stored_objects/{object_type}/{name}/{version}": {
            "get": {
                "summary": "Get Stored Object",
                "description": "GetObject is an API to download an object from object store",
                "operationId": "ves.io.schema.stored_object.CustomAPI.GetObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/stored_objectGetObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nx-required\nNamespace of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "object_type",
                        "description": "object_type\n\nx-example: \"swagger\"\nx-required\nType of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Object Type"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"volt-api-specs\"\nx-required\nName of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "version",
                        "description": "version\n\nx-example: \"v0-21-09-13\"\nVersion of the stored_object in \"v{n}-{YY}-{MM}-{DD}\" formatted string, where n is version number and YY/MM/DD is year, month and date.",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Version"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-stored_object-customapi-getobject"
                },
                "x-ves-proto-rpc": "ves.io.schema.stored_object.CustomAPI.GetObject"
            },
            "delete": {
                "summary": "Delete Stored Object(s)",
                "description": "DeleteObjects is an API to delete object(s) in object store",
                "operationId": "ves.io.schema.stored_object.CustomAPI.DeleteObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/stored_objectDeleteObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "namespace\n\nx-example: \"system\"\nx-required\nNamespace of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "object_type",
                        "description": "object_type\n\nx-example: \"swagger\"\nx-required\nType of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Object Type"
                    },
                    {
                        "name": "name",
                        "description": "name\n\nx-example: \"volt-api-specs\"\nx-required\nName of the stored_object",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Name"
                    },
                    {
                        "name": "version",
                        "description": "version\n\nx-example: \"v1-21-01-12\"\nVersion of the stored_object in \"v{n}-{YY}-{MM}-{DD}\" formatted string, where n is version number and YY/MM/DD is year, month and date.",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Version"
                    },
                    {
                        "name": "force_delete",
                        "description": "x-example: \"value\"\nOptional query parameter. If provided will delete all the versions of the specified object.",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean",
                        "x-displayname": "Force Delete"
                    }
                ],
                "tags": [
                    "CustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-stored_object-customapi-deleteobject"
                },
                "x-ves-proto-rpc": "ves.io.schema.stored_object.CustomAPI.DeleteObject"
            },
            "x-displayname": "Stored Object Custom API",
            "x-ves-proto-service": "ves.io.schema.stored_object.CustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "schemaEmpty": {
            "type": "object",
            "description": "This can be used for messages where no values are needed",
            "title": "Empty",
            "x-displayname": "Empty",
            "x-ves-proto-message": "ves.io.schema.Empty"
        },
        "schemaHttpMethod": {
            "type": "string",
            "description": "Specifies the HTTP method used to access a resource.\n\nAny HTTP Method",
            "title": "HttpMethod",
            "enum": [
                "ANY",
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "CONNECT",
                "OPTIONS",
                "TRACE",
                "PATCH"
            ],
            "default": "ANY",
            "x-displayname": "HTTP Method",
            "x-ves-proto-enum": "ves.io.schema.HttpMethod"
        },
        "stored_objectCreateObjectRequest": {
            "type": "object",
            "description": "Request message for CreateObject API",
            "title": "CreateObjectRequest",
            "x-displayname": "Create Object Request",
            "x-ves-oneof-field-contents": "[\"bytes_value\",\"string_value\"]",
            "x-ves-oneof-field-object_attributes": "[\"mobile_integrator\",\"mobile_sdk\",\"no_attributes\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.CreateObjectRequest",
            "properties": {
                "bytes_value": {
                    "type": "string",
                    "description": "Exclusive with [string_value]\n Binary object contents. Should be encoded in base64 scheme.\n\nValidation Rules:\n  ves.io.schema.rules.bytes.max_len: 2097152\n",
                    "title": "bytes_value",
                    "format": "byte",
                    "maximum": 2097152,
                    "x-displayname": "Byte Value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.bytes.max_len": "2097152"
                    }
                },
                "content_format": {
                    "type": "string",
                    "description": " The optional content format associated with object\n\nExample: - \"json, yaml\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"\\\", \\\"json\\\", \\\"yaml\\\", \\\"txt\\\", \\\"bin\\\"]\n",
                    "title": "content_format",
                    "x-displayname": "Content Format",
                    "x-ves-example": "json, yaml",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"\\\", \\\"json\\\", \\\"yaml\\\", \\\"txt\\\", \\\"bin\\\"]"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " The optional description associated with object\n\nExample: - \"value\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 512\n",
                    "title": "description",
                    "maxLength": 512,
                    "x-displayname": "Description",
                    "x-ves-example": "value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "512"
                    }
                },
                "mobile_integrator": {
                    "description": "Exclusive with [mobile_sdk no_attributes]\n Attributes of a object of a type mobile-integrator",
                    "title": "mobile_integrator",
                    "$ref": "#/definitions/stored_objectMobileIntegratorAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-integrator"
                },
                "mobile_sdk": {
                    "description": "Exclusive with [mobile_integrator no_attributes]\n Attributes of a object of a type mobile-sdk",
                    "title": "mobile_sdk",
                    "$ref": "#/definitions/stored_objectMobileSDKAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-sdk"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the stored_object.\n\nExample: - \"volt-api-specs\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.max_len: 512\n  ves.io.schema.rules.string.min_len: 1\n  ves.io.schema.rules.string.ves_object_name: true\n",
                    "title": "name",
                    "minLength": 1,
                    "maxLength": 512,
                    "x-displayname": "Name",
                    "x-ves-example": "volt-api-specs",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.max_len": "512",
                        "ves.io.schema.rules.string.min_len": "1",
                        "ves.io.schema.rules.string.ves_object_name": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace in which object is to be created\n\nExample: - \"system\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "system",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "no_attributes": {
                    "description": "Exclusive with [mobile_integrator mobile_sdk]\n No special attributes specific to the object type",
                    "title": "no_attributes",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No attributes"
                },
                "object_type": {
                    "type": "string",
                    "description": " Type of the stored_object\n\nExample: - \"swagger\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n  ves.io.schema.rules.string.in: [\\\"swagger\\\", \\\"generic\\\", \\\"big-object\\\", \\\"mobile-sdk\\\", \\\"mobile-integrator\\\"]\n",
                    "title": "object_type",
                    "x-displayname": "Object Type",
                    "x-ves-example": "swagger",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true",
                        "ves.io.schema.rules.string.in": "[\\\"swagger\\\", \\\"generic\\\", \\\"big-object\\\", \\\"mobile-sdk\\\", \\\"mobile-integrator\\\"]"
                    }
                },
                "string_value": {
                    "type": "string",
                    "description": "Exclusive with [bytes_value]\n String formatted contents\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 2097152\n",
                    "title": "contents",
                    "maxLength": 2097152,
                    "x-displayname": "String Value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "2097152"
                    }
                }
            }
        },
        "stored_objectCreateObjectResponse": {
            "type": "object",
            "description": "Response message for CreateObject API",
            "title": "CreateObjectResponse",
            "x-displayname": "Create Object Response",
            "x-ves-oneof-field-additional_info": "[\"no_additional_info\",\"presigned_url\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.CreateObjectResponse",
            "properties": {
                "metadata": {
                    "description": " Stored object metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/stored_objectStoredObjectDescriptor",
                    "x-displayname": "Metadata"
                },
                "no_additional_info": {
                    "description": "Exclusive with [presigned_url]\n There is no additional information for the response",
                    "title": "no additional info",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No Additional Info"
                },
                "presigned_url": {
                    "description": "Exclusive with [no_additional_info]\n The url to download the resource",
                    "title": "presigned_url",
                    "$ref": "#/definitions/stored_objectPreSignedUrl",
                    "x-displayname": "Pre Signed Url Data"
                },
                "status": {
                    "description": " Status of create response if created, updated or already exists\n\nExample: - \"Created\"-",
                    "title": "status",
                    "$ref": "#/definitions/stored_objectStoredObjectResponseStatus",
                    "x-displayname": "Status",
                    "x-ves-example": "Created"
                }
            }
        },
        "stored_objectDeleteObjectResponse": {
            "type": "object",
            "description": "Response for DeleteObjects API",
            "title": "DeleteObjectResponse",
            "x-displayname": "Delete Objects Response",
            "x-ves-proto-message": "ves.io.schema.stored_object.DeleteObjectResponse",
            "properties": {
                "deleted_objects": {
                    "type": "array",
                    "description": " Names of Deleted Object\n\nExample: - \"value\"-",
                    "title": "deleted_objects",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Deleted Object Names",
                    "x-ves-example": "value"
                }
            }
        },
        "stored_objectGetObjectResponse": {
            "type": "object",
            "description": "Response message for GetObject API",
            "title": "GetObjectResponse",
            "x-displayname": "Get Object Response",
            "x-ves-oneof-field-contents": "[\"bytes_value\",\"presigned_url\",\"string_value\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.GetObjectResponse",
            "properties": {
                "bytes_value": {
                    "type": "string",
                    "description": "Exclusive with [presigned_url string_value]\n Binary object contents. This will be a base64 encoded string. The client should decode it to see the actual contents of the object.\n\nExample: - \"\"-\n\nValidation Rules:\n  ves.io.schema.rules.bytes.max_len: 2097152\n",
                    "title": "bytes_value",
                    "format": "byte",
                    "maximum": 2097152,
                    "x-displayname": "Byte Value",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.bytes.max_len": "2097152"
                    }
                },
                "content_format": {
                    "type": "string",
                    "description": " The optional content format associated with object\n\nExample: - \"json, yaml\"-",
                    "title": "content_format",
                    "x-displayname": "Content Format",
                    "x-ves-example": "json, yaml"
                },
                "metadata": {
                    "description": " Stored object metadata",
                    "title": "metadata",
                    "$ref": "#/definitions/stored_objectStoredObjectDescriptor",
                    "x-displayname": "Metadata"
                },
                "presigned_url": {
                    "description": "Exclusive with [bytes_value string_value]\n The url to download the resource",
                    "title": "presigned_url",
                    "$ref": "#/definitions/stored_objectPreSignedUrl",
                    "x-displayname": "Pre Signed Url Data"
                },
                "string_value": {
                    "type": "string",
                    "description": "Exclusive with [bytes_value presigned_url]\n String formatted contents\n\nExample: - \"\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 2097152\n",
                    "title": "contents",
                    "maxLength": 2097152,
                    "x-displayname": "Contents",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "2097152"
                    }
                }
            }
        },
        "stored_objectListItemDescriptor": {
            "type": "object",
            "description": "A descriptor for list response item.",
            "title": "ListItemDescriptor",
            "x-displayname": "List Item Descriptor",
            "x-ves-oneof-field-object_attributes": "[\"mobile_integrator\",\"mobile_sdk\",\"no_attributes\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.ListItemDescriptor",
            "properties": {
                "mobile_integrator": {
                    "description": "Exclusive with [mobile_sdk no_attributes]\n Attributes of a object of a type mobile-integrator",
                    "title": "mobile_integrator",
                    "$ref": "#/definitions/stored_objectMobileIntegratorAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-integrator"
                },
                "mobile_sdk": {
                    "description": "Exclusive with [mobile_integrator no_attributes]\n Attributes of a object of a type mobile-sdk",
                    "title": "mobile_sdk",
                    "$ref": "#/definitions/stored_objectMobileSDKAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-sdk"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the stored object.",
                    "title": "name",
                    "x-displayname": "Object Name"
                },
                "no_attributes": {
                    "description": "Exclusive with [mobile_integrator mobile_sdk]\n No special attributes specific to the object type",
                    "title": "no_attributes",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No attributes"
                },
                "tenant": {
                    "type": "string",
                    "description": " Tenant to which this object belongs.\n\nExample: - \"acmecorp\"-",
                    "title": "tenant",
                    "x-displayname": "Tenant",
                    "x-ves-example": "acmecorp"
                },
                "versions": {
                    "type": "array",
                    "description": " Available versions for the stored object.",
                    "title": "versions",
                    "items": {
                        "$ref": "#/definitions/stored_objectVersionDescriptor"
                    },
                    "x-displayname": "Versions"
                }
            }
        },
        "stored_objectListObjectsResponse": {
            "type": "object",
            "description": "Response for GetListOfObjects API",
            "title": "ListObjectsResponse",
            "x-displayname": "List Objects Response",
            "x-ves-proto-message": "ves.io.schema.stored_object.ListObjectsResponse",
            "properties": {
                "items": {
                    "type": "array",
                    "description": " Stored object names and available versions for each object.",
                    "title": "list of store object descriptors",
                    "items": {
                        "$ref": "#/definitions/stored_objectListItemDescriptor"
                    },
                    "x-displayname": "Stored Object Descriptors"
                }
            }
        },
        "stored_objectMobileIntegratorAttributes": {
            "type": "object",
            "description": "Describes attributes specific to object type - mobile-integrator",
            "title": "MobileIntegratorAttributes",
            "x-displayname": "mobile-integrator attributes",
            "x-ves-proto-message": "ves.io.schema.stored_object.MobileIntegratorAttributes",
            "properties": {
                "os_type": {
                    "description": " Select the Operating System type for mobile integrator release.\n\nExample: - \"IOS\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.enum.defined_only: true\n  ves.io.schema.rules.message.required: true\n",
                    "title": "os_type",
                    "$ref": "#/definitions/stored_objectOSType",
                    "x-displayname": "Operating System type",
                    "x-ves-example": "IOS",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.defined_only": "true",
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "release_version": {
                    "type": "string",
                    "description": " Version of mobile integrator release\n\nExample: - \"v.4.2.1\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 32\n  ves.io.schema.rules.string.not_empty: true\n",
                    "title": "release_version",
                    "maxLength": 32,
                    "x-displayname": "mobile integrator release version",
                    "x-ves-example": "v.4.2.1",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "32",
                        "ves.io.schema.rules.string.not_empty": "true"
                    }
                }
            }
        },
        "stored_objectMobileSDKAttributes": {
            "type": "object",
            "description": "Describes attributes specific to object type - mobile-sdk",
            "title": "MobileSDKAttributes",
            "x-displayname": "mobile-sdk attributes",
            "x-ves-proto-message": "ves.io.schema.stored_object.MobileSDKAttributes",
            "properties": {
                "os_type": {
                    "description": " Select the Operating System type for mobile SDK release.\n\nExample: - \"IOS\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.enum.defined_only: true\n  ves.io.schema.rules.message.required: true\n",
                    "title": "os_type",
                    "$ref": "#/definitions/stored_objectOSType",
                    "x-displayname": "Operating System type",
                    "x-ves-example": "IOS",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.enum.defined_only": "true",
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "release_version": {
                    "type": "string",
                    "description": " Version of mobile sdk release\n\nExample: - \"v.4.2.1\"-",
                    "title": "release_version",
                    "x-displayname": "mobile sdk release version",
                    "x-ves-example": "v.4.2.1"
                }
            }
        },
        "stored_objectOSType": {
            "type": "string",
            "description": "Defines a selection for operating system type. Its either ANDROID or IOS\n\n - ANDROID: ANDROID\n\n - IOS: IOS\n",
            "title": "OSType",
            "enum": [
                "ANDROID",
                "IOS"
            ],
            "default": "ANDROID",
            "x-displayname": "Operating System type",
            "x-ves-proto-enum": "ves.io.schema.stored_object.OSType"
        },
        "stored_objectPreSignedUrl": {
            "type": "object",
            "description": "Pre signed url",
            "title": "PreSignedUrl",
            "x-displayname": "Pre Signed Url",
            "x-ves-oneof-field-storage_provider_choice": "[\"aws\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.PreSignedUrl",
            "properties": {
                "aws": {
                    "description": "Exclusive with []\n Relevant only for big_object type. The presigned url relevant data to upload or download the resource",
                    "title": "aws_big_object_url",
                    "$ref": "#/definitions/stored_objectPresignedUrlData",
                    "x-displayname": "AWS"
                }
            }
        },
        "stored_objectPresignedUrlData": {
            "type": "object",
            "description": "Pre signed url data",
            "title": "PresignedUrlData",
            "x-displayname": "Pre Signed Url Data",
            "x-ves-proto-message": "ves.io.schema.stored_object.PresignedUrlData",
            "properties": {
                "method": {
                    "description": " The method of the request matched to that url",
                    "title": "method",
                    "$ref": "#/definitions/schemaHttpMethod",
                    "x-displayname": "method"
                },
                "url": {
                    "type": "string",
                    "description": " The url to upload or download the resource",
                    "title": "url",
                    "x-displayname": "url"
                }
            }
        },
        "stored_objectQueryType": {
            "type": "string",
            "description": "x-displayName: \"Query Type\"\nThe type of search query needs to be performed. Could be EXACT_MATCH or PREFIX_MATCH.\nEXACT_MATCH returns the objects with exact match on the name filed, while PREFIX_MATCH returns the list of object having the 'name' as prefix. Default is EXACT_MATCH.\n\n - EXACT_MATCH: EXACT_MATCH\n\nx-displayName: \"EXACT MATCH\"\nReturns list of objects with exact match on the name filed.\n - PREFIX_MATCH: PREFIX_MATCH\n\nx-displayName: \"PREFIX MATCH\"\nReturns the list of object matching the 'name' prefix.",
            "title": "QueryType",
            "enum": [
                "EXACT_MATCH",
                "PREFIX_MATCH"
            ],
            "default": "EXACT_MATCH"
        },
        "stored_objectStoredObjectDescriptor": {
            "type": "object",
            "description": "Response for Get, Create APIs",
            "title": "StoredObjectDescriptor",
            "x-displayname": "Object Metadata Response",
            "x-ves-oneof-field-object_attributes": "[\"mobile_integrator\",\"mobile_sdk\",\"no_attributes\"]",
            "x-ves-proto-message": "ves.io.schema.stored_object.StoredObjectDescriptor",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " Creation date \u0026 time for the object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Optional field, the Description for the object\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 512\n",
                    "title": "description",
                    "maxLength": 512,
                    "x-displayname": "description",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "512"
                    }
                },
                "mobile_integrator": {
                    "description": "Exclusive with [mobile_sdk no_attributes]\n Attributes of a object of a type mobile-integrator",
                    "title": "mobile_integrator",
                    "$ref": "#/definitions/stored_objectMobileIntegratorAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-integrator"
                },
                "mobile_sdk": {
                    "description": "Exclusive with [mobile_integrator no_attributes]\n Attributes of a object of a type mobile-sdk",
                    "title": "mobile_sdk",
                    "$ref": "#/definitions/stored_objectMobileSDKAttributes",
                    "x-displayname": "Attributes of a object of a type mobile-sdk"
                },
                "name": {
                    "type": "string",
                    "description": " Name of the stored object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "name",
                    "x-displayname": "Name",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the stored object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "namespace",
                    "x-displayname": "Namespace",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "no_attributes": {
                    "description": "Exclusive with [mobile_integrator mobile_sdk]\n No special attributes specific to the object type",
                    "title": "no_attributes",
                    "$ref": "#/definitions/schemaEmpty",
                    "x-displayname": "No attributes"
                },
                "url": {
                    "type": "string",
                    "description": " Url of the stored object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "url",
                    "x-displayname": "Url",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "version": {
                    "type": "string",
                    "description": " Version of the stored object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "version",
                    "x-displayname": "Version",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "stored_objectStoredObjectResponseStatus": {
            "type": "string",
            "description": "The stored object status represents status of create object response if object got created, updated or already exists.",
            "title": "StoredObjectResponseStatus",
            "enum": [
                "STORED_OBJECT_STATUS_NONE",
                "STORED_OBJECT_STATUS_CREATED",
                "STORED_OBJECT_STATUS_UPDATED",
                "STORED_OBJECT_STATUS_ALREADY_EXISTS"
            ],
            "default": "STORED_OBJECT_STATUS_NONE",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.stored_object.StoredObjectResponseStatus"
        },
        "stored_objectVersionDescriptor": {
            "type": "object",
            "description": "Descriptor for store object version.",
            "title": "VersionDescriptor",
            "x-displayname": "Version Descriptor",
            "x-ves-proto-message": "ves.io.schema.stored_object.VersionDescriptor",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " Creation date \u0026 time for the object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "description": {
                    "type": "string",
                    "description": " Optional field, the Description for the object\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 512\n",
                    "title": "description",
                    "maxLength": 512,
                    "x-displayname": "description",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "512"
                    }
                },
                "latest_version": {
                    "type": "boolean",
                    "description": " A tag representing if this is the latest version for the object.",
                    "title": "latest_version",
                    "format": "boolean",
                    "x-displayname": "Latest Version"
                },
                "url": {
                    "type": "string",
                    "description": " Url of the stored object\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "url",
                    "x-displayname": "Url",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "version": {
                    "type": "string",
                    "description": " Version of the stored object.",
                    "title": "version",
                    "x-displayname": "Version"
                }
            }
        }
    },
    "x-displayname": "Stored Object",
    "x-ves-proto-file": "ves.io/schema/stored_object/public_customapi.proto"
}`

// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package stored_object

import (
	"reflect"

	"gopkg.volterra.us/stdlib/db"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/store"
	"gopkg.volterra.us/stdlib/svcfw"
)

func initializeValidatorRegistry(vr map[string]db.Validator) {
	vr["ves.io.schema.stored_object.CreateObjectRequest"] = CreateObjectRequestValidator()
	vr["ves.io.schema.stored_object.CreateObjectResponse"] = CreateObjectResponseValidator()
	vr["ves.io.schema.stored_object.DeleteObjectRequest"] = DeleteObjectRequestValidator()
	vr["ves.io.schema.stored_object.DeleteObjectResponse"] = DeleteObjectResponseValidator()
	vr["ves.io.schema.stored_object.GetObjectRequest"] = GetObjectRequestValidator()
	vr["ves.io.schema.stored_object.GetObjectResponse"] = GetObjectResponseValidator()
	vr["ves.io.schema.stored_object.ListItemDescriptor"] = ListItemDescriptorValidator()
	vr["ves.io.schema.stored_object.ListObjectsRequest"] = ListObjectsRequestValidator()
	vr["ves.io.schema.stored_object.ListObjectsResponse"] = ListObjectsResponseValidator()
	vr["ves.io.schema.stored_object.MobileAppShieldAttributes"] = MobileAppShieldAttributesValidator()
	vr["ves.io.schema.stored_object.MobileIntegratorAttributes"] = MobileIntegratorAttributesValidator()
	vr["ves.io.schema.stored_object.MobileSDKAttributes"] = MobileSDKAttributesValidator()
	vr["ves.io.schema.stored_object.PreSignedUrl"] = PreSignedUrlValidator()
	vr["ves.io.schema.stored_object.PresignedUrlData"] = PresignedUrlDataValidator()
	vr["ves.io.schema.stored_object.StoredObjectDescriptor"] = StoredObjectDescriptorValidator()
	vr["ves.io.schema.stored_object.VersionDescriptor"] = VersionDescriptorValidator()

	vr["ves.io.schema.stored_object.SpecType"] = SpecTypeValidator()

	vr["ves.io.schema.stored_object.Object"] = ObjectValidator()
	vr["ves.io.schema.stored_object.StatusObject"] = StatusObjectValidator()

	vr["ves.io.schema.stored_object.GlobalSpecType"] = GlobalSpecTypeValidator()

}

func initializeEntryRegistry(mdr *svcfw.MDRegistry) {

	mdr.EntryFactory["ves.io.schema.stored_object.Object"] = NewEntryObject
	mdr.EntryStoreMap["ves.io.schema.stored_object.Object"] = store.InMemory
	mdr.EntryRegistry["ves.io.schema.stored_object.Object"] = reflect.TypeOf(&DBObject{})
	mdr.EntryIndexers["ves.io.schema.stored_object.Object"] = GetObjectIndexers
	mdr.EntryFactory["ves.io.schema.stored_object.StatusObject"] = NewEntryStatusObject
	mdr.EntryStoreMap["ves.io.schema.stored_object.StatusObject"] = store.InMemory
	mdr.EntryRegistry["ves.io.schema.stored_object.StatusObject"] = reflect.TypeOf(&DBStatusObject{})
	mdr.EntryIndexers["ves.io.schema.stored_object.StatusObject"] = GetStatusObjectIndexers

}

func initializeRPCRegistry(mdr *svcfw.MDRegistry) {

	mdr.RPCConfidentialRequestRegistry["ves.io.schema.stored_object.CustomPrivateAPI.CreateObject"] = "ves.io.schema.stored_object.CreateObjectRequest"

	mdr.RPCConfidentialRequestRegistry["ves.io.schema.stored_object.CustomAPI.CreateObject"] = "ves.io.schema.stored_object.CreateObjectRequest"

}

func initializeAPIGwServiceSlugsRegistry(sm map[string]string) {
	sm["ves.io.schema.stored_object.CustomAPI"] = "object_store"
	sm["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = "object_store"
	sm["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = "object_store"

}

func initializeP0PolicyRegistry(sm map[string]svcfw.P0PolicyInfo) {

}

func initializeCRUDServiceRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	var (
		csr       *svcfw.CRUDServiceRegistry
		customCSR *svcfw.CustomServiceRegistry
	)
	_, _ = csr, customCSR

	customCSR = mdr.PvtCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas

		customCSR.SwaggerRegistry["ves.io.schema.stored_object.Object"] = CustomPrivateAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.stored_object.CustomPrivateAPI"] = NewCustomPrivateAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.stored_object.CustomPrivateAPI"] = NewCustomPrivateAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.stored_object.CustomPrivateAPI"] = RegisterCustomPrivateAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.stored_object.CustomPrivateAPI"] = RegisterGwCustomPrivateAPIHandler
		customCSR.ServerRegistry["ves.io.schema.stored_object.CustomPrivateAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewCustomPrivateAPIServer(svc)
		}

	}()

	customCSR = mdr.PubCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas

		customCSR.SwaggerRegistry["ves.io.schema.stored_object.Object"] = CustomAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.stored_object.CustomAPI"] = NewCustomAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.stored_object.CustomAPI"] = NewCustomAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.stored_object.CustomAPI"] = RegisterCustomAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.stored_object.CustomAPI"] = RegisterGwCustomAPIHandler
		customCSR.ServerRegistry["ves.io.schema.stored_object.CustomAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewCustomAPIServer(svc)
		}

	}()

	customCSR = mdr.PubCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas

		customCSR.SwaggerRegistry["ves.io.schema.stored_object.Object"] = MobileAppShieldCustomAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = NewMobileAppShieldCustomAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = NewMobileAppShieldCustomAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = RegisterMobileAppShieldCustomAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = RegisterGwMobileAppShieldCustomAPIHandler
		customCSR.ServerRegistry["ves.io.schema.stored_object.MobileAppShieldCustomAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewMobileAppShieldCustomAPIServer(svc)
		}

	}()

	customCSR = mdr.PubCustomServiceRegistry

	func() {
		// set swagger jsons for our and external schemas

		customCSR.SwaggerRegistry["ves.io.schema.stored_object.Object"] = MobileIntegratorCustomAPISwaggerJSON

		customCSR.GrpcClientRegistry["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = NewMobileIntegratorCustomAPIGrpcClient
		customCSR.RestClientRegistry["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = NewMobileIntegratorCustomAPIRestClient
		if isExternal {
			return
		}
		mdr.SvcRegisterHandlers["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = RegisterMobileIntegratorCustomAPIServer
		mdr.SvcGwRegisterHandlers["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = RegisterGwMobileIntegratorCustomAPIHandler
		customCSR.ServerRegistry["ves.io.schema.stored_object.MobileIntegratorCustomAPI"] = func(svc svcfw.Service) server.APIHandler {
			return NewMobileIntegratorCustomAPIServer(svc)
		}

	}()

}

func InitializeMDRegistry(mdr *svcfw.MDRegistry, isExternal bool) {
	initializeEntryRegistry(mdr)
	initializeValidatorRegistry(mdr.ValidatorRegistry)

	initializeCRUDServiceRegistry(mdr, isExternal)
	if isExternal {
		return
	}

	initializeRPCRegistry(mdr)
	initializeAPIGwServiceSlugsRegistry(mdr.APIGwServiceSlugs)
	initializeP0PolicyRegistry(mdr.P0PolicyRegistry)

}

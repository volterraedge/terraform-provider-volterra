// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/virtual_host/public_apiep_customapi.proto

// Virtual host
//
// x-displayName: "Virtual Host"
// Virtual host is main anchor configuration for a proxy. Primary application for virtual host configuration is
// reverse proxy.  Virtual host object is used to create a Loadbalancer, virtual service Or API gateway.
// It can also be viewed as base object to define application routing.
//
// Terminology
//
// Downstream: A downstream host connects to Volterra ADC, sends requests, and receives responses.
// Upstream: An upstream host receives connections and requests from Volterra ADC and returns responses.

package virtual_host

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	app_type "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/app_type"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// API endpoints GET request Per Virtual Host
//
// x-displayName: "API Endpoints Request per Virtual Host"
// Request shape for GET API endpoints API
type APIEndpointsReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "blogging-app"
	// Namespace of the virtual host for current request
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Virtual Host Name
	//
	// x-displayName: "Virtual Host Name"
	// x-example: "blogging-app-vhost"
	// Virtual Host name for current request
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Api Endpoint Info Request
	//
	// x-displayName: "Api Endpoint Info Request"
	// List of additional things that needs to be sent as part of the request
	ApiEndpointInfoRequest []app_type.ApiEndpointInfoRequest `protobuf:"varint,3,rep,packed,name=api_endpoint_info_request,json=apiEndpointInfoRequest,proto3,enum=ves.io.schema.app_type.ApiEndpointInfoRequest" json:"api_endpoint_info_request,omitempty"`
}

func (m *APIEndpointsReq) Reset()      { *m = APIEndpointsReq{} }
func (*APIEndpointsReq) ProtoMessage() {}
func (*APIEndpointsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{0}
}
func (m *APIEndpointsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointsReq.Merge(m, src)
}
func (m *APIEndpointsReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointsReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointsReq proto.InternalMessageInfo

func (m *APIEndpointsReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointsReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *APIEndpointsReq) GetApiEndpointInfoRequest() []app_type.ApiEndpointInfoRequest {
	if m != nil {
		return m.ApiEndpointInfoRequest
	}
	return nil
}

// Swagger spec request
//
// x-displayName: "Swagger spec Request"
// Request shape for GET Swagger Spec API
type SwaggerSpecReq struct {
	// Virtual Host Name
	//
	// x-displayName: "Virtual Host Name"
	// x-example: "blogging-app"
	// Virtual Host for current request
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "shared"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (m *SwaggerSpecReq) Reset()      { *m = SwaggerSpecReq{} }
func (*SwaggerSpecReq) ProtoMessage() {}
func (*SwaggerSpecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{1}
}
func (m *SwaggerSpecReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwaggerSpecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwaggerSpecReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwaggerSpecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwaggerSpecReq.Merge(m, src)
}
func (m *SwaggerSpecReq) XXX_Size() int {
	return m.Size()
}
func (m *SwaggerSpecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SwaggerSpecReq.DiscardUnknown(m)
}

var xxx_messageInfo_SwaggerSpecReq proto.InternalMessageInfo

func (m *SwaggerSpecReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SwaggerSpecReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Swagger Spec Response
//
// x-displayName: "Swagger Spec Response"
// Json encoded swagger spec for the given vhost.
type SwaggerSpecRsp struct {
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\": {\"description\": \"\",\"title\": \"\",\"version\": \"\"},\"paths\": {\"\/api\/Addresss\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"query\",\"name\": \"test1\",\"type\": \"string\"},{\"description\": \"\",\"in\": \"query\",\"items\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"name\": \"test\",\"type\": \"array\"},{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\", \\\"abc\\\": \\\"def\\\"}\"],\"properties\": {\"abc\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"city\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"country\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"mobileNum\": {\"type\": \"integer\"},\"state\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"streetAddress\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"},\"zipCode\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\",\"abc\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/api\/Cards\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"fullName\\\": \\\"dummy\\\", \\\"cardNum\\\": 0, \\\"expMonth\\\": \\\"0\\\", \\\"expYear\\\": \\\"0\\\"}\"],\"properties\": {\"cardNum\": {\"type\": \"integer\"},\"expMonth\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"expYear\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"fullName\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"}},\"required\": [\"expMonth\",\"expYear\",\"fullName\",\"cardNum\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/basket\/6\/checkout\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9792\\\", \\\"addressId\\\": \\\"21189\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9814\\\", \\\"addressId\\\": \\\"21409\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9822\\\", \\\"addressId\\\": \\\"21489\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9793\\\", \\\"addressId\\\": \\\"21199\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\",\"{\\\"couponData\\\": \\\"MTIzNDU2Nzg5MC0xNTg3MzM3MjAwMDAw\\\", \\\"orderDetails\\\": {\\\"paymentId\\\": \\\"9817\\\", \\\"addressId\\\": \\\"21439\\\", \\\"deliveryMethodId\\\": \\\"1\\\"}}\"],\"properties\": {\"couponData\": {\"type\": \"string\"},\"orderDetails\": {\"properties\": {\"addressId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"deliveryMethodId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"},\"paymentId\": {\"description\": \"Integer\",\"pattern\": \"-?\\\\d+\",\"type\": \"string\"}},\"required\": [\"addressId\",\"paymentId\",\"deliveryMethodId\"],\"type\": \"object\"}},\"required\": [\"orderDetails\",\"couponData\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/products\/1\/reviews\": {\"put\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [],\"responses\": {\"200\": {\"description\": \"\"}}}},\"\/rest\/user\/login\": {\"post\": {\"consumes\": [\"application\/json\"],\"description\": \"Swagger auto-generated from learnt schema\",\"parameters\": [{\"description\": \"\",\"in\": \"body\",\"name\": \"body\",\"schema\": {\"example\": [\"{\\\"email\\\":\\\"dummy0@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy1@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy2@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\",\"{\\\"email\\\":\\\"dummy3@dummy.com\\\",\\\"password\\\":\\\"redacted\\\",\\\"test\\\":\\\"Hello, \u4E16\u754C\\\"}\"],\"properties\": {\"email\": {\"description\": \"Email\",\"pattern\": \".+@.+\",\"type\": \"string\",\"x-pii\": {\"examples\": [\"dummy0@dummy.com\",\"dummy1@dummy.com\",\"dummy2@dummy.com\",\"dummy3@dummy.com\"]}},\"password\": {\"description\": \"Word\",\"pattern\": \"[a-z0-9-]+\",\"type\": \"string\"},\"test\": {\"type\": \"string\"}},\"required\": [\"email\",\"test\",\"password\"],\"type\": \"object\"}}],\"responses\": {\"200\": {\"description\": \"\"}}}}},\"schemes\": [\"https\",\"http\"],\"swagger\": \"2.0\"}"
	// Swagger spec json encoded string for current request
	SwaggerSpec string `protobuf:"bytes,1,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
}

func (m *SwaggerSpecRsp) Reset()      { *m = SwaggerSpecRsp{} }
func (*SwaggerSpecRsp) ProtoMessage() {}
func (*SwaggerSpecRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{2}
}
func (m *SwaggerSpecRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SwaggerSpecRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SwaggerSpecRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SwaggerSpecRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwaggerSpecRsp.Merge(m, src)
}
func (m *SwaggerSpecRsp) XXX_Size() int {
	return m.Size()
}
func (m *SwaggerSpecRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SwaggerSpecRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SwaggerSpecRsp proto.InternalMessageInfo

func (m *SwaggerSpecRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

// API endpoint PDF request Per Virtual Host
//
// x-displayName: "PDF Request per Virtual Host"
// shape of request to get PDF for a given API endpoint Per Virtual Host
type APIEndpointPDFReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "blogging-app"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Virtual Host
	//
	// x-displayName: "Virtual Host Name"
	// x-example: "blogging-app-vhost"
	// Virtual Host Name for current request
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "api/v1/user_id/DYN/vehicle_id/DYN"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "GET"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *APIEndpointPDFReq) Reset()      { *m = APIEndpointPDFReq{} }
func (*APIEndpointPDFReq) ProtoMessage() {}
func (*APIEndpointPDFReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{3}
}
func (m *APIEndpointPDFReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointPDFReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointPDFReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointPDFReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointPDFReq.Merge(m, src)
}
func (m *APIEndpointPDFReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointPDFReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointPDFReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointPDFReq proto.InternalMessageInfo

func (m *APIEndpointPDFReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointPDFReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *APIEndpointPDFReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointPDFReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// API endpoint Learnt Schema request Per Virtual Host
//
// x-displayName: "API endpoint Learnt Schema request per Virtual Host"
// shape of request to get API endpoint Learnt Schema request for a given API endpoint Per Virtual Host
type APIEndpointLearntSchemaReq struct {
	// Namespace
	//
	// x-displayName: "Namespace"
	// x-example: "blogging-app"
	// Namespace of the App type for current request
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Virtual Host
	//
	// x-displayName: "Virtual Host Name"
	// x-example: "blogging-app-vhost"
	// Virtual Host Name for current request
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Discovered API URL
	//
	// x-displayName: "API URL"
	// x-example: "api/v1/user_id/DYN/vehicle_id/DYN"
	// API endpoint for which PDFs are requested.
	CollapsedUrl string `protobuf:"bytes,3,opt,name=collapsed_url,json=collapsedUrl,proto3" json:"collapsed_url,omitempty"`
	// Method of current API URL
	//
	// x-displayName: "Method"
	// x-example: "GET"
	// method of API endpoint for which PDFs are requested.
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
}

func (m *APIEndpointLearntSchemaReq) Reset()      { *m = APIEndpointLearntSchemaReq{} }
func (*APIEndpointLearntSchemaReq) ProtoMessage() {}
func (*APIEndpointLearntSchemaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{4}
}
func (m *APIEndpointLearntSchemaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointLearntSchemaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointLearntSchemaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointLearntSchemaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointLearntSchemaReq.Merge(m, src)
}
func (m *APIEndpointLearntSchemaReq) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointLearntSchemaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointLearntSchemaReq.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointLearntSchemaReq proto.InternalMessageInfo

func (m *APIEndpointLearntSchemaReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetCollapsedUrl() string {
	if m != nil {
		return m.CollapsedUrl
	}
	return ""
}

func (m *APIEndpointLearntSchemaReq) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

// API endpoints GET response
//
// x-displayName: "API Endpoints Response"
// Response shape for GET API endpoints API. It is list of API endpoints discovered
type APIEndpointsRsp struct {
	// API endpoints list
	//
	// x-displayName: "API Endpoints"
	// list of API endpoints discovered
	ApiepList []*app_type.APIEPInfo `protobuf:"bytes,1,rep,name=apiep_list,json=apiepList,proto3" json:"apiep_list,omitempty"`
}

func (m *APIEndpointsRsp) Reset()      { *m = APIEndpointsRsp{} }
func (*APIEndpointsRsp) ProtoMessage() {}
func (*APIEndpointsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{5}
}
func (m *APIEndpointsRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointsRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointsRsp.Merge(m, src)
}
func (m *APIEndpointsRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointsRsp proto.InternalMessageInfo

func (m *APIEndpointsRsp) GetApiepList() []*app_type.APIEPInfo {
	if m != nil {
		return m.ApiepList
	}
	return nil
}

// API endpoint PDF response
//
// x-displayName: "PDF Response"
// shape of response to get PDF for a given API endpoint.
type APIEndpointPDFRsp struct {
	// PDF data
	//
	// x-displayName: "PDF Data"
	//PDF data for request API endpoint.
	PdfInfo *app_type.APIEPPDFInfo `protobuf:"bytes,1,opt,name=pdf_info,json=pdfInfo,proto3" json:"pdf_info,omitempty"`
}

func (m *APIEndpointPDFRsp) Reset()      { *m = APIEndpointPDFRsp{} }
func (*APIEndpointPDFRsp) ProtoMessage() {}
func (*APIEndpointPDFRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{6}
}
func (m *APIEndpointPDFRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointPDFRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointPDFRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointPDFRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointPDFRsp.Merge(m, src)
}
func (m *APIEndpointPDFRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointPDFRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointPDFRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointPDFRsp proto.InternalMessageInfo

func (m *APIEndpointPDFRsp) GetPdfInfo() *app_type.APIEPPDFInfo {
	if m != nil {
		return m.PdfInfo
	}
	return nil
}

// API endpoint Req Body Schema response
//
// x-displayName: "Req Body Schema Response"
// shape of response to get req body schema for a given API endpoint.
type APIEndpointLearntSchemaRsp struct {
	// Learnt Schema
	//
	// x-displayName: "Learnt Schema"
	// x-example: "{\"example\":\"{\\\"country\\\": \\\"dummy\\\", \\\"fullName\\\": \\\"dummy\\\", \\\"mobileNum\\\": 1234567890, \\\"zipCode\\\": \\\"121\\\", \\\"streetAddress\\\": \\\"dummy\\\", \\\"city\\\": \\\"dummy\\\", \\\"state\\\": \\\"dummy\\\", \\\"test\\\": \\\"Hello, \\\\u4e16\\\\u754c\\\"}\",\"properties\":{\"city\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"country\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"fullName\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"mobileNum\":{\"type\":\"integer\"},\"state\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"streetAddress\":{\"description\":\"Word\",\"pattern\":\"[a-z0-9-]+\",\"type\":\"string\"},\"test\":{\"type\":\"string\"},\"zipCode\":{\"description\":\"Integer\",\"pattern\":\"-?\\\\d+\",\"type\":\"string\"}},\"required\":[\"fullName\",\"mobileNum\",\"city\",\"test\",\"zipCode\",\"state\",\"streetAddress\",\"country\"],\"type\":\"object\"}"
	//Learnt Schema for request API endpoint.
	LearntSchema string `protobuf:"bytes,1,opt,name=learnt_schema,json=learntSchema,proto3" json:"learnt_schema,omitempty"`
	// Swagger Spec
	//
	// x-displayName: "Swagger Spec"
	// x-example: "{\"info\":{\"description\":\"\",\"title\":\"\",\"version\":\"\"},\"paths\":{\"\/api\/Addresss\":{\"get\":{\"consumes\":[\"application\/json\"],\"description\":\"Swagger auto-generated from learnt schema\",\"parameters\":[{\"description\":\"\",\"in\":\"query\",\"name\":\"test\",\"type\":\"string\"},{\"description\":\"\",\"in\":\"query\",\"name\":\"test1\",\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"\"}}}}},\"schemes\":[\"https\",\"http\"],\"swagger\":\"2.0\"}"
	//Swagger spec for request API endpoint.
	SwaggerSpec string `protobuf:"bytes,2,opt,name=swagger_spec,json=swaggerSpec,proto3" json:"swagger_spec,omitempty"`
	// Last Updated Time
	//
	// x-displayName: "Last Updated Time"
	// x-example: "2021-01-22 15:46:23.767649"
	//Last Updated Time for request API endpoint. The time updated when the APIEP file is uploaded to Azure/AWS.
	LastUpdatedTime *types.Timestamp `protobuf:"bytes,3,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
}

func (m *APIEndpointLearntSchemaRsp) Reset()      { *m = APIEndpointLearntSchemaRsp{} }
func (*APIEndpointLearntSchemaRsp) ProtoMessage() {}
func (*APIEndpointLearntSchemaRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff43449ad67ea61, []int{7}
}
func (m *APIEndpointLearntSchemaRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIEndpointLearntSchemaRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIEndpointLearntSchemaRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIEndpointLearntSchemaRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIEndpointLearntSchemaRsp.Merge(m, src)
}
func (m *APIEndpointLearntSchemaRsp) XXX_Size() int {
	return m.Size()
}
func (m *APIEndpointLearntSchemaRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_APIEndpointLearntSchemaRsp.DiscardUnknown(m)
}

var xxx_messageInfo_APIEndpointLearntSchemaRsp proto.InternalMessageInfo

func (m *APIEndpointLearntSchemaRsp) GetLearntSchema() string {
	if m != nil {
		return m.LearntSchema
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetSwaggerSpec() string {
	if m != nil {
		return m.SwaggerSpec
	}
	return ""
}

func (m *APIEndpointLearntSchemaRsp) GetLastUpdatedTime() *types.Timestamp {
	if m != nil {
		return m.LastUpdatedTime
	}
	return nil
}

func init() {
	proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.virtual_host.APIEndpointsReq")
	golang_proto.RegisterType((*APIEndpointsReq)(nil), "ves.io.schema.virtual_host.APIEndpointsReq")
	proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.virtual_host.SwaggerSpecReq")
	golang_proto.RegisterType((*SwaggerSpecReq)(nil), "ves.io.schema.virtual_host.SwaggerSpecReq")
	proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.virtual_host.SwaggerSpecRsp")
	golang_proto.RegisterType((*SwaggerSpecRsp)(nil), "ves.io.schema.virtual_host.SwaggerSpecRsp")
	proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.virtual_host.APIEndpointPDFReq")
	golang_proto.RegisterType((*APIEndpointPDFReq)(nil), "ves.io.schema.virtual_host.APIEndpointPDFReq")
	proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.virtual_host.APIEndpointLearntSchemaReq")
	golang_proto.RegisterType((*APIEndpointLearntSchemaReq)(nil), "ves.io.schema.virtual_host.APIEndpointLearntSchemaReq")
	proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.virtual_host.APIEndpointsRsp")
	golang_proto.RegisterType((*APIEndpointsRsp)(nil), "ves.io.schema.virtual_host.APIEndpointsRsp")
	proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.virtual_host.APIEndpointPDFRsp")
	golang_proto.RegisterType((*APIEndpointPDFRsp)(nil), "ves.io.schema.virtual_host.APIEndpointPDFRsp")
	proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp")
	golang_proto.RegisterType((*APIEndpointLearntSchemaRsp)(nil), "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp")
}

func init() {
	proto.RegisterFile("ves.io/schema/virtual_host/public_apiep_customapi.proto", fileDescriptor_6ff43449ad67ea61)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/virtual_host/public_apiep_customapi.proto", fileDescriptor_6ff43449ad67ea61)
}

var fileDescriptor_6ff43449ad67ea61 = []byte{
	// 908 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x4f, 0x6f, 0xdc, 0x44,
	0x14, 0xdf, 0xd9, 0x2d, 0x2d, 0x99, 0x84, 0x44, 0x19, 0x50, 0xe5, 0x9a, 0xc8, 0x24, 0x86, 0x43,
	0x04, 0x5a, 0x0f, 0xda, 0x4a, 0x70, 0x84, 0x4d, 0xd3, 0x2d, 0x91, 0x2a, 0xb0, 0x36, 0xed, 0x85,
	0x8b, 0x35, 0x6b, 0xcf, 0x7a, 0x07, 0xbc, 0x9e, 0x89, 0x67, 0xbc, 0x10, 0xa1, 0x4a, 0x28, 0x47,
	0xb8, 0x20, 0xf8, 0x12, 0x1c, 0xf8, 0x00, 0xa8, 0xe5, 0x90, 0x0b, 0xa2, 0x27, 0x14, 0xe0, 0x52,
	0x71, 0x22, 0x1b, 0x0e, 0x70, 0xeb, 0x37, 0x00, 0x79, 0xec, 0x4d, 0xed, 0x4d, 0xba, 0x0d, 0x8d,
	0x44, 0x2f, 0xab, 0x99, 0xf7, 0xcf, 0xef, 0xf7, 0xf3, 0x7b, 0x3f, 0x2f, 0x7c, 0x7b, 0x44, 0xa5,
	0xc3, 0x38, 0x96, 0xfe, 0x80, 0x0e, 0x09, 0x1e, 0xb1, 0x44, 0xa5, 0x24, 0xf2, 0x06, 0x5c, 0x2a,
	0x2c, 0xd2, 0x5e, 0xc4, 0x7c, 0x8f, 0x08, 0x46, 0x85, 0xe7, 0xa7, 0x52, 0xf1, 0x21, 0x11, 0xcc,
	0x11, 0x09, 0x57, 0x1c, 0x99, 0x79, 0xa2, 0x93, 0x27, 0x3a, 0xe5, 0x44, 0xb3, 0x19, 0x32, 0x35,
	0x48, 0x7b, 0x8e, 0xcf, 0x87, 0x38, 0xe4, 0x21, 0xc7, 0x3a, 0xa5, 0x97, 0xf6, 0xf5, 0x4d, 0x5f,
	0xf4, 0x29, 0x2f, 0x65, 0xae, 0x84, 0x9c, 0x87, 0x11, 0xc5, 0x44, 0x30, 0x4c, 0xe2, 0x98, 0x2b,
	0xa2, 0x18, 0x8f, 0x65, 0xe1, 0xbd, 0x52, 0xf2, 0x0e, 0x94, 0x12, 0x3d, 0x1e, 0xec, 0x16, 0xae,
	0x57, 0x0a, 0xd7, 0x71, 0x79, 0xc5, 0x86, 0x54, 0x2a, 0x32, 0x14, 0x45, 0x80, 0x5d, 0x45, 0x47,
	0x84, 0xf0, 0xd4, 0xae, 0xa0, 0x38, 0xfb, 0x99, 0xd4, 0x7f, 0xb9, 0x1a, 0xc3, 0x45, 0xf9, 0xe1,
	0x2b, 0x53, 0xf4, 0x90, 0x88, 0x05, 0x44, 0xd1, 0xd3, 0xcb, 0x8f, 0xa8, 0xa4, 0xf1, 0xa8, 0x5a,
	0xc1, 0xbe, 0x0b, 0xe0, 0x52, 0xdb, 0xdd, 0xba, 0x1e, 0x07, 0x82, 0xb3, 0x58, 0xc9, 0x2e, 0xdd,
	0x41, 0x2b, 0x70, 0x2e, 0x26, 0x43, 0x2a, 0x05, 0xf1, 0xa9, 0x01, 0x56, 0xc1, 0xfa, 0x5c, 0xf7,
	0x91, 0x01, 0x21, 0x78, 0x21, 0xbb, 0x18, 0x75, 0xed, 0xd0, 0x67, 0x94, 0xc2, 0x2b, 0x44, 0x30,
	0x8f, 0x16, 0x55, 0x3c, 0x16, 0xf7, 0xb9, 0x97, 0xd0, 0x9d, 0x94, 0x4a, 0x65, 0x34, 0x56, 0x1b,
	0xeb, 0x8b, 0x2d, 0xc7, 0xa9, 0xbe, 0x91, 0x09, 0x58, 0xa7, 0x2d, 0xd8, 0xe4, 0xe9, 0x5b, 0x71,
	0x9f, 0x77, 0xf3, 0xac, 0x0d, 0x78, 0xf7, 0xef, 0xfd, 0xc6, 0x73, 0x5f, 0x83, 0xba, 0x01, 0xba,
	0x97, 0xc9, 0xa9, 0x31, 0xf6, 0x06, 0x5c, 0xdc, 0xfe, 0x84, 0x84, 0x21, 0x4d, 0xb6, 0x05, 0xf5,
	0xb3, 0xd6, 0x27, 0xcd, 0x81, 0x52, 0x73, 0x15, 0x38, 0xf5, 0x29, 0x38, 0xf6, 0xd5, 0x6a, 0x0d,
	0x29, 0xd0, 0x1a, 0x5c, 0x90, 0xb9, 0xc5, 0x93, 0x82, 0xfa, 0x45, 0xad, 0x79, 0xf9, 0x28, 0xca,
	0xde, 0x03, 0x70, 0xb9, 0xc4, 0x9a, 0xbb, 0xd9, 0x79, 0x3a, 0xde, 0x5e, 0x85, 0x2f, 0xf8, 0x3c,
	0x8a, 0x88, 0x90, 0x34, 0xf0, 0xd2, 0x24, 0x32, 0x1a, 0xda, 0xb9, 0x70, 0x6c, 0xbc, 0x9d, 0x44,
	0xe8, 0x32, 0xbc, 0x38, 0xa4, 0x6a, 0xc0, 0x03, 0xe3, 0x82, 0xf6, 0x16, 0x37, 0xfb, 0x4b, 0x00,
	0xcd, 0x52, 0x13, 0x37, 0x29, 0x49, 0x62, 0xb5, 0xad, 0xd9, 0x7d, 0x06, 0xdd, 0x6c, 0x4f, 0xcd,
	0x91, 0x14, 0xe8, 0x5d, 0x08, 0xf3, 0xe5, 0x8c, 0x98, 0x54, 0x06, 0x58, 0x6d, 0xac, 0xcf, 0xb7,
	0xd6, 0x1e, 0x3b, 0x06, 0xee, 0xd6, 0x75, 0x57, 0xbf, 0xdc, 0x39, 0x9d, 0x74, 0x93, 0x49, 0x65,
	0xdf, 0x3a, 0x41, 0xb3, 0x14, 0xe8, 0x1d, 0xf8, 0xbc, 0x08, 0xfa, 0x7a, 0xc6, 0x34, 0xae, 0xf9,
	0xd6, 0x6b, 0x33, 0x8b, 0xba, 0x9b, 0x1d, 0x5d, 0xf7, 0x92, 0x08, 0xfa, 0xd9, 0xc1, 0xfe, 0x6e,
	0x06, 0x71, 0x52, 0x64, 0x34, 0x44, 0xda, 0xe4, 0xe5, 0xe5, 0x0a, 0xf2, 0x16, 0xa2, 0x52, 0xdc,
	0x89, 0x21, 0xa9, 0x9f, 0x18, 0x12, 0xd4, 0x81, 0xcb, 0x11, 0x91, 0xca, 0x4b, 0x45, 0xb6, 0x93,
	0x81, 0x97, 0x6d, 0xbf, 0xa6, 0x74, 0xbe, 0x65, 0x3a, 0xb9, 0x34, 0x38, 0x13, 0x69, 0x70, 0x6e,
	0x4d, 0xa4, 0xa1, 0xbb, 0x94, 0x25, 0xdd, 0xce, 0x73, 0x32, 0x6b, 0xeb, 0x87, 0x4b, 0x70, 0xb1,
	0x9d, 0x51, 0x72, 0x4d, 0x6b, 0x5c, 0xdb, 0xdd, 0x42, 0xbf, 0x00, 0xb8, 0x74, 0x83, 0xaa, 0x32,
	0xe1, 0xe8, 0x0d, 0xe7, 0xf1, 0x92, 0xe7, 0x4c, 0xad, 0xb8, 0x79, 0xf6, 0x60, 0x29, 0xec, 0xe0,
	0xfe, 0xf7, 0x75, 0x30, 0xfe, 0xc9, 0x78, 0x71, 0x44, 0x65, 0x93, 0xf1, 0x66, 0x48, 0x63, 0x9a,
	0x90, 0xa8, 0x99, 0x50, 0x12, 0xec, 0xfd, 0xf6, 0xe7, 0x37, 0xf5, 0x6b, 0xa8, 0x5d, 0xa8, 0x31,
	0x3e, 0x9e, 0x30, 0x89, 0x3f, 0x3b, 0x3e, 0xdf, 0xa9, 0x08, 0x77, 0xe1, 0xb9, 0x83, 0xcb, 0x92,
	0x21, 0xd1, 0xef, 0x00, 0x2e, 0x57, 0x31, 0xb9, 0x9b, 0x1d, 0xd4, 0x3c, 0x63, 0xa3, 0xf9, 0x0a,
	0x9a, 0xff, 0x25, 0x5c, 0x0a, 0x3b, 0x7c, 0x12, 0xb2, 0x0e, 0xda, 0x3c, 0x2f, 0x32, 0x2c, 0x82,
	0x3e, 0xfa, 0x07, 0x40, 0xb3, 0x0a, 0xae, 0x3c, 0x75, 0xe8, 0xad, 0x33, 0xb6, 0x3d, 0xb5, 0xe3,
	0xe6, 0x53, 0xe5, 0x49, 0x61, 0xef, 0x3c, 0x09, 0xb7, 0x8b, 0xde, 0x3f, 0x37, 0xee, 0xca, 0x12,
	0xa1, 0x1f, 0x01, 0x5c, 0xbc, 0x41, 0x55, 0x49, 0x6b, 0xd1, 0xeb, 0xb3, 0xba, 0xaf, 0x0a, 0xbb,
	0xf9, 0xd2, 0x64, 0x63, 0xb2, 0x4f, 0xfc, 0x7b, 0x4a, 0x89, 0x0d, 0x1e, 0xec, 0xfe, 0x2f, 0x38,
	0x24, 0x2e, 0x2f, 0xba, 0x89, 0xf7, 0xef, 0x81, 0xc6, 0xaf, 0xf7, 0xc0, 0xda, 0x8c, 0xde, 0x3f,
	0xe8, 0x7d, 0x44, 0x7d, 0xb5, 0xf7, 0xb3, 0x51, 0x7f, 0x13, 0x6c, 0x7c, 0x01, 0x0e, 0x0e, 0xad,
	0xda, 0x83, 0x43, 0xab, 0xf6, 0xf0, 0xd0, 0x02, 0x9f, 0x8f, 0x2d, 0xf0, 0xed, 0xd8, 0x02, 0xf7,
	0xc7, 0x16, 0x38, 0x18, 0x5b, 0xe0, 0x8f, 0xb1, 0x05, 0xfe, 0x1a, 0x5b, 0xb5, 0x87, 0x63, 0x0b,
	0x7c, 0x75, 0x64, 0xd5, 0xf6, 0x8f, 0x2c, 0x70, 0x70, 0x64, 0xd5, 0x1e, 0x1c, 0x59, 0xb5, 0x0f,
	0xdd, 0x90, 0x8b, 0x8f, 0x43, 0x67, 0xc4, 0x23, 0x45, 0x93, 0x84, 0x38, 0xa9, 0xc4, 0xfa, 0xd0,
	0xe7, 0xc9, 0xb0, 0x29, 0x12, 0x3e, 0x62, 0x01, 0x4d, 0x9a, 0x13, 0x37, 0x16, 0xbd, 0x90, 0x63,
	0xfa, 0xa9, 0x2a, 0xbe, 0xf7, 0xa7, 0xfc, 0x67, 0xea, 0x5d, 0xd4, 0x82, 0x73, 0xf5, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x83, 0x0e, 0x7f, 0xf3, 0x58, 0x09, 0x00, 0x00,
}

func (this *APIEndpointsReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsReq)
	if !ok {
		that2, ok := that.(APIEndpointsReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if len(this.ApiEndpointInfoRequest) != len(that1.ApiEndpointInfoRequest) {
		return false
	}
	for i := range this.ApiEndpointInfoRequest {
		if this.ApiEndpointInfoRequest[i] != that1.ApiEndpointInfoRequest[i] {
			return false
		}
	}
	return true
}
func (this *SwaggerSpecReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecReq)
	if !ok {
		that2, ok := that.(SwaggerSpecReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	return true
}
func (this *SwaggerSpecRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SwaggerSpecRsp)
	if !ok {
		that2, ok := that.(SwaggerSpecRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	return true
}
func (this *APIEndpointPDFReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFReq)
	if !ok {
		that2, ok := that.(APIEndpointPDFReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *APIEndpointLearntSchemaReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaReq)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.CollapsedUrl != that1.CollapsedUrl {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *APIEndpointsRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointsRsp)
	if !ok {
		that2, ok := that.(APIEndpointsRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.ApiepList) != len(that1.ApiepList) {
		return false
	}
	for i := range this.ApiepList {
		if !this.ApiepList[i].Equal(that1.ApiepList[i]) {
			return false
		}
	}
	return true
}
func (this *APIEndpointPDFRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointPDFRsp)
	if !ok {
		that2, ok := that.(APIEndpointPDFRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.PdfInfo.Equal(that1.PdfInfo) {
		return false
	}
	return true
}
func (this *APIEndpointLearntSchemaRsp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIEndpointLearntSchemaRsp)
	if !ok {
		that2, ok := that.(APIEndpointLearntSchemaRsp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LearntSchema != that1.LearntSchema {
		return false
	}
	if this.SwaggerSpec != that1.SwaggerSpec {
		return false
	}
	if !this.LastUpdatedTime.Equal(that1.LastUpdatedTime) {
		return false
	}
	return true
}
func (this *APIEndpointsReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&virtual_host.APIEndpointsReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "ApiEndpointInfoRequest: "+fmt.Sprintf("%#v", this.ApiEndpointInfoRequest)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&virtual_host.SwaggerSpecReq{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SwaggerSpecRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&virtual_host.SwaggerSpecRsp{")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&virtual_host.APIEndpointPDFReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&virtual_host.APIEndpointLearntSchemaReq{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "CollapsedUrl: "+fmt.Sprintf("%#v", this.CollapsedUrl)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointsRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&virtual_host.APIEndpointsRsp{")
	if this.ApiepList != nil {
		s = append(s, "ApiepList: "+fmt.Sprintf("%#v", this.ApiepList)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointPDFRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&virtual_host.APIEndpointPDFRsp{")
	if this.PdfInfo != nil {
		s = append(s, "PdfInfo: "+fmt.Sprintf("%#v", this.PdfInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIEndpointLearntSchemaRsp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&virtual_host.APIEndpointLearntSchemaRsp{")
	s = append(s, "LearntSchema: "+fmt.Sprintf("%#v", this.LearntSchema)+",\n")
	s = append(s, "SwaggerSpec: "+fmt.Sprintf("%#v", this.SwaggerSpec)+",\n")
	if this.LastUpdatedTime != nil {
		s = append(s, "LastUpdatedTime: "+fmt.Sprintf("%#v", this.LastUpdatedTime)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPublicApiepCustomapi(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiepCustomAPIClient is the client API for ApiepCustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiepCustomAPIClient interface {
	// Get API endpoints Per Virtual Host
	//
	// x-displayName: "Get API Endpoints"
	// Get all autodiscovered API endpoints for Virtual Host
	GetAPIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Virtual Host
	//
	// x-displayName: "Get API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Virtual Host
	GetAPIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Virtual Host
	GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
}

type apiepCustomAPIClient struct {
	cc *grpc.ClientConn
}

func NewApiepCustomAPIClient(cc *grpc.ClientConn) ApiepCustomAPIClient {
	return &apiepCustomAPIClient{cc}
}

func (c *apiepCustomAPIClient) GetAPIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	out := new(APIEndpointsRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpoints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiepCustomAPIClient) GetAPIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	out := new(APIEndpointPDFRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpointPDF", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiepCustomAPIClient) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error) {
	out := new(APIEndpointLearntSchemaRsp)
	err := c.cc.Invoke(ctx, "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpointLearntSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiepCustomAPIClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ves.io.schema.virtual_host.ApiepCustomAPI/GetSwaggerSpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiepCustomAPIServer is the server API for ApiepCustomAPI service.
type ApiepCustomAPIServer interface {
	// Get API endpoints Per Virtual Host
	//
	// x-displayName: "Get API Endpoints"
	// Get all autodiscovered API endpoints for Virtual Host
	GetAPIEndpoints(context.Context, *APIEndpointsReq) (*APIEndpointsRsp, error)
	// Get PDF for API endpoint Per Virtual Host
	//
	// x-displayName: "Get API Endpoint PDF"
	// Get PDF of all metrics for a given auto discovered API endpoint for Virtual Host
	GetAPIEndpointPDF(context.Context, *APIEndpointPDFReq) (*APIEndpointPDFRsp, error)
	// Get Learnt Schema per API endpoint
	//
	// x-displayName: "Get Get Learnt Schema per API endpoint"
	// Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Virtual Host
	GetAPIEndpointLearntSchema(context.Context, *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error)
	// Get Swagger Spec for App Type
	//
	// x-displayName: "Get Swagger Spec for App Type"
	// Get the corresponding Swagger spec for the given app type
	GetSwaggerSpec(context.Context, *SwaggerSpecReq) (*httpbody.HttpBody, error)
}

// UnimplementedApiepCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedApiepCustomAPIServer struct {
}

func (*UnimplementedApiepCustomAPIServer) GetAPIEndpoints(ctx context.Context, req *APIEndpointsReq) (*APIEndpointsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIEndpoints not implemented")
}
func (*UnimplementedApiepCustomAPIServer) GetAPIEndpointPDF(ctx context.Context, req *APIEndpointPDFReq) (*APIEndpointPDFRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIEndpointPDF not implemented")
}
func (*UnimplementedApiepCustomAPIServer) GetAPIEndpointLearntSchema(ctx context.Context, req *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIEndpointLearntSchema not implemented")
}
func (*UnimplementedApiepCustomAPIServer) GetSwaggerSpec(ctx context.Context, req *SwaggerSpecReq) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwaggerSpec not implemented")
}

func RegisterApiepCustomAPIServer(s *grpc.Server, srv ApiepCustomAPIServer) {
	s.RegisterService(&_ApiepCustomAPI_serviceDesc, srv)
}

func _ApiepCustomAPI_GetAPIEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiepCustomAPIServer).GetAPIEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiepCustomAPIServer).GetAPIEndpoints(ctx, req.(*APIEndpointsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiepCustomAPI_GetAPIEndpointPDF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointPDFReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiepCustomAPIServer).GetAPIEndpointPDF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpointPDF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiepCustomAPIServer).GetAPIEndpointPDF(ctx, req.(*APIEndpointPDFReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiepCustomAPI_GetAPIEndpointLearntSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIEndpointLearntSchemaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiepCustomAPIServer).GetAPIEndpointLearntSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.virtual_host.ApiepCustomAPI/GetAPIEndpointLearntSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiepCustomAPIServer).GetAPIEndpointLearntSchema(ctx, req.(*APIEndpointLearntSchemaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiepCustomAPI_GetSwaggerSpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwaggerSpecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiepCustomAPIServer).GetSwaggerSpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.virtual_host.ApiepCustomAPI/GetSwaggerSpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiepCustomAPIServer).GetSwaggerSpec(ctx, req.(*SwaggerSpecReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiepCustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.virtual_host.ApiepCustomAPI",
	HandlerType: (*ApiepCustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAPIEndpoints",
			Handler:    _ApiepCustomAPI_GetAPIEndpoints_Handler,
		},
		{
			MethodName: "GetAPIEndpointPDF",
			Handler:    _ApiepCustomAPI_GetAPIEndpointPDF_Handler,
		},
		{
			MethodName: "GetAPIEndpointLearntSchema",
			Handler:    _ApiepCustomAPI_GetAPIEndpointLearntSchema_Handler,
		},
		{
			MethodName: "GetSwaggerSpec",
			Handler:    _ApiepCustomAPI_GetSwaggerSpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/virtual_host/public_apiep_customapi.proto",
}

func (m *APIEndpointsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiEndpointInfoRequest) > 0 {
		dAtA2 := make([]byte, len(m.ApiEndpointInfoRequest)*10)
		var j1 int
		for _, num := range m.ApiEndpointInfoRequest {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SwaggerSpecReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwaggerSpecReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SwaggerSpecRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SwaggerSpecRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SwaggerSpecRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SwaggerSpec) > 0 {
		i -= len(m.SwaggerSpec)
		copy(dAtA[i:], m.SwaggerSpec)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointPDFReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointPDFReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollapsedUrl) > 0 {
		i -= len(m.CollapsedUrl)
		copy(dAtA[i:], m.CollapsedUrl)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointLearntSchemaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointLearntSchemaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CollapsedUrl) > 0 {
		i -= len(m.CollapsedUrl)
		copy(dAtA[i:], m.CollapsedUrl)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.CollapsedUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointsRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointsRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointsRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for iNdEx := len(m.ApiepList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApiepList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointPDFRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointPDFRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointPDFRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PdfInfo != nil {
		{
			size, err := m.PdfInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *APIEndpointLearntSchemaRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIEndpointLearntSchemaRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIEndpointLearntSchemaRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != nil {
		{
			size, err := m.LastUpdatedTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SwaggerSpec) > 0 {
		i -= len(m.SwaggerSpec)
		copy(dAtA[i:], m.SwaggerSpec)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.SwaggerSpec)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.LearntSchema) > 0 {
		i -= len(m.LearntSchema)
		copy(dAtA[i:], m.LearntSchema)
		i = encodeVarintPublicApiepCustomapi(dAtA, i, uint64(len(m.LearntSchema)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPublicApiepCustomapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovPublicApiepCustomapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *APIEndpointsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	if len(m.ApiEndpointInfoRequest) > 0 {
		l = 0
		for _, e := range m.ApiEndpointInfoRequest {
			l += sovPublicApiepCustomapi(uint64(e))
		}
		n += 1 + sovPublicApiepCustomapi(uint64(l)) + l
	}
	return n
}

func (m *SwaggerSpecReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *SwaggerSpecRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *APIEndpointPDFReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *APIEndpointLearntSchemaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.CollapsedUrl)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *APIEndpointsRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ApiepList) > 0 {
		for _, e := range m.ApiepList {
			l = e.Size()
			n += 1 + l + sovPublicApiepCustomapi(uint64(l))
		}
	}
	return n
}

func (m *APIEndpointPDFRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PdfInfo != nil {
		l = m.PdfInfo.Size()
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func (m *APIEndpointLearntSchemaRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LearntSchema)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	l = len(m.SwaggerSpec)
	if l > 0 {
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	if m.LastUpdatedTime != nil {
		l = m.LastUpdatedTime.Size()
		n += 1 + l + sovPublicApiepCustomapi(uint64(l))
	}
	return n
}

func sovPublicApiepCustomapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPublicApiepCustomapi(x uint64) (n int) {
	return sovPublicApiepCustomapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *APIEndpointsReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointsReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`ApiEndpointInfoRequest:` + fmt.Sprintf("%v", this.ApiEndpointInfoRequest) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecReq{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SwaggerSpecRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SwaggerSpecRsp{`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointLearntSchemaReq{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`CollapsedUrl:` + fmt.Sprintf("%v", this.CollapsedUrl) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointsRsp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForApiepList := "[]*APIEPInfo{"
	for _, f := range this.ApiepList {
		repeatedStringForApiepList += strings.Replace(fmt.Sprintf("%v", f), "APIEPInfo", "app_type.APIEPInfo", 1) + ","
	}
	repeatedStringForApiepList += "}"
	s := strings.Join([]string{`&APIEndpointsRsp{`,
		`ApiepList:` + repeatedStringForApiepList + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointPDFRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointPDFRsp{`,
		`PdfInfo:` + strings.Replace(fmt.Sprintf("%v", this.PdfInfo), "APIEPPDFInfo", "app_type.APIEPPDFInfo", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIEndpointLearntSchemaRsp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIEndpointLearntSchemaRsp{`,
		`LearntSchema:` + fmt.Sprintf("%v", this.LearntSchema) + `,`,
		`SwaggerSpec:` + fmt.Sprintf("%v", this.SwaggerSpec) + `,`,
		`LastUpdatedTime:` + strings.Replace(fmt.Sprintf("%v", this.LastUpdatedTime), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPublicApiepCustomapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *APIEndpointsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v app_type.ApiEndpointInfoRequest
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicApiepCustomapi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= app_type.ApiEndpointInfoRequest(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowPublicApiepCustomapi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthPublicApiepCustomapi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthPublicApiepCustomapi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.ApiEndpointInfoRequest) == 0 {
					m.ApiEndpointInfoRequest = make([]app_type.ApiEndpointInfoRequest, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v app_type.ApiEndpointInfoRequest
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowPublicApiepCustomapi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= app_type.ApiEndpointInfoRequest(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ApiEndpointInfoRequest = append(m.ApiEndpointInfoRequest, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiEndpointInfoRequest", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SwaggerSpecRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SwaggerSpecRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SwaggerSpecRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollapsedUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CollapsedUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointsRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointsRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointsRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiepList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiepList = append(m.ApiepList, &app_type.APIEPInfo{})
			if err := m.ApiepList[len(m.ApiepList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointPDFRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointPDFRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PdfInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PdfInfo == nil {
				m.PdfInfo = &app_type.APIEPPDFInfo{}
			}
			if err := m.PdfInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *APIEndpointLearntSchemaRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIEndpointLearntSchemaRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LearntSchema", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LearntSchema = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwaggerSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SwaggerSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastUpdatedTime == nil {
				m.LastUpdatedTime = &types.Timestamp{}
			}
			if err := m.LastUpdatedTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPublicApiepCustomapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPublicApiepCustomapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPublicApiepCustomapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPublicApiepCustomapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPublicApiepCustomapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPublicApiepCustomapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPublicApiepCustomapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPublicApiepCustomapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPublicApiepCustomapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPublicApiepCustomapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPublicApiepCustomapi = fmt.Errorf("proto: unexpected end of group")
)

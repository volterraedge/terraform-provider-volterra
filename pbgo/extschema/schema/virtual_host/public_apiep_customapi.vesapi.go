// Copyright (c) 2022 F5, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.

package virtual_host

import (
	"bytes"
	"context"
	"fmt"
	io "io"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	google_api "google.golang.org/genproto/googleapis/api/httpbody"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create ApiepCustomAPI GRPC Client satisfying server.CustomClient
type ApiepCustomAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient ApiepCustomAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPICallSummary(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetAPICallSummaryReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetAPICallSummaryReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPICallSummary(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpoint(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpoint(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpointLearntSchema(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointLearntSchemaReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpointLearntSchema(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpointPDF(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointPDFReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpointPDF(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpoints(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointsReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpoints(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetApiEndpointsStats(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &ApiEndpointsStatsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.ApiEndpointsStatsReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetApiEndpointsStats(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetSwaggerSpec(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &SwaggerSpecReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.SwaggerSpecReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetSwaggerSpec(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetTopAPIEndpoints(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetTopAPIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetTopAPIEndpointsReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetTopAPIEndpoints(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetTopSensitiveData(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetTopSensitiveDataReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetTopSensitiveDataReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetTopSensitiveData(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetVulnerabilities(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &GetVulnerabilitiesReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetVulnerabilitiesReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetVulnerabilities(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCUpdateVulnerabilitiesState(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &UpdateVulnerabilitiesStateReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.UpdateVulnerabilitiesStateReq", yamlReq)
	}
	rsp, err := c.grpcClient.UpdateVulnerabilitiesState(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewApiepCustomAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &ApiepCustomAPIGrpcClient{
		conn:       cc,
		grpcClient: NewApiepCustomAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["GetAPICallSummary"] = ccl.doRPCGetAPICallSummary

	rpcFns["GetAPIEndpoint"] = ccl.doRPCGetAPIEndpoint

	rpcFns["GetAPIEndpointLearntSchema"] = ccl.doRPCGetAPIEndpointLearntSchema

	rpcFns["GetAPIEndpointPDF"] = ccl.doRPCGetAPIEndpointPDF

	rpcFns["GetAPIEndpoints"] = ccl.doRPCGetAPIEndpoints

	rpcFns["GetApiEndpointsStats"] = ccl.doRPCGetApiEndpointsStats

	rpcFns["GetSwaggerSpec"] = ccl.doRPCGetSwaggerSpec

	rpcFns["GetTopAPIEndpoints"] = ccl.doRPCGetTopAPIEndpoints

	rpcFns["GetTopSensitiveData"] = ccl.doRPCGetTopSensitiveData

	rpcFns["GetVulnerabilities"] = ccl.doRPCGetVulnerabilities

	rpcFns["UpdateVulnerabilitiesState"] = ccl.doRPCUpdateVulnerabilitiesState

	ccl.rpcFns = rpcFns

	return ccl
}

// Create ApiepCustomAPI REST Client satisfying server.CustomClient
type ApiepCustomAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPICallSummary(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetAPICallSummaryReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetAPICallSummaryReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("apiep_summary_filter", fmt.Sprintf("%v", req.ApiepSummaryFilter))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetAPICallSummaryRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.GetAPICallSummaryRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpoint(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.ApiEndpointInfoRequest {
			q.Add("api_endpoint_info_request", fmt.Sprintf("%v", item))
		}
		q.Add("collapsed_url", fmt.Sprintf("%v", req.CollapsedUrl))
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("method", fmt.Sprintf("%v", req.Method))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpointLearntSchema(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointLearntSchemaReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.ApiEndpointInfoRequest {
			q.Add("api_endpoint_info_request", fmt.Sprintf("%v", item))
		}
		q.Add("collapsed_url", fmt.Sprintf("%v", req.CollapsedUrl))
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("method", fmt.Sprintf("%v", req.Method))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointLearntSchemaRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpointPDF(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointPDFReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("collapsed_url", fmt.Sprintf("%v", req.CollapsedUrl))
		q.Add("method", fmt.Sprintf("%v", req.Method))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointPDFRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpoints(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointsReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.ApiEndpointInfoRequest {
			q.Add("api_endpoint_info_request", fmt.Sprintf("%v", item))
		}
		for _, item := range req.ApiepCategory {
			q.Add("apiep_category", fmt.Sprintf("%v", item))
		}
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("end_time", fmt.Sprintf("%v", req.EndTime))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("start_time", fmt.Sprintf("%v", req.StartTime))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointsRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointsRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetApiEndpointsStats(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &ApiEndpointsStatsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.ApiEndpointsStatsReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &ApiEndpointsStatsRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.ApiEndpointsStatsRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetSwaggerSpec(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &SwaggerSpecReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.SwaggerSpecReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &google_api.HttpBody{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		// server strips HTTP Body proto message and sends only data, re-build it here
		pbRsp.ContentType = rsp.Header.Get("Content-Type")
		pbRsp.Data = body

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetTopAPIEndpoints(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetTopAPIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetTopAPIEndpointsReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("apiep_summary_filter", fmt.Sprintf("%v", req.ApiepSummaryFilter))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("top_by_metric", fmt.Sprintf("%v", req.TopByMetric))
		q.Add("topk", fmt.Sprintf("%v", req.Topk))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetTopAPIEndpointsRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.GetTopAPIEndpointsRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetTopSensitiveData(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetTopSensitiveDataReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetTopSensitiveDataReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		for _, item := range req.ApiepCategory {
			q.Add("apiep_category", fmt.Sprintf("%v", item))
		}
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("topk", fmt.Sprintf("%v", req.Topk))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetTopSensitiveDataRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.GetTopSensitiveDataRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetVulnerabilities(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &GetVulnerabilitiesReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.GetVulnerabilitiesReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("context", fmt.Sprintf("%v", req.Context))
		for _, item := range req.Domains {
			q.Add("domains", fmt.Sprintf("%v", item))
		}
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &GetVulnerabilitiesRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.GetVulnerabilitiesRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCUpdateVulnerabilitiesState(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &UpdateVulnerabilitiesStateReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.UpdateVulnerabilitiesStateReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post", "put":
		jsn, err := codec.ToJSON(req, codec.ToWithUseProtoFieldName())
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		var op string
		if hm == "post" {
			op = http.MethodPost
		} else {
			op = http.MethodPut
		}
		newReq, err := http.NewRequest(op, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrapf(err, "Creating new HTTP %s request for custom API", op)
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("context", fmt.Sprintf("%v", req.Context))
		q.Add("domain", fmt.Sprintf("%v", req.Domain))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))
		q.Add("vuln_id", fmt.Sprintf("%v", req.VulnId))
		q.Add("vuln_state", fmt.Sprintf("%v", req.VulnState))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	// checking whether the status code is a successful status code (2xx series)
	if rsp.StatusCode < 200 || rsp.StatusCode > 299 {
		body, err := io.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := io.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &UpdateVulnerabilitiesStateRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, errors.Wrapf(err, "JSON Response %s is not of type *ves.io.schema.virtual_host.UpdateVulnerabilitiesStateRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewApiepCustomAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &ApiepCustomAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["GetAPICallSummary"] = ccl.doRPCGetAPICallSummary

	rpcFns["GetAPIEndpoint"] = ccl.doRPCGetAPIEndpoint

	rpcFns["GetAPIEndpointLearntSchema"] = ccl.doRPCGetAPIEndpointLearntSchema

	rpcFns["GetAPIEndpointPDF"] = ccl.doRPCGetAPIEndpointPDF

	rpcFns["GetAPIEndpoints"] = ccl.doRPCGetAPIEndpoints

	rpcFns["GetApiEndpointsStats"] = ccl.doRPCGetApiEndpointsStats

	rpcFns["GetSwaggerSpec"] = ccl.doRPCGetSwaggerSpec

	rpcFns["GetTopAPIEndpoints"] = ccl.doRPCGetTopAPIEndpoints

	rpcFns["GetTopSensitiveData"] = ccl.doRPCGetTopSensitiveData

	rpcFns["GetVulnerabilities"] = ccl.doRPCGetVulnerabilities

	rpcFns["UpdateVulnerabilitiesState"] = ccl.doRPCUpdateVulnerabilitiesState

	ccl.rpcFns = rpcFns

	return ccl
}

// Create apiepCustomAPIInprocClient

// INPROC Client (satisfying ApiepCustomAPIClient interface)
type apiepCustomAPIInprocClient struct {
	ApiepCustomAPIServer
}

func (c *apiepCustomAPIInprocClient) GetAPICallSummary(ctx context.Context, in *GetAPICallSummaryReq, opts ...grpc.CallOption) (*GetAPICallSummaryRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPICallSummary")
	return c.ApiepCustomAPIServer.GetAPICallSummary(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetAPIEndpoint(ctx context.Context, in *APIEndpointReq, opts ...grpc.CallOption) (*APIEndpointRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoint")
	return c.ApiepCustomAPIServer.GetAPIEndpoint(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema")
	return c.ApiepCustomAPIServer.GetAPIEndpointLearntSchema(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetAPIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF")
	return c.ApiepCustomAPIServer.GetAPIEndpointPDF(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetAPIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints")
	return c.ApiepCustomAPIServer.GetAPIEndpoints(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetApiEndpointsStats(ctx context.Context, in *ApiEndpointsStatsReq, opts ...grpc.CallOption) (*ApiEndpointsStatsRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetApiEndpointsStats")
	return c.ApiepCustomAPIServer.GetApiEndpointsStats(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*google_api.HttpBody, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec")
	return c.ApiepCustomAPIServer.GetSwaggerSpec(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetTopAPIEndpoints(ctx context.Context, in *GetTopAPIEndpointsReq, opts ...grpc.CallOption) (*GetTopAPIEndpointsRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopAPIEndpoints")
	return c.ApiepCustomAPIServer.GetTopAPIEndpoints(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetTopSensitiveData(ctx context.Context, in *GetTopSensitiveDataReq, opts ...grpc.CallOption) (*GetTopSensitiveDataRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopSensitiveData")
	return c.ApiepCustomAPIServer.GetTopSensitiveData(ctx, in)
}
func (c *apiepCustomAPIInprocClient) GetVulnerabilities(ctx context.Context, in *GetVulnerabilitiesReq, opts ...grpc.CallOption) (*GetVulnerabilitiesRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.GetVulnerabilities")
	return c.ApiepCustomAPIServer.GetVulnerabilities(ctx, in)
}
func (c *apiepCustomAPIInprocClient) UpdateVulnerabilitiesState(ctx context.Context, in *UpdateVulnerabilitiesStateReq, opts ...grpc.CallOption) (*UpdateVulnerabilitiesStateRsp, error) {
	ctx = server.ContextWithRpcFQN(ctx, "ves.io.schema.virtual_host.ApiepCustomAPI.UpdateVulnerabilitiesState")
	return c.ApiepCustomAPIServer.UpdateVulnerabilitiesState(ctx, in)
}

func NewApiepCustomAPIInprocClient(svc svcfw.Service) ApiepCustomAPIClient {
	return &apiepCustomAPIInprocClient{ApiepCustomAPIServer: NewApiepCustomAPIServer(svc)}
}

// RegisterGwApiepCustomAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwApiepCustomAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterApiepCustomAPIHandlerClient(ctx, mux, NewApiepCustomAPIInprocClient(s))
}

// Create apiepCustomAPISrv

// SERVER (satisfying ApiepCustomAPIServer interface)
type apiepCustomAPISrv struct {
	svc svcfw.Service
}

func (s *apiepCustomAPISrv) GetAPICallSummary(ctx context.Context, in *GetAPICallSummaryReq) (*GetAPICallSummaryRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *GetAPICallSummaryRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetAPICallSummaryReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPICallSummary' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPICallSummary"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPICallSummary(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetAPICallSummaryRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetAPIEndpoint(ctx context.Context, in *APIEndpointReq) (*APIEndpointRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *APIEndpointRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpoint' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoint"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpoint(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq) (*APIEndpointLearntSchemaRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *APIEndpointLearntSchemaRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointLearntSchemaReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpointLearntSchema' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpointLearntSchema(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetAPIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq) (*APIEndpointPDFRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *APIEndpointPDFRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointPDFReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpointPDF' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpointPDF(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointPDFRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetAPIEndpoints(ctx context.Context, in *APIEndpointsReq) (*APIEndpointsRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *APIEndpointsRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointsReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpoints' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpoints(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.APIEndpointsRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetApiEndpointsStats(ctx context.Context, in *ApiEndpointsStatsReq) (*ApiEndpointsStatsRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *ApiEndpointsStatsRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.ApiEndpointsStatsReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetApiEndpointsStats' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetApiEndpointsStats"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetApiEndpointsStats(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.ApiEndpointsStatsRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq) (*google_api.HttpBody, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *google_api.HttpBody
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.SwaggerSpecReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetSwaggerSpec' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetSwaggerSpec(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "google.api.HttpBody", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetTopAPIEndpoints(ctx context.Context, in *GetTopAPIEndpointsReq) (*GetTopAPIEndpointsRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *GetTopAPIEndpointsRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetTopAPIEndpointsReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetTopAPIEndpoints' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetTopAPIEndpoints"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetTopAPIEndpoints(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetTopAPIEndpointsRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetTopSensitiveData(ctx context.Context, in *GetTopSensitiveDataReq) (*GetTopSensitiveDataRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *GetTopSensitiveDataRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetTopSensitiveDataReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetTopSensitiveData' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetTopSensitiveData"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetTopSensitiveData(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetTopSensitiveDataRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) GetVulnerabilities(ctx context.Context, in *GetVulnerabilitiesReq) (*GetVulnerabilitiesRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *GetVulnerabilitiesRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetVulnerabilitiesReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetVulnerabilities' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetVulnerabilities"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetVulnerabilities(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.GetVulnerabilitiesRsp", rsp)...)

	return rsp, nil
}
func (s *apiepCustomAPISrv) UpdateVulnerabilitiesState(ctx context.Context, in *UpdateVulnerabilitiesStateReq) (*UpdateVulnerabilitiesStateRsp, error) {
	ah := s.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPIServer", ah)
	}

	var (
		rsp *UpdateVulnerabilitiesStateRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.UpdateVulnerabilitiesStateReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.UpdateVulnerabilitiesState' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if err := svcfw.FillOneofDefaultChoice(ctx, s.svc, in); err != nil {
		err = server.MaybePublicRestError(ctx, errors.Wrapf(err, "Filling oneof default choice"))
		return nil, server.GRPCStatusFromError(err).Err()
	}

	if s.svc.Config().EnableAPIValidation {
		if rvFn := s.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.UpdateVulnerabilitiesState"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.UpdateVulnerabilitiesState(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, s.svc, "ves.io.schema.virtual_host.UpdateVulnerabilitiesStateRsp", rsp)...)

	return rsp, nil
}

func NewApiepCustomAPIServer(svc svcfw.Service) ApiepCustomAPIServer {
	return &apiepCustomAPISrv{svc: svc}
}

var ApiepCustomAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Virtual host",
        "description": "Virtual host is main anchor configuration for a proxy. Primary application for virtual host configuration is \nreverse proxy.  Virtual host object is used to create a Loadbalancer, virtual service Or API gateway.\nIt can also be viewed as base object to define application routing.\n\nTerminology\n\nDownstream: A downstream host connects to F5XC ADC, sends requests, and receives responses.\nUpstream: An upstream host receives connections and requests from F5XC ADC and returns responses.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [],
    "paths": {
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoint": {
            "post": {
                "summary": "Get API Endpoint",
                "description": "Get API endpoint for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoint",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getapiendpoint"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoint"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoint/learnt_schema": {
            "get": {
                "summary": "Get Get Learnt Schema per API endpoint",
                "description": "Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointLearntSchemaRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host\n\nx-example: \"blogging-app-vhost\"\nVirtual Host Name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "collapsed_url",
                        "description": "x-example: \"api/v1/user_id/DYN/vehicle_id/DYN\"\nAPI endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "API URL"
                    },
                    {
                        "name": "method",
                        "description": "x-example: \"GET\"\nmethod of API endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Method"
                    },
                    {
                        "name": "domains",
                        "description": "x-example: \"www.example.com\"\nList of domains that needs to be sent as part of the request\nOptional filter by domains. If absent, all domains are considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "List of Domain"
                    },
                    {
                        "name": "api_endpoint_info_request",
                        "description": "List of additional things that needs to be sent as part of the request\n\nAPI ENDPOINT INFO NONE option is used to disable any additional info request per api endpoint response\nAPI ENDPOINT INFO PDF SPARKLINES option is used to enable pdf sparkline info along with the api endpoint response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "API_ENDPOINT_INFO_NONE",
                                "API_ENDPOINT_INFO_PDF_SPARKLINES"
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "API Endpoint Info PDF Sparklines"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getapiendpointlearntschema"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoint/pdf": {
            "get": {
                "summary": "Get API Endpoint PDF",
                "description": "Get PDF of all metrics for a given auto discovered API endpoint for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointPDFRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host\n\nx-example: \"blogging-app-vhost\"\nVirtual Host Name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "collapsed_url",
                        "description": "x-example: \"api/v1/user_id/DYN/vehicle_id/DYN\"\nAPI endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "API URL"
                    },
                    {
                        "name": "method",
                        "description": "x-example: \"GET\"\nmethod of API endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Method"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getapiendpointpdf"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints": {
            "get": {
                "summary": "Get API Endpoints",
                "description": "Get all autodiscovered API endpoints for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointsRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "api_endpoint_info_request",
                        "description": "List of additional things that needs to be sent as part of the request\n\nAPI ENDPOINT INFO NONE option is used to disable any additional info request per api endpoint response\nAPI ENDPOINT INFO PDF SPARKLINES option is used to enable pdf sparkline info along with the api endpoint response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "API_ENDPOINT_INFO_NONE",
                                "API_ENDPOINT_INFO_PDF_SPARKLINES"
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "API Endpoint Info PDF Sparklines"
                    },
                    {
                        "name": "domains",
                        "description": "x-example: \"www.example.com\"\nList of domains that needs to be sent as part of the request\nOptional filter by domains. If absent, all domains are considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "List of Domain"
                    },
                    {
                        "name": "start_time",
                        "description": "x-example: \"2019-09-23T12:30:11.733Z\"\nformat: unix_timestamp|rfc 3339\nFilters the APIEPs with access time \u003e= start_time. Considered only to calculate activity metrics, based on #sec-events and #requests.\nOptional: If not specified, then the start_time will be evaluated to end_time-2h\n          If end_time is not specified, then the start_time will be evaluated to \u003ccurrent time\u003e-10m",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Start Time"
                    },
                    {
                        "name": "end_time",
                        "description": "x-example: \"2019-09-24T12:30:11.733Z\"\nformat: unix_timestamp|rfc 3339\nFilters the APIEPs with access time \u003c end_time. Considered only to calculate activity metrics, based on #sec-events and #requests.\nOptional: If not specified, then the end_time will be evaluated to start_time+2h\n          If start_time is not specified, then the end_time will be evaluated to \u003ccurrent time\u003e",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "End Time"
                    },
                    {
                        "name": "apiep_category",
                        "description": "x-example: \"DISCOVERED\"\nCategory of api endpoints. Can be DISCOVERED, INVENTORY or SHADOW API.\nOptional filter by api_category. If absent, endpoints of all categories are considered.\n\nDiscovered API Endpoint.\nThe API Endpoint is imported from user swagger.\nThe API Endpoint is present at the API Inventory.\nThe API Endpoint is considered as part of Shadow API.\nDeprecated API Endpoint.\nNon-API Endpoint.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "APIEP_CATEGORY_DISCOVERED",
                                "APIEP_CATEGORY_SWAGGER",
                                "APIEP_CATEGORY_INVENTORY",
                                "APIEP_CATEGORY_SHADOW",
                                "APIEP_CATEGORY_DEPRECATED",
                                "APIEP_CATEGORY_NON_API"
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "Non-API Endpoint"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/stats": {
            "get": {
                "summary": "Get Api Endpoints Stats for Virtual Host",
                "description": "Get api endpoints stats for the given Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetApiEndpointsStats",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostApiEndpointsStatsRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"shared\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app\"\nVirtual Host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getapiendpointsstats"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetApiEndpointsStats"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/summary/calls_by_response_code": {
            "post": {
                "summary": "Get Total API Calls for Virtual Host",
                "description": "Get total api calls for the given Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPICallSummary",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetAPICallSummaryRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetAPICallSummaryReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getapicallsummary"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPICallSummary"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/summary/top_active": {
            "post": {
                "summary": "Get Top APIs Endpoints for Virtual Host",
                "description": "Top APIs by requested activity metric. For example most-active APIs or most-attacked APIs.",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopAPIEndpoints",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetTopAPIEndpointsRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetTopAPIEndpointsReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-gettopapiendpoints"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopAPIEndpoints"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/summary/top_sensitive_data": {
            "post": {
                "summary": "Get Sensitive Data Summary for Virtual Host",
                "description": "Get sensitive data summary for the given Virtual Host.\nFor each sensitive data type (e.g. SSN, CC, Email) we count the number of APIEPs having the respective\nsensitive data type and return top k (max 10) types with maximum APIEPs.",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopSensitiveData",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetTopSensitiveDataRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetTopSensitiveDataReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-gettopsensitivedata"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetTopSensitiveData"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/swagger_spec": {
            "get": {
                "summary": "Get Swagger Spec for App Type",
                "description": "Get the corresponding Swagger spec for the given app type",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/apiHttpBody"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"shared\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app\"\nVirtual Host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "domains",
                        "description": "x-example: \"www.example.com\"\nList of domains that needs to be sent as part of the request\nOptional filter by domains. If absent, all domains are considered.",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "List of Domain"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getswaggerspec"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/vulnerabilities": {
            "post": {
                "summary": "Get Vulnerabilities for Virtual Host",
                "description": "Get vulnerabilities for the given Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetVulnerabilities",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetVulnerabilitiesRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostGetVulnerabilitiesReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-getvulnerabilities"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetVulnerabilities"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/vulnerability/update_state": {
            "post": {
                "summary": "Update Vulnerabilities for Virtual Host",
                "description": "Update vulnerabilities for the given Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.UpdateVulnerabilitiesState",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostUpdateVulnerabilitiesStateRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtual_hostUpdateVulnerabilitiesStateReq"
                        }
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-apiepcustomapi-updatevulnerabilitiesstate"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.UpdateVulnerabilitiesState"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "apiHttpBody": {
            "type": "object",
            "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
            "properties": {
                "content_type": {
                    "type": "string",
                    "description": "The HTTP Content-Type header value specifying the content type of the body."
                },
                "data": {
                    "type": "string",
                    "description": "The HTTP request/response body as raw binary.",
                    "format": "byte"
                },
                "extensions": {
                    "type": "array",
                    "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                }
            }
        },
        "app_typeAPIEPCategory": {
            "type": "string",
            "description": "The category of an API endpoint.\n\nDiscovered API Endpoint.\nThe API Endpoint is imported from user swagger.\nThe API Endpoint is present at the API Inventory.\nThe API Endpoint is considered as part of Shadow API.\nDeprecated API Endpoint.\nNon-API Endpoint.",
            "title": "APIEP Category",
            "enum": [
                "APIEP_CATEGORY_DISCOVERED",
                "APIEP_CATEGORY_SWAGGER",
                "APIEP_CATEGORY_INVENTORY",
                "APIEP_CATEGORY_SHADOW",
                "APIEP_CATEGORY_DEPRECATED",
                "APIEP_CATEGORY_NON_API"
            ],
            "default": "APIEP_CATEGORY_DISCOVERED",
            "x-displayname": "Category of the API Endpoint",
            "x-ves-proto-enum": "ves.io.schema.app_type.APIEPCategory"
        },
        "app_typeAPIEPDynExample": {
            "type": "object",
            "description": "List of Examples of expanded URL components for API endpoints that are collapsed with a dynamic component that is identified automatically",
            "title": "API endpoint dynamic example",
            "x-displayname": "Expanded API Endpoints",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPDynExample",
            "properties": {
                "component_examples": {
                    "type": "array",
                    "description": " List of sample URL(s) that are collapsed\n\nExample: - \"[d0161a1e-044e-427b-a806-3bad9eac97fc, a74eb844-6d91-474c-9874-f19fa3983f4d]\"-",
                    "title": "List of expanded URLs",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Expanded URL(s)",
                    "x-ves-example": "[d0161a1e-044e-427b-a806-3bad9eac97fc, a74eb844-6d91-474c-9874-f19fa3983f4d]"
                },
                "component_identifier": {
                    "type": "string",
                    "description": " Dynamic component used to collapse sample URLs given in Expanded URLs\n\nExample: - \"/api/v1/user_id/DYN\"-",
                    "title": "Dynamic component",
                    "x-displayname": "Dynamic Component",
                    "x-ves-example": "/api/v1/user_id/DYN"
                }
            }
        },
        "app_typeAPIEPInfo": {
            "type": "object",
            "description": "Information about automatically identified API endpoint\nEach identified API endpoint has a CollapsedURL and Method.\nCollapsedURL is created by replacing dynamic components in the URL, if any, with the keyword DYN.\nThese dynamic components are automatically identified.\nAdditionally, any API endpoint that has a collapsedURL with automatically identified DYN components,\nwill also have DYN-Examples which show a few examples of the original values of the components that were determined to be DYN.",
            "title": "Identified API",
            "x-displayname": "API Endpoint Info",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPInfo",
            "properties": {
                "access_discovery_time": {
                    "type": "string",
                    "description": " access_discovery_time is the time when the API endpoint\n was updated from the access logs by the discovery mechanism.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "access_discovery_time",
                    "format": "date-time",
                    "x-displayname": "Access Discovery Time"
                },
                "api_groups": {
                    "type": "array",
                    "description": " List of API Groups the API Endpoint is a member of.\n\nExample: - [\"sensitive\", \"read-only\"]-",
                    "title": "API Groups membership",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "API Groups membership"
                },
                "api_type": {
                    "description": " Signifies api endpoint type.\n\nExample: - API_TYPE_GRAPHQL, API_TYPE_REST, API_TYPE_GRPC-",
                    "title": "api_type",
                    "$ref": "#/definitions/app_typeAPIType",
                    "x-displayname": "API Type"
                },
                "attributes": {
                    "type": "array",
                    "description": " List of api endpoint attributes.\n\nExample: - [GraphQL, login etc.]-",
                    "title": "attributes",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Attributes"
                },
                "authentication_state": {
                    "description": " The authentication state of the endpoint.\n\nExample: - AUTH_STATE_AUTHENTICATED, AUTH_STATE_UNAUTHENTICATED, AUTH_STATE_UNKNOWN-",
                    "title": "authentication_state",
                    "$ref": "#/definitions/app_typeAuthenticationState",
                    "x-displayname": "Authentication State"
                },
                "authentication_types": {
                    "type": "array",
                    "description": " List of authentication types found in the API endpoint and their locations.",
                    "title": "authentication_types",
                    "items": {
                        "$ref": "#/definitions/app_typeAuthenticationTypeLocPair"
                    },
                    "x-displayname": "Authentication Types and Locations"
                },
                "base_path": {
                    "type": "string",
                    "description": " The base path for this Endpoint.\n\nExample: - \"/v1\"-",
                    "title": "base_path",
                    "x-displayname": "Base Path",
                    "x-ves-example": "/v1"
                },
                "category": {
                    "type": "array",
                    "description": " The category of the API Endpoint relative to API Inventory.\n\nExample: - APIEP_CATEGORY_DISCOVERED, APIEP_CATEGORY_INVENTORY-",
                    "title": "Category",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPCategory"
                    },
                    "x-displayname": "Category"
                },
                "collapsed_url": {
                    "type": "string",
                    "description": " URL for automatically identified API\n\nExample: - \"/api/v1/user_id/DYN/vehicle_id/DYN\"-",
                    "title": "Identified API",
                    "x-displayname": "API endpoint URL",
                    "x-ves-example": "/api/v1/user_id/DYN/vehicle_id/DYN"
                },
                "domains": {
                    "type": "array",
                    "description": " List of Domains of the API endpoint\n\nExample: - \"[www.example1.com\", \"www.example2.com]\"-",
                    "title": "List of domains",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "List of Domains",
                    "x-ves-example": "[www.example1.com\", \"www.example2.com]"
                },
                "dyn_examples": {
                    "type": "array",
                    "description": " For example -\n {\"dyn_examples\": [\n  {\n    \"component_identifier\": \"api/v1/user_id/DYN\",\n    \"component_examples\": [\n      \"cmenomo007\",\n      \"marcusaurelius\"\n      \"artattacksince1947\",\n      \"johndoe83\",\n    ]\n  },\n  {\n    \"component_identifier\": \"api/v1/user_id/DYN/vehicle_id/DYN\",\n    \"component_examples\": [\n      \"JN1CV6AR3AM458367\",\n      \"1GBCS10AXP2917522\",\n      \"JM1DE1KY9D0155647\",\n      \"JN1CA31D5YT533780\"\n    ]\n  }\n ]}\n List  of sample URL(s) that are collapsed and dynamic components to collapse them\n\nExample: - \"{component_identifierapi/v1/user_id/DYN,component_examples: [cmenomo007]}\"-",
                    "title": "Expanded URL(s)",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPDynExample"
                    },
                    "x-displayname": "Expanded URL(s)",
                    "x-ves-example": "{component_identifier: api/v1/user_id/DYN,component_examples: [cmenomo007]}"
                },
                "has_learnt_schema": {
                    "type": "boolean",
                    "description": "Has Learnt Schema flag for request API endpoint.\n\nExample: - true-",
                    "title": "Has Learnt Schema",
                    "format": "boolean",
                    "x-displayname": "Has Learnt Schema"
                },
                "method": {
                    "type": "string",
                    "description": " HTTP method for the API.\n\nExample: - \"GET\"-",
                    "title": "HTTP method",
                    "x-displayname": "HTTP Method",
                    "x-ves-example": "GET"
                },
                "pdf_info": {
                    "description": " Metrics supported currently are request_size response_size latency_with_data, latency_no_data, request_rate, error_rate, response_throughput.\n PDF is calculated for each combination of (Tenant, App type, API endpoint).\n API endpoint is determined from automatically identified API (collapsed_url) and method.",
                    "title": "Probability Density Function",
                    "$ref": "#/definitions/app_typeAPIEPPDFInfo",
                    "x-displayname": "PDF(Value)"
                },
                "pii_level": {
                    "description": " Signifies if the pii data is detected.\n\nExample: - APIEP_PII_NOT_DETECTED, APIEP_PII_DETECTED-",
                    "title": "pii_level",
                    "$ref": "#/definitions/app_typeAPIEPPIILevel",
                    "x-displayname": "PII Level"
                },
                "request_percentage": {
                    "type": "number",
                    "description": " Percentage of requests that were directed to this API Endpoint\n\nExample: - \"78.5789\"-",
                    "title": "Request percentage",
                    "format": "float",
                    "x-displayname": "Request Percentage",
                    "x-ves-example": "78.5789"
                },
                "requests_count": {
                    "type": "integer",
                    "description": " Number of requests seen for this API Endpoint for the specified time-range.\n\nExample: - \"1234\"-",
                    "title": "requests_count",
                    "format": "int32",
                    "x-displayname": "Number Of Total Requests",
                    "x-ves-example": "1234"
                },
                "risk_score": {
                    "description": " Risk score for this API Endpoint.",
                    "title": "risk_score",
                    "$ref": "#/definitions/app_typeRiskScore",
                    "x-displayname": "Risk score"
                },
                "schema_status": {
                    "type": "string",
                    "description": " Schema status indicates the API Endpoint's schema origin and if it's outdated.\n\nExample: - \"Discovered Not-Updated\"-",
                    "title": "schema_status",
                    "x-displayname": "Schema Status",
                    "x-ves-example": "Discovered Not-Updated"
                },
                "sec_events_count": {
                    "type": "integer",
                    "description": " Number of sec_events seen for this API Endpoint for the specified time-range.\n\nExample: - \"1234\"-",
                    "title": "sec_events_count",
                    "format": "int32",
                    "x-displayname": "Number Of Total Security Events",
                    "x-ves-example": "1234"
                },
                "security_risk": {
                    "description": " Signifies api endpoint security risk level.\n\nExample: - APIEP_SEC_RISK_LOW, APIEP_SEC_RISK_MED, APIEP_SEC_RISK_HIGH-",
                    "title": "security_risk",
                    "$ref": "#/definitions/app_typeAPIEPSecurityRisk",
                    "x-displayname": "Security Risk Level"
                },
                "sensitive_data": {
                    "type": "array",
                    "description": " List of Sensitive Data found in the API endpoint\n\nExample: - \"[SENSITIVE_DATA_TYPE_CCN, SENSITIVE_DATA_TYPE_SSN, SENSITIVE_DATA_TYPE_IP]\"-",
                    "title": "List of Sensitive Data",
                    "items": {
                        "$ref": "#/definitions/app_typeSensitiveDataType"
                    },
                    "x-displayname": "List of Sensitive Data",
                    "x-ves-example": "[SENSITIVE_DATA_TYPE_CCN, SENSITIVE_DATA_TYPE_SSN, SENSITIVE_DATA_TYPE_IP]"
                },
                "sensitive_data_types": {
                    "type": "array",
                    "description": " List of Sensitive Data found in the API endpoint\n\nExample: - \"[Social-Security-Number, Credit-Card-Number]\"-",
                    "title": "List of Sensitive Data",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "List of Sensitive Data",
                    "x-ves-example": "[Social-Security-Number, Credit-Card-Number]"
                }
            }
        },
        "app_typeAPIEPPDFInfo": {
            "type": "object",
            "description": "Metrics supported currently are request_size response_size latency_with_data, latency_no_data.\nPDF is calculated for each combination of (Tenant, App type, API endpoint).\nAPI endpoint is determined from automatically identified API (collapsed_url) and method.\nIn the univariate case PDFSpec for each metric is repeated num_pdf_samples times.\nnum_pdf_samples is a parameter is system wide parameter currently set to 200.",
            "title": "Probability Density Function",
            "x-displayname": "PDF(Value)",
            "x-ves-displayorder": "1,2,4,3,5,6,7",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPPDFInfo",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp represents the time when this PDF was created\n It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "error_rate": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for error rate",
                    "title": "PDF(error rate)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Error Rate)"
                },
                "error_rate_stat": {
                    "description": " Mean and 95th percentile for PDF for error rate",
                    "title": "PDFStat(error rate)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Error Rate)"
                },
                "latency_no_data": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for latency of response begin",
                    "title": "PDF(response latency to first byte)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Latency Begin)"
                },
                "latency_no_data_stat": {
                    "description": " Mean and 95th percentile for PDF for latency of response begin",
                    "title": "PDFStat(response latency to first byte)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Latency Begin)"
                },
                "latency_with_data": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for latency of response end",
                    "title": "PDF(response latency)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Latency End)"
                },
                "latency_with_data_stat": {
                    "description": " Mean and 95th percentile for PDF for latency of response end",
                    "title": "PDFStat(response latency)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Latency End)"
                },
                "request_rate": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for request rate",
                    "title": "PDF(request rate)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Request Rate)"
                },
                "request_rate_stat": {
                    "description": " Mean and 95th percentile for PDF for request rate",
                    "title": "PDFStat(request rate)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Request Rate)"
                },
                "request_size": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for request size",
                    "title": "PDF(request_size)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Request)"
                },
                "request_size_stat": {
                    "description": " Mean and 95th percentile for PDF for request size",
                    "title": "PDFStat(request_size)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Request)"
                },
                "response_size": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for response size",
                    "title": "PDF(response_size)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Response)"
                },
                "response_size_stat": {
                    "description": " Mean and 95th percentile for PDF for response size",
                    "title": "PDFStat(response_size)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Response)"
                },
                "response_throughput": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for response throughput",
                    "title": "PDF(response throughput)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Response Throughput)"
                },
                "response_throughput_stat": {
                    "description": " Mean and 95th percentile for PDF for response throughput",
                    "title": "PDFStat(response throughput)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDF(Response Throughput)"
                }
            }
        },
        "app_typeAPIEPPIILevel": {
            "type": "string",
            "description": "x-displayName: API EP PII Level\nAPI Endpoint's PII Level.\n\n - APIEP_PII_NOT_DETECTED: x-displayName: API EP PII Level\nNo PII data detected for the given API Endpoint.\n - APIEP_PII_DETECTED: x-displayName: API EP PII Level Detected\nDetected PII data for a given API Endpoint.",
            "title": "APIEP PII Level",
            "enum": [
                "APIEP_PII_NOT_DETECTED",
                "APIEP_PII_DETECTED"
            ],
            "default": "APIEP_PII_NOT_DETECTED",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.app_type.APIEPPIILevel"
        },
        "app_typeAPIEPSecurityRisk": {
            "type": "string",
            "description": "Signifies API Endpoint Security Risk Level\n\nSecurity risk is not detected (for example, when no traffic).\nAPI Endpoint has low security risk.\nAPI Endpoint has medium security risk.\nAPI Endpoint has high security risk.\nAPI Endpoint has critical security risk.",
            "title": "APIEP Security Risk",
            "enum": [
                "APIEP_SEC_RISK_NONE",
                "APIEP_SEC_RISK_LOW",
                "APIEP_SEC_RISK_MED",
                "APIEP_SEC_RISK_HIGH",
                "APIEP_SEC_RISK_CRITICAL"
            ],
            "default": "APIEP_SEC_RISK_NONE",
            "x-displayname": "API Endpoint Security Risk",
            "x-ves-proto-enum": "ves.io.schema.app_type.APIEPSecurityRisk"
        },
        "app_typeAPIType": {
            "type": "string",
            "description": "List of possible types of api that can be discovered for an APIEP.\n\nThe API Type detected as unknown.\nThe API Type detected as GraphQL.\nThe API Type detected as REST.\nThe API Type detected as gRPC.",
            "title": "APIType",
            "enum": [
                "API_TYPE_UNKNOWN",
                "API_TYPE_GRAPHQL",
                "API_TYPE_REST",
                "API_TYPE_GRPC"
            ],
            "default": "API_TYPE_UNKNOWN",
            "x-displayname": "API Type",
            "x-ves-proto-enum": "ves.io.schema.app_type.APIType"
        },
        "app_typeApiEndpointInfoRequest": {
            "type": "string",
            "description": "This is the various forms that can be requested to be sent in the ApiEndpointInfoRequest\n\nAPI ENDPOINT INFO NONE option is used to disable any additional info request per api endpoint response\nAPI ENDPOINT INFO PDF SPARKLINES option is used to enable pdf sparkline info along with the api endpoint response",
            "title": "ApiEndpointInfoRequest",
            "enum": [
                "API_ENDPOINT_INFO_NONE",
                "API_ENDPOINT_INFO_PDF_SPARKLINES"
            ],
            "default": "API_ENDPOINT_INFO_NONE",
            "x-displayname": "API Endpoint Info Request",
            "x-ves-proto-enum": "ves.io.schema.app_type.ApiEndpointInfoRequest"
        },
        "app_typeAuthData": {
            "type": "object",
            "description": "x-displayName: \"Authentication Data\"\nAuthentication data for a given Authentication definition type.",
            "title": "AuthData",
            "properties": {
                "insights": {
                    "type": "string",
                    "description": "x-displayName: \"Insights\"\nx-example: \"{\\\"roles\\\": [\\\"admin\\\",\\\"user\\\"]}\"\nInsights of a given authentication type.",
                    "title": "Insights"
                },
                "schema": {
                    "description": "x-displayName: \"Schema\"\nSchema of a given authentication type, for example decoded JWT payload schema..",
                    "title": "Schema",
                    "$ref": "#/definitions/app_typeSchemaStruct"
                },
                "summary": {
                    "type": "string",
                    "description": "x-displayName: \"Summary\"\nx-example: \"{\\\"ApiKeyAuth\\\": {\\\"type\\\": \\\"apiKey\\\",\\\"in\\\": \\\"header\\\",\\\"name\\\": \\\"X-API-Key\\\"}}\"\nGeneral Authentication Information for a given authentication definition.",
                    "title": "Summary"
                }
            }
        },
        "app_typeAuthentication": {
            "type": "object",
            "description": "Authentication details for a given API endpoint.",
            "title": "Authentication",
            "x-displayname": "Authentication",
            "x-ves-proto-message": "ves.io.schema.app_type.Authentication",
            "properties": {
                "auth_data_per_definition": {
                    "type": "object",
                    "description": " Authentication Data Per Definition.",
                    "title": "auth_data_per_definition",
                    "x-displayname": "Authentication Data Per Definition"
                }
            }
        },
        "app_typeAuthenticationLocation": {
            "type": "string",
            "description": "x-displayName: API EP Authentication Location\nAPI Endpoint's Authentication Location.\n\nThe API Endpoint authentication location is header.\nThe API Endpoint authentication location is query parameter.\nThe API Endpoint authentication location is request body.\nThe API Endpoint authentication location is cookie.",
            "title": "APIEP Authentication Location",
            "enum": [
                "AUTH_LOCATION_HEADER",
                "AUTH_LOCATION_QUERY",
                "AUTH_LOCATION_BODY",
                "AUTH_LOCATION_COOKIE"
            ],
            "default": "AUTH_LOCATION_HEADER",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.app_type.AuthenticationLocation"
        },
        "app_typeAuthenticationState": {
            "type": "string",
            "description": "API Endpoint's Authentication State.\n\nThe API Endpoint authentication state is unknown.\nThe API Endpoint is authenticated\nThe API Endpoint is unauthenticated",
            "title": "APIEP Authentication State",
            "enum": [
                "AUTH_STATE_UNKNOWN",
                "AUTH_STATE_AUTHENTICATED",
                "AUTH_STATE_UNAUTHENTICATED"
            ],
            "default": "AUTH_STATE_UNKNOWN",
            "x-displayname": "API EP Authentication State",
            "x-ves-proto-enum": "ves.io.schema.app_type.AuthenticationState"
        },
        "app_typeAuthenticationType": {
            "type": "string",
            "description": "x-displayName: API EP Authentication Type\nAPI Endpoint's Authentication Type.\n\nThe API Endpoint authentication type is Basic.\nThe API Endpoint authentication type is Bearer.\nThe API Endpoint authentication type is JWT.\nThe API Endpoint authentication type is API Key.\nThe API Endpoint authentication type is OAuth 2.0.\nThe API Endpoint authentication type is OpenID Connect Discovery.\nThe API Endpoint authentication type is HTTP.\nThe API Endpoint authentication type is OAuth 1.0.\nThe API Endpoint authentication type is Digest.\nThe API Endpoint authentication type is Negotiate.",
            "title": "APIEP Authentication Type",
            "enum": [
                "AUTH_TYPE_BASIC",
                "AUTH_TYPE_BEARER",
                "AUTH_TYPE_JWT",
                "AUTH_TYPE_API_KEY",
                "AUTH_TYPE_OAUTH2",
                "AUTH_TYPE_OPENID",
                "AUTH_TYPE_HTTP",
                "AUTH_TYPE_OAUTH1",
                "AUTH_TYPE_DIGEST",
                "AUTH_TYPE_NEGOTIATE"
            ],
            "default": "AUTH_TYPE_BASIC",
            "x-displayname": "",
            "x-ves-proto-enum": "ves.io.schema.app_type.AuthenticationType"
        },
        "app_typeAuthenticationTypeLocPair": {
            "type": "object",
            "description": "API Endpoint's Authentication Type and Location.",
            "title": "APIEP Authentication Type and Location Pair",
            "x-displayname": "API EP Authentication Type and Location Pair",
            "x-ves-proto-message": "ves.io.schema.app_type.AuthenticationTypeLocPair",
            "properties": {
                "auth_type": {
                    "type": "string",
                    "description": " The detected authentication type by string format\n\nExample: - \"Basic\"-",
                    "title": "auth_type",
                    "x-displayname": "Authentication Type",
                    "x-ves-example": "Basic"
                },
                "location": {
                    "description": " The detected authentication location",
                    "title": "location",
                    "$ref": "#/definitions/app_typeAuthenticationLocation",
                    "x-displayname": "Authentication Location"
                },
                "type": {
                    "description": " The detected authentication type",
                    "title": "type",
                    "$ref": "#/definitions/app_typeAuthenticationType",
                    "x-displayname": "Authentication Type"
                }
            }
        },
        "app_typeDiscoveredSchema": {
            "type": "object",
            "description": "Discovery schema for request API endpoint.",
            "title": "Discovery schema",
            "x-displayname": "Discovery Schema",
            "x-ves-proto-message": "ves.io.schema.app_type.DiscoveredSchema",
            "properties": {
                "last_updated_time": {
                    "type": "string",
                    "description": " Last Updated Time for request API endpoint. The time updated when the APIEP file is uploaded to Azure/AWS.\n\nExample: - \"2021-01-22 15:46:23.767649\"-",
                    "title": "Last Updated Time",
                    "format": "date-time",
                    "x-displayname": "Last Updated Time",
                    "x-ves-example": "2021-01-22 15:46:23.767649"
                },
                "request_schema": {
                    "description": " Request Schema for request API endpoint.",
                    "title": "Request Schema",
                    "$ref": "#/definitions/app_typeRequestSchema",
                    "x-displayname": "Request Schema"
                },
                "response_schema_per_rsp_code": {
                    "type": "object",
                    "description": " Response schema per rsp code for request API endpoint.",
                    "title": "Response schema per rsp code",
                    "x-displayname": "Response Schema Per Rsp Code"
                }
            }
        },
        "app_typePDFSpec": {
            "type": "object",
            "description": "Probability Density point in (PDF(x)) of the metric.\nx is the value of the metric, probability is the corresponding PDF(x).\nIn the univariate case (current configuration), the value x of the metrics is a scaler.\nAs PDFSpec is repeated (see below), the x values are linearly spaced monotonically from minimum to maximum.",
            "title": "Probability Density Point(x,y)",
            "x-displayname": "Point(Value, Probability)",
            "x-ves-proto-message": "ves.io.schema.app_type.PDFSpec",
            "properties": {
                "probability": {
                    "type": "number",
                    "description": " Probability of given Value of the metric that can be plotted on y-axis\n\nExample: - \"0.078\"-",
                    "title": "Probability",
                    "format": "float",
                    "x-displayname": "Probability",
                    "x-ves-example": "0.078"
                },
                "x": {
                    "type": "number",
                    "description": " Value of the metric that can be plotted on x-axis\n\nExample: - \"121.316\"-",
                    "title": "Metric Value",
                    "format": "float",
                    "x-displayname": "Value",
                    "x-ves-example": "121.316"
                }
            }
        },
        "app_typePDFStat": {
            "type": "object",
            "description": "Probability Density Function statistics of the metric.\npdf_mean is the mean PDF of the metric, pdf_95 is the 95th percentile PDF of the metric.\nIn the univariate case PDFStat for each metric consists of pdf_mean and pdf_95.",
            "title": "Probability Density Function Statistics",
            "x-displayname": "PDF(Statistics)",
            "x-ves-proto-message": "ves.io.schema.app_type.PDFStat",
            "properties": {
                "pdf_95": {
                    "type": "number",
                    "description": " pdf_95 represents the 95th percentile of PDF\n\nExample: - \"0.078\"-",
                    "title": "PDF 95th Percentile",
                    "format": "float",
                    "x-displayname": "PDF(95th Percentile)",
                    "x-ves-example": "0.078"
                },
                "pdf_mean": {
                    "type": "number",
                    "description": " pdf_mean represents the mean of PDF",
                    "title": "PDF Mean",
                    "format": "float",
                    "x-displayname": "PDF(Mean)"
                }
            }
        },
        "app_typeRequestSchema": {
            "type": "object",
            "description": "Request schema for a given API endpoint.",
            "title": "Request Schema",
            "x-displayname": "Request Schema",
            "x-ves-proto-message": "ves.io.schema.app_type.RequestSchema",
            "properties": {
                "body_per_content_type": {
                    "type": "object",
                    "description": " Body schema per content type for request API endpoint.",
                    "title": "Body schema per content type",
                    "x-displayname": "Body Schema Per Content Type"
                },
                "cookies": {
                    "description": " Cookies schema for request API endpoint.",
                    "title": "Cookies schema",
                    "$ref": "#/definitions/app_typeSchemaStruct",
                    "x-displayname": "Cookies Schema"
                },
                "headers": {
                    "description": " Request headers schema for request API endpoint.",
                    "title": "Headers schema",
                    "$ref": "#/definitions/app_typeSchemaStruct",
                    "x-displayname": "Headers Schema"
                },
                "query_params": {
                    "description": " Query params schema for request API endpoint.",
                    "title": "Query params schema",
                    "$ref": "#/definitions/app_typeSchemaStruct",
                    "x-displayname": "Query Params Schema"
                }
            }
        },
        "app_typeResponseSchema": {
            "type": "object",
            "description": "x-displayName: \"Response Schema\"\nResponse schema for a given API endpoint.",
            "title": "Response Schema",
            "properties": {
                "body_per_content_type": {
                    "type": "object",
                    "description": "x-displayName: \"Body Schema Per Content Type\"\nBody schema per content type for request API endpoint.",
                    "title": "Body schema per content type"
                },
                "headers": {
                    "description": "x-displayName: \"Headers Schema\"\nResponse headers schema for request API endpoint.",
                    "title": "Headers schema",
                    "$ref": "#/definitions/app_typeSchemaStruct"
                }
            }
        },
        "app_typeRiskScore": {
            "type": "object",
            "description": "Risk score of the vulnerabilities found for this API Endpoint.",
            "title": "RiskScore",
            "x-displayname": "Risk score",
            "x-ves-proto-message": "ves.io.schema.app_type.RiskScore",
            "properties": {
                "score": {
                    "type": "number",
                    "description": " Score of the vulnerabilities found for this API Endpoint.",
                    "title": "score",
                    "format": "float",
                    "x-displayname": "Score"
                },
                "severity": {
                    "description": " Severity of the vulnerabilities found for this API Endpoint.",
                    "title": "severity",
                    "$ref": "#/definitions/app_typeAPIEPSecurityRisk",
                    "x-displayname": "Severity"
                }
            }
        },
        "app_typeSchemaStruct": {
            "type": "object",
            "description": "Schema structure for a given API endpoint.",
            "title": "Schema Structure",
            "x-displayname": "Schema Structure",
            "x-ves-proto-message": "ves.io.schema.app_type.SchemaStruct",
            "properties": {
                "examples": {
                    "type": "array",
                    "description": " Examples for request API endpoint.",
                    "title": "Examples",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Examples"
                },
                "schema": {
                    "type": "string",
                    "description": " Schema for request API endpoint.",
                    "title": "Schema",
                    "x-displayname": "Schema"
                }
            }
        },
        "app_typeSensitiveData": {
            "type": "object",
            "description": "Sensitive data for a given API endpoint.",
            "title": "Sensitive Data",
            "x-displayname": "Sensitive Data",
            "x-ves-proto-message": "ves.io.schema.app_type.SensitiveData",
            "properties": {
                "examples": {
                    "type": "array",
                    "description": " Examples of sensitive data.",
                    "title": "Examples",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Examples"
                },
                "field": {
                    "type": "string",
                    "description": " Field of sensitive data.",
                    "title": "Field",
                    "x-displayname": "Field"
                },
                "rule_type": {
                    "description": " Type of sensitive data detection rule. Could be built-in or custom.",
                    "title": "Rule Type",
                    "$ref": "#/definitions/app_typeSensitiveDataDetectionRuleType",
                    "x-displayname": "Rule Type"
                },
                "section": {
                    "type": "string",
                    "description": " Section of sensitive data.\n\nExample: - req_body-",
                    "title": "Section",
                    "x-displayname": "Section"
                },
                "sensitive_data_type": {
                    "type": "string",
                    "description": " Type of sensitive data.\n\nExample: - EMAIL-",
                    "title": "Sensitive Data Type",
                    "x-displayname": "Type"
                },
                "type": {
                    "description": " Type of sensitive data.\n\nExample: - SENSITIVE_DATA_TYPE_EMAIL-",
                    "title": "Type",
                    "$ref": "#/definitions/app_typeSensitiveDataType",
                    "x-displayname": "Type"
                }
            }
        },
        "app_typeSensitiveDataDetectionRuleType": {
            "type": "string",
            "description": "Sensitive Data Detection Rule Type\n\n - RULE_TYPE_BUILT_IN: built_in\n\nBuilt in rule type\n - RULE_TYPE_CUSTOM: custom\n\nCustom rule type",
            "title": "sensitive_data_detection_rule_type",
            "enum": [
                "RULE_TYPE_BUILT_IN",
                "RULE_TYPE_CUSTOM"
            ],
            "default": "RULE_TYPE_BUILT_IN",
            "x-displayname": "Sensitive Data Detection Rule Type",
            "x-ves-proto-enum": "ves.io.schema.app_type.SensitiveDataDetectionRuleType"
        },
        "app_typeSensitiveDataType": {
            "type": "string",
            "description": "List of possible types of sensitive data that can be discovered for an APIEP.\n\nThe Sensitive Data detected as credit card number.\nThe sensitive data detected as social security number.\nThe sensitive data detected as IP address.\nThe sensitive data detected as email address.\nThe sensitive data detected as phone number.\nThe sensitive data detected as credentials info(e.g password, username etc).\nThe sensitive data detected as information leakage.\nThe sensitive data detected as masked PII (CCN, SSN)\nThe sensitive data detected as Location.",
            "title": "SensitiveDataType",
            "enum": [
                "SENSITIVE_DATA_TYPE_CCN",
                "SENSITIVE_DATA_TYPE_SSN",
                "SENSITIVE_DATA_TYPE_IP",
                "SENSITIVE_DATA_TYPE_EMAIL",
                "SENSITIVE_DATA_TYPE_PHONE",
                "SENSITIVE_DATA_TYPE_CREDENTIALS",
                "SENSITIVE_DATA_TYPE_APP_INFO_LEAKAGE",
                "SENSITIVE_DATA_TYPE_MASKED_PII",
                "SENSITIVE_DATA_TYPE_LOCATION"
            ],
            "default": "SENSITIVE_DATA_TYPE_CCN",
            "x-displayname": "Sensitive Data Type",
            "x-ves-proto-enum": "ves.io.schema.app_type.SensitiveDataType"
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "schemaHttpMethod": {
            "type": "string",
            "description": "Specifies the HTTP method used to access a resource.\n\nAny HTTP Method",
            "title": "HttpMethod",
            "enum": [
                "ANY",
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "CONNECT",
                "OPTIONS",
                "TRACE",
                "PATCH"
            ],
            "default": "ANY",
            "x-displayname": "HTTP Method",
            "x-ves-proto-enum": "ves.io.schema.HttpMethod"
        },
        "schemaHttpResponseCodeClass": {
            "type": "string",
            "description": "Represents different http response classes(e.g 1XX, 2XX etc).\n\nResponse code is unknown.\nResponse code belongs to 1XX class.\nResponse code belongs to 2XX class.\nResponse code belongs to 3XX class.\nResponse code belongs to 4XX class.\nResponse code belongs to 5XX class.",
            "title": "HttpResponseCodeClass",
            "enum": [
                "HTTP_RESPONSE_CODE_CLASS_UNKNOWN",
                "HTTP_RESPONSE_CODE_CLASS_1XX",
                "HTTP_RESPONSE_CODE_CLASS_2XX",
                "HTTP_RESPONSE_CODE_CLASS_3XX",
                "HTTP_RESPONSE_CODE_CLASS_4XX",
                "HTTP_RESPONSE_CODE_CLASS_5XX"
            ],
            "default": "HTTP_RESPONSE_CODE_CLASS_UNKNOWN",
            "x-displayname": "HTTP Response Code Class",
            "x-ves-proto-enum": "ves.io.schema.HttpResponseCodeClass"
        },
        "schemavirtual_hostAPIEndpoint": {
            "type": "object",
            "description": "APIEndpoint Object.",
            "title": "APIEndpoint",
            "x-displayname": "API Endpoint",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpoint",
            "properties": {
                "collapsed_url": {
                    "type": "string",
                    "description": " Requested API endPoint for api url.\n\nExample: - \"api/v1/user_id/DYN/vehicle_id/DYN\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_len: 256\n  ves.io.schema.rules.string.min_len: 1\n",
                    "title": "API URL",
                    "minLength": 1,
                    "maxLength": 256,
                    "x-displayname": "API URL",
                    "x-ves-example": "api/v1/user_id/DYN/vehicle_id/DYN",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_len": "256",
                        "ves.io.schema.rules.string.min_len": "1"
                    }
                },
                "method": {
                    "type": "string",
                    "description": " Requested API endPoint for method.\n\nExample: - \"GET\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.in: [\\\"GET\\\", \\\"POST\\\", \\\"HEAD\\\", \\\"PUT\\\", \\\"DELETE\\\", \\\"OPTIONS\\\", \\\"REGISTER\\\", \\\"DEBUG\\\", \\\"PROPFIND\\\", \\\"PATCH\\\", \\\"CONNECT\\\", \\\"SEARCH\\\", \\\"INDEX\\\", \\\"TRACE\\\"]\n",
                    "title": "Method of current API URL",
                    "x-displayname": "Method",
                    "x-ves-example": "GET",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.in": "[\\\"GET\\\", \\\"POST\\\", \\\"HEAD\\\", \\\"PUT\\\", \\\"DELETE\\\", \\\"OPTIONS\\\", \\\"REGISTER\\\", \\\"DEBUG\\\", \\\"PROPFIND\\\", \\\"PATCH\\\", \\\"CONNECT\\\", \\\"SEARCH\\\", \\\"INDEX\\\", \\\"TRACE\\\"]"
                    }
                }
            }
        },
        "virtual_hostAPIEPActivityMetricType": {
            "type": "string",
            "description": "Activity metric calculation type per API Endpoint\n\nIf specified, API returns top attacked APIEPs summary by sec_event percentage for given virtual host.\nThe percentage is calculated as sec_events_percentage(apiep) = #sec-events(apiep)/#requests(apiep) * 100\nIf specified, API returns top active APIEPs summary by request ratio for given virtual host.\nThe percentage is calculated as request_percentage(apiep) = #requests(apiep)/#requests(all apiep) * 100",
            "title": "APIEPActivityMetricType",
            "enum": [
                "ACTIVITY_METRIC_TYPE_SEC_EVENTS_PERCENTAGE",
                "ACTIVITY_METRIC_TYPE_REQ_PERCENTAGE"
            ],
            "default": "ACTIVITY_METRIC_TYPE_SEC_EVENTS_PERCENTAGE",
            "x-displayname": "API Activity Metric Type",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.APIEPActivityMetricType"
        },
        "virtual_hostAPIEPActivityMetrics": {
            "type": "object",
            "description": "This represents the API endpoint's activity metrics.",
            "title": "APIEPActivityMetrics",
            "x-displayname": "API Endpoint Activity Metrics",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEPActivityMetrics",
            "properties": {
                "apiep_url": {
                    "type": "string",
                    "description": " URL for API endpoint.\n\nExample: - \"/api/v1/user/{user_id}/vehicle/{vehicle_id}\"-\n\nValidation Rules:\n  ves.io.schema.rules.string.max_bytes: 1024\n  ves.io.schema.rules.string.min_bytes: 1\n  ves.io.schema.rules.string.templated_http_path: true\n",
                    "title": "apiep_url",
                    "minLength": 1,
                    "maxLength": 1024,
                    "x-displayname": "API endpoint URL",
                    "x-ves-example": "/api/v1/user/{user_id}/vehicle/{vehicle_id}",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.string.max_bytes": "1024",
                        "ves.io.schema.rules.string.min_bytes": "1",
                        "ves.io.schema.rules.string.templated_http_path": "true"
                    }
                },
                "method": {
                    "description": " HTTP method for the API.\n\nExample: - \"GET\"-",
                    "title": "HTTP method",
                    "$ref": "#/definitions/schemaHttpMethod",
                    "x-displayname": "HTTP Method",
                    "x-ves-example": "GET"
                },
                "top_by_metric_value": {
                    "type": "integer",
                    "description": " The field -top_by_metric_value- returns one of the following values based on the metric type passed in the request field -top_by_metric-",
                    "title": "top_by_metric_value",
                    "format": "int32",
                    "x-displayname": "Top By Metric Value"
                }
            }
        },
        "virtual_hostAPIEPSummaryFilter": {
            "type": "object",
            "description": "Filter object for summary block.",
            "title": "APIEPSummaryFilter",
            "x-displayname": "APIEP Summary Filter",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEPSummaryFilter",
            "properties": {
                "apiep_category": {
                    "type": "array",
                    "description": " Category of api endpoints. Can be DISCOVERED, INVENTORY or SHADOW API.\n Optional filter by api_category. If absent, endpoints of all categories are considered.\n\nExample: - \"DISCOVERED\"-",
                    "title": "APIEP Category",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPCategory"
                    },
                    "x-displayname": "APIEP Category",
                    "x-ves-example": "DISCOVERED"
                },
                "domains": {
                    "type": "array",
                    "description": " List of domains for which top api endpoints summary should be returned.\n Optional filter by domains. If absent, endpoints for all domains are considered.\n\nExample: - \"www.example.com\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.max_len: 256\n  ves.io.schema.rules.repeated.items.string.min_len: 1\n  ves.io.schema.rules.repeated.items.string.vh_domain: true\n  ves.io.schema.rules.repeated.max_items: 5\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Domain",
                    "maxItems": 5,
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "x-displayname": "List of Domains",
                    "x-ves-example": "www.example.com",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.max_len": "256",
                        "ves.io.schema.rules.repeated.items.string.min_len": "1",
                        "ves.io.schema.rules.repeated.items.string.vh_domain": "true",
                        "ves.io.schema.rules.repeated.max_items": "5",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "end_time": {
                    "type": "string",
                    "description": " format: unix_timestamp|rfc 3339\n Filters the APIEPs with access time \u003c end_time.\n Optional: If not specified, then the end_time will be evaluated to start_time+2h\n           If start_time is not specified, then the end_time will be evaluated to \u003ccurrent time\u003e\n\nExample: - \"2019-09-24T12:30:11.733Z\"-",
                    "title": "end time",
                    "x-displayname": "End Time",
                    "x-ves-example": "2019-09-24T12:30:11.733Z"
                },
                "start_time": {
                    "type": "string",
                    "description": " format: unix_timestamp|rfc 3339\n Filters the APIEPs with access time \u003e= start_time.\n Optional: If not specified, then the start_time will be evaluated to end_time-2h\n           If end_time is not specified, then the start_time will be evaluated to \u003ccurrent time\u003e-10m\n\nExample: - \"2019-09-23T12:30:11.733Z\"-",
                    "title": "start time",
                    "x-displayname": "Start Time",
                    "x-ves-example": "2019-09-23T12:30:11.733Z"
                }
            }
        },
        "virtual_hostAPIEndpointLearntSchemaRsp": {
            "type": "object",
            "description": "shape of response to get req body schema for a given API endpoint.",
            "title": "API endpoint Req Body Schema response",
            "x-displayname": "Req Body Schema Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp",
            "properties": {
                "api_specs": {
                    "type": "object",
                    "description": " Discovered API Specifications based on API type for eg, OpenAPI or GraphQL schema for API endpoint.",
                    "title": "API Specifications",
                    "x-displayname": "API Specifications"
                },
                "authentication": {
                    "description": " Authentication data for request API endpoint.",
                    "title": "Authentication",
                    "$ref": "#/definitions/app_typeAuthentication",
                    "x-displayname": "Authentication"
                },
                "discovered_schema": {
                    "description": " Discovered Schema for request API endpoint.",
                    "title": "Discovered Schema",
                    "$ref": "#/definitions/app_typeDiscoveredSchema",
                    "x-displayname": "Discovered Schema"
                },
                "inventory_openapi_spec": {
                    "type": "string",
                    "description": " Inventory OpenAPI spec for request API endpoint.\n\nExample: - \"{\\\"info\\\":{\\\"description\\\":\\\"\\\",\\\"title\\\":\\\"\\\",\\\"version\\\":\\\"\\\"},\\\"paths\\\":{\\\"\\/api\\/Addresss\\\":{\\\"get\\\":{\\\"consumes\\\":[\\\"application\\/json\\\"],\\\"description\\\":\\\"Swagger auto-generated from learnt schema\\\",\\\"parameters\\\":[{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test\\\",\\\"type\\\":\\\"string\\\"},{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test1\\\",\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"\\\"}}}}},\\\"schemes\\\":[\\\"https\\\",\\\"http\\\"],\\\"swagger\\\":\\\"2.0\\\"}\"-",
                    "title": "Inventory OpenAPI Spec",
                    "x-displayname": "Inventory OpenAPI Spec",
                    "x-ves-example": "{\\\"info\\\":{\\\"description\\\":\\\"\\\",\\\"title\\\":\\\"\\\",\\\"version\\\":\\\"\\\"},\\\"paths\\\":{\\\"\\/api\\/Addresss\\\":{\\\"get\\\":{\\\"consumes\\\":[\\\"application\\/json\\\"],\\\"description\\\":\\\"Swagger auto-generated from learnt schema\\\",\\\"parameters\\\":[{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test\\\",\\\"type\\\":\\\"string\\\"},{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test1\\\",\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"\\\"}}}}},\\\"schemes\\\":[\\\"https\\\",\\\"http\\\"],\\\"swagger\\\":\\\"2.0\\\"}"
                },
                "pdf_info": {
                    "description": " Metrics supported currently are request_size response_size latency_with_data, latency_no_data, request_rate, error_rate, response_throughput.\n PDF is calculated for each combination of (Tenant, App type, API endpoint).\n API endpoint is determined from automatically identified API (collapsed_url) and method.",
                    "title": "Probability Density Function",
                    "$ref": "#/definitions/app_typeAPIEPPDFInfo",
                    "x-displayname": "PDF(Value)"
                },
                "sensitive_data": {
                    "type": "array",
                    "description": " List of sensitive data for request API endpoint.",
                    "title": "List of sensitive data",
                    "items": {
                        "$ref": "#/definitions/app_typeSensitiveData"
                    },
                    "x-displayname": "List of Sensitive Data"
                }
            }
        },
        "virtual_hostAPIEndpointPDFRsp": {
            "type": "object",
            "description": "shape of response to get PDF for a given API endpoint.",
            "title": "API endpoint PDF response",
            "x-displayname": "PDF Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointPDFRsp",
            "properties": {
                "pdf_info": {
                    "description": " PDF data for request API endpoint.",
                    "title": "PDF data",
                    "$ref": "#/definitions/app_typeAPIEPPDFInfo",
                    "x-displayname": "PDF Data"
                }
            }
        },
        "virtual_hostAPIEndpointReq": {
            "type": "object",
            "description": "Request shape for GET API endpoint API",
            "title": "API endpoint GET request Per Virtual Host",
            "x-displayname": "API Endpoint Request per Virtual Host",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointReq",
            "properties": {
                "api_endpoint_info_request": {
                    "type": "array",
                    "description": " List of additional things that needs to be sent as part of the request\n\nValidation Rules:\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "Api Endpoint Info Request",
                    "items": {
                        "$ref": "#/definitions/app_typeApiEndpointInfoRequest"
                    },
                    "x-displayname": "Api Endpoint Info Request",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "collapsed_url": {
                    "type": "string",
                    "description": " Requested API endPoint for api url.\n\nExample: - \"api/v1/user_id/DYN/vehicle_id/DYN\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "API URL",
                    "x-displayname": "API URL",
                    "x-ves-example": "api/v1/user_id/DYN/vehicle_id/DYN",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "domains": {
                    "type": "array",
                    "description": " List of domains that needs to be sent as part of the request\n Optional filter by domains. If absent, all domains are considered.\n\nExample: - \"www.example.com\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.max_len: 256\n  ves.io.schema.rules.repeated.items.string.min_len: 1\n  ves.io.schema.rules.repeated.items.string.vh_domain: true\n  ves.io.schema.rules.repeated.max_items: 5\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Domain",
                    "maxItems": 5,
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "x-displayname": "List of Domain",
                    "x-ves-example": "www.example.com",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.max_len": "256",
                        "ves.io.schema.rules.repeated.items.string.min_len": "1",
                        "ves.io.schema.rules.repeated.items.string.vh_domain": "true",
                        "ves.io.schema.rules.repeated.max_items": "5",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "method": {
                    "type": "string",
                    "description": " Requested API endPoint for method.\n\nExample: - \"GET\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Method of current API URL",
                    "x-displayname": "Method",
                    "x-ves-example": "GET",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                }
            }
        },
        "virtual_hostAPIEndpointRsp": {
            "type": "object",
            "description": "Response shape for GET API endpoint API.",
            "title": "API endpoint GET response",
            "x-displayname": "API Endpoint Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointRsp",
            "properties": {
                "apiep": {
                    "description": " API endpoint",
                    "title": "API endpoint",
                    "$ref": "#/definitions/app_typeAPIEPInfo",
                    "x-displayname": "API Endpoint"
                }
            }
        },
        "virtual_hostAPIEndpointsRsp": {
            "type": "object",
            "description": "Response shape for GET API endpoints API. It is list of API endpoints discovered",
            "title": "API endpoints GET response",
            "x-displayname": "API Endpoints Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointsRsp",
            "properties": {
                "apiep_list": {
                    "type": "array",
                    "description": " list of API endpoints discovered",
                    "title": "API endpoints list",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPInfo"
                    },
                    "x-displayname": "API Endpoints"
                }
            }
        },
        "virtual_hostApiEndpointsStatsRsp": {
            "type": "object",
            "description": "Response shape for GET API endpoints Stats.",
            "title": "Api Endpoints stats Response",
            "x-displayname": "Api Endpoints Stats Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.ApiEndpointsStatsRsp",
            "properties": {
                "discovered": {
                    "type": "integer",
                    "description": " number of endpoints that categorized as discover",
                    "title": "number of discovered endpoints",
                    "format": "int32",
                    "x-displayname": "Discovered"
                },
                "inventory": {
                    "type": "integer",
                    "description": " number of endpoints that categorized as inventory",
                    "title": "number of inventory endpoints",
                    "format": "int32",
                    "x-displayname": "Inventory"
                },
                "pii_detected": {
                    "type": "integer",
                    "description": "number of endpoints that detected with pii",
                    "title": "number of pii endpoints",
                    "format": "int32",
                    "x-displayname": "PII Detected"
                },
                "shadow": {
                    "type": "integer",
                    "description": " number of endpoints that categorized as shadow",
                    "title": "number of shadow endpoints",
                    "format": "int32",
                    "x-displayname": "Shadow"
                },
                "total_endpoints": {
                    "type": "integer",
                    "description": " total endpoints",
                    "title": "number of endpoints",
                    "format": "int32",
                    "x-displayname": "Total Endpoints"
                }
            }
        },
        "virtual_hostGetAPICallSummaryReq": {
            "type": "object",
            "description": "Request model for GetAPICallSummary API",
            "title": "GetAPICallSummaryReq",
            "x-displayname": "Get API Call Summary Request",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetAPICallSummaryReq",
            "properties": {
                "apiep_summary_filter": {
                    "description": " Filter object for summary block.",
                    "title": "apiep_summary_filter",
                    "$ref": "#/definitions/virtual_hostAPIEPSummaryFilter",
                    "x-displayname": "Summary Block Filter"
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                }
            }
        },
        "virtual_hostGetAPICallSummaryRsp": {
            "type": "object",
            "description": "Response model for GetSensitiveDataSummaryRsp API.",
            "title": "GetAPICallSummaryRsp",
            "x-displayname": "GetAPICallSummary API Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetAPICallSummaryRsp",
            "properties": {
                "request_count_per_rsp_code": {
                    "type": "array",
                    "description": " Number of API calls for each category of response.",
                    "title": "request_count_per_rsp_code",
                    "items": {
                        "$ref": "#/definitions/virtual_hostRequestCountPerResponseClass"
                    },
                    "x-displayname": "API Calls Per Response Type"
                },
                "total_calls": {
                    "type": "string",
                    "description": " Total API calls.",
                    "title": "total_calls",
                    "format": "uint64",
                    "x-displayname": "Total API Calls"
                }
            }
        },
        "virtual_hostGetTopAPIEndpointsReq": {
            "type": "object",
            "description": "Request model for GetTopAPIEndpointsReq API",
            "title": "Top attacked/active API endpoints request per virtual host",
            "x-displayname": "Top Attacked/Active API Endpoints per Virtual Host",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetTopAPIEndpointsReq",
            "properties": {
                "apiep_summary_filter": {
                    "description": " Filter object for summary block.",
                    "title": "apiep_summary_filter",
                    "$ref": "#/definitions/virtual_hostAPIEPSummaryFilter",
                    "x-displayname": "Summary Block Filter"
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                },
                "top_by_metric": {
                    "description": " returns top api endpoints by security_events or requests metrics.\n\nExample: - \"TOP_APIEPS_BY_SEC_EVENTS, TOP_APIEPS_BY_REQ_COUNT\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "top_by_metric",
                    "$ref": "#/definitions/virtual_hostAPIEPActivityMetricType",
                    "x-displayname": "Top API endpoints by",
                    "x-ves-example": "TOP_APIEPS_BY_SEC_EVENTS, TOP_APIEPS_BY_REQ_COUNT",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "topk": {
                    "type": "integer",
                    "description": " Number of top API endpoints to return in the response.\n\nExample: - \"5\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 10\n",
                    "title": "topk",
                    "format": "int64",
                    "x-displayname": "Number of Top API Endpoints",
                    "x-ves-example": "5",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "10"
                    }
                }
            }
        },
        "virtual_hostGetTopAPIEndpointsRsp": {
            "type": "object",
            "description": "Response model for GetTopAttackedAPIEndpoints API.",
            "title": "API endpoint GET response",
            "x-displayname": "API Endpoint Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetTopAPIEndpointsRsp",
            "properties": {
                "top_apieps": {
                    "type": "array",
                    "description": " Top Attacked API endpoints\n\nValidation Rules:\n  ves.io.schema.rules.repeated.max_items: 10\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "top_apieps",
                    "maxItems": 10,
                    "items": {
                        "$ref": "#/definitions/virtual_hostAPIEPActivityMetrics"
                    },
                    "x-displayname": "Top Attacked Endpoints",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.max_items": "10",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                }
            }
        },
        "virtual_hostGetTopSensitiveDataReq": {
            "type": "object",
            "description": "Request model for GetTopSensitiveDataReq API",
            "title": "GetTopSensitiveDataReq",
            "x-displayname": "Get Top Sensitive Data Request Object",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetTopSensitiveDataReq",
            "properties": {
                "apiep_category": {
                    "type": "array",
                    "description": " Category of api endpoints. Can be DISCOVERED, INVENTORY or SHADOW API.\n\nExample: - \"DISCOVERED\"-",
                    "title": "APIEP Category",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPCategory"
                    },
                    "x-displayname": "APIEP Category",
                    "x-ves-example": "DISCOVERED"
                },
                "domains": {
                    "type": "array",
                    "description": " List of domains for which top api endpoints summary should be returned.\n Optional filter by domains. If absent, endpoints for all domains are considered.\n\nExample: - \"www.example.com\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.max_len: 256\n  ves.io.schema.rules.repeated.items.string.min_len: 1\n  ves.io.schema.rules.repeated.items.string.vh_domain: true\n  ves.io.schema.rules.repeated.max_items: 5\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Domain",
                    "maxItems": 5,
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "x-displayname": "List of Domain",
                    "x-ves-example": "www.example.com",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.max_len": "256",
                        "ves.io.schema.rules.repeated.items.string.min_len": "1",
                        "ves.io.schema.rules.repeated.items.string.vh_domain": "true",
                        "ves.io.schema.rules.repeated.max_items": "5",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                },
                "topk": {
                    "type": "integer",
                    "description": " Number of top API endpoints to return in the response.\n\nExample: - \"5\"-\n\nValidation Rules:\n  ves.io.schema.rules.uint32.gte: 0\n  ves.io.schema.rules.uint32.lte: 10\n",
                    "title": "topk",
                    "format": "int64",
                    "x-displayname": "Number of Top API Endpoints",
                    "x-ves-example": "5",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.uint32.gte": "0",
                        "ves.io.schema.rules.uint32.lte": "10"
                    }
                }
            }
        },
        "virtual_hostGetTopSensitiveDataRsp": {
            "type": "object",
            "description": "Response model for GetTopSensitiveDataRsp API.",
            "title": "GetTopSensitiveDataRsp",
            "x-displayname": "SensitiveDataSummary API Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetTopSensitiveDataRsp",
            "properties": {
                "top_sensitive_data": {
                    "type": "array",
                    "description": " Top k (max 10) sensitive data types with highest APIs count.",
                    "title": "top_sensitive_data",
                    "items": {
                        "$ref": "#/definitions/virtual_hostSensitiveDataCount"
                    },
                    "x-displayname": "Top Sensitive Data"
                }
            }
        },
        "virtual_hostGetVulnerabilitiesReq": {
            "type": "object",
            "description": "Request model for GetVulnerabilitiesReq API",
            "title": "GetVulnerabilitiesReq",
            "x-displayname": "Get Vulnerabilities Request",
            "x-ves-oneof-field-context": "[\"api_endpoint\"]",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetVulnerabilitiesReq",
            "properties": {
                "api_endpoint": {
                    "description": "Exclusive with []\n API Endpoint",
                    "title": "api_endpoint",
                    "$ref": "#/definitions/schemavirtual_hostAPIEndpoint",
                    "x-displayname": "API Endpoint"
                },
                "domains": {
                    "type": "array",
                    "description": " List of domains for which vulnerabilities should be returned.\n Optional filter by domains. If absent, vulnerabilities for all domains are considered.\n\nExample: - \"www.example.com\"-\n\nValidation Rules:\n  ves.io.schema.rules.repeated.items.string.max_len: 256\n  ves.io.schema.rules.repeated.items.string.min_len: 1\n  ves.io.schema.rules.repeated.items.string.vh_domain: true\n  ves.io.schema.rules.repeated.max_items: 5\n  ves.io.schema.rules.repeated.unique: true\n",
                    "title": "List of Domain",
                    "maxItems": 5,
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "x-displayname": "List of Domain",
                    "x-ves-example": "www.example.com",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.repeated.items.string.max_len": "256",
                        "ves.io.schema.rules.repeated.items.string.min_len": "1",
                        "ves.io.schema.rules.repeated.items.string.vh_domain": "true",
                        "ves.io.schema.rules.repeated.max_items": "5",
                        "ves.io.schema.rules.repeated.unique": "true"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                }
            }
        },
        "virtual_hostGetVulnerabilitiesRsp": {
            "type": "object",
            "description": "Response model for GetVulnerabilitiesRsp API.",
            "title": "GetVulnerabilitiesRsp",
            "x-displayname": "GetVulnerabilitiesRsp API Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.GetVulnerabilitiesRsp",
            "properties": {
                "vulnerabilities": {
                    "type": "array",
                    "description": " List of vulnerabilities found in context.",
                    "title": "vulnerabilities",
                    "items": {
                        "$ref": "#/definitions/virtual_hostVulnerability"
                    },
                    "x-displayname": "List of vulnerabilities"
                }
            }
        },
        "virtual_hostRequestCountPerResponseClass": {
            "type": "object",
            "description": "Request count per response class.",
            "title": "RequestCountPerResponseClass",
            "x-displayname": "Request Count Per Response Class",
            "x-ves-proto-message": "ves.io.schema.virtual_host.RequestCountPerResponseClass",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": " Request count for this response code class/category.",
                    "title": "count",
                    "format": "int32",
                    "x-displayname": "Request Count For Response Class."
                },
                "rsp_code_class": {
                    "description": " The category of response code(e.g. 1XX, 2XX etc).",
                    "title": "rsp_code",
                    "$ref": "#/definitions/schemaHttpResponseCodeClass",
                    "x-displayname": "Response Class"
                }
            }
        },
        "virtual_hostSensitiveDataCount": {
            "type": "object",
            "description": "Response model for GetTopSensitiveDataRsp API.",
            "title": "SensitiveDataCount",
            "x-displayname": "Sensitive Data Count",
            "x-ves-proto-message": "ves.io.schema.virtual_host.SensitiveDataCount",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": " Number of APIEP detected this sensitive data type.",
                    "title": "count",
                    "format": "int32",
                    "x-displayname": "API Count With This Sensitive Data Type"
                },
                "sensitive_data_type": {
                    "description": " The type of sensitive data detected in APIs.",
                    "title": "sensitive_data_type",
                    "$ref": "#/definitions/app_typeSensitiveDataType",
                    "x-displayname": "Type Of Sensitive Data"
                },
                "type": {
                    "type": "string",
                    "description": " The type of sensitive data detected in APIs.",
                    "title": "sensitive_data_type",
                    "x-displayname": "Type Of Sensitive Data"
                }
            }
        },
        "virtual_hostUpdateVulnerabilitiesStateReq": {
            "type": "object",
            "description": "Request model for UpdateVulnerabilitiesStateReq API",
            "title": "UpdateVulnerabilitiesStateReq",
            "x-displayname": "Update Vulnerability State",
            "x-ves-oneof-field-context": "[\"api_endpoint\"]",
            "x-ves-proto-message": "ves.io.schema.virtual_host.UpdateVulnerabilitiesStateReq",
            "properties": {
                "api_endpoint": {
                    "description": "Exclusive with []\n API Endpoint",
                    "title": "api_endpoint",
                    "$ref": "#/definitions/schemavirtual_hostAPIEndpoint",
                    "x-displayname": "API Endpoint"
                },
                "domain": {
                    "type": "string",
                    "description": " domain for which vulnerability state should be updated.\n\nExample: - \"www.example.com\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "Domain",
                    "x-displayname": "Domain",
                    "x-ves-example": "www.example.com",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "name": {
                    "type": "string",
                    "description": " Virtual Host name for current request\n\nExample: - \"blogging-app-vhost\"-",
                    "title": "Virtual Host Name",
                    "x-displayname": "Virtual Host Name",
                    "x-ves-example": "blogging-app-vhost"
                },
                "namespace": {
                    "type": "string",
                    "description": " Namespace of the virtual host for current request\n\nExample: - \"blogging-app\"-",
                    "title": "Namespace",
                    "x-displayname": "Namespace",
                    "x-ves-example": "blogging-app"
                },
                "vuln_id": {
                    "type": "string",
                    "description": " Vulnerability ID\n\nExample: - HTTP_SUPPORTED_AND_HSTS_NOT_SET-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "vulnerability_id",
                    "x-displayname": "Vulnerability ID",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                },
                "vuln_state": {
                    "description": " State of the vulnerability\n\nExample: - \"RESOLVED\"-\n\nRequired: YES\n\nValidation Rules:\n  ves.io.schema.rules.message.required: true\n",
                    "title": "State",
                    "$ref": "#/definitions/virtual_hostVulnStatus",
                    "x-displayname": "State",
                    "x-ves-example": "RESOLVED",
                    "x-ves-required": "true",
                    "x-ves-validation-rules": {
                        "ves.io.schema.rules.message.required": "true"
                    }
                }
            }
        },
        "virtual_hostUpdateVulnerabilitiesStateRsp": {
            "type": "object",
            "description": "Response model for UpdateVulnerabilitiesStateRsp API.",
            "title": "UpdateVulnerabilitiesStateRsp",
            "x-displayname": "UpdateVulnerabilitiesStateRsp API Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.UpdateVulnerabilitiesStateRsp"
        },
        "virtual_hostVulnContext": {
            "type": "string",
            "description": "Context of where vulnerability found\n\nVulnerability has been identified at API Endpoint level.\nVulnerability has been identified at API BasePath level.\nVulnerability has been identified at Domain level.",
            "title": "Context",
            "enum": [
                "CONTEXT_API_ENDPOINT",
                "CONTEXT_API_BASEPATH",
                "CONTEXT_API_DOMAIN"
            ],
            "default": "CONTEXT_API_ENDPOINT",
            "x-displayname": "Context",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.VulnContext"
        },
        "virtual_hostVulnEvidence": {
            "type": "object",
            "description": "Evidence of the vulnerability found.",
            "title": "Evidence",
            "x-displayname": "Evidence",
            "x-ves-proto-message": "ves.io.schema.virtual_host.VulnEvidence",
            "properties": {
                "end_time": {
                    "type": "string",
                    "description": " end_time is the time when vulnerability evidence\n appeared last.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "end_time",
                    "format": "date-time",
                    "x-displayname": "End Time"
                },
                "evidence_type": {
                    "description": " Type of evidence where vulnerability was found.",
                    "title": "evidence_type",
                    "$ref": "#/definitions/virtual_hostVulnEvidenceType",
                    "x-displayname": "Evidence type"
                },
                "samples": {
                    "type": "array",
                    "description": " Samples due to which vulnerability was found.",
                    "title": "samples",
                    "items": {
                        "$ref": "#/definitions/virtual_hostVulnEvidenceSample"
                    },
                    "x-displayname": "Samples"
                },
                "start_time": {
                    "type": "string",
                    "description": " start_time is the time when vulnerability evidence\n appeared first.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "start_time",
                    "format": "date-time",
                    "x-displayname": "Start Time"
                }
            }
        },
        "virtual_hostVulnEvidenceSample": {
            "type": "object",
            "description": "Vulnerability evidence sample due to which vulnerability was found",
            "title": "VulnEvidenceSample",
            "x-displayname": "Vulnerability evidence sample",
            "x-ves-proto-message": "ves.io.schema.virtual_host.VulnEvidenceSample",
            "properties": {
                "details": {
                    "type": "array",
                    "description": " List of details due to which vulnerability was found.",
                    "title": "details",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "List of details"
                },
                "req_id": {
                    "type": "string",
                    "description": " Request id where vulnerability was found.",
                    "title": "req_id",
                    "x-displayname": "Request id"
                }
            }
        },
        "virtual_hostVulnEvidenceType": {
            "type": "string",
            "description": "Evidence Type where vulnerability found\n\nVulnerability has been identified in requests.\nVulnerability has been identified in sec-events.",
            "title": "EvidenceType",
            "enum": [
                "EVIDENCE_TYPE_REQUESTS",
                "EVIDENCE_TYPE_SEC_EVENTS"
            ],
            "default": "EVIDENCE_TYPE_REQUESTS",
            "x-displayname": "Evidence Type",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.VulnEvidenceType"
        },
        "virtual_hostVulnRisk": {
            "type": "object",
            "description": "Risk of the vulnerability found.",
            "title": "Risk",
            "x-displayname": "Risk",
            "x-ves-proto-message": "ves.io.schema.virtual_host.VulnRisk",
            "properties": {
                "level": {
                    "description": " Risk level of the vulnerability found.",
                    "title": "level",
                    "$ref": "#/definitions/virtual_hostVulnRiskLevel",
                    "x-displayname": "Level"
                },
                "score": {
                    "type": "number",
                    "description": " Risk score of the vulnerability found.",
                    "title": "score",
                    "format": "float",
                    "x-displayname": "Score"
                }
            }
        },
        "virtual_hostVulnRiskLevel": {
            "type": "string",
            "description": "Risk level of the vulnerability found\n\nRisk level is not detected (for example, when no traffic).\nVulnerability has low security risk.\nVulnerability has medium security risk.\nVulnerability has high security risk.\nVulnerability has critical security risk.",
            "title": "Risk Level",
            "enum": [
                "RISK_LEVEL_NONE",
                "RISK_LEVEL_LOW",
                "RISK_LEVEL_MED",
                "RISK_LEVEL_HIGH",
                "RISK_LEVEL_CRITICAL"
            ],
            "default": "RISK_LEVEL_NONE",
            "x-displayname": "Risk Level",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.VulnRiskLevel"
        },
        "virtual_hostVulnStatus": {
            "type": "string",
            "description": "Status of vulnerability found\n\nVulnerability has no status\nVulnerability has open status and it will be under Active tab\nVulnerability has ignore status\nThe vulnerability Ignored manually and it will be under Archived tab\nThe next Discovery process should ignore the vulnerability.\nVulnerability has resolution status\nThe vulnerability resolved manually and it will be under Archived tab\nThe next Discovery process should validate the resolution and reopen (Move to Active and mark as Open) if not resolved.\nVulnerability has under review status and it will be under Active tab\nThe vulnerability under security or development team responsibility",
            "title": "Status",
            "enum": [
                "STATUS_NONE",
                "STATUS_OPEN",
                "STATUS_IGNORE",
                "STATUS_RESOLUTION_CONFIRMED",
                "STATUS_UNDER_REVIEW"
            ],
            "default": "STATUS_NONE",
            "x-displayname": "Status",
            "x-ves-proto-enum": "ves.io.schema.virtual_host.VulnStatus"
        },
        "virtual_hostVulnerability": {
            "type": "object",
            "description": "Vulnerability object.",
            "title": "Vulnerability",
            "x-displayname": "Vulnerability",
            "x-ves-proto-message": "ves.io.schema.virtual_host.Vulnerability",
            "properties": {
                "category": {
                    "type": "string",
                    "description": " Category of the vulnerability found.",
                    "title": "category",
                    "x-displayname": "Category"
                },
                "context": {
                    "description": " Context of the vulnerability found.",
                    "title": "Context",
                    "$ref": "#/definitions/virtual_hostVulnContext",
                    "x-displayname": "Context"
                },
                "creation_time": {
                    "type": "string",
                    "description": " creation_time is the time when the vulnerability\n was created by the discovery mechanism.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "creation_time",
                    "format": "date-time",
                    "x-displayname": "Creation Time"
                },
                "description": {
                    "type": "string",
                    "description": " Description of the vulnerability found.",
                    "title": "description",
                    "x-displayname": "Description"
                },
                "domain": {
                    "type": "string",
                    "description": " Domain of the vulnerability found.\n\nExample: - \"www.example.com\"-",
                    "title": "domain",
                    "x-displayname": "Domain",
                    "x-ves-example": "www.example.com"
                },
                "evidence": {
                    "description": " Evidence of the vulnerability found.",
                    "title": "evidence",
                    "$ref": "#/definitions/virtual_hostVulnEvidence",
                    "x-displayname": "Evidence"
                },
                "last_observed_time": {
                    "type": "string",
                    "description": " last_observed_time is the time when the vulnerability\n was last observed by the discovery mechanism.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "last_observed_time",
                    "format": "date-time",
                    "x-displayname": "Last Observed Time"
                },
                "remediation": {
                    "type": "array",
                    "description": " Remediation of the vulnerability found.",
                    "title": "remediation",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Remediation"
                },
                "risk": {
                    "description": " Risk of the vulnerability found.",
                    "title": "risk",
                    "$ref": "#/definitions/virtual_hostVulnRisk",
                    "x-displayname": "Risk"
                },
                "status": {
                    "description": " Status of the vulnerability found.",
                    "title": "status",
                    "$ref": "#/definitions/virtual_hostVulnStatus",
                    "x-displayname": "Status"
                },
                "status_change_time": {
                    "type": "string",
                    "description": " status_change_time is the time when the vulnerability\n status was updated by the discovery mechanism.\n It is the UTC time and represented in RFC3339 form.",
                    "title": "status_change_time",
                    "format": "date-time",
                    "x-displayname": "Status Change Time"
                },
                "title": {
                    "type": "string",
                    "description": " Title of the vulnerability found.",
                    "title": "title",
                    "x-displayname": "Title"
                },
                "vuln_id": {
                    "type": "string",
                    "description": " Vulnerability ID\n\nExample: - HTTP_SUPPORTED_AND_HSTS_NOT_SET-",
                    "title": "vulnerability_id",
                    "x-displayname": "vulnerability_id"
                }
            }
        }
    },
    "x-displayname": "Virtual Host",
    "x-ves-proto-file": "ves.io/schema/virtual_host/public_apiep_customapi.proto"
}`

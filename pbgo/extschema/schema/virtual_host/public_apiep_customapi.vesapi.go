//
// Copyright (c) 2018 Volterra, Inc. All rights reserved.
// Code generated by ves-gen-schema-go. DO NOT EDIT.
//

package virtual_host

import (
	"bytes"
	"context"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"

	"github.com/gogo/protobuf/proto"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	google_api "google.golang.org/genproto/googleapis/api/httpbody"
	"google.golang.org/grpc"

	"gopkg.volterra.us/stdlib/client"
	"gopkg.volterra.us/stdlib/codec"
	"gopkg.volterra.us/stdlib/errors"
	"gopkg.volterra.us/stdlib/server"
	"gopkg.volterra.us/stdlib/svcfw"
)

var (
	_ = fmt.Sprintf("dummy for fmt import use")
)

// Create ApiepCustomAPI GRPC Client satisfying server.CustomClient
type ApiepCustomAPIGrpcClient struct {
	conn       *grpc.ClientConn
	grpcClient ApiepCustomAPIClient
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error)
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpointLearntSchema(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointLearntSchemaReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpointLearntSchema(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpointPDF(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointPDFReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpointPDF(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetAPIEndpoints(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &APIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointsReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetAPIEndpoints(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) doRPCGetSwaggerSpec(ctx context.Context, yamlReq string, opts ...grpc.CallOption) (proto.Message, error) {
	req := &SwaggerSpecReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.SwaggerSpecReq", yamlReq)
	}
	rsp, err := c.grpcClient.GetSwaggerSpec(ctx, req, opts...)
	return rsp, err
}

func (c *ApiepCustomAPIGrpcClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}
	if cco.YAMLReq == "" {
		return nil, fmt.Errorf("Error, empty request body")
	}
	ctx = client.AddHdrsToCtx(cco.Headers, ctx)

	rsp, err := rpcFn(ctx, cco.YAMLReq, cco.GrpcCallOpts...)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using GRPC")
	}
	if cco.OutCallResponse != nil {
		cco.OutCallResponse.ProtoMsg = rsp
	}
	return rsp, nil
}

func NewApiepCustomAPIGrpcClient(cc *grpc.ClientConn) server.CustomClient {
	ccl := &ApiepCustomAPIGrpcClient{
		conn:       cc,
		grpcClient: NewApiepCustomAPIClient(cc),
	}
	rpcFns := make(map[string]func(context.Context, string, ...grpc.CallOption) (proto.Message, error))
	rpcFns["GetAPIEndpointLearntSchema"] = ccl.doRPCGetAPIEndpointLearntSchema

	rpcFns["GetAPIEndpointPDF"] = ccl.doRPCGetAPIEndpointPDF

	rpcFns["GetAPIEndpoints"] = ccl.doRPCGetAPIEndpoints

	rpcFns["GetSwaggerSpec"] = ccl.doRPCGetSwaggerSpec

	ccl.rpcFns = rpcFns

	return ccl
}

// Create ApiepCustomAPI REST Client satisfying server.CustomClient
type ApiepCustomAPIRestClient struct {
	baseURL string
	client  http.Client
	// map of rpc name to its invocation
	rpcFns map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error)
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpointLearntSchema(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointLearntSchemaReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post":
		jsn, err := req.ToJSON()
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		newReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP POST request for custom API")
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("collapsed_url", fmt.Sprintf("%v", req.CollapsedUrl))
		q.Add("method", fmt.Sprintf("%v", req.Method))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointLearntSchemaRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, fmt.Errorf("JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpointPDF(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointPDFReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post":
		jsn, err := req.ToJSON()
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		newReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP POST request for custom API")
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("collapsed_url", fmt.Sprintf("%v", req.CollapsedUrl))
		q.Add("method", fmt.Sprintf("%v", req.Method))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointPDFRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, fmt.Errorf("JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointPDFRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetAPIEndpoints(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &APIEndpointsReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.APIEndpointsReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post":
		jsn, err := req.ToJSON()
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		newReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP POST request for custom API")
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("api_endpoint_info_request", fmt.Sprintf("%v", req.ApiEndpointInfoRequest))
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &APIEndpointsRsp{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		return nil, fmt.Errorf("JSON Response %s is not of type *ves.io.schema.virtual_host.APIEndpointsRsp", body)

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) doRPCGetSwaggerSpec(ctx context.Context, callOpts *server.CustomCallOpts) (proto.Message, error) {
	if callOpts.URI == "" {
		return nil, fmt.Errorf("Error, URI should be specified, got empty")
	}
	url := fmt.Sprintf("%s%s", c.baseURL, callOpts.URI)

	yamlReq := callOpts.YAMLReq
	req := &SwaggerSpecReq{}
	if err := codec.FromYAML(yamlReq, req); err != nil {
		return nil, fmt.Errorf("YAML Request %s is not of type *ves.io.schema.virtual_host.SwaggerSpecReq: %s", yamlReq, err)
	}

	var hReq *http.Request
	hm := strings.ToLower(callOpts.HTTPMethod)
	switch hm {
	case "post":
		jsn, err := req.ToJSON()
		if err != nil {
			return nil, errors.Wrap(err, "Custom RestClient converting YAML to JSON")
		}
		newReq, err := http.NewRequest(http.MethodPost, url, bytes.NewBuffer([]byte(jsn)))
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP POST request for custom API")
		}
		hReq = newReq
	case "get":
		newReq, err := http.NewRequest(http.MethodGet, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP GET request for custom API")
		}
		hReq = newReq
		q := hReq.URL.Query()
		_ = q
		q.Add("name", fmt.Sprintf("%v", req.Name))
		q.Add("namespace", fmt.Sprintf("%v", req.Namespace))

		hReq.URL.RawQuery += q.Encode()
	case "delete":
		newReq, err := http.NewRequest(http.MethodDelete, url, nil)
		if err != nil {
			return nil, errors.Wrap(err, "Creating new HTTP DELETE request for custom API")
		}
		hReq = newReq
	default:
		return nil, fmt.Errorf("Error, invalid/empty HTTPMethod(%s) specified, should be POST|DELETE|GET", callOpts.HTTPMethod)
	}
	hReq = hReq.WithContext(ctx)
	hReq.Header.Set("Content-Type", "application/json")
	client.AddHdrsToReq(callOpts.Headers, hReq)

	rsp, err := c.client.Do(hReq)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient")
	}
	defer rsp.Body.Close()

	if rsp.StatusCode != http.StatusOK {
		body, err := ioutil.ReadAll(rsp.Body)
		return nil, fmt.Errorf("Unsuccessful custom API %s on %s, status code %d, body %s, err %s", callOpts.HTTPMethod, callOpts.URI, rsp.StatusCode, body, err)
	}

	body, err := ioutil.ReadAll(rsp.Body)
	if err != nil {
		return nil, errors.Wrap(err, "Custom API RestClient read body")
	}
	pbRsp := &google_api.HttpBody{}
	if err := codec.FromJSON(string(body), pbRsp); err != nil {
		// server strips HTTP Body proto message and sends only data, re-build it here
		pbRsp.ContentType = rsp.Header.Get("Content-Type")
		pbRsp.Data = body

	}
	if callOpts.OutCallResponse != nil {
		callOpts.OutCallResponse.ProtoMsg = pbRsp
		callOpts.OutCallResponse.JSON = string(body)
	}
	return pbRsp, nil
}

func (c *ApiepCustomAPIRestClient) DoRPC(ctx context.Context, rpc string, opts ...server.CustomCallOpt) (proto.Message, error) {
	rpcFn, exists := c.rpcFns[rpc]
	if !exists {
		return nil, fmt.Errorf("Error, no such rpc %s", rpc)
	}
	cco := server.NewCustomCallOpts()
	for _, opt := range opts {
		opt(cco)
	}

	rsp, err := rpcFn(ctx, cco)
	if err != nil {
		return nil, errors.Wrap(err, "Doing custom RPC using Rest")
	}
	return rsp, nil
}

func NewApiepCustomAPIRestClient(baseURL string, hc http.Client) server.CustomClient {
	ccl := &ApiepCustomAPIRestClient{
		baseURL: baseURL,
		client:  hc,
	}

	rpcFns := make(map[string]func(context.Context, *server.CustomCallOpts) (proto.Message, error))
	rpcFns["GetAPIEndpointLearntSchema"] = ccl.doRPCGetAPIEndpointLearntSchema

	rpcFns["GetAPIEndpointPDF"] = ccl.doRPCGetAPIEndpointPDF

	rpcFns["GetAPIEndpoints"] = ccl.doRPCGetAPIEndpoints

	rpcFns["GetSwaggerSpec"] = ccl.doRPCGetSwaggerSpec

	ccl.rpcFns = rpcFns

	return ccl
}

// Create ApiepCustomAPIInprocClient

// INPROC Client (satisfying ApiepCustomAPIClient interface)
type ApiepCustomAPIInprocClient struct {
	svc svcfw.Service
}

func (c *ApiepCustomAPIInprocClient) GetAPIEndpointLearntSchema(ctx context.Context, in *APIEndpointLearntSchemaReq, opts ...grpc.CallOption) (*APIEndpointLearntSchemaRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPISrv", ah)
	}

	var (
		rsp *APIEndpointLearntSchemaRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointLearntSchemaReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpointLearntSchema' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if c.svc.Config().EnableAPIValidation {
		if rvFn := c.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpointLearntSchema(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp", rsp)...)

	return rsp, nil
}
func (c *ApiepCustomAPIInprocClient) GetAPIEndpointPDF(ctx context.Context, in *APIEndpointPDFReq, opts ...grpc.CallOption) (*APIEndpointPDFRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPISrv", ah)
	}

	var (
		rsp *APIEndpointPDFRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointPDFReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpointPDF' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if c.svc.Config().EnableAPIValidation {
		if rvFn := c.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpointPDF(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointPDFRsp", rsp)...)

	return rsp, nil
}
func (c *ApiepCustomAPIInprocClient) GetAPIEndpoints(ctx context.Context, in *APIEndpointsReq, opts ...grpc.CallOption) (*APIEndpointsRsp, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPISrv", ah)
	}

	var (
		rsp *APIEndpointsRsp
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointsReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetAPIEndpoints' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if c.svc.Config().EnableAPIValidation {
		if rvFn := c.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetAPIEndpoints(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.APIEndpointsRsp", rsp)...)

	return rsp, nil
}
func (c *ApiepCustomAPIInprocClient) GetSwaggerSpec(ctx context.Context, in *SwaggerSpecReq, opts ...grpc.CallOption) (*google_api.HttpBody, error) {
	ah := c.svc.GetAPIHandler("ves.io.schema.virtual_host.ApiepCustomAPI")
	cah, ok := ah.(ApiepCustomAPIServer)
	if !ok {
		return nil, fmt.Errorf("ah %v is not of type *ApiepCustomAPISrv", ah)
	}

	var (
		rsp *google_api.HttpBody
		err error
	)

	bodyFields := svcfw.GenAuditReqBodyFields(ctx, c.svc, "ves.io.schema.virtual_host.SwaggerSpecReq", in)
	defer func() {
		if len(bodyFields) > 0 {
			server.ExtendAPIAudit(ctx, svcfw.PublicAPIBodyLog.Uid, bodyFields)
		}
		userMsg := "The 'ApiepCustomAPI.GetSwaggerSpec' operation on 'virtual_host'"
		if err == nil {
			userMsg += " was successfully performed."
		} else {
			userMsg += " failed to be performed."
		}
		server.AddUserMsgToAPIAudit(ctx, userMsg)
	}()

	if c.svc.Config().EnableAPIValidation {
		if rvFn := c.svc.GetRPCValidator("ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec"); rvFn != nil {
			if verr := rvFn(ctx, in); verr != nil {
				err = server.MaybePublicRestError(ctx, errors.Wrapf(verr, "Validating Request"))
				return nil, server.GRPCStatusFromError(err).Err()
			}
		}
	}

	rsp, err = cah.GetSwaggerSpec(ctx, in)
	if err != nil {
		return rsp, server.GRPCStatusFromError(server.MaybePublicRestError(ctx, err)).Err()
	}

	bodyFields = append(bodyFields, svcfw.GenAuditRspBodyFields(ctx, c.svc, "google.api.HttpBody", rsp)...)

	return rsp, nil
}

func NewApiepCustomAPIInprocClient(svc svcfw.Service) ApiepCustomAPIClient {
	return &ApiepCustomAPIInprocClient{svc: svc}
}

// RegisterGwApiepCustomAPIHandler registers with grpc-gw with an inproc-client backing so that
// rest to grpc happens without a grpc.Dial (thus avoiding additional certs for mTLS)
func RegisterGwApiepCustomAPIHandler(ctx context.Context, mux *runtime.ServeMux, svc interface{}) error {
	s, ok := svc.(svcfw.Service)
	if !ok {
		return fmt.Errorf("svc is not svcfw.Service")
	}
	return RegisterApiepCustomAPIHandlerClient(ctx, mux, NewApiepCustomAPIInprocClient(s))
}

var ApiepCustomAPISwaggerJSON string = `{
    "swagger": "2.0",
    "info": {
        "title": "Virtual host",
        "description": "Virtual host is main anchor configuration for a proxy. Primary application for virtual host configuration is \nreverse proxy.  Virtual host object is used to create a Loadbalancer, virtual service Or API gateway.\nIt can also be viewed as base object to define application routing.\n\nTerminology\n\nDownstream: A downstream host connects to Volterra ADC, sends requests, and receives responses.\nUpstream: An upstream host receives connections and requests from Volterra ADC and returns responses.",
        "version": "version not set"
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": null,
    "paths": {
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoint/learnt_schema": {
            "get": {
                "summary": "Get Learnt Schema per API endpoint",
                "description": "Get Learnt Schema per API endpoint for a given auto discovered API endpoint for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointLearntSchemaRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host\n\nx-example: \"blogging-app-vhost\"\nVirtual Host Name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "collapsed_url",
                        "description": "x-example: \"api/v1/user_id/DYN/vehicle_id/DYN\"\nAPI endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "API URL"
                    },
                    {
                        "name": "method",
                        "description": "x-example: \"GET\"\nmethod of API endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Method"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-ApiepCustomAPI-GetAPIEndpointLearntSchema"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointLearntSchema"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoint/pdf": {
            "get": {
                "summary": "Get PDF for API endpoint Per Virtual Host",
                "description": "Get PDF of all metrics for a given auto discovered API endpoint for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointPDFRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host\n\nx-example: \"blogging-app-vhost\"\nVirtual Host Name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "collapsed_url",
                        "description": "x-example: \"api/v1/user_id/DYN/vehicle_id/DYN\"\nAPI endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "API URL"
                    },
                    {
                        "name": "method",
                        "description": "x-example: \"GET\"\nmethod of API endpoint for which PDFs are requested.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "x-displayname": "Method"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-ApiepCustomAPI-GetAPIEndpointPDF"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpointPDF"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints": {
            "get": {
                "summary": "Get API endpoints Per Virtual Host",
                "description": "Get all autodiscovered API endpoints for Virtual Host",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/virtual_hostAPIEndpointsRsp"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"blogging-app\"\nNamespace of the virtual host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app-vhost\"\nVirtual Host name for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    },
                    {
                        "name": "api_endpoint_info_request",
                        "description": "List of additional things that needs to be sent as part of the request\n\nAPI ENDPOINT INFO NONE option is used to disable any additional info request per api endpoint response\nAPI ENDPOINT INFO PDF SPARKLINES option is used to enable pdf sparkline info along with the api endpoint response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "API_ENDPOINT_INFO_NONE",
                                "API_ENDPOINT_INFO_PDF_SPARKLINES"
                            ]
                        },
                        "collectionFormat": "multi",
                        "x-displayname": "API Endpoint Info PDF Sparklines"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetAPIEndpoints"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        },
        "/public/namespaces/{namespace}/virtual_hosts/{name}/api_endpoints/swagger_spec": {
            "get": {
                "summary": "Get Swagger Spec for App Type",
                "description": "Get the corresponding Swagger spec for the given app type",
                "operationId": "ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/apiHttpBody"
                        }
                    },
                    "401": {
                        "description": "Returned when operation is not authorized",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "403": {
                        "description": "Returned when there is no permission to access resource",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "Returned when resource is not found",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "409": {
                        "description": "Returned when operation on resource is conflicting with current value",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "429": {
                        "description": "Returned when operation has been rejected as it is happening too frequently",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "500": {
                        "description": "Returned when server encountered an error in processing API",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "503": {
                        "description": "Returned when service is unavailable temporarily",
                        "schema": {
                            "format": "string"
                        }
                    },
                    "504": {
                        "description": "Returned when server timed out processing request",
                        "schema": {
                            "format": "string"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "namespace",
                        "description": "Namespace\n\nx-example: \"shared\"\nNamespace of the App type for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Namespace"
                    },
                    {
                        "name": "name",
                        "description": "Virtual Host Name\n\nx-example: \"blogging-app\"\nVirtual Host for current request",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-displayname": "Virtual Host Name"
                    }
                ],
                "tags": [
                    "ApiepCustomAPI"
                ],
                "externalDocs": {
                    "description": "Examples of this operation",
                    "url": "https://www.volterra.io/docs/reference/api-ref/ves-io-schema-virtual_host-ApiepCustomAPI-GetSwaggerSpec"
                },
                "x-ves-proto-rpc": "ves.io.schema.virtual_host.ApiepCustomAPI.GetSwaggerSpec"
            },
            "x-displayname": "API Endpoints by Virtual Host Custom API",
            "x-ves-proto-service": "ves.io.schema.virtual_host.ApiepCustomAPI",
            "x-ves-proto-service-type": "CUSTOM_PUBLIC"
        }
    },
    "definitions": {
        "apiHttpBody": {
            "type": "object",
            "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
            "properties": {
                "content_type": {
                    "type": "string",
                    "description": "The HTTP Content-Type header value specifying the content type of the body."
                },
                "data": {
                    "type": "string",
                    "description": "The HTTP request/response body as raw binary.",
                    "format": "byte"
                },
                "extensions": {
                    "type": "array",
                    "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                }
            }
        },
        "app_typeAPIEPDynExample": {
            "type": "object",
            "description": "List of Examples of expanded URL components for API endpoints that are collapsed with a dynamic component that is identified automatically",
            "title": "API endpoint dynamic example",
            "x-displayname": "Expanded API Endpoints",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPDynExample",
            "properties": {
                "component_examples": {
                    "type": "array",
                    "description": " List of sample URL(s) that are collapsed\n\nExample: - \"[d0161a1e-044e-427b-a806-3bad9eac97fc, a74eb844-6d91-474c-9874-f19fa3983f4d]\"-",
                    "title": "List of expanded URLs",
                    "items": {
                        "type": "string"
                    },
                    "x-displayname": "Expanded URL(s)",
                    "x-ves-example": "[d0161a1e-044e-427b-a806-3bad9eac97fc, a74eb844-6d91-474c-9874-f19fa3983f4d]"
                },
                "component_identifier": {
                    "type": "string",
                    "description": " Dynamic component used to collapse sample URLs given in Expanded URLs\n\nExample: - \"/api/v1/user_id/DYN\"-",
                    "title": "Dynamic component",
                    "x-displayname": "Dynamic Component",
                    "x-ves-example": "/api/v1/user_id/DYN"
                }
            }
        },
        "app_typeAPIEPInfo": {
            "type": "object",
            "description": "Information about automatically identified API endpoint\nEach identified API endpoint has a CollapsedURL and Method.\nCollapsedURL is created by replacing dynamic components in the URL, if any, with the keyword DYN.\nThese dynamic components are automatically identified.\nAdditionally, any API endpoint that has a collapsedURL with automatically identified DYN components,\nwill also have DYN-Examples which show a few examples of the original values of the components that were determined to be DYN.",
            "title": "Identified API",
            "x-displayname": "API Endpoint Info",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPInfo",
            "properties": {
                "collapsed_url": {
                    "type": "string",
                    "description": " URL for automatically identified API\n\nExample: - \"/api/v1/user_id/DYN/vehicle_id/DYN\"-",
                    "title": "Identified API",
                    "x-displayname": "API endpoint URL",
                    "x-ves-example": "/api/v1/user_id/DYN/vehicle_id/DYN"
                },
                "dyn_examples": {
                    "type": "array",
                    "description": " For example -\n {\"dyn_examples\": [\n  {\n    \"component_identifier\": \"api/v1/user_id/DYN\",\n    \"component_examples\": [\n      \"cmenomo007\",\n      \"marcusaurelius\"\n      \"artattacksince1947\",\n      \"johndoe83\",\n    ]\n  },\n  {\n    \"component_identifier\": \"api/v1/user_id/DYN/vehicle_id/DYN\",\n    \"component_examples\": [\n      \"JN1CV6AR3AM458367\",\n      \"1GBCS10AXP2917522\",\n      \"JM1DE1KY9D0155647\",\n      \"JN1CA31D5YT533780\"\n    ]\n  }\n ]}\n List  of sample URL(s) that are collapsed and dynamic components to collapse them\n\nExample: - \"{component_identifierapi/v1/user_id/DYN,component_examples: [cmenomo007]}\"-",
                    "title": "Expanded URL(s)",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPDynExample"
                    },
                    "x-displayname": "Expanded URL(s)",
                    "x-ves-example": "{component_identifier: api/v1/user_id/DYN,component_examples: [cmenomo007]}"
                },
                "has_learnt_schema": {
                    "type": "boolean",
                    "description": "Has Learnt Schema flag for request API endpoint.\n\nExample: - true-",
                    "title": "Has Learnt Schema",
                    "format": "boolean",
                    "x-displayname": "Has Learnt Schema"
                },
                "method": {
                    "type": "string",
                    "description": " HTTP method for the API.\n\nExample: - \"GET\"-",
                    "title": "HTTP method",
                    "x-displayname": "HTTP Method",
                    "x-ves-example": "GET"
                },
                "pdf_info": {
                    "description": " Metrics supported currently are request_size response_size latency_with_data, latency_no_data, request_rate, error_rate, response_throughput.\n PDF is calculated for each combination of (Tenant, App type, API endpoint).\n API endpoint is determined from automatically identified API (collapsed_url) and method.",
                    "title": "Probability Density Function",
                    "$ref": "#/definitions/app_typeAPIEPPDFInfo",
                    "x-displayname": "PDF(Value)"
                },
                "request_percentage": {
                    "type": "number",
                    "description": " Percentage of requests that were directed to this API Endpoint\n\nExample: - \"78.5789\"-",
                    "title": "Request percentage",
                    "format": "float",
                    "x-displayname": "Request Percentage",
                    "x-ves-example": "78.5789"
                }
            }
        },
        "app_typeAPIEPPDFInfo": {
            "type": "object",
            "description": "Metrics supported currently are request_size response_size latency_with_data, latency_no_data.\nPDF is calculated for each combination of (Tenant, App type, API endpoint).\nAPI endpoint is determined from automatically identified API (collapsed_url) and method.\nIn the univariate case PDFSpec for each metric is repeated num_pdf_samples times.\nnum_pdf_samples is a parameter is system wide parameter currently set to 200.",
            "title": "Probability Density Function",
            "x-displayname": "PDF(Value)",
            "x-ves-displayorder": "1,2,4,3,5,6,7",
            "x-ves-proto-message": "ves.io.schema.app_type.APIEPPDFInfo",
            "properties": {
                "creation_timestamp": {
                    "type": "string",
                    "description": " creation_timestamp represents the time when this PDF was created\n It is represented in RFC3339 form and is in UTC.",
                    "title": "creation_timestamp",
                    "format": "date-time",
                    "x-displayname": "Creation Timestamp"
                },
                "error_rate": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for error rate",
                    "title": "PDF(error rate)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Error Rate)"
                },
                "error_rate_stat": {
                    "description": " Mean and 95th percentile for PDF for error rate",
                    "title": "PDFStat(error rate)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Error Rate)"
                },
                "latency_no_data": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for latency of response begin",
                    "title": "PDF(response latency to first byte)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Latency Begin)"
                },
                "latency_no_data_stat": {
                    "description": " Mean and 95th percentile for PDF for latency of response begin",
                    "title": "PDFStat(response latency to first byte)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Latency Begin)"
                },
                "latency_with_data": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for latency of response end",
                    "title": "PDF(response latency)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Latency End)"
                },
                "latency_with_data_stat": {
                    "description": " Mean and 95th percentile for PDF for latency of response end",
                    "title": "PDFStat(response latency)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Latency End)"
                },
                "request_rate": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for request rate",
                    "title": "PDF(request rate)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Request Rate)"
                },
                "request_rate_stat": {
                    "description": " Mean and 95th percentile for PDF for request rate",
                    "title": "PDFStat(request rate)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Request Rate)"
                },
                "request_size": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for request size",
                    "title": "PDF(request_size)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Request)"
                },
                "request_size_stat": {
                    "description": " Mean and 95th percentile for PDF for request size",
                    "title": "PDFStat(request_size)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Request)"
                },
                "response_size": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for response size",
                    "title": "PDF(response_size)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Response)"
                },
                "response_size_stat": {
                    "description": " Mean and 95th percentile for PDF for response size",
                    "title": "PDFStat(response_size)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDFStat(Response)"
                },
                "response_throughput": {
                    "type": "array",
                    "description": " List of Probability density points for PDF for response throughput",
                    "title": "PDF(response throughput)",
                    "items": {
                        "$ref": "#/definitions/app_typePDFSpec"
                    },
                    "x-displayname": "PDF(Response Throughput)"
                },
                "response_throughput_stat": {
                    "description": " Mean and 95th percentile for PDF for response throughput",
                    "title": "PDFStat(response throughput)",
                    "$ref": "#/definitions/app_typePDFStat",
                    "x-displayname": "PDF(Response Throughput)"
                }
            }
        },
        "app_typeApiEndpointInfoRequest": {
            "type": "string",
            "description": "x-displayName: \"API Endpoint Info Request\"\nThis is the various forms that can be requested to be sent in the ApiEndpointInfoRequest\n\n - API_ENDPOINT_INFO_NONE: x-displayName: \"API Endpoint Info None\"\nAPI ENDPOINT INFO NONE option is used to disable any additional info request per api endpoint response\n - API_ENDPOINT_INFO_PDF_SPARKLINES: x-displayName: \"API Endpoint Info PDF Sparklines\"\nAPI ENDPOINT INFO PDF SPARKLINES option is used to enable pdf sparkline info along with the api endpoint response",
            "title": "ApiEndpointInfoRequest",
            "enum": [
                "API_ENDPOINT_INFO_NONE",
                "API_ENDPOINT_INFO_PDF_SPARKLINES"
            ],
            "default": "API_ENDPOINT_INFO_NONE"
        },
        "app_typePDFSpec": {
            "type": "object",
            "description": "Probability Density point in (PDF(x)) of the metric.\nx is the value of the metric, probability is the corresponding PDF(x).\nIn the univariate case (current configuration), the value x of the metrics is a scaler.\nAs PDFSpec is repeated (see below), the x values are linearly spaced monotonically from minimum to maximum.",
            "title": "Probability Density Point(x,y)",
            "x-displayname": "Point(Value, Probability)",
            "x-ves-proto-message": "ves.io.schema.app_type.PDFSpec",
            "properties": {
                "probability": {
                    "type": "number",
                    "description": " Probability of given Value of the metric that can be plotted on y-axis\n\nExample: - \"0.078\"-",
                    "title": "Probability",
                    "format": "float",
                    "x-displayname": "Probability",
                    "x-ves-example": "0.078"
                },
                "x": {
                    "type": "number",
                    "description": " Value of the metric that can be plotted on x-axis\n\nExample: - \"121.316\"-",
                    "title": "Metric Value",
                    "format": "float",
                    "x-displayname": "Value",
                    "x-ves-example": "121.316"
                }
            }
        },
        "app_typePDFStat": {
            "type": "object",
            "description": "Probability Density Function statistics of the metric.\npdf_mean is the mean PDF of the metric, pdf_95 is the 95th percentile PDF of the metric.\nIn the univariate case PDFStat for each metric consists of pdf_mean and pdf_95.",
            "title": "Probability Density Function Statistics",
            "x-displayname": "PDF(Statistics)",
            "x-ves-proto-message": "ves.io.schema.app_type.PDFStat",
            "properties": {
                "pdf_95": {
                    "type": "number",
                    "description": " pdf_95 represents the 95th percentile of PDF\n\nExample: - \"0.078\"-",
                    "title": "PDF 95th Percentile",
                    "format": "float",
                    "x-displayname": "PDF(95th Percentile)",
                    "x-ves-example": "0.078"
                },
                "pdf_mean": {
                    "type": "number",
                    "description": " pdf_mean represents the mean of PDF",
                    "title": "PDF Mean",
                    "format": "float",
                    "x-displayname": "PDF(Mean)"
                }
            }
        },
        "protobufAny": {
            "type": "object",
            "description": "-Any- contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an -Any- value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field -@type- which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n-value- which holds the custom JSON in addition to the -@type-\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
            "properties": {
                "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n-path/google.protobuf.Duration-). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme -http-, -https-, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, -https- is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than -http-, -https- (or the empty scheme) might be\nused with implementation specific semantics."
                },
                "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "byte"
                }
            }
        },
        "virtual_hostAPIEndpointLearntSchemaRsp": {
            "type": "object",
            "description": "shape of response to get req body schema for a given API endpoint.",
            "title": "API endpoint Req Body Schema response",
            "x-displayname": "Req Body Schema Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointLearntSchemaRsp",
            "properties": {
                "last_updated_time": {
                    "type": "string",
                    "description": "Last Updated Time for request API endpoint. The time updated when the APIEP file is uploaded to Azure/AWS.\n\nExample: - \"2021-01-22 15:46:23.767649\"-",
                    "title": "Last Updated Time",
                    "format": "date-time",
                    "x-displayname": "Last Updated Time",
                    "x-ves-example": "2021-01-22 15:46:23.767649"
                },
                "learnt_schema": {
                    "type": "string",
                    "description": "Learnt Schema for request API endpoint.\n\nExample: - \"{\\\"example\\\":\\\"{\\\\\\\"country\\\\\\\"\\\\\\\"dummy\\\\\\\", \\\\\\\"fullName\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"mobileNum\\\\\\\": 1234567890, \\\\\\\"zipCode\\\\\\\": \\\\\\\"121\\\\\\\", \\\\\\\"streetAddress\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"city\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"state\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"test\\\\\\\": \\\\\\\"Hello, \\\\\\\\u4e16\\\\\\\\u754c\\\\\\\"}\\\",\\\"properties\\\":{\\\"city\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"country\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"fullName\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"mobileNum\\\":{\\\"type\\\":\\\"integer\\\"},\\\"state\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"streetAddress\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"test\\\":{\\\"type\\\":\\\"string\\\"},\\\"zipCode\\\":{\\\"description\\\":\\\"Integer\\\",\\\"pattern\\\":\\\"-?\\\\\\\\d+\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"fullName\\\",\\\"mobileNum\\\",\\\"city\\\",\\\"test\\\",\\\"zipCode\\\",\\\"state\\\",\\\"streetAddress\\\",\\\"country\\\"],\\\"type\\\":\\\"object\\\"}\"-",
                    "title": "Learnt Schema",
                    "x-displayname": "Learnt Schema",
                    "x-ves-example": "{\\\"example\\\":\\\"{\\\\\\\"country\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"fullName\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"mobileNum\\\\\\\": 1234567890, \\\\\\\"zipCode\\\\\\\": \\\\\\\"121\\\\\\\", \\\\\\\"streetAddress\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"city\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"state\\\\\\\": \\\\\\\"dummy\\\\\\\", \\\\\\\"test\\\\\\\": \\\\\\\"Hello, \\\\\\\\u4e16\\\\\\\\u754c\\\\\\\"}\\\",\\\"properties\\\":{\\\"city\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"country\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"fullName\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"mobileNum\\\":{\\\"type\\\":\\\"integer\\\"},\\\"state\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"streetAddress\\\":{\\\"description\\\":\\\"Word\\\",\\\"pattern\\\":\\\"[a-z0-9-]+\\\",\\\"type\\\":\\\"string\\\"},\\\"test\\\":{\\\"type\\\":\\\"string\\\"},\\\"zipCode\\\":{\\\"description\\\":\\\"Integer\\\",\\\"pattern\\\":\\\"-?\\\\\\\\d+\\\",\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"fullName\\\",\\\"mobileNum\\\",\\\"city\\\",\\\"test\\\",\\\"zipCode\\\",\\\"state\\\",\\\"streetAddress\\\",\\\"country\\\"],\\\"type\\\":\\\"object\\\"}"
                },
                "swagger_spec": {
                    "type": "string",
                    "description": "Swagger spec for request API endpoint.\n\nExample: - \"{\\\"info\\\":{\\\"description\\\":\\\"\\\",\\\"title\\\":\\\"\\\",\\\"version\\\":\\\"\\\"},\\\"paths\\\":{\\\"\\/api\\/Addresss\\\":{\\\"get\\\":{\\\"consumes\\\":[\\\"application\\/json\\\"],\\\"description\\\":\\\"Swagger auto-generated from learnt schema\\\",\\\"parameters\\\":[{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test\\\",\\\"type\\\":\\\"string\\\"},{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test1\\\",\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"\\\"}}}}},\\\"schemes\\\":[\\\"https\\\",\\\"http\\\"],\\\"swagger\\\":\\\"2.0\\\"}\"-",
                    "title": "Swagger Spec",
                    "x-displayname": "Swagger Spec",
                    "x-ves-example": "{\\\"info\\\":{\\\"description\\\":\\\"\\\",\\\"title\\\":\\\"\\\",\\\"version\\\":\\\"\\\"},\\\"paths\\\":{\\\"\\/api\\/Addresss\\\":{\\\"get\\\":{\\\"consumes\\\":[\\\"application\\/json\\\"],\\\"description\\\":\\\"Swagger auto-generated from learnt schema\\\",\\\"parameters\\\":[{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test\\\",\\\"type\\\":\\\"string\\\"},{\\\"description\\\":\\\"\\\",\\\"in\\\":\\\"query\\\",\\\"name\\\":\\\"test1\\\",\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"\\\"}}}}},\\\"schemes\\\":[\\\"https\\\",\\\"http\\\"],\\\"swagger\\\":\\\"2.0\\\"}"
                }
            }
        },
        "virtual_hostAPIEndpointPDFRsp": {
            "type": "object",
            "description": "shape of response to get PDF for a given API endpoint.",
            "title": "API endpoint PDF response",
            "x-displayname": "PDF Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointPDFRsp",
            "properties": {
                "pdf_info": {
                    "description": "PDF data for request API endpoint.",
                    "title": "PDF data",
                    "$ref": "#/definitions/app_typeAPIEPPDFInfo",
                    "x-displayname": "PDF Data"
                }
            }
        },
        "virtual_hostAPIEndpointsRsp": {
            "type": "object",
            "description": "Response shape for GET API endpoints API. It is list of API endpoints discovered",
            "title": "API endpoints GET response",
            "x-displayname": "API Endpoints Response",
            "x-ves-proto-message": "ves.io.schema.virtual_host.APIEndpointsRsp",
            "properties": {
                "apiep_list": {
                    "type": "array",
                    "description": " list of API endpoints discovered",
                    "title": "API endpoints list",
                    "items": {
                        "$ref": "#/definitions/app_typeAPIEPInfo"
                    },
                    "x-displayname": "API Endpoints"
                }
            }
        }
    },
    "x-displayname": "Virtual Host",
    "x-ves-proto-file": "ves.io/schema/virtual_host/public_apiep_customapi.proto"
}`
